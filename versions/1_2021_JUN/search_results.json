{
  "databases": null,
  "limit": null,
  "limit_per_database": null,
  "number_of_papers": 1166,
  "number_of_papers_by_database": {
    "IEEE": 345,
    "PubMed": 12,
    "Scopus": 990,
    "arXiv": 167,
    "bioRxiv": 4
  },
  "papers": [
    {
      "abstract": "As the application of network encryption technology expands, malicious attacks will also be protected by encryption mechanism, increasing the difficulty of detection. This paper focuses on the analysis of encrypted traffic in the network by hosting long-day encrypted traffic, coupled with a weighted algorithm commonly used in information retrieval and SSL/TLS fingerprint to detect malicious encrypted links. The experimental results show that the system proposed in this paper can identify potential malicious SSL/TLS fingerprints and malicious IP which cannot be recognized by other external threat information providers. The network packet decryption is not required to help clarify the full picture of the security incident and provide the basis of digital identification. Finally, the new threat intelligence obtained from the correlation analysis of this paper can be applied to regional joint defense or intelligence exchange between organizations. In addition, the framework adopts Google cloud platform and microservice technology to form an integrated serverless computing architecture. Copyright \u00c2\u00a9 2021, IGI Global. Copying or distributing in print or electronic forms without written permission of IGI Global is prohibited.",
      "authors": [
        "Jeng, T.-H.",
        "Luo, W.-Y.",
        "Huang, C.-C.",
        "Chen, C.-C.",
        "Chang, K.-H.",
        "Chen, Y.-M."
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.4018/IJGHPC.2021070102",
      "keywords": [
        "TF-IDF",
        "Microservice",
        "Serverless",
        "MapReduce",
        "JA3",
        "Threat Intelligent",
        "SSL/TLS Fingerprinting"
      ],
      "number_of_pages": 18,
      "pages": "12-29",
      "publication": {
        "category": "Journal",
        "cite_score": 1.5,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "19380259",
        "publisher": "IGI Global Publishing",
        "sjr": 0.15,
        "snip": 0.173,
        "subject_areas": [
          "Computer Networks and Communications"
        ],
        "title": "International Journal of Grid and High Performance Computing (IJGHPC)"
      },
      "publication_date": "2021-07-01",
      "selected": false,
      "title": "Cloud Computing for Malicious Encrypted Traffic Analysis and Collaboration",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85106164812&origin=inward",
        "https://www.igi-global.com/ViewTitle.aspx?TitleId=279044&isxn=9781799860181"
      ]
    },
    {
      "abstract": "Edge computing, especially multiaccess edge computing, is seen as a promising technology to improve the Quality of user Experience (QoE) of many artificial intelligence (AI) applications in the evolution toward Internet-of-Things (IoT) infrastructure. However, the management and deployment of massive edge data centers bring new challenges for the current network. In this article, we propose a new edge-based IoT platform for AI (EBI-PAI), based on software-defined network (SDN) and serverless technology. EBI-PAI provides a unified service calling interface and schedules the resources automatically to satisfy the QoE requirements of users. To optimize performances during incremental deployment, we formulate the deployment problem, prove its complexity, and design heuristic algorithms to solve it. We implement EBI-PAI based on an opensource serverless project and deploy it in real networks. To evaluate EBI-PAI, we conduct comprehensive simulations based on the generated and real-world network topology, and real-world base station data set. The simulation results show that EBI-PAI can greatly improve QoE with the same budget and save the budget to achieve similar QoE. We finally carry out a case study with real user demands, and it further validates the simulation results.",
      "authors": [
        "Shu Yang",
        "Kunkun Xu",
        "Laizhong Cui",
        "Zhongxing Ming",
        "Ziteng Chen",
        "Zhong Ming"
      ],
      "categories": {
        "Contribution": [],
        "Research Type": []
      },
      "citations": 0,
      "comments": null,
      "databases": [
        "IEEE"
      ],
      "doi": "10.1109/JIOT.2020.3019008",
      "keywords": [
        "multiaccess edge computing (MEC)",
        "5G",
        "incremental deployment"
      ],
      "number_of_pages": 14,
      "pages": "9580-9593",
      "publication": {
        "category": "Journal",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "2372-2541",
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "IEEE Internet of Things Journal"
      },
      "publication_date": "2021-06-15",
      "selected": true,
      "title": "EBI-PAI: Toward an Efficient Edge-Based IoT Platform for Artificial Intelligence",
      "urls": [
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9174943"
      ]
    },
    {
      "abstract": " Graph Neural Networks (GNNs) are the first choice methods for graph machine\nlearning problems thanks to their ability to learn state-of-the-art level\nrepresentations from graph-structured data. However, centralizing a massive\namount of real-world graph data for GNN training is prohibitive due to\nuser-side privacy concerns, regulation restrictions, and commercial\ncompetition. Federated Learning is the de-facto standard for collaborative\ntraining of machine learning models over many distributed edge devices without\nthe need for centralization. Nevertheless, training graph neural networks in a\nfederated setting is vaguely defined and brings statistical and systems\nchallenges. This work proposes SpreadGNN, a novel multi-task federated training\nframework capable of operating in the presence of partial labels and absence of\na central server for the first time in the literature. SpreadGNN extends\nfederated multi-task learning to realistic serverless settings for GNNs, and\nutilizes a novel optimization algorithm with a convergence guarantee,\nDecentralized Periodic Averaging SGD (DPA-SGD), to solve decentralized\nmulti-task learning problems. We empirically demonstrate the efficacy of our\nframework on a variety of non-I.I.D. distributed graph-level molecular property\nprediction datasets with partial labels. Our results show that SpreadGNN\noutperforms GNN models trained over a central server-dependent federated\nlearning system, even in constrained topologies. The source code is publicly\navailable at https://github.com/FedML-AI/SpreadGNN\n",
      "authors": [
        "He, Chaoyang",
        "Ceyani, Emir",
        "Balasubramanian, Keshav",
        "Annavaram, Murali",
        "Avestimehr, Salman"
      ],
      "categories": {},
      "citations": null,
      "comments": "Three co-1st authors have equal contribution (alphabetical order)",
      "databases": [
        "arXiv"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": null,
      "publication_date": "2021-06-04",
      "selected": true,
      "title": "SpreadGNN: Serverless Multi-task Federated Learning for Graph Neural Networks",
      "urls": [
        "https://arxiv.org/pdf/2106.02743",
        "http://arxiv.org/abs/2106.02743v1",
        "http://arxiv.org/pdf/2106.02743v1"
      ]
    },
    {
      "abstract": "Serverless computing is increasingly popular because of its lower cost and\neasier deployment. Several cloud service providers (CSPs) offer serverless\ncomputing on their public clouds, but it may bring the vendor lock-in risk. To\navoid this limitation, many open-source serverless platforms come out to allow\ndevelopers to freely deploy and manage functions on self-hosted clouds.\nHowever, building effective functions requires much expertise and thorough\ncomprehension of platform frameworks and features that affect performance. It\nis a challenge for a service developer to differentiate and select the\nappropriate serverless platform for different demands and scenarios. Thus, we\nelaborate the frameworks and event processing models of four popular\nopen-source serverless platforms and identify their salient idiosyncrasies. We\nanalyze the root causes of performance differences between different service\nexporting and auto-scaling modes on those platforms. Further, we provide\nseveral insights for future work, such as auto-scaling and metric collection.",
      "authors": [
        "Junfeng Li",
        "Sameer G. Kulkarni",
        "K. K. Ramakrishnan",
        "Dan Li"
      ],
      "categories": {},
      "citations": null,
      "comments": null,
      "databases": [
        "arXiv"
      ],
      "doi": "10.18293/SEKE2021-129",
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": null,
      "publication_date": "2021-06-04",
      "selected": true,
      "title": "Analyzing Open-Source Serverless Platforms: Characteristics and Performance",
      "urls": [
        "http://arxiv.org/abs/2106.03601v1",
        "http://arxiv.org/pdf/2106.03601v1",
        "http://dx.doi.org/10.18293/SEKE2021-129"
      ]
    },
    {
      "abstract": "The cloud evolved into an attractive execution environment for parallel applications, which make use of compute resources to speed up the computation of la",
      "authors": [
        "Stefan Kehrer",
        "Dominik Zietlow",
        "Jochen Scheffold",
        "Wolfgang Blochinger"
      ],
      "categories": {},
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1007/s10586-020-03158-3",
      "keywords": [
        "Parallel cloud programming",
        "Programming model",
        "Cloud computing",
        "Parallel computing",
        "Function-as-a-service",
        "Elasticity"
      ],
      "number_of_pages": 19,
      "pages": "799-817",
      "publication": {
        "category": "Journal",
        "cite_score": 3.1,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "13867857",
        "publisher": "Kluwer Academic Publishers",
        "sjr": 0.335,
        "snip": 0.744,
        "subject_areas": [
          "Computer Networks and Communications",
          "Software"
        ],
        "title": "Cluster Computing"
      },
      "publication_date": "2021-06-01",
      "selected": true,
      "title": "Self-tuning serverless task farming using proactive elasticity control",
      "urls": [
        "https://link.springer.com/content/pdf/10.1007/s10586-020-03158-3.pdf",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85088506275&origin=inward"
      ]
    },
    {
      "abstract": "In recent years, edge computing has emerged as an effective solution to extend cloud computing and satisfy the demand of applications for low latency. However, with today's explosion of innovative applications (e.g., augmented reality, natural language processing, virtual reality), processing services for mobile and smart devices have become computation-intensive, consisting of multiple interconnected computations. This coupled with the need for delay-sensitivity and high quality of service put massive pressure on edge servers. Meanwhile, tasks invoking these services may involve similar inputs that could lead to the same output. In this paper, we present CoxNet, an efficient computation reuse architecture for edge computing. CoxNet enables edge servers to reuse previous computations while scheduling dependent incoming computations. We provide an analytical model for computation reuse joined with dependent task offloading and design a novel computing offloading scheduling scheme. We also evaluate the efficiency and effectiveness of CoxNet via synthetic and real-world datasets. Our results show that CoxNet is able to reduce the task execution time up to 66% based on a synthetic dataset and up to 50% based on a real-world dataset. \u00c2\u00a9 2017 IEEE.",
      "authors": [
        "Bellal, Z.",
        "Nour, B.",
        "Mastorakis, S."
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1109/TGCN.2021.3071497",
      "keywords": [
        "serverless computing",
        "service offloading",
        "computation reuse",
        "Edge computing"
      ],
      "number_of_pages": 13,
      "pages": "765-777",
      "publication": {
        "category": "Journal",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "IEEE Transactions on Green Communications and Networking"
      },
      "publication_date": "2021-06-01",
      "selected": false,
      "title": "CoxNet: A Computation Reuse Architecture at the Edge",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85103893022&origin=inward"
      ]
    },
    {
      "abstract": "Longer time high-resolution, high-frequency, consistent, and more detailed land cover data are urgently needed in order to achieve sustainable development goals on food security, high-quality habitat construction, biodiversity conservation and planetary health, and for the understanding, simulation and management of the Earth system. However, due to technological constraints, it is difficult to provide simultaneously high spatial resolution, high temporal frequency, and high quality observation data. Existing mapping solutions are limited by traditional remotely sensed data, that have shorter observation periods, poor spatio-temporal consistency and comparability. Therefore, a new mapping paradigm is needed. This paper develops a framework for intelligent mapping (iMap) of land cover based on state-of-the-art technologies such as cloud computing, artificial intelligence, virtual constellations, and spatio-temporal reconstruction and fusion. Under this framework, we built an automated, serverless, end-to-end data production chain and parallel mapping system based on Amazon Web Services (AWS) and produced the first 30 m global daily seamless data cubes (SDC), and annual to seasonal land cover maps for 1985\u00e2\u0080\u00932020. The SDC was produced through a multi-source spatio-temporal data reconstruction and fusion workflow based on Landsat, MODIS, and AVHRR virtual constellations. Independent validation results show that the relative mean error of the SDC is less than 2.14%. As analysis ready data (ARD), it can lay a foundation for high-precision quantitative remote sensing information extraction. From this SDC, we produced 36-year long, 30 m resolution global land cover map data set by combining strategies of sample migration, machine learning, and spatio-temporal adjustment. The average overall accuracy of our annual land cover maps over multiple periods of time is 80% for level 1 classification and over 73% for level 2 classification (29 and 33 classes). Based on an objective validation sample consisting of FLUXNET sites, our map accuracy is 10% higher than that of existing global land cover datasets including Globeland30. Our results show that the average global land cover change rate is 0.36%/yr. Global forest decreased by 1.47 million km2 from 38.44 million km2, cropland increased by 0.84 million km2 from 12.49 million km2 and impervious surface increased by 0.48 million km2 from 0.57 million km2 during 1985\u00e2\u0080\u0093 2020. \u00c2\u00a9 2021 The Author(s)",
      "authors": [
        "Liu, H.",
        "Gong, P.",
        "Wang, J.",
        "Wang, X.",
        "Ning, G.",
        "Xu, B."
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1016/j.rse.2021.112364",
      "keywords": [
        "Seamless data cube",
        "Global land cover mapping",
        "Intelligent mapping",
        "Analysis ready data",
        "Cloud computing",
        "Amazon web Services",
        "Daily"
      ],
      "number_of_pages": null,
      "pages": null,
      "publication": {
        "category": "Journal",
        "cite_score": 17.6,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "00344257",
        "publisher": "Elsevier Inc.",
        "sjr": 3.611,
        "snip": 3.345,
        "subject_areas": [
          "Soil Science",
          "Computers in Earth Sciences",
          "Geology"
        ],
        "title": "Remote Sensing of Environment"
      },
      "publication_date": "2021-06-01",
      "selected": false,
      "title": "Production of global daily seamless data cubes and quantification of global land cover change from 1985 to 2020 - iMap World 1.0",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85102248115&origin=inward"
      ]
    },
    {
      "abstract": " As more applications are being moved to the Cloud thanks to serverless\ncomputing, it is increasingly necessary to support the native life cycle\nexecution of those applications in the data center. But existing cloud\norchestration systems either focus on short-running workflows (like IBM\nComposer or Amazon Step Functions Express Workflows) or impose considerable\noverheads for synchronizing massively parallel jobs (Azure Durable Functions,\nAmazon Step Functions). None of them are open systems enabling extensible\ninterception and optimization of custom workflows. We present Triggerflow: an\nextensible Trigger-based Orchestration architecture for serverless workflows.\nWe demonstrate that Triggerflow is a novel serverless building block capable of\nconstructing different reactive orchestrators (State Machines, Directed Acyclic\nGraphs, Workflow as code, Federated Learning orchestrator). We also validate\nthat it can support high-volume event processing workloads, auto-scale on\ndemand with scale down to zero when not used, and transparently guarantee fault\ntolerance and efficient resource usage when orchestrating long running\nscientific workflows.\n",
      "authors": [
        "Arjona, Aitor",
        "Garc\u00eda-L\u00f3pez, Pedro",
        "Samp\u00e9, Josep",
        "Slominski, Aleksander",
        "Villard, Lionel"
      ],
      "categories": {},
      "citations": null,
      "comments": "17 pages, 17 figures, preprint submitted to Future Generation\n  Computer Systems. arXiv admin note: substantial text overlap with\n  arXiv:2006.08654",
      "databases": [
        "arXiv"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": null,
      "publication_date": "2021-06-01",
      "selected": true,
      "title": "Triggerflow: Trigger-based Orchestration of Serverless Workflows",
      "urls": [
        "https://arxiv.org/pdf/2106.00583",
        "http://arxiv.org/abs/2106.00583v1",
        "http://arxiv.org/pdf/2106.00583v1"
      ]
    },
    {
      "abstract": " Data provenance analysis has been used as an assistive measure for ensuring\nsystem integrity. However, such techniques are typically reactive approaches to\nidentify the root cause of an attack in its aftermath. This is in part due to\nfact that the collection of provenance metadata often results in a deluge of\ninformation that cannot easily be queried and analyzed in real time. This paper\npresents an approach for proactively reasoning about provenance metadata within\nthe Automatic Cryptographic Data Centric (ACDC) security architecture, a new\nsecurity infrastructure in which all data interactions are considered at a\ncoarse granularity, similar to the Function as a Service model. At this scale,\nwe have found that data interactions are manageable for the proactive\nspecification and evaluation of provenance policies -- constraints placed on\nprovenance metadata to prevent the consumption of untrusted data. This paper\nprovides a model for proactively evaluating provenance metadata in the ACDC\nparadigm as well as a case study of an electronic voting scheme to demonstrate\nthe applicability of ACDC and the provenance policies needed to ensure data\nintegrity.\n",
      "authors": [
        "Engram, Shamaria",
        "Kaczmarek, Tyler",
        "Lee, Alice",
        "Bigelow, David"
      ],
      "categories": {},
      "citations": null,
      "comments": null,
      "databases": [
        "arXiv"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": null,
      "publication_date": "2021-05-31",
      "selected": true,
      "title": "Proactive Provenance Policies for Automatic Cryptographic Data Centric Security",
      "urls": [
        "http://arxiv.org/pdf/2106.00141v1",
        "http://arxiv.org/abs/2106.00141v1",
        "https://arxiv.org/pdf/2106.00141"
      ]
    },
    {
      "abstract": " Current serverless offerings give users a limited degree of flexibility for\nconfiguring the resources allocated to their function invocations by either\ncoupling memory and CPU resources together or providing no knobs at all. These\nconfiguration choices simplify resource allocation decisions on behalf of\nusers, but at the same time, create deployments that are resource inefficient. In this paper, we take a principled approach to the problem of resource\nallocation for serverless functions, allowing this choice to be made in an\nautomatic way that leads to the best combination of performance and cost. In\nparticular, we systematically explore the opportunities that come with\ndecoupling memory and CPU resource allocations and also enabling the use of\ndifferent VM types. We find a rich trade-off space between performance and\ncost. The provider can use this in a number of ways: from exposing all these\nparameters to the user, to eliciting preferences for performance and cost from\nusers, or by simply offering the same performance with lower cost. This\nflexibility can also enable the provider to optimize its resource utilization\nand enable a cost-effective service with predictable performance. Our results show that, by decoupling memory and CPU allocation, there is\npotential to have up to 40% lower execution cost than the preset coupled\nconfigurations that are the norm in current serverless offerings. Similarly,\nmaking the correct choice of VM instance type can provide up to 50% better\nexecution time. Furthermore, we demonstrate that providers can utilize\ndifferent instance types for the same functions to maximize resource\nutilization while providing performance within 10-20% of the best resource\nconfiguration for each respective function.\n",
      "authors": [
        "Bilal, Muhammad",
        "Canini, Marco",
        "Fonseca, Rodrigo",
        "Rodrigues, Rodrigo"
      ],
      "categories": {},
      "citations": null,
      "comments": null,
      "databases": [
        "arXiv"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": null,
      "publication_date": "2021-05-31",
      "selected": true,
      "title": "With Great Freedom Comes Great Opportunity: Rethinking Resource Allocation for Serverless Functions",
      "urls": [
        "http://arxiv.org/pdf/2105.14845v1",
        "https://arxiv.org/pdf/2105.14845",
        "http://arxiv.org/abs/2105.14845v1"
      ]
    },
    {
      "abstract": " The serverless computing model strengthens the cloud computing tendency to\nabstract resource management. Serverless platforms are responsible for\ndeploying and scaling the developer's applications. Serverless also\nincorporated the pay-as-you-go billing model, which only considers the time\nspent processing client requests. Such a decision created a natural incentive\nfor improving the platform's efficient resource usage. This search for\nefficiency can lead to the cold start problem, which represents a delay to\nexecute serverless applications. Among the solutions proposed to deal with the\ncold start, those based on the snapshot method stand out. Despite the rich\nexploration of the technique, there is a lack of research that evaluates the\nsolution's trade-offs. In this direction, this work compares two solutions to\nmitigate the cold start: Prebaking and SEUSS. We analyzed the solution's\nperformance with functions of different levels of complexity: NoOp, a function\nthat renders Markdown to HTML, and a function that loads 41 MB of dependencies.\nPreliminary results indicated that Prebaking showed a 33% and 25% superior\nperformance to startup the NoOp and Markdown functions, respectively. Further\nanalysis also revealed that Prebaking's warmup mechanism reduced the Markdown\nfirst request processing time by 69%.\n",
      "authors": [
        "Silva, Paulo",
        "Pereira, Thiago Emmanuel"
      ],
      "categories": {},
      "citations": null,
      "comments": "in Portuguese",
      "databases": [
        "arXiv"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": null,
      "publication_date": "2021-05-28",
      "selected": true,
      "title": "Performance Evaluation of Snapshot Methods to Warm the Serverless Cold Start",
      "urls": [
        "http://arxiv.org/abs/2105.13894v1",
        "https://arxiv.org/pdf/2105.13894",
        "http://arxiv.org/pdf/2105.13894v1"
      ]
    },
    {
      "abstract": " Serverless computing is a new cloud service model that reduces both cloud\nproviders' and consumers' costs through extremely agile development, operation,\nand charging mechanisms and has been widely applied since its emergence.\nNevertheless, some characteristics of serverless computing, such as fragmented\napplication boundaries, have raised new security challenges. Considerable\nliterature work has been committed to addressing these challenges. Commercial\nand open-source serverless platforms implement many security measures to\nenhance serverless environments. This paper presents the first survey of\nserverless security that considers both literature work and industrial security\nmeasures. We summarize the primary security challenges, analyze corresponding\nsolutions from the literature and industry, and identify potential research\nopportunities. Then, we conduct a gap analysis of the academic and industrial\nsolutions as well as commercial and open-source serverless platforms' security\ncapabilities, and finally, we present a complete picture of current serverless\nsecurity research.\n",
      "authors": [
        "Li, Xing",
        "Leng, Xue",
        "Chen, Yan"
      ],
      "categories": {},
      "citations": null,
      "comments": "7 pages, 3 figures, submitted to IEEE Network",
      "databases": [
        "arXiv"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": null,
      "publication_date": "2021-05-25",
      "selected": true,
      "title": "Securing Serverless Computing: Challenges, Solutions, and Opportunities",
      "urls": [
        "http://arxiv.org/abs/2105.12581v1",
        "https://arxiv.org/pdf/2105.12581",
        "http://arxiv.org/pdf/2105.12581v1"
      ]
    },
    {
      "abstract": " Serverless computing has emerged as an attractive deployment option for cloud\napplications in recent times. The unique features of this computing model\ninclude, rapid auto-scaling, strong isolation, fine-grained billing options and\naccess to a massive service ecosystem which autonomously handles resource\nmanagement decisions. This model is increasingly being explored for deployments\nin geographically distributed edge and fog computing networks as well, due to\nthese characteristics. Effective management of computing resources has always\ngained a lot of attention among researchers. The need to automate the entire\nprocess of resource provisioning, allocation, scheduling, monitoring and\nscaling, has resulted in the need for specialized focus on resource management\nunder the serverless model. In this article, we identify the major aspects\ncovering the broader concept of resource management in serverless environments\nand propose a taxonomy of elements which influence these aspects, encompassing\ncharacteristics of system design, workload attributes and stakeholder\nexpectations. We take a holistic view on serverless environments deployed\nacross edge, fog and cloud computing networks. We also analyse existing works\ndiscussing aspects of serverless resource management using this taxonomy. This\narticle further identifies gaps in literature and highlights future research\ndirections for improving capabilities of this computing model.\n",
      "authors": [
        "Mampage, Anupama",
        "Karunasekera, Shanika",
        "Buyya, Rajkumar"
      ],
      "categories": {},
      "citations": null,
      "comments": "32 pages, 4 figures",
      "databases": [
        "arXiv"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": null,
      "publication_date": "2021-05-25",
      "selected": true,
      "title": "A Holistic View on Resource Management in Serverless Computing Environments: Taxonomy and Future Directions",
      "urls": [
        "http://arxiv.org/pdf/2105.11592v3",
        "http://arxiv.org/abs/2105.11592v3",
        "https://arxiv.org/pdf/2105.11592"
      ]
    },
    {
      "abstract": " Serverless computing, or Function-as-a-Service (FaaS), enables a new way of\nbuilding and scaling applications by allowing users to deploy fine-grained\nfunctions while providing fully-managed resource provisioning and auto-scaling.\nCustom FaaS container support is gaining traction as it enables better control\nover OSes, versioning, and tooling for modernizing FaaS applications. However,\nproviding rapid container provisioning introduces non-trivial challenges for\nFaaS providers, since container provisioning is costly, and real-world FaaS\nworkloads exhibit highly dynamic patterns. In this paper, we design FaaSNet, a\nhighly-scalable middleware system for accelerating FaaS container provisioning.\nFaaSNet is driven by the workload and infrastructure requirements of the FaaS\nplatform at one of the world's largest cloud providers, Alibaba Cloud Function\nCompute. FaaSNet enables scalable container provisioning via a lightweight,\nadaptive function tree (FT) structure. FaaSNet uses an I/O efficient, on-demand\nfetching mechanism to further reduce provisioning costs at scale. We implement\nand integrate FaaSNet in Alibaba Cloud Function Compute. Evaluation results\nshow that FaaSNet: (1) finishes provisioning 2500 function containers on 1000\nvirtual machines in 8.3 seconds, (2) scales 13.4x and 16.3x faster than Alibaba\nCloud's current FaaS platform and a state-of-the-art P2P container registry\n(Kraken), respectively, and (3) sustains a bursty workload using 75.2% less\ntime than an optimized baseline.\n",
      "authors": [
        "Wang, Ao",
        "Chang, Shuai",
        "Tian, Huangshi",
        "Wang, Hongqi",
        "Yang, Haoran",
        "Li, Huiba",
        "Du, Rui",
        "Cheng, Yue"
      ],
      "categories": {},
      "citations": null,
      "comments": "This is the preprint version of a paper published in USENIX ATC 2021",
      "databases": [
        "arXiv"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": null,
      "publication_date": "2021-05-24",
      "selected": true,
      "title": "FaaSNet: Scalable and Fast Provisioning of Custom Serverless Container Runtimes at Alibaba Cloud Function Compute",
      "urls": [
        "https://arxiv.org/pdf/2105.11229",
        "http://arxiv.org/pdf/2105.11229v2",
        "http://arxiv.org/abs/2105.11229v2"
      ]
    },
    {
      "abstract": " A graph neural network (GNN) enables deep learning on structured graph data.\nThere are two major GNN training obstacles: 1) it relies on high-end servers\nwith many GPUs which are expensive to purchase and maintain, and 2) limited\nmemory on GPUs cannot scale to today's billion-edge graphs. This paper presents\nDorylus: a distributed system for training GNNs. Uniquely, Dorylus can take\nadvantage of serverless computing to increase scalability at a low cost. The key insight guiding our design is computation separation. Computation\nseparation makes it possible to construct a deep, bounded-asynchronous pipeline\nwhere graph and tensor parallel tasks can fully overlap, effectively hiding the\nnetwork latency incurred by Lambdas. With the help of thousands of Lambda\nthreads, Dorylus scales GNN training to billion-edge graphs. Currently, for\nlarge graphs, CPU servers offer the best performance-per-dollar over GPU\nservers. Just using Lambdas on top of CPU servers offers up to 2.75x more\nperformance-per-dollar than training only with CPU servers. Concretely, Dorylus\nis 1.22x faster and 4.83x cheaper than GPU servers for massive sparse graphs.\nDorylus is up to 3.8x faster and 10.7x cheaper compared to existing\nsampling-based systems.\n",
      "authors": [
        "Thorpe, John",
        "Qiao, Yifan",
        "Eyolfson, Jonathan",
        "Teng, Shen",
        "Hu, Guanzhou",
        "Jia, Zhihao",
        "Wei, Jinliang",
        "Vora, Keval",
        "Netravali, Ravi",
        "Kim, Miryung",
        "Xu, Guoqing Harry"
      ],
      "categories": {},
      "citations": null,
      "comments": "Paper accepted in OSDI 2021",
      "databases": [
        "arXiv"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": null,
      "publication_date": "2021-05-24",
      "selected": true,
      "title": "Dorylus: Affordable, Scalable, and Accurate GNN Training with Distributed CPU Servers and Serverless Threads",
      "urls": [
        "http://arxiv.org/abs/2105.11118v2",
        "https://arxiv.org/pdf/2105.11118",
        "http://arxiv.org/pdf/2105.11118v2"
      ]
    },
    {
      "abstract": " Cloud Native Application CNApp (as a distributed system) is a collection of\nindependent components (micro-services) interacting via communication\nprotocols. This gives rise to present an abstract architecture of CNApp as\ndynamically re-configurable acyclic directed multi graph where vertices are\nmicroservices, and edges are the protocols. Generic mechanisms for such\nreconfigurations evidently correspond to higher-level functions (functionals).\nThis implies also internal abstract architecture of microservice as a\ncollection of event-triggered serverless functions (including functions\nimplementing the protocols) that are dynamically composed into event-dependent\ndata-flow graphs. Again, generic mechanisms for such compositions correspond to\ncalculus of functionals and relations.\n",
      "authors": [
        "Ambroszkiewicz, Stanislaw",
        "Bartyna, Waldemar",
        "Bylka, Stanislaw"
      ],
      "categories": {},
      "citations": null,
      "comments": "Work in progress. Three figures (related to functionals) were added",
      "databases": [
        "arXiv"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": null,
      "publication_date": "2021-05-21",
      "selected": true,
      "title": "Functionals in the Clouds: An abstract architecture of serverless Cloud-Native Apps",
      "urls": [
        "https://arxiv.org/pdf/2105.10362",
        "http://arxiv.org/abs/2105.10362v2",
        "http://arxiv.org/pdf/2105.10362v2"
      ]
    },
    {
      "abstract": " Recent trends in Web development demonstrate an increased interest in\nserverless applications, i.e. applications that utilize computational resources\nprovided by cloud services on demand instead of requiring traditional server\nmanagement. This approach enables better resource management while being\nscalable, reliable, and cost-effective. However, it comes with a number of\norganizational and technical difficulties which stem from the interaction\nbetween the application and the cloud infrastructure, for example, having to\nset up a recurring task of reuploading updated files. In this paper, we present\nKotless - a Kotlin Serverless Framework. Kotless is a cloud-agnostic toolkit\nthat solves these problems by interweaving the deployed application into the\ncloud infrastructure and automatically generating the necessary deployment\ncode. This relieves developers from having to spend their time integrating and\nmanaging their applications instead of developing them. Kotless has proven its\ncapabilities and has been used to develop several serverless applications\nalready in production. Its source code is available at\nhttps://github.com/JetBrains/kotless, a tool demo can be found at\nhttps://www.youtube.com/watch?v=IMSakPNl3TY\n",
      "authors": [
        "Tankov, Vladislav",
        "Golubev, Yaroslav",
        "Bryksin, Timofey"
      ],
      "categories": {},
      "citations": null,
      "comments": "4 pages, 1 figure",
      "databases": [
        "arXiv"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": null,
      "publication_date": "2021-05-21",
      "selected": true,
      "title": "Kotless: a Serverless Framework for Kotlin",
      "urls": [
        "https://arxiv.org/pdf/2105.13866",
        "http://arxiv.org/pdf/2105.13866v1",
        "http://arxiv.org/abs/2105.13866v1"
      ]
    },
    {
      "abstract": "The appeal of serverless (FaaS) has triggered a growing interest on how to\nuse it in data-intensive applications such as ETL, query processing, or machine\nlearning (ML). Several systems exist for training large-scale ML models on top\nof serverless infrastructures (e.g., AWS Lambda) but with inconclusive results\nin terms of their performance and relative advantage over \"serverful\"\ninfrastructures (IaaS). In this paper we present a systematic, comparative\nstudy of distributed ML training over FaaS and IaaS. We present a design space\ncovering design choices such as optimization algorithms and synchronization\nprotocols, and implement a platform, LambdaML, that enables a fair comparison\nbetween FaaS and IaaS. We present experimental results using LambdaML, and\nfurther develop an analytic model to capture cost/performance tradeoffs that\nmust be considered when opting for a serverless infrastructure. Our results\nindicate that ML training pays off in serverless only for models with efficient\n(i.e., reduced) communication and that quickly converge. In general, FaaS can\nbe much faster but it is never significantly cheaper than IaaS.",
      "authors": [
        "Jiawei Jiang",
        "Shaoduo Gan",
        "Yue Liu",
        "Fanlin Wang",
        "Gustavo Alonso",
        "Ana Klimovic",
        "Ankit Singla",
        "Wentao Wu",
        "Ce Zhang"
      ],
      "categories": {},
      "citations": null,
      "comments": null,
      "databases": [
        "arXiv"
      ],
      "doi": "10.1145/3448016.3459240",
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": null,
      "publication_date": "2021-05-17",
      "selected": true,
      "title": "Towards Demystifying Serverless Machine Learning Training",
      "urls": [
        "http://arxiv.org/abs/2105.07806v1",
        "http://dx.doi.org/10.1145/3448016.3459240",
        "http://arxiv.org/pdf/2105.07806v1"
      ]
    },
    {
      "abstract": " To address the communication bottleneck problem in distributed optimization\nwithin a master-worker framework, we propose LocalNewton, a distributed\nsecond-order algorithm with local averaging. In LocalNewton, the worker\nmachines update their model in every iteration by finding a suitable\nsecond-order descent direction using only the data and model stored in their\nown local memory. We let the workers run multiple such iterations locally and\ncommunicate the models to the master node only once every few (say L)\niterations. LocalNewton is highly practical since it requires only one\nhyperparameter, the number L of local iterations. We use novel matrix\nconcentration-based techniques to obtain theoretical guarantees for\nLocalNewton, and we validate them with detailed empirical evaluation. To\nenhance practicability, we devise an adaptive scheme to choose L, and we show\nthat this reduces the number of local iterations in worker machines between two\nmodel synchronizations as the training proceeds, successively refining the\nmodel quality at the master. Via extensive experiments using several real-world\ndatasets with AWS Lambda workers and an AWS EC2 master, we show that\nLocalNewton requires fewer than 60% of the communication rounds (between master\nand workers) and less than 40% of the end-to-end running time, compared to\nstate-of-the-art algorithms, to reach the same training~loss.\n",
      "authors": [
        "Gupta, Vipul",
        "Ghosh, Avishek",
        "Derezinski, Michal",
        "Khanna, Rajiv",
        "Ramchandran, Kannan",
        "Mahoney, Michael"
      ],
      "categories": null,
      "citations": null,
      "comments": "To be published in Uncertainty in Artificial Intelligence (UAI) 2021",
      "databases": [
        "arXiv"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": null,
      "publication_date": "2021-05-16",
      "selected": false,
      "title": "LocalNewton: Reducing Communication Bottleneck for Distributed Learning",
      "urls": [
        "http://arxiv.org/abs/2105.07320v1",
        "https://arxiv.org/pdf/2105.07320",
        "http://arxiv.org/pdf/2105.07320v1"
      ]
    },
    {
      "abstract": "Cloud native programming and serverless architectures provide a novel way of software development and operation. A new generation of applications can be realized with features never seen before while the burden on developers and operators will be reduced significantly. However, latency sensitive applications, such as various distributed IoT services, generally do not fit in well with the new concepts and today's platforms. In this article, we adapt the cloud native approach and related operating techniques for latency sensitive IoT applications operated on public serverless platforms. We argue that solely adding cloud resources to the edge is not enough and other mechanisms and operation layers are required to achieve the desired level of quality. Our contribution is threefold. First, we propose a novel system on top of a public serverless edge cloud platform, which can dynamically optimize and deploy the microservice-based software layout based on live performance measurements. We add two control loops and the corresponding mechanisms which are responsible for the online reoptimization at different timescales. The first one addresses the steady-state operation, while the second one provides fast latency control by directly reconfiguring the serverless runtime environments. Second, we apply our general concepts to one of today's most widely used and versatile public cloud platforms, namely, Amazon's AWS, and its edge extension for IoT applications, called Greengrass. Third, we characterize the main operation phases and evaluate the overall performance of the system. We analyze the performance characteristics of the two control loops and investigate different implementation options. \u00c2\u00a9 2014 IEEE.",
      "authors": [
        "Istv\u00e1n Pelle",
        "J\u00e1nos Czentye",
        "J\u00e1nos D\u00f3ka",
        "Andr\u00e1s Kern",
        "Bal\u00e1zs P. Ger\u0151",
        "Bal\u00e1zs Sonkoly"
      ],
      "categories": {},
      "citations": 0,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/JIOT.2020.3042428",
      "keywords": [
        "edge",
        "IoT",
        "greengrass",
        "lambda",
        "Amazon Web Services (AWS)",
        "cloud",
        "serverless"
      ],
      "number_of_pages": 19,
      "pages": "7954-7972",
      "publication": {
        "category": "Journal",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "2372-2541",
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "IEEE Internet of Things Journal"
      },
      "publication_date": "2021-05-15",
      "selected": true,
      "title": "Operating Latency Sensitive Applications on Public Serverless Edge Cloud Platforms",
      "urls": [
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9279315",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85097941679&origin=inward"
      ]
    },
    {
      "abstract": "Function as a Service (FaaS) is a new popular cloud computing model in recent years, which has the characteristics of automatic scaling, on-demand billing and easy maintenance. However, the SDKs provided by different public FaaS platforms are inconsistent, increasing the cost of learning and application migration for developers. This paper proposes to build a unified development framework by encapsulating the SDKs of each FaaS platform, which uses the factory pattern of object-oriented design mode to define a set of unified abstract classes. This framework can help developers to operate across different FaaS platforms with a unified set of SDK, and has good scalability.",
      "authors": [
        "Bao Li",
        "Zhe Li",
        "Yusong Tan",
        "Jie Yu"
      ],
      "categories": {},
      "citations": 0,
      "comments": null,
      "databases": [
        "IEEE"
      ],
      "doi": "10.1109/CISCE52179.2021.9445991",
      "keywords": [
        "heterogeneous",
        "cloud computing",
        "unified development framework",
        "FaaS"
      ],
      "number_of_pages": 5,
      "pages": "726-730",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-6654-4780-5",
        "issn": null,
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "2021 International Conference on Communications, Information System and Computer Engineering (CISCE)"
      },
      "publication_date": "2021-05-14",
      "selected": true,
      "title": "CoFunc: A unified development framework for heterogeneous FaaS computing platforms",
      "urls": [
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9445991"
      ]
    },
    {
      "abstract": " Thanks to the latest advances in containerization, the serverless edge\ncomputing model is becoming close to reality. Serverless at the edge is\nexpected to enable low latency applications with fast autoscaling mechanisms,\nall running on heterogeneous and resource-constrained devices. In this work, we\nengineer and experimentally benchmark a serverless edge computing system\narchitecture. We deploy a decentralized edge computing platform for serverless\napplications providing processing, storage, and communication capabilities\nusing only open-source software, running over heterogeneous resources (e.g.,\nvirtual machines, Raspberry Pis, or bare metal servers, etc). To achieve that,\nwe provision an overlay-network based on Nebula network agnostic technology,\nrunning over private or public networks, and use K3s to provide hardware\nabstraction. We benchmark the system in terms of response times, throughput and\nscalability using different hardware devices connected through the public\nInternet. The results show that while serverless is feasible on heterogeneous\ndevices showing a good performance on constrained devices, such as Raspberry\nPis, the lack of support when determining computational power and network\ncharacterization leaves much room for improvement in edge environments.\n",
      "authors": [
        "Carpio, Francisco",
        "Michalke, Marc",
        "Jukan, Admela"
      ],
      "categories": {},
      "citations": null,
      "comments": null,
      "databases": [
        "arXiv"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": null,
      "publication_date": "2021-05-11",
      "selected": true,
      "title": "Engineering and Experimentally Benchmarking a Serverless Edge Computing System",
      "urls": [
        "https://arxiv.org/pdf/2105.04995",
        "http://arxiv.org/pdf/2105.04995v1",
        "http://arxiv.org/abs/2105.04995v1"
      ]
    },
    {
      "abstract": " In Function as a Service (FaaS), a serverless computing variant, customers\ndeploy functions instead of complete virtual machines or Linux containers. It\nis the cloud provider who maintains the runtime environment for these\nfunctions. FaaS products are offered by all major cloud providers (e.g. Amazon\nLambda, Google Cloud Functions, Azure Functions); as well as standalone\nopen-source software (e.g. Apache OpenWhisk) with their commercial variants\n(e.g. Adobe I/O Runtime or IBM Cloud Functions). We take the bottom-up\nperspective of a single node in a FaaS cluster. We assume that all the\nexecution environments for a set of functions assigned to this node have been\nalready installed. Our goal is to schedule individual invocations of functions,\npassed by a load balancer, to minimize performance metrics related to response\ntime. Deployed functions are usually executed repeatedly in response to\nmultiple invocations made by end-users. Thus, our scheduling decisions are\nbased on the information gathered locally: the recorded call frequencies and\nexecution times. We propose a number of heuristics, and we also adapt some\ntheoretically-grounded ones like SEPT or SERPT. Our simulations use a\nrecently-published Azure Functions Trace. We show that, compared to the\nbaseline FIFO or round-robin, our data-driven scheduling decisions\nsignificantly improve the performance.\n",
      "authors": [
        "Przybylski, Bart\u0142omiej",
        "\u017buk, Pawe\u0142",
        "Rzadca, Krzysztof"
      ],
      "categories": {},
      "citations": null,
      "comments": null,
      "databases": [
        "arXiv"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": null,
      "publication_date": "2021-05-07",
      "selected": true,
      "title": "Data-driven scheduling in serverless computing to reduce response time",
      "urls": [
        "http://arxiv.org/abs/2105.03217v1",
        "http://arxiv.org/pdf/2105.03217v1",
        "https://arxiv.org/pdf/2105.03217"
      ]
    },
    {
      "abstract": "Publishers of Foundations and Trends, making research accessible",
      "authors": [
        "Vivek Narasayya",
        "Surajit Chaudhuri"
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1561/1900000060",
      "keywords": [],
      "number_of_pages": 107,
      "pages": "1-107",
      "publication": {
        "category": "Journal",
        "cite_score": 11.1,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "19317883",
        "publisher": "Now Publishers Inc",
        "sjr": 1.049,
        "snip": 1.563,
        "subject_areas": [
          "Computer Science (all)"
        ],
        "title": "Foundations and Trends\u00ae in Databases"
      },
      "publication_date": "2021-05-06",
      "selected": false,
      "title": "Cloud Data Services: Workloads, Architectures and Multi-Tenancy",
      "urls": [
        "https://www.nowpublishers.com/article/DownloadSummary/DBS-060",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85105638183&origin=inward"
      ]
    },
    {
      "abstract": " Despite decades of engineering and scientific research efforts, separation of\nconcerns in software development remains not fully achieved. The ultimate goal\nis to truly allow code reuse without large maintenance and evolution costs. The\nchallenge has been to avoid the crosscutting of concerns phenomenon, which has\nno apparent complete solution. In this paper, we show that business-domain code\ninscriptions play an even larger role in this challenge than the crosscutting\nof concerns. We then introduce a new methodology, called Metadata\nInterpretation Driven Development (MIDD) that suggests a possible path to\nrealize separation of concerns by removing functional software concerns from\nthe coding phase. We propose a change in the perspective for building software,\nfrom being based on object representation at the coding level to being based on\nobject interpretation, whose definitions are put into layers of representation\nother than coding. The metadata of the domain data is not implemented at the\nlevel of the code. Instead, they are interpreted at run time. As an important\nconsequence, such constructs can be applied across functional requirements,\nacross business domains, with no concerns regarding the need to rewrite or\nrefactor code. We show how this can increase the (re)use of the constructs.\nFurthermore, the execution of a single interpreter, due to its semantic\ndisconnection from the domain, suggests that it can simultaneously serve\ndifferent business domains. Although high-reuse software construction is\nconsidered a relatively mature field, changes in the software services scenario\ndemand relevant solutions. The emergence of new software architectures, such as\nserverless computing, reinforces the need to rethink software construction.\nThis approach is presented as a response to this need.\n",
      "authors": [
        "da Costa, J\u00falio G. S. F.",
        "Petta, Reinaldo A.",
        "Xavier-de-Souza, Samuel"
      ],
      "categories": {},
      "citations": null,
      "comments": "25 pages",
      "databases": [
        "arXiv"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": null,
      "publication_date": "2021-05-02",
      "selected": true,
      "title": "Metadata Interpretation Driven Development",
      "urls": [
        "http://arxiv.org/pdf/2105.00534v1",
        "https://arxiv.org/pdf/2105.00534",
        "http://arxiv.org/abs/2105.00534v1"
      ]
    },
    {
      "abstract": "Function-as-a-Service (FaaS) allows developers to define, orchestrate and run modular event-based pieces of code on virtualised resources, without the burd",
      "authors": [
        "Alessandro Bocci",
        "Stefano Forti",
        "Gian-Luigi Ferrari",
        "Antonio Brogi"
      ],
      "categories": {},
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1007/s00607-021-00924-y",
      "keywords": [
        "Serverless",
        "Cloud computing",
        "FaaS",
        "Fog Computing",
        "Security"
      ],
      "number_of_pages": 32,
      "pages": "1025-1056",
      "publication": {
        "category": "Journal",
        "cite_score": 3.8,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "0010485X",
        "publisher": "Springer-Verlag Wien",
        "sjr": 0.409,
        "snip": 1.161,
        "subject_areas": [
          "Computational Theory and Mathematics",
          "Numerical Analysis",
          "Software",
          "Theoretical Computer Science",
          "Computational Mathematics",
          "Computer Science Applications"
        ],
        "title": "Computing"
      },
      "publication_date": "2021-05-01",
      "selected": true,
      "title": "Secure FaaS orchestration in the fog: how far are we?",
      "urls": [
        "https://link.springer.com/content/pdf/10.1007/s00607-021-00924-y.pdf",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85102383876&origin=inward"
      ]
    },
    {
      "abstract": "The evolution that serverless computing represents, the economic forces that shape it, why it could fail, and how it might fulfill its potential, are discussed. The cloud originally revolutionized system administration. This second phase of cloud computing simplifies cloud programming. Serverless computing encompasses much more than cloud functions, or Function-as-a-Service (FaaS). Other cloud programming abstractions such as object storage also hide the complexity of servers. Serverless today works well in limited applications, so cloud providers will create new application-specific and general-purpose serverless products to enable more use cases. The next phase of cloud computing will change the way programmers work as dramatically as the first phase changed how operators work.",
      "authors": [
        "Schleier-Smith, J.",
        "Sreekanti, V.",
        "Khandelwal, A.",
        "Carreira, J.",
        "Yadwadkar, N.J.",
        "Popa, R.A.",
        "Gonzalez, J.E.",
        "Stoica, I.",
        "Patterson, D.A."
      ],
      "categories": {},
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1145/3406011",
      "keywords": [],
      "number_of_pages": 9,
      "pages": "76-84",
      "publication": {
        "category": "Journal",
        "cite_score": 11.3,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "00010782",
        "publisher": "Association for Computing Machinery (ACM)",
        "sjr": 0.967,
        "snip": 4.595,
        "subject_areas": [
          "Computer Science (all)"
        ],
        "title": "Communications of the ACM"
      },
      "publication_date": "2021-05-01",
      "selected": true,
      "title": "What serverless computing is and should become",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85105016424&origin=inward"
      ]
    },
    {
      "abstract": "Cloud computing has begun a transformation from using virtual machines to using containers. Containers are attractive because of their build once, run anywhere computing model and their minimal performance overhead. Cloud providers leverage the lean nature of containers to run hundreds of them or more on a few cores. Furthermore, containers enable the serverless paradigm, which involves the creation of short-lived processes. In this work, we identify that containerized environments create page translations that are extensively replicated across containers in the TLB and in page tables. The result is high TLB pressure and redundant kernel work during page table management. To remedy this situation, this article proposes BabelFish, a novel architecture to share page translations across containers in the TLB and in page tables. BabelFish reduces the mean and tail latency of containerized workloads, cold-start effects of function execution, and container bring-up time. This work also advocates for the need to provide more hardware support for containerized and serverless environments. \u00c2\u00a9 1981-2012 IEEE.",
      "authors": [
        "Dimitrios Skarlatos",
        "Umur Darbaz",
        "Bhargava Gopireddy",
        "Nam Sung Kim",
        "Josep Torrellas"
      ],
      "categories": {},
      "citations": 0,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/MM.2021.3073194",
      "keywords": [],
      "number_of_pages": 6,
      "pages": "57-62",
      "publication": {
        "category": "Journal",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "1937-4143",
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "IEEE Micro"
      },
      "publication_date": "2021-05-01",
      "selected": true,
      "title": "BabelFish: Fusing Address Translations for Containers",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85104635431&origin=inward",
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9408361"
      ]
    },
    {
      "abstract": "Function-as-a-Service (FaaS) is a cloud service model enabling developers to offload event-driven executable snippets of code. The execution and management of such functions becomes a FaaS provider's responsibility, therein included their on-demand provisioning and automatic scaling. Key enablers for this cloud service model are FaaS platforms, e.g., AWS Lambda, Microsoft Azure Functions, or OpenFaaS. At the same time, the choice of the most appropriate FaaS platform for deploying and running a serverless application is not trivial, as various organizational and technical aspects have to be taken into account. In this work, we present (i) a FaaS platform classification framework derived using a multivocal review and (ii) a technology review of the ten most prominent FaaS platforms, based on the proposed classification framework. We also present a FaaS platform selection support system, called FAASTENER, which can help researchers and practitioners to choose the FaaS platform most suited for their requirements. \u00c2\u00a9 2021 The Authors",
      "authors": [
        "Yussupov, V.",
        "Soldani, J.",
        "Breitenb\u00c3\u00bccher, U.",
        "Brogi, A.",
        "Leymann, F."
      ],
      "categories": {},
      "citations": 1,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1016/j.jss.2021.110906",
      "keywords": [
        "Technology review",
        "Classification framework",
        "Serverless",
        "Platform",
        "FaaS",
        "Function-as-a-Service"
      ],
      "number_of_pages": null,
      "pages": null,
      "publication": {
        "category": "Journal",
        "cite_score": 8.4,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "01641212",
        "publisher": "Elsevier Inc.",
        "sjr": 0.642,
        "snip": 2.16,
        "subject_areas": [
          "Information Systems",
          "Hardware and Architecture",
          "Software"
        ],
        "title": "Journal of Systems and Software"
      },
      "publication_date": "2021-05-01",
      "selected": true,
      "title": "FaaSten your decisions: A classification framework and technology review of function-as-a-Service platforms",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85099635714&origin=inward"
      ]
    },
    {
      "abstract": "Serverless computing has emerged as a new paradigm for running short-lived\ncomputations in the cloud. Due to its ability to handle IoT workloads, there\nhas been considerable interest in running serverless functions at the edge.\nHowever, the constrained nature of the edge and the latency sensitive nature of\nworkloads result in many challenges for serverless platforms. In this paper, we\npresent LaSS, a platform that uses model-driven approaches for running\nlatency-sensitive serverless computations on edge resources. LaSS uses\nprincipled queuing-based methods to determine an appropriate allocation for\neach hosted function and auto-scales the allocated resources in response to\nworkload dynamics. LaSS uses a fair-share allocation approach to guarantee a\nminimum of allocated resources to each function in the presence of overload. In\naddition, it utilizes resource reclamation methods based on container deflation\nand termination to reassign resources from over-provisioned functions to\nunder-provisioned ones. We implement a prototype of our approach on an\nOpenWhisk serverless edge cluster and conduct a detailed experimental\nevaluation. Our results show that LaSS can accurately predict the resources\nneeded for serverless functions in the presence of highly dynamic workloads,\nand reprovision container capacity within hundreds of milliseconds while\nmaintaining fair share allocation guarantees.",
      "authors": [
        "Bin Wang",
        "Ahmed Ali-Eldin",
        "Prashant Shenoy"
      ],
      "categories": {},
      "citations": null,
      "comments": "Accepted to ACM HPDC 2021",
      "databases": [
        "arXiv"
      ],
      "doi": "10.1145/3431379.3460646",
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": null,
      "publication_date": "2021-04-29",
      "selected": true,
      "title": "LaSS: Running Latency Sensitive Serverless Computations at the Edge",
      "urls": [
        "http://arxiv.org/pdf/2104.14087v1",
        "http://arxiv.org/abs/2104.14087v1",
        "http://dx.doi.org/10.1145/3431379.3460646"
      ]
    },
    {
      "abstract": " Function-as-a-Service (FaaS) has become an increasingly popular way for users\nto deploy their applications without the burden of managing the underlying\ninfrastructure. However, existing FaaS platforms rely on remote storage to\nmaintain state, limiting the set of applications that can be run efficiently.\nRecent caching work for FaaS platforms has tried to address this problem, but\nhas fallen short: it disregards the widely different characteristics of FaaS\napplications, does not scale the cache based on data access patterns, or\nrequires changes to applications. To address these limitations, we present\nFaa\\$T, a transparent auto-scaling distributed cache for serverless\napplications. Each application gets its own Faa\\$T cache. After a function\nexecutes and the application becomes inactive, the cache is unloaded from\nmemory with the application. Upon reloading for the next invocation, Faa\\$T\npre-warms the cache with objects likely to be accessed. In addition to\ntraditional compute-based scaling, Faa\\$T scales based on working set and\nobject sizes to manage cache space and I/O bandwidth. We motivate our design\nwith a comprehensive study of data access patterns in a large-scale commercial\nFaaS provider. We implement Faa\\$T for the provider's production FaaS platform.\nOur experiments show that Faa\\$T can improve performance by up to 92% (57% on\naverage) for challenging applications, and reduce cost for most users compared\nto state-of-the-art caching systems, i.e. the cost of having to stand up\nadditional serverful resources.\n",
      "authors": [
        "Romero, Francisco",
        "Chaudhry, Gohar Irfan",
        "Goiri, \u00cd\u00f1igo",
        "Gopa, Pragna",
        "Batum, Paul",
        "Yadwadkar, Neeraja J.",
        "Fonseca, Rodrigo",
        "Kozyrakis, Christos",
        "Bianchini, Ricardo"
      ],
      "categories": {},
      "citations": null,
      "comments": "18 pages, 15 figures",
      "databases": [
        "arXiv"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": null,
      "publication_date": "2021-04-28",
      "selected": true,
      "title": "Faa$T: A Transparent Auto-Scaling Cache for Serverless Applications",
      "urls": [
        "http://arxiv.org/pdf/2104.13869v1",
        "https://arxiv.org/pdf/2104.13869",
        "http://arxiv.org/abs/2104.13869v1"
      ]
    },
    {
      "abstract": " Microservice and serverless computing systems open up massive versatility and\nopportunity to distributed and datacenter-scale computing. In the meantime, the\ndeployments of modern datacenter resources are moving to disaggregated\narchitectures. With the flourishing growths from both sides, we believe this is\nhigh time to write this vision paper to propose a potential research agenda to\nachieve efficient deployments, management, and executions of next-generation\nmicroservices on top of the emerging disaggregated datacenter architectures. In\nparticular, we envision a critical systems research direction of designing and\ndeveloping offloadable and migratable microservices on disaggregated\narchitectures. With this vision, we have surveyed the recent related work to\ndemonstrate the importance and necessity of researching it. We also outline the\nfundamental challenges that distributed systems and datacenter-scale computing\nresearch may encounter. We further propose a research roadmap to achieve our\nenvisioned objectives in a promising way. Within the roadmap, we identify\npotential techniques and methods that can be leveraged.\n",
      "authors": [
        "Lu, Xiaoyi",
        "Kashyap, Arjun"
      ],
      "categories": {},
      "citations": null,
      "comments": "7 pages, 2 figures, WORDS'21, co-located with ASPLOS'21",
      "databases": [
        "arXiv"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": {
        "category": null,
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [
          "Distributed, Parallel, and Cluster Computing"
        ],
        "title": "WORDS 2021: The Second Workshop On Resource Disaggregation and\n  Serverless"
      },
      "publication_date": "2021-04-22",
      "selected": true,
      "title": "Towards Offloadable and Migratable Microservices on Disaggregated Architectures: Vision, Challenges, and Research Roadmap",
      "urls": [
        "https://arxiv.org/pdf/2104.11272",
        "http://arxiv.org/pdf/2104.11272v1",
        "http://arxiv.org/abs/2104.11272v1"
      ]
    },
    {
      "abstract": "Fork has long been the process creation system call for Unix. At its inception, fork was hailed as an efficient system call due to its use of copy-on-write on memory shared between parent and child processes. However, application memory demand has increased drastically since the early days and the cost incurred by fork to simply set up virtual memory (e.g., copy page tables) is now a concern, even for applications that only require hundreds of MBs of memory. In practice, fork performance already holds back system efficiency and latency across a range of uses cases that fork large processes, such as fault-tolerant systems, serverless frameworks, and testing frameworks. This paper proposes On-demand-fork, a fast implementation of the fork system call specifically designed for applications with large memory footprints. On-demand-fork relies on the observation that copy-on-write can be generalized to page tables, even on commodity hardware. On-demand-fork executes faster than the traditional fork implementation by additionally sharing page tables between parent and child at fork time and selectively copying page tables in small chunks, on-demand, when handling page faults. On-demand-fork is a drop-in replacement for fork that requires no changes to applications or hardware. We evaluated On-demand-fork on a range of micro-benchmarks and real-world workloads. On-demand-fork significantly reduces the fork invocation time and has improved scalability. For processes with 1 GB of allocated memory, On-demand-fork has a 65\u00c3\u0097 performance advantage over Fork. We also evaluated On-demand-fork on testing, fuzzing, and snapshotting workloads of well-known applications, obtaining execution throughput improvements between 59% and 226% and up to 99% invocation latency reduction. \u00c2\u00a9 2021 Owner/Author.",
      "authors": [
        "Zhao, K.",
        "Gong, S.",
        "Fonseca, P."
      ],
      "categories": {},
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1145/3447786.3456258",
      "keywords": [],
      "number_of_pages": 16,
      "pages": "540-555",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450383349",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "EuroSys 2021 - Proceedings of the 16th European Conference on Computer Systems"
      },
      "publication_date": "2021-04-21",
      "selected": true,
      "title": "On-demand-fork: A microsecond fork for memory-intensive and latency-sensitive applications",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85105250256&origin=inward"
      ]
    },
    {
      "abstract": "Cloud applications based on the \"Functions as a Service\"(FaaS) paradigm have become very popular. Yet, due to their stateless nature, they must frequently interact with an external data store, which limits their performance. To mitigate this issue, we introduce OFC, a transparent, vertically and horizontally elastic in-memory caching system for FaaS platforms, distributed over the worker nodes. OFC provides these benefits cost-effectively by exploiting two common sources of resource waste: (i) most cloud tenants overprovision the memory resources reserved for their functions because their footprint is non-trivially input-dependent and (ii) FaaS providers keep function sandboxes alive for several minutes to avoid cold starts. Using machine learning models adjusted for typical function input data categories (e.g., multimedia formats), OFC estimates the actual memory resources required by each function invocation and hoards the remaining capacity to feed the cache. We build our OFC prototype based on enhancements to the OpenWhisk FaaS platform, the Swift persistent object store, and the RAM-Cloud in-memory store. Using a diverse set of workloads, we show that OFC improves by up to 82 % and 60 % respectively the execution time of single-stage and pipelined functions. \u00c2\u00a9 2021 ACM.",
      "authors": [
        "Mvondo, D.",
        "Bacou, M.",
        "Nguetchouang, K.",
        "Ngale, L.",
        "Pouget, S.",
        "Kouam, J.",
        "Lachaize, R.",
        "Hwang, J.",
        "Wood, T.",
        "Hagimont, D.",
        "De Palma, N.",
        "Batchakui, B.",
        "Tchana, A."
      ],
      "categories": {},
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1145/3447786.3456239",
      "keywords": [
        "Serverless",
        "Cloud computing",
        "Functions as a service (FaaS)",
        "Latency",
        "Cache"
      ],
      "number_of_pages": 17,
      "pages": "228-244",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450383349",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "EuroSys 2021 - Proceedings of the 16th European Conference on Computer Systems"
      },
      "publication_date": "2021-04-21",
      "selected": true,
      "title": "OFC: An opportunistic caching system for FaaS platforms",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85105309748&origin=inward"
      ]
    },
    {
      "abstract": "An increasing number of data-driven applications rely on the ability of processing data flows in a timely manner, exploiting for this purpose Data Stream Processing (DSP) systems. Elasticity is an essential feature for DSP systems, as workload variability calls for automatic scaling of the application processing capacity, to avoid both overload and resource wastage. In this work, we implement auto-scaling in Pulsar Functions, a function-based streaming framework built on top of Apache Pulsar. The latter is is a distributed publish-subscribe messaging platform that natively supports serverless functions. Considering various state-of-the-art policies, we show that the proposed solution is able to scale application parallelism with minimal overhead. \u00c2\u00a9 2021 Association for Computing Machinery.",
      "authors": [
        "Russo, G.R.",
        "Schiazza, A.",
        "Cardellini, V."
      ],
      "categories": {},
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1145/3447545.3451901",
      "keywords": [
        "Data Stream Processing",
        "Self-Adaptation",
        "Auto-Scaling"
      ],
      "number_of_pages": 8,
      "pages": "9-16",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450383318",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [
          "Learning",
          "Distributed, Parallel, and Cluster Computing",
          "Machine Learning"
        ],
        "title": "In Companion of the ACM/SPEC International Conference on\n  Performance Engineering (ICPE '21), 2021, Association for Computing\n  Machinery, New York, NY, USA, 27-33"
      },
      "publication_date": "2021-04-19",
      "selected": true,
      "title": "Elastic pulsar functions for distributed stream processing",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85104953758&origin=inward"
      ]
    },
    {
      "abstract": "To improve the observability of workload performance, resource utilization, and infrastructure underlying serverless Function-as-a-Service (FaaS) platforms, we have developed the Serverless Application Analytics Framework (SAAF). SAAF provides a reusable framework supporting multiple programming languages that developers can leverage to inspect performance, resource utilization, scalability, and infrastructure metrics of function deployments to commercial and open-source FaaS platforms. To automate reproducible FaaS performance experiments, we provide the FaaS Runner as a multithreaded FaaS client. FaaS Runner provides a programmable client that can orchestrate over one thousand concurrent FaaS function calls. The ReportGenerator is then used to aggregate experiment output into CSV files for consumption by popular data analytics tools. SAAF and its supporting tools combined can assess forty-eight distinct metrics to enhance observability of serverless software deployments. In this tutorial paper, we describe SAAF and its supporting tools and provide examples of observability insights that can be derived. \u00c2\u00a9 2021 Association for Computing Machinery.",
      "authors": [
        "Cordingly, R.",
        "Heydari, N.",
        "Yu, H.",
        "Hoang, V.",
        "Sadeghi, Z.",
        "Lloyd, W."
      ],
      "categories": {},
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1145/3447545.3451173",
      "keywords": [],
      "number_of_pages": 4,
      "pages": "161-164",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450383318",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [
          "Learning",
          "Distributed, Parallel, and Cluster Computing",
          "Machine Learning"
        ],
        "title": "In Companion of the ACM/SPEC International Conference on\n  Performance Engineering (ICPE '21), 2021, Association for Computing\n  Machinery, New York, NY, USA, 27-33"
      },
      "publication_date": "2021-04-19",
      "selected": true,
      "title": "Enhancing observability of serverless computing with the serverless application analytics framework",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85104969464&origin=inward"
      ]
    },
    {
      "abstract": "Functions as a Service (also called serverless computing) promises to revolutionize how applications use cloud resources. However, functions suffer from cold-start problems due to the overhead of initializing their code and data dependencies before they can start executing. Keeping functions alive and warm after they have finished execution can alleviate the cold-start overhead. Keep-alive policies must keep functions alive based on their resource and usage characteristics, which is challenging due to the diversity in FaaS workloads. Our insight is that keep-alive is analogous to caching. Our caching-inspired Greedy-Dual keep-alive policy can be effective in reducing the cold-start overhead by more than 3\u00c3\u0097 compared to current approaches. Caching concepts such as reuse distances and hit-ratio curves can also be used for auto-scaled server resource provisioning, which can reduce the resource requirement of FaaS providers by 30% for real-world dynamic workloads. We implement caching-based keep-alive and resource provisioning policies in our FaasCache system, which is based on OpenWhisk. We hope that our caching analogy opens the door to more principled and optimized keep-alive and resource provisioning techniques for future FaaS workloads and platforms. \u00c2\u00a9 2021 ACM.",
      "authors": [
        "Fuerst, A.",
        "Sharma, P."
      ],
      "categories": {},
      "citations": 1,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1145/3445814.3446757",
      "keywords": [
        "Functions as a Service",
        "Serverless Computing",
        "Caching",
        "Cloud Computing"
      ],
      "number_of_pages": 15,
      "pages": "386-400",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450383172",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "International Conference on Architectural Support for Programming Languages and Operating Systems - ASPLOS"
      },
      "publication_date": "2021-04-19",
      "selected": true,
      "title": "FaasCache: Keeping serverless computing alive with greedy-dual caching",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85104696796&origin=inward"
      ]
    },
    {
      "abstract": "The microservice architecture is a popular software engineering approach for building flexible, large-scale online services. Serverless functions, or function as a service (FaaS), provide a simple programming model of stateless functions which are a natural substrate for implementing the stateless RPC handlers of microservices, as an alternative to containerized RPC servers. However, current serverless platforms have millisecond-scale runtime overheads, making them unable to meet the strict sub-millisecond latency targets required by existing interactive microservices. We present Nightcore, a serverless function runtime with microsecond-scale overheads that provides container-based isolation between functions. Nightcore's design carefully considers various factors having microsecond-scale overheads, including scheduling of function requests, communication primitives, threading models for I/O, and concurrent function executions. Nightcore currently supports serverless functions written in C/C++, Go, Node.js, and Python. Our evaluation shows that when running latency-sensitive interactive microservices, Nightcore achieves 1.36\u00c3\u0097-2.93\u00c3\u0097 higher throughput and up to 69% reduction in tail latency. \u00c2\u00a9 2021 Owner/Author.",
      "authors": [
        "Jia, Z.",
        "Witchel, E."
      ],
      "categories": {},
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1145/3445814.3446701",
      "keywords": [
        "serverless computing",
        "Cloud computing",
        "microservices",
        "function-as-a-service"
      ],
      "number_of_pages": 15,
      "pages": "152-166",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450383172",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "International Conference on Architectural Support for Programming Languages and Operating Systems - ASPLOS"
      },
      "publication_date": "2021-04-19",
      "selected": true,
      "title": "Nightcore: Efficient and scalable serverless computing for latency-sensitive, interactive microservices",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85104777845&origin=inward"
      ]
    },
    {
      "abstract": "Many organizations are migrating their on-premise artificial intelligence workloads to the cloud due to availability of cost-effective and highly scalable infrastructure, software and platform services. To ease the process of migration, many cloud vendors provide services, frameworks and tools that can be used for deployment of applications on cloud infrastructure. Finding the most appropriate service and infrastructure for a given application that results in a desired performance at minimal cost, is a challenge. In this work, we present a methodology to migrate a deep learning model based recommender system to ML platform and serverless architecture. Furthermore, we show our experimental evaluation of AWS ML platform called SageMaker and the serverless platform service known as Lambda. In our study, we also discuss performance and cost trade-off while using cloud infrastructure. \u00c2\u00a9 2021 Association for Computing Machinery.",
      "authors": [
        "Chahal, D.",
        "Mishra, M.",
        "Palepu, S.",
        "Singhal, R."
      ],
      "categories": {},
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1145/3447545.3451184",
      "keywords": [
        "AWS SageMaker",
        "Recommendation system",
        "Cloud performance",
        "ML Platform"
      ],
      "number_of_pages": 7,
      "pages": "49-55",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450383318",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [
          "Learning",
          "Distributed, Parallel, and Cluster Computing",
          "Machine Learning"
        ],
        "title": "In Companion of the ACM/SPEC International Conference on\n  Performance Engineering (ICPE '21), 2021, Association for Computing\n  Machinery, New York, NY, USA, 27-33"
      },
      "publication_date": "2021-04-19",
      "selected": true,
      "title": "Performance and cost comparison of cloud services for deep learning workload",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85104932523&origin=inward"
      ]
    },
    {
      "abstract": "The proceedings contain 36 papers. The topics discussed include: towards independent run-time cloud monitoring; distributed double machine learning with a serverless architecture; cloud performance variability prediction; 10 years later: cloud computing is closing the performance gap; performance and cost comparison of cloud services for deep learning workload; GradeML: towards holistic performance analysis for machine learning workflows; an empirical evaluation of the performance of video conferencing systems; enabling containerized, parametric and distributed database deployment and benchmarking as a service; how to measure scalability of distributed stream processing engines?; and performance interference on key-value stores in multi-tenant environments: when block size and write requests matter.",
      "authors": [],
      "categories": {},
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450383318",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [
          "Learning",
          "Distributed, Parallel, and Cluster Computing",
          "Machine Learning"
        ],
        "title": "In Companion of the ACM/SPEC International Conference on\n  Performance Engineering (ICPE '21), 2021, Association for Computing\n  Machinery, New York, NY, USA, 27-33"
      },
      "publication_date": "2021-04-19",
      "selected": true,
      "title": "ICPE 2021 - Companion of the ACM/SPEC International Conference on Performance Engineering",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85104960502&origin=inward"
      ]
    },
    {
      "abstract": " Serverless computing is the latest paradigm in cloud computing, offering a\nframework for the development of event driven, pay-as-you-go functions in a\nhighly scalable environment. While these traits offer a powerful new\ndevelopment paradigm, they have also given rise to a new form of cyber-attack\nknown as Denial of Wallet (forced financial exhaustion). In this work, we\ndefine and identify the threat of Denial of Wallet and its potential attack\npatterns. Also, we demonstrate how this new form of attack can potentially\ncircumvent existing mitigation systems developed for a similar style of attack,\nDenial of Service. Our goal is twofold. Firstly, we will provide a concise and\ninformative overview of this emerging attack paradigm. Secondly, we propose\nthis paper as a starting point to enable researchers and service providers to\ncreate effective mitigation strategies. We include some simulated experiments\nto highlight the potential financial damage that such attacks can cause and the\ncreation of an isolated test bed for continued safe research on these attacks.\n",
      "authors": [
        "Kelly, Daniel",
        "Glavin, Frank G.",
        "Barrett, Enda"
      ],
      "categories": {},
      "citations": null,
      "comments": null,
      "databases": [
        "arXiv"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": null,
      "publication_date": "2021-04-16",
      "selected": true,
      "title": "Denial of Wallet -- Defining a Looming Threat to Serverless Computing",
      "urls": [
        "http://arxiv.org/abs/2104.08031v2",
        "http://arxiv.org/pdf/2104.08031v2",
        "https://arxiv.org/pdf/2104.08031"
      ]
    },
    {
      "abstract": " Unmanned aerial vehicles (UAVs), or say drones, are envisioned to support\nextensive applications in next-generation wireless networks in both civil and\nmilitary fields. Empowering UAVs networks intelligence by artificial\nintelligence (AI) especially machine learning (ML) techniques is inevitable and\nappealing to enable the aforementioned applications. To solve the problems of\ntraditional cloud-centric ML for UAV networks such as privacy concern,\nunacceptable latency, and resource burden, a distributed ML technique, i.e.,\nfederated learning (FL), has been recently proposed to enable multiple UAVs to\ncollaboratively train ML model without letting out raw data. However, almost\nall existing FL paradigms are server-based, i.e., a central entity is in charge\nof ML model aggregation and fusion over the whole network, which could result\nin the issue of a single point of failure and are inappropriate to UAV networks\nwith both unreliable nodes and links. To address the above issue, in this\narticle, we propose a novel architecture called SELF-UN\n(\\underline{SE}rver\\underline{L}ess \\underline{F}L for \\underline{U}AV\n\\underline{N}etworks), which enables FL within UAV networks without a central\nentity. We also conduct a preliminary simulation study to validate the\nfeasibility and effectiveness of the SELF-UN architecture. Finally, we discuss\nthe main challenges and potential research directions in the SELF-UN.\n",
      "authors": [
        "Qu, Yuben",
        "Dai, Haipeng",
        "Zhuang, Yan",
        "Chen, Jiafa",
        "Dong, Chao",
        "Wu, Fan",
        "Guo, Song"
      ],
      "categories": {},
      "citations": null,
      "comments": "7 pages, 4 figures",
      "databases": [
        "arXiv"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": null,
      "publication_date": "2021-04-15",
      "selected": true,
      "title": "Serverless Federated Learning for UAV Networks: Architecture, Challenges, and Opportunities",
      "urls": [
        "http://arxiv.org/pdf/2104.07557v1",
        "https://arxiv.org/pdf/2104.07557",
        "http://arxiv.org/abs/2104.07557v1"
      ]
    },
    {
      "abstract": " Function-as-a-Service (FaaS) has recently emerged to reduce the deployment\ncost of running cloud applications compared to Infrastructure-as-a-Service\n(IaaS). FaaS follows a serverless 'pay-as-you-go' computing model; it comes at\na higher cost per unit of execution time but typically application functions\nexperience lower provisioning time (startup delay). IaaS requires the\nprovisioning of Virtual Machines, which typically suffer from longer cold-start\ndelays that cause higher queuing delays and higher request drop rates. We\npresent LIBRA, a balanced (hybrid) approach that leverages both VM-based and\nserverless resources to efficiently manage cloud resources for the\napplications. LIBRA closely monitors the application demand and provisions\nappropriate VM and serverless resources such that the running cost is minimized\nand Service-Level Agreements are met. Unlike state of the art, LIBRA not only\nhides VM cold-start delays, and hence reduces response time, by leveraging\nserverless, but also directs a low-rate bursty portion of the demand to\nserverless where it would be less costly than spinning up new VMs. We evaluate\nLIBRA on real traces in a simulated environment as well as on the AWS\ncommercial cloud. Our results show that LIBRA outperforms other\nresource-provisioning policies, including a recent hybrid approach - LIBRA\nachieves more than 85% reduction in SLA violations and up to 53% cost savings.\n",
      "authors": [
        "Raza, Ali",
        "Zhang, Zongshun",
        "Akhtar, Nabeel",
        "Isahagian, Vatche",
        "Matta, Ibrahim"
      ],
      "categories": {},
      "citations": null,
      "comments": null,
      "databases": [
        "arXiv"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": null,
      "publication_date": "2021-04-12",
      "selected": true,
      "title": "LIBRA: An Economical Hybrid Approach for Cloud Applications with Strict SLAs",
      "urls": [
        "http://arxiv.org/abs/2104.05491v1",
        "https://arxiv.org/pdf/2104.05491",
        "http://arxiv.org/pdf/2104.05491v1"
      ]
    },
    {
      "abstract": " Cloud-based computing systems can get oversubscribed due to the budget\nconstraints of their users or limitations in certain resource types. The\noversubscription can, in turn, degrade the users perceived Quality of Service\n(QoS). The approach we investigate to mitigate both the oversubscription and\nthe incurred cost is based on smart reusing of the computation needed to\nprocess the service requests (i.e., tasks). We propose a reusing paradigm for\nthe tasks that are waiting for execution. This paradigm can be particularly\nimpactful in serverless platforms where multiple users can request similar\nservices simultaneously. Our motivation is a multimedia streaming engine that\nprocesses the media segments in an on-demand manner. We propose a mechanism to\nidentify various types of \"mergeable\" tasks and aggregate them to improve the\nQoS and mitigate the incurred cost. We develop novel approaches to determine\nwhen and how to perform task aggregation such that the QoS of other tasks is\nnot affected. Evaluation results show that the proposed mechanism can improve\nthe QoS by significantly reducing the percentage of tasks missing their\ndeadlines %. In addition, it can and reduce the overall time (and subsequently\nthe incurred cost) of utilizing cloud services by more than 9%.\n",
      "authors": [
        "Denninnart, Chavit",
        "Salehi, Mohsen Amini"
      ],
      "categories": {},
      "citations": null,
      "comments": null,
      "databases": [
        "arXiv"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": null,
      "publication_date": "2021-04-09",
      "selected": true,
      "title": "Harnessing the Potential of Function-Reuse in Multimedia Cloud Systems",
      "urls": [
        "http://arxiv.org/abs/2104.04474v1",
        "http://arxiv.org/pdf/2104.04474v1",
        "https://arxiv.org/pdf/2104.04474"
      ]
    },
    {
      "abstract": " The increasing interest in serverless computation and ubiquitous wireless\nnetworks has led to numerous connected devices in our surroundings. Among such\ndevices, IoT devices have access to an abundance of raw data, but their\ninadequate resources in computing limit their capabilities. Specifically, with\nthe emergence of deep neural networks (DNNs), not only is the demand for the\ncomputing power of IoT devices increasing but also privacy concerns are pushing\ncomputations towards the edge. To overcome inadequate resources, several\nstudies have proposed the distribution of work among IoT devices. These\npromising methods harvest the aggregated computing power of the idle IoT\ndevices in an environment. However, since such a distributed system strongly\nrelies on each device, unstable latencies, and intermittent failures, the\ncommon characteristics of IoT devices and wireless networks, cause high\nrecovery overheads. To reduce this overhead, we propose a novel robustness\nmethod with a close-to-zero recovery latency for DNN computations. Our solution\nnever loses a request or spends time recovering from a failure. To do so,\nfirst, we analyze the underlying matrix-matrix computations affected by\ndistribution. Then, we introduce a new coded distributed computing (CDC) method\nthat has a constant cost with the increasing number of devices, unlike the\nlinear cost of modular redundancies. Moreover, our method is applied in the\nlibrary level, without requiring extensive changes to the program, while still\nensuring a balanced work assignment during distribution. To illustrate our\nmethod, we perform experiments with distributed systems comprising up to 12\nRaspberry Pis.\n",
      "authors": [
        "Hadidi, Ramyad",
        "Cao, Jiashen",
        "Kim, Hyesoon"
      ],
      "categories": {},
      "citations": null,
      "comments": null,
      "databases": [
        "arXiv"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": null,
      "publication_date": "2021-04-09",
      "selected": true,
      "title": "Creating Robust Deep Neural Networks With Coded Distributed Computing for IoT Systems",
      "urls": [
        "http://arxiv.org/abs/2104.04447v1",
        "http://arxiv.org/pdf/2104.04447v1",
        "https://arxiv.org/pdf/2104.04447"
      ]
    },
    {
      "abstract": " Within the next 10 years, advances on resource disaggregation will enable\nfull transparency for most Cloud applications: to run unmodified single-machine\napplications over effectively unlimited remote computing resources. In this\narticle, we present five serverless predictions for the next decade that will\nrealize this vision of transparency -- equivalent to Tim Wagner's Serverless\nSuperComputer or AnyScale's Infinite Laptop proposals.\n",
      "authors": [
        "Lopez, Pedro Garcia",
        "Slominski, Aleksander",
        "Behrendt, Michael",
        "Metzler, Bernard"
      ],
      "categories": {},
      "citations": null,
      "comments": "arXiv admin note: text overlap with arXiv:2006.01251",
      "databases": [
        "arXiv"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": null,
      "publication_date": "2021-04-07",
      "selected": true,
      "title": "Serverless Predictions: 2021-2030",
      "urls": [
        "https://arxiv.org/pdf/2104.03075",
        "http://arxiv.org/pdf/2104.03075v1",
        "http://arxiv.org/abs/2104.03075v1"
      ]
    },
    {
      "abstract": "The new space race is heating up as private companies such as SpaceX and Amazon are building large satellite constellations in low-earth orbit (LEO) to provide global broadband internet access. As the number of subscribers connected to this access network grows, it becomes necessary to investigate if and how edge computing concepts can be applied to LEO satellite networks. In this paper, we discuss the unique characteristics of the LEO edge and analyze the suitability of three organization paradigms for applications considering developer requirements. We conclude that the serverless approach is the most promising solution, opening up the field for future research. \u00c2\u00a9 2021 ACM.",
      "authors": [
        "Tobias Pfandzelter",
        "Jonathan Hasenburg",
        "David Bermbach"
      ],
      "categories": {},
      "citations": 0,
      "comments": "Accepted for Publication at 4th International Workshop on Edge\n  Systems, Analytics and Networking (EdgeSys '21), April 26, 2021, Online,\n  United Kingdom",
      "databases": [
        "arXiv",
        "Scopus"
      ],
      "doi": "10.1145/3434770.3459736",
      "keywords": [
        "LEO constellations",
        "satellite internet",
        "edge computing"
      ],
      "number_of_pages": 6,
      "pages": "43-48",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450382915",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "EdgeSys 2021 - Proceedings of the 4th International Workshop on Edge Systems, Analytics and Networking, Part of EuroSys 2021"
      },
      "publication_date": "2021-04-06",
      "selected": true,
      "title": "Towards a Computing Platform for the LEO Edge",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85104659129&origin=inward",
        "http://arxiv.org/abs/2104.02396v1",
        "http://dx.doi.org/10.1145/3434770.3459736",
        "http://arxiv.org/pdf/2104.02396v1"
      ]
    },
    {
      "abstract": "Serverless computing like Function-as-a-Service (FaaS) is attractive for IoT service providers, liberating the providers from server maintenance. Since a data processing function is executed on the cloud instead of a dedicated server in the FaaS platform, the service users send their private data in their IoT devices to the third-party cloud, taking privacy leakage risks. Homomorphic encryption (HE) can preserve the privacy by enabling encrypted data processing on the cloud, but using HE for every data item incurs large computation and communication overheads. This work proposes SelectiveCrypt, a compiler-assisted semantic-aware encryption scheme that applies different cryptographic primitives depending on the operations on each data item. SelectiveCrypt homomorphically encrypts data items if arithmetic operations are applied to the data, while SelectiveCrypt encrypts data items with a symmetric key if the data are stored in the cloud without any arithmetic operation. The SelectiveCrypt framework consists of a compiler and its runtime system. The SelectiveCrypt compiler statically analyzes the data processing, determines an appropriate cryptographic primitive for each data item, and automatically transforms arithmetic operations into the homomorphic computation. The SelectiveCrypt runtime encrypts and decrypts the data items according to the static analysis result. This work evaluates the prototype SelectiveCrypt framework with five benchmarks that reflect real-world IoT scenarios. The evaluation results show that the SelectiveCrypt framework successfully reduces response time and communication overhead by 1.59 times and 9.61 times, respectively, compared with a HE scheme. \u00c2\u00a9 2014 IEEE.",
      "authors": [
        "Bongjun Kim",
        "Seonyeong Heo",
        "Jaeho Lee",
        "Shinnung Jeong",
        "Yongwoo Lee",
        "Hanjun Kim"
      ],
      "categories": {},
      "citations": 0,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/JIOT.2020.3031550",
      "keywords": [
        "homomorphic encryption (HE)",
        "Internet of Things",
        "Cloud computing security"
      ],
      "number_of_pages": 12,
      "pages": "5645-5656",
      "publication": {
        "category": "Journal",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "2372-2541",
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "IEEE Internet of Things Journal"
      },
      "publication_date": "2021-04-01",
      "selected": true,
      "title": "Compiler-Assisted Semantic-Aware Encryption for Efficient and Secure Serverless Computing",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85103310109&origin=inward",
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9226428"
      ]
    },
    {
      "abstract": "Serverless computing offers a wide variety of event-driven integrations and cloud services, easy development and implementation frameworks, and complex bal",
      "authors": [
        "N. Yuvaraj",
        "T. Karthikeyan",
        "K. Praghash"
      ],
      "categories": {},
      "citations": 1,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1007/s11277-020-07981-0",
      "keywords": [
        "Run time",
        "Resource allocation",
        "Reinforcement Learning (RL)",
        "Serverless computing",
        "Gray Wolf Optimization (GWO)"
      ],
      "number_of_pages": 19,
      "pages": "2403-2421",
      "publication": {
        "category": "Journal",
        "cite_score": 3.1,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "09296212",
        "publisher": "Springer Netherlands",
        "sjr": 0.302,
        "snip": 0.789,
        "subject_areas": [
          "Electrical and Electronic Engineering",
          "Computer Science Applications"
        ],
        "title": "Wireless Personal Communications"
      },
      "publication_date": "2021-04-01",
      "selected": true,
      "title": "An Improved Task Allocation Scheme in Serverless Computing Using Gray Wolf Optimization (GWO) Based Reinforcement Learning (RIL) Approach",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85096320545&origin=inward",
        "https://link.springer.com/content/pdf/10.1007/s11277-020-07981-0.pdf"
      ]
    },
    {
      "abstract": "The proceedings contain 252 papers. The topics discussed include: efficient DNA sequence partitioning using probabilistic subsets and hypergraphs; natural vs balanced distribution in deep learning on whole slide images for cancer detection; protein secondary structure prediction based on fusion of machine learning classifiers; stargate: remote data access between hadoop clusters; reducing cold starts during elastic scaling of containers in kubernetes; an energy saving approach: understanding microservices as multidimensional entities in P2P networks; workload classification in multi-VM cloud environment using deep neural network model; cost minimization for deploying serverless functions; a bargaining game based energy-aware load balancing in cloud data centers; low-cost automatic fish measuring estimation; topple-free foot strategy applied to real-time motion capture data using kinect sensor; and EMIDAS: explainable social interaction-based pedestrian intention detection across street.",
      "authors": [],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450381048",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings of the ACM Symposium on Applied Computing"
      },
      "publication_date": "2021-03-22",
      "selected": false,
      "title": "Proceedings of the 36th Annual ACM Symposium on Applied Computing, SAC 2021",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85104963377&origin=inward"
      ]
    },
    {
      "abstract": "Automatic scaling of containers is an important feature to handle fluctuating workloads. However, the delay caused by the time to bootstrap a container has an impact on applications with deadline-based Service-Level Objectives (SLOs). This delay is called the cold start problem. Many techniques have already been proposed to tackle this problem but not all techniques have been integrated and evaluated in Kubernetes, the de-facto standard in container orchestration. This paper combines and evaluates three techniques in the context of Kubernetes: (i) pre-creation of network containers, (ii) using container images that enable sharing of linked libraries in memory and (iii) extending the declarative configuration management approach of Kubernetes with imperative configuration for creating multiple application containers in parallel. A prototype of the approach is implemented and tested on a Java-based Spring Boot application where the cold start problem occurs due to various library dependencies. Our findings illustrate that the use of containers that allow for library sharing already has a large, positive impact when starting up a single container. The pre-creation of network containers in combination with imperative configuration enables the application to meet deadline-driven SLOs without a non-deterministic delay that appears in Kubernetes when multiple containers are created in parallel. We conclude that the use of container images that allow for library sharing is a must for all applications that require fast container start-ups in Kubernetes. Pre-creation of network containers when combined with imperative configuration also has a positive impact on SLO compliance during elastic scaling of containers. \u00c2\u00a9 2021 ACM.",
      "authors": [
        "Beni, E.H.",
        "Truyen, E.",
        "Lagaisse, B.",
        "Joosen, W.",
        "Dieltjens, J."
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1145/3412841.3441887",
      "keywords": [
        "container frameworks",
        "auto-scaling",
        "cold start",
        "serverless"
      ],
      "number_of_pages": 9,
      "pages": "60-68",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450381048",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings of the ACM Symposium on Applied Computing"
      },
      "publication_date": "2021-03-22",
      "selected": false,
      "title": "Reducing cold starts during elastic scaling of containers in kubernetes",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85104974399&origin=inward"
      ]
    },
    {
      "abstract": "The serverless and functions as a service (FaaS) paradigms are currently trending among cloud providers and are now increasingly being applied to the network edge, and to the Internet of Things (IoT) devices. The benefits include reduced latency for communication, less network traffic and increased privacy for data processing. However, there are challenges as IoT devices have limited resources for running multiple simultaneous containerized functions, and also FaaS does not typically support long-running functions. Our implementation utilizes Docker and CRIU for checkpointing and suspending long-running blocking functions. The results show that checkpointing is slightly slower than regular Docker pause, but it saves memory and allows for more long-running functions to be run on an IoT device. Furthermore, the resulting checkpoint files are small, hence they are suitable for live migration and backing up stateful functions, therefore improving availability and reliability of the system. \u00c2\u00a9 2019 Copyright held by the owner/author(s).",
      "authors": [
        "Pekka Karhula",
        "Jan Janak",
        "Henning Schulzrinne"
      ],
      "categories": {},
      "citations": 8,
      "comments": "6 pages",
      "databases": [
        "arXiv",
        "Scopus"
      ],
      "doi": "10.1145/3301418.3313947",
      "keywords": [
        "Internet of things",
        "Function as a service",
        "Checkpointing",
        "Light-weight virtualization",
        "Serverless"
      ],
      "number_of_pages": 6,
      "pages": "60-65",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450362757",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [
          "Networking and Internet Architecture"
        ],
        "title": "EdgeSys 2019 - Proceedings of the 2nd ACM International Workshop on Edge Systems, Analytics and Networking, Part of EuroSys 2019"
      },
      "publication_date": "2021-03-21",
      "selected": true,
      "title": "Checkpointing and Migration of IoT Edge Functions",
      "urls": [
        "http://arxiv.org/pdf/2103.11439v1",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85063891217&origin=inward",
        "http://arxiv.org/abs/2103.11439v1",
        "http://dx.doi.org/10.1145/3301418.3313947"
      ]
    },
    {
      "abstract": " In this study we demonstrate the viability of deploying BERT-style models to\nserverless environments in a production setting. Since the freely available\npre-trained models are too large to be deployed in this way, we utilize\nknowledge distillation and fine-tune the models on proprietary datasets for two\nreal-world tasks: sentiment analysis and semantic textual similarity. As a\nresult, we obtain models that are tuned for a specific domain and deployable in\nserverless environments. The subsequent performance analysis shows that this\nsolution results in latency levels acceptable for production use and that it is\nalso a cost-effective approach for small-to-medium size deployments of BERT\nmodels, all without any infrastructure overhead.\n",
      "authors": [
        "Bene\u0161ov\u00e1, Katar\u00edna",
        "\u0160vec, Andrej",
        "\u0160uppa, Marek"
      ],
      "categories": {},
      "citations": null,
      "comments": "NAACL-HLT 2021 Industry Track Camera Ready",
      "databases": [
        "arXiv"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": null,
      "publication_date": "2021-03-19",
      "selected": true,
      "title": "Cost-effective Deployment of BERT Models in Serverless Environment",
      "urls": [
        "http://arxiv.org/abs/2103.10673v2",
        "http://arxiv.org/pdf/2103.10673v2",
        "https://arxiv.org/pdf/2103.10673"
      ]
    },
    {
      "abstract": "<h3>Abstract</h3>\n<h3>Background</h3>\n<p>Pediatric cancers typically have a distinct genomic landscape when compared to adult cancers and frequently carry somatic gene fusion events that alter gene expression and drive tumorigenesis. Sensitive and specific detection of gene fusions through the analysis of next-generation-based RNA sequencing (RNA-Seq) data is computationally challenging and may be confounded by low tumor cellularity or underlying genomic complexity. Furthermore, numerous computational tools are available to identify fusions from supporting RNA-Seq reads, yet each algorithm demonstrates unique variability in sensitivity and precision, and no clearly superior approach currently exists. To overcome these challenges, we have developed an ensemble fusion calling approach to increase the accuracy of identifying fusions.</p><h3>Results</h3>\n<p>Our ensemble fusion detection approach utilizes seven fusion calling algorithms: Arriba, CICERO, FusionMap, FusionCatcher, JAFFA, MapSplice, and STAR-Fusion, which are packaged as a fully automated pipeline using Docker and AWS serverless technology. This method uses paired end RNA-Seq sequence reads as input, and the output from each algorithm is examined to identify fusions detected by a consensus of at least three algorithms. These consensus fusion results are filtered by comparison to an internal database to remove likely artifactual fusions occurring at high frequencies in our internal cohort, while a \u201cknown fusion list\u201d prevents failure to report known pathogenic events. We have employed the ensemble fusion-calling pipeline on RNA-Seq data from 229 patients with pediatric cancer or blood disorders studied under an IRB-approved protocol. The samples consist of 138 central nervous system tumors, 73 solid tumors, and 18 hematologic malignancies or disorders. The combination of an ensemble fusion-calling pipeline and a knowledge-based filtering strategy identified 67 clinically relevant fusions among our cohort (diagnostic yield of 29.3%), including <i>RBPMS-MET, BCAN-NTRK1</i>, and <i>TRIM22-BRAF</i> fusions. Following clinical confirmation and reporting in the patient\u2019s medical record, both known and novel fusions provided medically meaningful information.</p><h3>Conclusions</h3>\n<p>Our ensemble fusion detection pipeline offers a streamlined approach to discover fusions in cancer, at higher levels of sensitivity and accuracy than single algorithm methods. Furthermore, this method accurately identifies driver fusions in pediatric cancer, providing clinical impact by contributing evidence to diagnosis and, when appropriate, indicating targeted therapies.</p>",
      "authors": [
        "Stephanie LaHaye",
        "James R. Fitch",
        "Kyle J. Voytovich",
        "Adam C. Herman",
        "Benjamin J. Kelly",
        "Grant E. Lammi",
        "Saranga Wijeratne",
        "Samuel J. Franklin",
        "Kathleen M. Schieffer",
        "Natalie Bir",
        "Sean D. McGrath",
        "Anthony R. Miller",
        "Amy Wetzel",
        "Katherine E. Miller",
        "Tracy A. Bedrosian",
        "Kristen Leraas",
        "Kristy Lee",
        "Ajay Gupta",
        "Bhuvana Setty",
        "Daniel R. Bou\u00e9",
        "Jeffrey R. Leonard",
        "Jonathan L. Finlay",
        "Mohamed S. Abdelbaki",
        "Diana S. Osorio",
        "Selene C. Koo",
        "Daniel C. Koboldt",
        "Vincent Magrini",
        "Catherine E. Cottrell",
        "Elaine R. Mardis",
        "Richard K. Wilson",
        "Peter White"
      ],
      "categories": null,
      "citations": null,
      "comments": null,
      "databases": [
        "bioRxiv"
      ],
      "doi": "10.1101/2021.03.11.435013",
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": null,
      "publication_date": "2021-03-12",
      "selected": false,
      "title": "Discovery of Clinically Relevant Fusions in Pediatric Cancer",
      "urls": [
        "https://www.biorxiv.org/content/biorxiv/early/2021/03/12/2021.03.11.435013.full.pdf",
        "https://doi.org/10.1101/2021.03.11.435013"
      ]
    },
    {
      "abstract": " We describe the architecture of Sammen Om Demens (SOD), an application for\nportable devices aiming at helping persons with dementia when wandering and\ngetting lost through the involvement of caregivers, family members, and\nordinary citizens who volunteer. To enable the real-time detection of a person with dementia that has lost\norientation, we transfer location data at high frequency from a frontend on the\nsmartphone of a person with dementia to a backend system. The backend system\nmust be able to cope with the high throughput data and carry out possibly heavy\ncomputations for the detection of anomalous behavior via artificial\nintelligence techniques. This sets certain performance and architectural\nrequirements on the design of the backend. In the paper, we discuss our design and implementation choices for the\nbackend of SOD that involve microservices and serverless services to achieve\nefficiency and scalability. We give evidence of the achieved goals by deploying\nthe SOD backend on a public cloud and measuring the performance on simulated\nload tests.\n",
      "authors": [
        "Andersen, Nicklas Sindlev",
        "Chiarandini, Marco",
        "Mauro, Jacopo"
      ],
      "categories": {},
      "citations": null,
      "comments": null,
      "databases": [
        "arXiv"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": null,
      "publication_date": "2021-03-11",
      "selected": true,
      "title": "Wandering and getting lost: the architecture of an app activating local communities on dementia issues",
      "urls": [
        "https://arxiv.org/pdf/2103.06777",
        "http://arxiv.org/pdf/2103.06777v1",
        "http://arxiv.org/abs/2103.06777v1"
      ]
    },
    {
      "abstract": "Recently serverless cloud computing which was proposed by Amazon in 2015 is getting more favored by developers because of its charging model of pay-by-usage, applicability for fine-grained services and transparency of the servers to developers. Although a lot of study has proved that the performance and cost of serverless platform is more ideal than the traditional cloud computing service, the new metering model of serverless which depends on execution time, usage count and memory footprint is still unfamiliar to most developers and researchers. In this paper, we firstly make an introduction to the new metering model and the advantages of serverless over traditional cloud services. Then according to the cost affecting factors, we make a comprehensive survey of some constraints that mainly impact the cost of serverless and related methods to reduce cost in three levels - function level, container level and cloud platform level. Based on the analysis, we also propose some directions worthy of in-depth study in the future. \u00c2\u00a9 Published under licence by IOP Publishing Ltd.",
      "authors": [
        "Li, Z.",
        "Tan, Y.",
        "Li, B.",
        "Zhang, J.",
        "Wang, X."
      ],
      "categories": {},
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1088/1742-6596/1802/3/032070",
      "keywords": [
        "cost optimization",
        "cloud computing",
        "FaaS",
        "serverless"
      ],
      "number_of_pages": null,
      "pages": null,
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": 0.5,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "17551307",
        "publisher": "IOP Publishing Ltd.",
        "sjr": 0.179,
        "snip": 0.436,
        "subject_areas": [
          "Environmental Science (all)",
          "Earth and Planetary Sciences (all)",
          "Physics and Astronomy (all)"
        ],
        "title": "IOP Conference Series: Earth and Environmental Science"
      },
      "publication_date": "2021-03-09",
      "selected": true,
      "title": "A Survey of Cost Optimization in Serverless Cloud Computing",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85102897376&origin=inward"
      ]
    },
    {
      "abstract": " Machine learning (ML) is an important part of modern data science\napplications. Data scientists today have to manage the end-to-end ML life cycle\nthat includes both model training and model serving, the latter of which is\nessential, as it makes their works available to end-users. Systems for model\nserving require high performance, low cost, and ease of management. Cloud\nproviders are already offering model serving options, including managed\nservices and self-rented servers. Recently, serverless computing, whose\nadvantages include high elasticity and fine-grained cost model, brings another\npossibility for model serving. In this paper, we study the viability of serverless as a mainstream model\nserving platform for data science applications. We conduct a comprehensive\nevaluation of the performance and cost of serverless against other model\nserving systems on two clouds: Amazon Web Service (AWS) and Google Cloud\nPlatform (GCP). We find that serverless outperforms many cloud-based\nalternatives with respect to cost and performance. More interestingly, under\nsome circumstances, it can even outperform GPU-based systems for both average\nlatency and cost. These results are different from previous works' claim that\nserverless is not suitable for model serving, and are contrary to the\nconventional wisdom that GPU-based systems are better for ML workloads than\nCPU-based systems. Other findings include a large gap in cold start time\nbetween AWS and GCP serverless functions, and serverless' low sensitivity to\nchanges in workloads or models. Our evaluation results indicate that serverless\nis a viable option for model serving. Finally, we present several practical\nrecommendations for data scientists on how to use serverless for scalable and\ncost-effective model serving.\n",
      "authors": [
        "Wu, Yuncheng",
        "Dinh, Tien Tuan Anh",
        "Hu, Guoyu",
        "Zhang, Meihui",
        "Chee, Yeow Meng",
        "Ooi, Beng Chin"
      ],
      "categories": {},
      "citations": null,
      "comments": "10 pages",
      "databases": [
        "arXiv"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": null,
      "publication_date": "2021-03-04",
      "selected": true,
      "title": "Serverless Model Serving for Data Science",
      "urls": [
        "http://arxiv.org/pdf/2103.02958v1",
        "http://arxiv.org/abs/2103.02958v1",
        "https://arxiv.org/pdf/2103.02958"
      ]
    },
    {
      "abstract": "Fish Farming has been transforming through various technological revolutions in recent years, the Internet of Things (IoT) provides very significant technological innovations on farming by creating a new paradigm. This paper presents a water quality monitoring system with automatic correction four types of water quality parameters the parameters are including temperature, potential hydrogen (pH) level, turbidity, and dissolved oxygen the system uses sensors, micro controllers, and a mobile application for acquiring and monitoring data the notification will be sent to user when those parameters are above or below the standard values the Arduino Nano is used as controller unit to read the analog values from the sensors. Serverless IoTs is created using Firebase Realtime Database (RTDB) and ESP8266 the experiment has been conducted at Faculty of Fisheries Technology and Aquatic Resources, Maejo University. \u00c2\u00a9 2021 IEEE.",
      "authors": [
        "Jomsuda Duangwongsa",
        "Thepparath Ungsethaphand",
        "Pradchayaporn Akaboot",
        "Supakit Khamjai",
        "Sayan Unankard"
      ],
      "categories": {},
      "citations": 0,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/ECTIDAMTNCON51128.2021.9425744",
      "keywords": [
        "Aquaculture",
        "Water Quality Monitoring",
        "Mobile Application",
        "Serverless IoTs"
      ],
      "number_of_pages": 5,
      "pages": "9-13",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-6654-4691-4",
        "issn": null,
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "2021 Joint 6th International Conference on Digital Arts, Media and Technology with 4th ECTI Northern Section Conference on Electrical, Electronics, Computer and Telecommunication Engineering, ECTI DAMT and NCON 2021"
      },
      "publication_date": "2021-03-03",
      "selected": true,
      "title": "Real-time Water Quality Monitoring and Notification System for Aquaculture",
      "urls": [
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9425744",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85106559168&origin=inward"
      ]
    },
    {
      "abstract": " In High Energy Physics facilities that provide High Performance Computing\nenvironments provide an opportunity to efficiently perform the statistical\ninference required for analysis of data from the Large Hadron Collider, but can\npose problems with orchestration and efficient scheduling. The compute\narchitectures at these facilities do not easily support the Python compute\nmodel, and the configuration scheduling of batch jobs for physics often\nrequires expertise in multiple job scheduling services. The combination of the\npure-Python libraries pyhf and funcX reduces the common problem in HEP analyses\nof performing statistical inference with binned models, that would\ntraditionally take multiple hours and bespoke scheduling, to an on-demand\n(fitting) \"function as a service\" that can scalably execute across workers in\njust a few minutes, offering reduced time to insight and inference. We\ndemonstrate execution of a scalable workflow using funcX to simultaneously fit\n125 signal hypotheses from a published ATLAS search for new physics using pyhf\nwith a wall time of under 3 minutes. We additionally show performance\ncomparisons for other physics analyses with openly published probability models\nand argue for a blueprint of fitting as a service systems at HPC centers.\n",
      "authors": [
        "Feickert, Matthew",
        "Heinrich, Lukas",
        "Stark, Giordon",
        "Galewsky, Ben"
      ],
      "categories": {},
      "citations": null,
      "comments": "9 pages, 1 figure, 2 listings, 1 table, submitted to the 25th\n  International Conference on Computing in High Energy & Nuclear Physics",
      "databases": [
        "arXiv"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": null,
      "publication_date": "2021-03-03",
      "selected": true,
      "title": "Distributed statistical inference with pyhf enabled through funcX",
      "urls": [
        "http://arxiv.org/pdf/2103.02182v1",
        "http://arxiv.org/abs/2103.02182v1",
        "https://arxiv.org/pdf/2103.02182"
      ]
    },
    {
      "abstract": "Online Social Networks (OSNs) attracted millions of users in the world. OSNs made adversaries more passionate to create malware variants to subvert the cyber defence of OSNs. Through various threat vectors, adversaries persuasively lure OSN users into installing malware on their devices at an enormous scale. One of the most horrendous forms of named malware is OSNs' botnets that conceal CC information using OSNs' accounts of unaware users. In this paper, we present GITC (Ghost In The Cloud), which uses Telegram as a CC server to communicate with threat actors and access targets' information in an undetectable way. Furthermore, we present our implementation of GITC. We show how GITC uses the encrypted telegram Application Programming Interface (API) to cover up records of the adversary connections to the target, and we discuss why current intrusion detection systems cannot detect GITC. In the end, we run some sets of experiments that confirm the feasibility of GITC. \u00c2\u00a9 2021 IEEE.",
      "authors": [
        "Ghasemshirazi, S.",
        "Shirvani, G."
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1109/CSICC52343.2021.9420590",
      "keywords": [
        "CC",
        "Malware",
        "Serverless",
        "undetectable",
        "Telegram",
        "threat",
        "OSNs",
        "Botnet"
      ],
      "number_of_pages": null,
      "pages": null,
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781665412414",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "26th International Computer Conference, Computer Society of Iran, CSICC 2021"
      },
      "publication_date": "2021-03-03",
      "selected": false,
      "title": "GITCBot: A Novel Approach for the Next Generation of CC Malware",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85106203293&origin=inward"
      ]
    },
    {
      "abstract": "The emergence of fog and edge computing has complemented cloud computing in the design of pervasive, computing-intensive applications. The proximity of fog resources to data sources has contributed to minimizing network operating expenditure and has permitted latency-aware processing. Furthermore, novel approaches such as serverless computing change the structure of applications and challenge the monopoly of traditional Virtual Machine (VM)-based applications. However, the efforts directed to the modeling of cloud applications have not yet evolved to exploit these breakthroughs and handle the whole application lifecycle efficiently. In this work, we present a set of Topology and Orchestration Specification for Cloud Applications (TOSCA) extensions to model applications relying on any combination of the aforementioned technologies. Our approach features a design-time \u201ctype-level\u201d flavor and a run time \u201cinstance-level\u201d flavor. The introduction of semantic enhancements and the use of two TOSCA flavors enables the optimization of a candidate topology before its deployment. The optimization modeling is achieved using a set of constraints, requirements, and criteria independent from the underlying hosting infrastructure (i.e., clouds, multi-clouds, edge devices). Furthermore, we discuss the advantages of such an approach in comparison to other notable cloud application deployment approaches and provide directions for future research.",
      "authors": [
        "Tsagkaropoulos, Andreas",
        "Verginadis, Yiannis",
        "Compasti\u00e9, Maxime",
        "Apostolou, Dimitris",
        "Mentzas, Gregoris"
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.3390/electronics10060737",
      "keywords": [
        "TOSCA",
        "Fog computing",
        "Cloud computing",
        "Cloud applications",
        "Model-driven engineering",
        "Function-as-a-service"
      ],
      "number_of_pages": 50,
      "pages": "1-50",
      "publication": {
        "category": "Journal",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": null,
        "publisher": "Multidisciplinary Digital Publishing Institute",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Electronics (Switzerland)"
      },
      "publication_date": "2021-03-02",
      "selected": false,
      "title": "Extending TOSCA for Edge and Fog Deployment Support",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85102693785&origin=inward",
        "https://www.mdpi.com/2079-9292/10/6/737/pdf"
      ]
    },
    {
      "abstract": "Emerging fine-grained cloud resource billing creates incentives to review the software execution footprint in virtual environments. Operators can use novel virtual execution environments with ever lower overhead: from virtual machines to containers, to unikernels and serverless functions. However, the execution footprint of security mechanisms in virtualized deployments has either remained the same or even increased. In this demo, we present a novel key provisioning mechanism for cloud networks that unlocks scalable use of symmetric keys and significantly reduces the related computational load on network endpoints. \u00c2\u00a9 2021 IEEE.",
      "authors": [
        "Nicolae Paladi",
        "Marco Tiloca",
        "Pegah Nikbakht Bideh",
        "Martin Hell"
      ],
      "categories": {},
      "citations": 0,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/ICIN51074.2021.9385528",
      "keywords": [],
      "number_of_pages": 3,
      "pages": "80-82",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-7281-7706-9",
        "issn": "2162-3414",
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "2021 24th Conference on Innovation in Clouds, Internet and Networks and Workshops, ICIN 2021"
      },
      "publication_date": "2021-03-01",
      "selected": true,
      "title": "On-demand Key Distribution for Cloud Networks",
      "urls": [
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9385528",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85104189111&origin=inward"
      ]
    },
    {
      "abstract": "Function-as-a-Service (FaaS) and serverless applications have proliferated significantly in recent years because of their high scalability, ease of resource management, and pay-as-you-go pricing model. However, cloud users are facing practical problems when they migrate their applications to the serverless pattern, which are the lack of analytical performance and billing model and the trade-off between limited budget and the desired quality of service of serverless applications. In this article, we fill this gap by proposing and answering two research questions regarding the prediction and optimization of performance and cost of serverless applications. We propose a new construct to formally define a serverless application workflow, and then implement analytical models to predict the average end-to-end response time and the cost of the workflow. Consequently, we propose a heuristic algorithm named Probability Refined Critical Path Greedy algorithm (PRCP) with four greedy strategies to answer two fundamental optimization questions regarding the performance and the cost. We extensively evaluate the proposed models by conducting experimentation on AWS Lambda and Step Functions. Our analytical models can predict the performance and cost of serverless applications with more than 98 percent accuracy. The PRCP algorithms can achieve the optimal configurations of serverless applications with 97 percent accuracy on average. \u00c2\u00a9 1990-2012 IEEE.",
      "authors": [
        "Changyuan Lin",
        "Hamzeh Khazaei"
      ],
      "categories": {},
      "citations": 2,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/TPDS.2020.3028841",
      "keywords": [
        "Cost Optimization",
        "FAA",
        "Time factors",
        "Cloud computing",
        "Analytical models",
        "Cost Modeling",
        "Performance Modeling",
        "Cloud Serverless Computing",
        "Optimization",
        "Performance Optimization",
        "Computational modeling"
      ],
      "number_of_pages": 18,
      "pages": "615-632",
      "publication": {
        "category": "Journal",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "2161-9883",
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "IEEE Transactions on Parallel and Distributed Systems"
      },
      "publication_date": "2021-03-01",
      "selected": true,
      "title": "Modeling and Optimization of Performance and Cost of Serverless Applications",
      "urls": [
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9214428",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85094319598&origin=inward",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85092941543&origin=inward"
      ]
    },
    {
      "abstract": "The exceedingly exponential-growing data rate highlighted numerous requirements and several approaches have been released to maximize the added-value of cloud and edge resources. Whereas data scientists utilize algorithmic models in order to transform datasets and extract actionable knowledge, a key challenge is oriented towards abstracting the underline layers: the ones enabling the management of infrastructure resources and the ones responsible to provide frameworks and components as services. In this sense, the serverless approach features as the novel paradigm of new cloud-related technology, enabling the agile implementation of applications and services. The concept of Function as a Service (FaaS) is introduced as a revolutionary model that offers the means to exploit serverless offerings. Developers have the potential to design their applications with the necessary scalability in the form of nanoservices without addressing themselves the way the infrastructure resources should be deployed and managed. By abstracting away the underlying hardware allocations, the data scientist concentrates on the business logic and critical problems of Machine Learning (ML) algorithms. This paper introduces an approach to realize the provision of ML Functions as a Service (i.e., ML-FaaS), by exploiting the Apache OpenWhisk event-driven, distributed serverless platform. The presented approach tackles also composite services that consist of single ones i.e., workflows of ML tasks including processes such as aggregation, cleaning, feature extraction, and analytics; thus, reflecting the complete data path. We also illustrate the operation of the approach mentioned above and assess its performance and effectiveness exploiting a holistic, end-toend anti-fraud detection machine learning pipeline. \u00c2\u00a9 2021 IEEE.",
      "authors": [
        "Efterpi Paraskevoulakou",
        "Dimosthenis Kyriazis"
      ],
      "categories": {},
      "citations": 0,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/ICIN51074.2021.9385525",
      "keywords": [
        "cloud computing",
        "function as a service",
        "artificial intelligence",
        "serverless",
        "machine learning",
        "edge computing"
      ],
      "number_of_pages": 8,
      "pages": "110-117",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-7281-7706-9",
        "issn": "2162-3414",
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "2021 24th Conference on Innovation in Clouds, Internet and Networks and Workshops, ICIN 2021"
      },
      "publication_date": "2021-03-01",
      "selected": true,
      "title": "Leveraging the serverless paradigm for realizing machine learning pipelines across the edge-cloud continuum",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85104189395&origin=inward",
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9385525"
      ]
    },
    {
      "abstract": "The XPRIZE Foundation designs and operates multi-million-dollar, global competitions to incentivize the development of technological breakthroughs that accelerate humanity toward a better future. To combat the COVID-19 pandemic, the foundation coordinated with several organizations to make datasets about different facets of the disease available and to provide the computational resources needed to analyze those datasets. This paper is a case study of the requirements, design, and implementation of the XPRIZE Data Collaborative, which is a Cloud-based infrastructure that enables the XPRIZE to meet its COVID-19 mission and host future data-centric competitions. We examine how a Cloud Native Application can use an unexpected variety of Cloud technologies, ranging from containers, serverless computing, to even older ones such as Virtual Machines. We also search and document the effects that the pandemic had on application development in the Cloud. We include our experiences of having users successfully exercise the Data Collaborative, detailing the challenges encountered and areas for improvement and future work.",
      "authors": [
        "Cappellari, Max",
        "Belstner, John",
        "Rodriguez, Bryan",
        "Sedayao, Jeff"
      ],
      "categories": {},
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.3390/fi13030061",
      "keywords": [
        "COVID-19",
        "Virtual machines",
        "Serverless",
        "Containers",
        "Analytics",
        "Software defined infrastructure",
        "Cloud"
      ],
      "number_of_pages": 13,
      "pages": "1-13",
      "publication": {
        "category": "Journal",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": null,
        "publisher": "Multidisciplinary Digital Publishing Institute",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Future Internet"
      },
      "publication_date": "2021-03-01",
      "selected": true,
      "title": "A Cloud-Based Data Collaborative to Combat the COVID-19 Pandemic and to Solve Major Technology Challenges",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85102585866&origin=inward",
        "https://www.mdpi.com/1999-5903/13/3/61/pdf"
      ]
    },
    {
      "abstract": "Nowadays, the balance between incoming precipitation and stream or spring discharge is a challenging aspect in many scientific disciplines related to water management. In this regard, although advances in the methodologies for water balance calculation concerning each component of the water cycle have been achieved, the Thornthwaite\u2013Mather method remains one of the most used, especially for hydrogeological purposes. In fact, in contrast to physical-based models, which require many input parameters, the Thornthwaite\u2013Mather method is a simple, empirical, data-driven procedure in which the error associated with its use is smaller than that associated with the measurement of input data. The disadvantage of this method is that elaboration times can be excessively long if a classical MS Excel file is used for a large amount of data. Although many authors have attempted to automatize the procedure using simple algorithms or graphical user interfaces, some bugs have been detected. For these reasons, we propose a WebApp for monthly water balance calculation, called WaterbalANce. WaterbalANce was written in Python and is driven by a serverless computing approach. Two respective European watersheds are selected and presented to demonstrate the application of this method.",
      "authors": [
        "Mammoliti, Elisa",
        "Fronzi, Davide",
        "Mancini, Adriano",
        "Valigi, Daniela",
        "Tazioli, Alberto"
      ],
      "categories": {},
      "citations": 1,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.3390/hydrology8010034",
      "keywords": [
        "Python",
        "Serverless computing approach",
        "Water balance",
        "Watershed hydrology",
        "Thornthwaite\u00e2\u0080\u0093mather method"
      ],
      "number_of_pages": 14,
      "pages": "1-14",
      "publication": {
        "category": "Journal",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": null,
        "publisher": "Multidisciplinary Digital Publishing Institute",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Hydrology"
      },
      "publication_date": "2021-03-01",
      "selected": true,
      "title": "WaterbalANce, a WebApp for Thornthwaite\u2013Mather Water Balance Computation: Comparison of Applications in Two European Watersheds",
      "urls": [
        "https://www.mdpi.com/2306-5338/8/1/34/pdf",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85102421781&origin=inward"
      ]
    },
    {
      "abstract": "The employment of mobile readers (or mobile phone collaborated with a Radio frequency identification (RFID) reader) opens a novel application for RFID technology. In particular, an RFID tag search system has been designed to find a particular tag in a group of tags using a mobile reader. Unfortunately, privacy infringement and availability issues in the search system have not been adequately addressed to date. In this paper, we propose a novel RFID tag search protocol that will enhance mobile reader user privacy while being able to operate under conditions of unstable connection to a central server. First, the proposed protocol preserves the privacy of mobile reader users. The privacy of the mobile reader user is at risk because the signal strength emitted from a mobile reader is much stronger than that from the tag, exposing the location of the mobile reader user and thus compromising the user\u2019s privacy. Thus far, such privacy issues have been overlooked. The second issue is presented because of wireless connections that are either unreliable or too remote, causing a mobile reader to disconnect from the central server. The proposed protocol enables serverless RFID tag searches with passive tags, which obtain operating power from the mobile reader. In unstable environments, the protocol can successfully locate specific tags without any server.",
      "authors": [
        "Chun, Ji  Young",
        "Noh, Geontae"
      ],
      "categories": {},
      "citations": 1,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.3390/electronics10050599",
      "keywords": [
        "Security",
        "Mobile reader",
        "Privacy",
        "RFID tag search system"
      ],
      "number_of_pages": 13,
      "pages": "1-13",
      "publication": {
        "category": "Journal",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": null,
        "publisher": "Multidisciplinary Digital Publishing Institute",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Electronics (Switzerland)"
      },
      "publication_date": "2021-03-01",
      "selected": true,
      "title": "Privacy-Preserving RFID-Based Search System",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85101909674&origin=inward",
        "https://www.mdpi.com/2079-9292/10/5/599/pdf"
      ]
    },
    {
      "abstract": " Serverless is an increasingly popular choice for service architects because\nit can provide elasticity and load-based billing with minimal developer effort.\nA common and important use case is to compose serverless functions and cloud\nstorage into reliable workflows. However, existing solutions for authoring\nworkflows provide a rudimentary experience compared to writing standard code in\na modern programming language. Furthermore, executing workflows reliably in an\nelastic serverless environment poses significant performance challenges. To address these, we propose Durable Functions, a programming model for\nserverless workflows, and Netherite, a distributed execution engine to execute\nthem efficiently. Workflows in Durable Functions are expressed as task-parallel\ncode in a host language of choice. Internally, the workflows are translated to\nfine-grained stateful communicating processes, which are load-balanced over an\nelastic cluster. The main challenge is to minimize the cost of reliably\npersisting progress to storage while supporting elastic scale. Netherite solves\nthis by introducing partitioning, recovery logs, asynchronous snapshots, and\nspeculative communication. Our results show that Durable Functions simplifies the expression of complex\nworkflows, and that Netherite achieves lower latency and higher throughput than\nthe prevailing approaches for serverless workflows in Azure and AWS, by orders\nof magnitude in some cases.\n",
      "authors": [
        "Burckhardt, Sebastian",
        "Gillum, Chris",
        "Justo, David",
        "Kallas, Konstantinos",
        "McMahon, Connor",
        "Meiklejohn, Christopher S."
      ],
      "categories": {},
      "citations": null,
      "comments": "This paper was written in September 2020, and the content has not\n  been edited after October 10, 2020",
      "databases": [
        "arXiv"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": null,
      "publication_date": "2021-02-26",
      "selected": true,
      "title": "Serverless Workflows with Durable Functions and Netherite",
      "urls": [
        "http://arxiv.org/pdf/2103.00033v1",
        "https://arxiv.org/pdf/2103.00033",
        "http://arxiv.org/abs/2103.00033v1"
      ]
    },
    {
      "abstract": "In this paper, we present a hybrid model to perform the training and testing of prediction model with online streaming data. Prediction of online streaming data is a time critical task. Huge volume of data that is being generated online need to be ingested to a prediction model and to be used to train and test the prediction model dynamically which improves the learning rate. The existing approaches for dynamic training and testing use the local infrastructure or virtual machines from the cloud infrastructure to increase the learning rate of the prediction model with streaming data. Recently many applications prefer serverless cloud infrastructure than virtual machines. However, using the serverless infrastructure for the entire prediction process will have time and space tradeoffs due to its autonomic feature. Hence in this paper we propose a hybrid approach that uses the three different environments such as the local infrastructure, virtual machine and serverless cloud for different stages. A novel approach to select the suitable environment to train and test the LSTM based air quality prediction model with stream data is proposed with increased learning rate and reduced resource utilization. \u00c2\u00a9 Published under licence by IOP Publishing Ltd.",
      "authors": [
        "Kanagaraj, K.",
        "Geetha, S."
      ],
      "categories": {},
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1088/1742-6596/1767/1/012016",
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": 0.7,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "17426588",
        "publisher": "IOP Publishing Ltd.",
        "sjr": 0.21,
        "snip": 0.464,
        "subject_areas": [
          "Physics and Astronomy (all)"
        ],
        "title": "Journal of Physics: Conference Series"
      },
      "publication_date": "2021-02-19",
      "selected": true,
      "title": "A Hybrid Framework for Effective Prediction of Online Streaming Data",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85101756294&origin=inward"
      ]
    },
    {
      "abstract": " Developing accurate and extendable performance models for serverless\nplatforms, aka Function-as-a-Service (FaaS) platforms, is a very challenging\ntask. Also, implementation and experimentation on real serverless platforms is\nboth costly and time-consuming. However, at the moment, there is no\ncomprehensive simulation tool or framework to be used instead of the real\nplatform. As a result, in this paper, we fill this gap by proposing a\nsimulation platform, called SimFaaS, which assists serverless application\ndevelopers to develop optimized Function-as-a-Service applications in terms of\ncost and performance. On the other hand, SimFaaS can be leveraged by FaaS\nproviders to tailor their platforms to be workload-aware so that they can\nincrease profit and quality of service at the same time. Also, serverless\nplatform providers can evaluate new designs, implementations, and deployments\non SimFaaS in a timely and cost-efficient manner. SimFaaS is open-source, well-documented, and publicly available, making it\neasily usable and extendable to incorporate more use case scenarios in the\nfuture. Besides, it provides performance engineers with a set of tools that can\ncalculate several characteristics of serverless platform internal states, which\nis otherwise hard (mostly impossible) to extract from real platforms. We show\nhow SimFaaS facilitates the prediction of essential performance metrics such as\naverage response time, probability of cold start, and the average number of\ninstances reflecting the infrastructure cost incurred by the serverless\ncomputing provider. We evaluate the accuracy and applicability of SimFaaS by\ncomparing the prediction results with real-world traces from Amazon AWS Lambda.\n",
      "authors": [
        "Mahmoudi, Nima",
        "Khazaei, Hamzeh"
      ],
      "categories": {},
      "citations": null,
      "comments": "to be published in \"The 11th IEEE International Conference on Cloud\n  Computing and Services Science (CLOSER 2021)\"",
      "databases": [
        "arXiv"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": null,
      "publication_date": "2021-02-17",
      "selected": true,
      "title": "SimFaaS: A Performance Simulator for Serverless Computing Platforms",
      "urls": [
        "https://arxiv.org/pdf/2102.08904",
        "http://arxiv.org/pdf/2102.08904v1",
        "http://arxiv.org/abs/2102.08904v1"
      ]
    },
    {
      "abstract": "The GI (Govt. of India) cloud started in 2014 is built on the state of art technologies and rich architecture with the nationwide network infrastructure and Data Centres located across the country on National and State data centres. This paper investigates, study and analyze the cloud architecture of Govt. of India and suggests modifications that need to be adapted for sustainable development as per the global changing scenario and fulfill the future needs with improved service delivery, increased throughput, and increased efficiency to provide secured cloud services and to minimize the gap between the cloud service providers and end-users. The cloud services are designed for centralized storage and processing. The cloud data centers are generally located thousands of miles away from the end-users where the data is actually generated. The physical distance between the cloud infrastructure and the data source at edge level end-users produces latency for the real-time processing of the huge amount of data generated at the source level. In recent years the automation scenario is changing globally with various emerging technologies such as the Internet of Things (IoT), Wireless Fidelity 6 (Wi-Fi 6), Fifth Generation Mobile Network connectivity (5G), Artificial Intelligence (AI), and Machine Learning, etc. Emerging technologies like IoT, Wi-Fi 6, 5G gives large scope for boundary level computing and generates a very huge amount of data at the data source level produced by the end-users. These technologies require agile real-time processing and analysis of the data at the source level. Edge computing and Fog computing are the distributed architectures that work together, for reduced latency and speedy real-time processing where the data is actually generated by the end-user. According to the new implementation demands, various emerging cloud technologies such as Mobile Cloud Apps, Containers, Serverless, Microservices, Development and Information Technology Operations (DevOps), BlockChain, Fog computing, Edge Computing, and Software-Defined Infrastructure (SDI), etc are proposed for implementation \u00c2\u00a9 2021 IEEE.",
      "authors": [
        "Nitin Vishnu Choudhari",
        "Ashish B. Sasankar"
      ],
      "categories": {},
      "citations": 0,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/ICITIIT51526.2021.9399598",
      "keywords": [
        "VMware Technology Stack",
        "Open Stack-based cloud technology",
        "emerging cloud architectures",
        "GI Cloud Architecture"
      ],
      "number_of_pages": 7,
      "pages": "1-7",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-6654-4646-4",
        "issn": null,
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "2021 International Conference on Innovative Trends in Information Technology, ICITIIT 2021"
      },
      "publication_date": "2021-02-11",
      "selected": true,
      "title": "Architectural Vision of Cloud Computing in the Indian Government",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85104848951&origin=inward",
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9399598"
      ]
    },
    {
      "abstract": "Immersive 3D media is an emerging type of media that captures, encodes and reconstructs the 3D appearance of people and objects, with applications in tele-",
      "authors": [
        "Konstantinos Konstantoudakis",
        "David Breitgand",
        "Alexandros Doumanoglou",
        "Nikolaos Zioulis",
        "Avi Weit",
        "Kyriaki Christaki",
        "Petros Drakoulis",
        "Emmanouil Christakis",
        "Dimitrios Zarpalas",
        "Petros Daras"
      ],
      "categories": {},
      "citations": 0,
      "comments": "32 pages, 12 figures, preprint: to appear in \"Multimedia Tools and\n  Applications: 5G Multimedia Communications\" special issue",
      "databases": [
        "arXiv",
        "Scopus"
      ],
      "doi": "10.1007/s11042-020-10219-7",
      "keywords": [
        "Real-time adaptive streaming",
        "OPEX optimization",
        "Service optimization",
        "Immersive media",
        "5G",
        "Serverless",
        "Function-as-a-Service (FaaS)",
        "Cognitive networking"
      ],
      "number_of_pages": null,
      "pages": null,
      "publication": {
        "category": "Journal",
        "cite_score": 4.6,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "13807501",
        "publisher": "Springer Netherlands",
        "sjr": 0.443,
        "snip": 1.139,
        "subject_areas": [
          "Hardware and Architecture",
          "Computer Networks and Communications",
          "Media Technology",
          "Software"
        ],
        "title": "Multimedia Tools and Applications"
      },
      "publication_date": "2021-02-09",
      "selected": true,
      "title": "Serverless streaming for emerging media: towards 5G network-driven cost optimization",
      "urls": [
        "https://link.springer.com/content/pdf/10.1007/s11042-020-10219-7.pdf",
        "http://arxiv.org/pdf/2102.04910v1",
        "http://dx.doi.org/10.1007/s11042-020-10219-7",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85103218775&origin=inward",
        "http://arxiv.org/abs/2102.04910v1"
      ]
    },
    {
      "abstract": " DNN-based video analytics have empowered many new applications (e.g.,\nautomated retail). Meanwhile, the proliferation of fog devices provides\ndevelopers with more design options to improve performance and save cost. To\nthe best of our knowledge, this paper presents the first serverless system that\ntakes full advantage of the client-fog-cloud synergy to better serve the\nDNN-based video analytics. Specifically, the system aims to achieve two goals:\n1) Provide the optimal analytics results under the constraints of lower\nbandwidth usage and shorter round-trip time (RTT) by judiciously managing the\ncomputational and bandwidth resources deployed in the client, fog, and cloud\nenvironment. 2) Free developers from tedious administration and operation\ntasks, including DNN deployment, cloud and fog's resource management. To this\nend, we implement a holistic cloud-fog system referred to as VPaaS\n(Video-Platform-as-a-Service). VPaaS adopts serverless computing to enable\ndevelopers to build a video analytics pipeline by simply programming a set of\nfunctions (e.g., model inference), which are then orchestrated to process\nvideos through carefully designed modules. To save bandwidth and reduce RTT,\nVPaaS provides a new video streaming protocol that only sends low-quality video\nto the cloud. The state-of-the-art (SOTA) DNNs deployed at the cloud can\nidentify regions of video frames that need further processing at the fog ends.\nAt the fog ends, misidentified labels in these regions can be corrected using a\nlight-weight DNN model. To address the data drift issues, we incorporate\nlimited human feedback into the system to verify the results and adopt\nincremental learning to improve our system continuously. The evaluation\ndemonstrates that VPaaS is superior to several SOTA systems: it maintains high\naccuracy while reducing bandwidth usage by up to 21%, RTT by up to 62.5%, and\ncloud monetary cost by up to 50%.\n",
      "authors": [
        "Zhang, Huaizheng",
        "Shen, Meng",
        "Huang, Yizheng",
        "Wen, Yonggang",
        "Luo, Yong",
        "Gao, Guanyu",
        "Guan, Kyle"
      ],
      "categories": {},
      "citations": null,
      "comments": "11 pages, 16 figures",
      "databases": [
        "arXiv"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": null,
      "publication_date": "2021-02-05",
      "selected": true,
      "title": "A Serverless Cloud-Fog Platform for DNN-Based Video Analytics with Incremental Learning",
      "urls": [
        "https://arxiv.org/pdf/2102.03012",
        "http://arxiv.org/pdf/2102.03012v1",
        "http://arxiv.org/abs/2102.03012v1"
      ]
    },
    {
      "abstract": " Code initialization -- the step of loading code, executing static code,\nfilling caches, and forming re-used connections -- tends to dominate cold-start\ntime in serverless compute systems such as AWS Lambda. Post-initialization\nmemory snapshots, cloned and restored on start, have emerged as a viable\nsolution to this problem, with incremental snapshot and fast restore support in\nVMMs like Firecracker. Saving memory introduces the challenge of managing high-value memory\ncontents, such as cryptographic secrets. Cloning introduces the challenge of\nrestoring the uniqueness of the VMs, to allow them to do unique things like\ngenerate UUIDs, secrets, and nonces. This paper examines solutions to these\nproblems in the every microsecond counts context of serverless cold-start, and\ndiscusses the state-of-the-art of available solutions. We present two new\ninterfaces aimed at solving this problem -- MADV\\_WIPEONSUSPEND and SysGenId --\nand compare them to alternative solutions.\n",
      "authors": [
        "Brooker, Marc",
        "Catangiu, Adrian Costin",
        "Danilov, Mike",
        "Graf, Alexander",
        "MacCarthaigh, Colm",
        "Sandu, Andrei"
      ],
      "categories": {},
      "citations": null,
      "comments": null,
      "databases": [
        "arXiv"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": null,
      "publication_date": "2021-02-04",
      "selected": true,
      "title": "Restoring Uniqueness in MicroVM Snapshots",
      "urls": [
        "http://arxiv.org/pdf/2102.12892v1",
        "http://arxiv.org/abs/2102.12892v1",
        "https://arxiv.org/pdf/2102.12892"
      ]
    },
    {
      "abstract": " The proliferation of camera-enabled devices and large video repositories has\nled to a diverse set of video analytics applications. These applications rely\non video pipelines, represented as DAGs of operations, to transform videos,\nprocess extracted metadata, and answer questions like, \"Is this intersection\ncongested?\" The latency and resource efficiency of pipelines can be optimized\nusing configurable knobs for each operation (e.g., sampling rate, batch size,\nor type of hardware used). However, determining efficient configurations is\nchallenging because (a) the configuration search space is exponentially large,\nand (b) the optimal configuration depends on users' desired latency and cost\ntargets, (c) input video contents may exercise different paths in the DAG and\nproduce a variable amount intermediate results. Existing video analytics and\nprocessing systems leave it to the users to manually configure operations and\nselect hardware resources. We present Llama: a heterogeneous and serverless framework for auto-tuning\nvideo pipelines. Given an end-to-end latency target, Llama optimizes for cost\nefficiency by (a) calculating a latency target for each operation invocation,\nand (b) dynamically running a cost-based optimizer to assign configurations\nacross heterogeneous hardware that best meet the calculated per-invocation\nlatency target. This makes the problem of auto-tuning large video pipelines\ntractable and allows us to handle input-dependent behavior, conditional\nbranches in the DAG, and execution variability. We describe the algorithms in\nLlama and evaluate it on a cloud platform using serverless CPU and GPU\nresources. We show that compared to state-of-the-art cluster and serverless\nvideo analytics and processing systems, Llama achieves 7.8x lower latency and\n16x cost reduction on average.\n",
      "authors": [
        "Romero, Francisco",
        "Zhao, Mark",
        "Yadwadkar, Neeraja J.",
        "Kozyrakis, Christos"
      ],
      "categories": {},
      "citations": null,
      "comments": null,
      "databases": [
        "arXiv"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": null,
      "publication_date": "2021-02-03",
      "selected": true,
      "title": "Llama: A Heterogeneous & Serverless Framework for Auto-Tuning Video Analytics Pipelines",
      "urls": [
        "https://arxiv.org/pdf/2102.01887",
        "http://arxiv.org/abs/2102.01887v2",
        "http://arxiv.org/pdf/2102.01887v2"
      ]
    },
    {
      "abstract": "Serverless computing has rapidly grown following the launch of Amazon's Lambda platform. Function-as-a-Service (FaaS) a key enabler of serverless computing allows an application to be decomposed into simple, standalone functions that are executed on a FaaS platform. The FaaS platform is responsible for deploying and facilitating resources to the functions. Several of today's cloud applications spread over heterogeneous connected computing resources and are highly dynamic in their structure and resource requirements. However, FaaS platforms are limited to homogeneous clusters and homogeneous functions and do not account for the data access behavior of functions before scheduling. We introduce an extension of FaaS to heterogeneous clusters and to support heterogeneous functions through a network of distributed heterogeneous target platforms called Function Delivery Network (FDN). A target platform is a combination of a cluster of homogeneous nodes and a FaaS platform on top of it. FDN provides Function-Delivery-as-a-Service (FDaaS), delivering the function to the right target platform. We showcase the opportunities such as varied target platform's characteristics, possibility of collaborative execution between multiple target platforms, and localization of data that the FDN offers in fulfilling two objectives: Service Level Objective (SLO) requirements and energy efficiency when scheduling functions by evaluating over five distributed target platforms using the FDNInspector, a tool developed by us for benchmarking distributed target platforms. Scheduling functions on an edge target platform in our evaluation reduced the overall energy consumption by 17\u00c3\u0097 without violating the SLO requirements in comparison to scheduling on a high-end target platform. \u00c2\u00a9 2021 The Authors. Software: Practice and Experience published by John Wiley & Sons Ltd.",
      "authors": [
        "Anshul Jindal",
        "Michael Gerndt",
        "Mohak Chadha",
        "Vladimir Podolskiy",
        "Pengfei Chen"
      ],
      "categories": {},
      "citations": 0,
      "comments": "Accepted at Journal of Software: Practice and Experience",
      "databases": [
        "arXiv",
        "Scopus"
      ],
      "doi": "10.1002/spe.2966",
      "keywords": [
        "cloud computing",
        "heterogeneous Faas",
        "high-performance computing",
        "function delivery network",
        "heterogeneous platforms",
        "serverless computing",
        "edge computing",
        "function-as-a-service"
      ],
      "number_of_pages": null,
      "pages": null,
      "publication": {
        "category": "Journal",
        "cite_score": 5.0,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "00380644",
        "publisher": "John Wiley and Sons Ltd",
        "sjr": 0.437,
        "snip": 1.168,
        "subject_areas": [
          "Software"
        ],
        "title": "Software - Practice and Experience"
      },
      "publication_date": "2021-02-03",
      "selected": true,
      "title": "Function Delivery Network: Extending Serverless Computing for Heterogeneous Platforms",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85102366534&origin=inward",
        "http://arxiv.org/abs/2102.02330v1",
        "http://arxiv.org/pdf/2102.02330v1",
        "http://dx.doi.org/10.1002/spe.2966"
      ]
    },
    {
      "abstract": "Serverless computing has introduced scalable event-driven processing in Cloud infrastructures. However, it is not trivial for multimedia processing to benefit from the elastic capabilities featured by serverless applications. To this aim, this paper introduces the evolution of a framework to support the execution of customized runtime environments in AWS Lambda in order to accommodate workloads that do not satisfy its strict computational requirements: increased execution times and the ability to use GPU-based resources. This has been achieved through the integration of AWS Batch, a managed service to deploy virtual elastic clusters for the execution of containerized jobs. In addition, a Functions Definition Language (FDL) is introduced for the description of data-driven workflows of functions. These workflows can simultaneously leverage both AWS Lambda for the highly-scalable execution of short jobs and AWS Batch, for the execution of compute-intensive jobs that can profit from GPU-based computing. To assess the developed open-source framework, we executed a case study for efficient serverless video processing. The workflow automatically generates subtitles based on the audio and applies GPU-based object recognition to the video frames, thus simultaneously harnessing different computing services. This allows for the creation of cost-effective highly-parallel scale-to-zero serverless workflows in AWS.",
      "authors": [
        "Risco, Sebasti\u00e1n",
        "Molt\u00f3, Germ\u00e1n"
      ],
      "categories": {},
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.3390/app11041438",
      "keywords": [
        "Multimedia processing",
        "Workflows",
        "Containers",
        "Cloud computing",
        "Serverless computing",
        "Batch processing"
      ],
      "number_of_pages": 17,
      "pages": "1-17",
      "publication": {
        "category": "Journal",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": null,
        "publisher": "Multidisciplinary Digital Publishing Institute",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Applied Sciences (Switzerland)"
      },
      "publication_date": "2021-02-02",
      "selected": true,
      "title": "GPU-Enabled Serverless Workflows for Efficient Multimedia Processing",
      "urls": [
        "https://www.mdpi.com/2076-3417/11/4/1438/pdf",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85100866671&origin=inward"
      ]
    },
    {
      "abstract": "Serverless computing, especially implemented through Function-as-a-Service (FaaS) platforms, has recently been gaining popularity as an application deployment model in which functions are automatically instantiated when called and scaled when needed. When a warm start deployment mode is used, the FaaS platform gives users the perception of constantly available resources. Conversely, when a cold start mode is used, containers running the application\u2019s modules are automatically destroyed when the application has been executed. The latter can lead to considerable resource and cost savings. In this paper, we explore the suitability of both modes for deploying Internet of Things (IoT) applications considering a low resources testbed comparable to an edge node. We discuss the implementation and the experimental analysis of an IoT serverless platform that includes typical IoT service elements. A performance study in terms of resource consumption and latency is presented for the warm and cold start deployment mode, and implemented using OpenFaaS, a well-known open-source FaaS framework which allows to test a cold start deployment with precise inactivity time setup thanks to its flexibility. This experimental analysis allows to evaluate the aptness of the two deployment modes under different operating conditions: Exploiting OpenFaaS minimum inactivity time setup, we find that the cold start mode can be convenient in order to save edge nodes limited resources, but only if the data transmission period is significantly higher than the time needed to trigger containers shutdown.",
      "authors": [
        "Benedetti, Priscilla",
        "Femminella, Mauro",
        "Reali, Gianluca",
        "Steenhaut, Kris"
      ],
      "categories": {},
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.3390/s21030928",
      "keywords": [
        "IoT",
        "FaaS",
        "Serverless computing",
        "Performance evaluation"
      ],
      "number_of_pages": 20,
      "pages": "1-20",
      "publication": {
        "category": "Journal",
        "cite_score": 5.8,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "14248220",
        "publisher": "Multidisciplinary Digital Publishing Institute (MDPI)",
        "sjr": 0.636,
        "snip": 1.555,
        "subject_areas": [
          "Information Systems",
          "Instrumentation",
          "Atomic and Molecular Physics, and Optics",
          "Electrical and Electronic Engineering",
          "Biochemistry",
          "Analytical Chemistry"
        ],
        "title": "Sensors (Switzerland)"
      },
      "publication_date": "2021-02-01",
      "selected": true,
      "title": "Experimental Analysis of the Application of Serverless Computing to IoT Platforms",
      "urls": [
        "https://www.mdpi.com/1424-8220/21/3/928/pdf",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85100019621&origin=inward"
      ]
    },
    {
      "abstract": "Born from a need for a pure \"pay-per-use\"model and highly scalable platform, the \"Serverless\"paradigm emerged and has the potential to become a dominant way of building cloud applications. Although it was originally designed for cloud environments, Serverless is finding its position in the Edge Computing landscape, aiming to bring computational resources closer to the data source. That is, Serverless is crossing cloud borders to assess its merits in Edge computing, whose principal partner will be the Internet of Things (IoT) applications. This move sounds promising as Serverless brings particular benefits such as eliminating always-on services causing high electricity usage, for instance. However, the community is still hesitant to uptake Serverless Edge Computing because of the cloud-driven design of current Serverless platforms, and distinctive characteristics of edge landscape and IoT applications. In this paper, we evaluate both sides to shed light on the Serverless new territory. Our in-depth analysis promotes a broad vision for bringing Serverless to the Edge Computing. It also issues major challenges for Serverless to be met before entering Edge computing. \u00c2\u00a9 2021 ACM.",
      "authors": [
        "Aslanpour, M.S.",
        "Toosi, A.N.",
        "Cicconetti, C.",
        "Javadi, B.",
        "Sbarski, P.",
        "Taibi, D.",
        "Assuncao, M.",
        "Gill, S.S.",
        "Gaire, R.",
        "Dustdar, S."
      ],
      "categories": {},
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1145/3437378.3444367",
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450389563",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "ACM International Conference Proceeding Series"
      },
      "publication_date": "2021-02-01",
      "selected": true,
      "title": "Serverless Edge Computing: Vision and Challenges",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85100615132&origin=inward"
      ]
    },
    {
      "abstract": "We present improved worker scheduler algorithm and architecture to minimize the scheduling cost and function service response time of FaaS platform. We try to solve the problem of performance degradation of previous scaling-based worker scheduling algorithm due to the explosion of the function invocation requests and the blocking-based communication channel thread with the computation node. To this end, two algorithms including Load-based function worker demand prediction algorithm and adoption of asynchronous communication channel integration and non-blocking allocation method have been developed. Through the performance evaluation of proposed worker scheduling algorithm on FaaS worker scheduler, the proposed worker scheduler achieves speedups as high as 10.1 and 16.8 compared to the baseline Bare-metal Computing nodes with the CPU and GPU devices using the in-house TSL Inferencing application. \u00c2\u00a9 2021 IEEE.",
      "authors": [
        "Kim, Y.",
        "Cha, G."
      ],
      "categories": {},
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1109/ICEIC51217.2021.9369745",
      "keywords": [
        "Serverless",
        "Micro function",
        "Worker",
        "FaaS"
      ],
      "number_of_pages": null,
      "pages": null,
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781728191614",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "2021 International Conference on Electronics, Information, and Communication, ICEIC 2021"
      },
      "publication_date": "2021-01-31",
      "selected": true,
      "title": "Improvement of worker scaling-based scheduling algorithm to efficiently respond to explosion of micro function service requests",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85102967692&origin=inward"
      ]
    },
    {
      "abstract": "warm start cold start Serverless computing, especially implemented through Function-as-a-Service (FaaS) platforms, has recently been gaining popularity as an application deployment model in which functions are automatically instantiated when called and scaled when needed. When a  deployment mode is used, the FaaS platform gives users the perception of constantly available resources. Conversely, when a  mode is used, containers running the application's modules are automatically destroyed when the application has been executed. The latter can lead to considerable resource and cost savings. In this paper, we explore the suitability of both modes for deploying Internet of Things (IoT) applications considering a low resources testbed comparable to an edge node. We discuss the implementation and the experimental analysis of an IoT serverless platform that includes typical IoT service elements. A performance study in terms of resource consumption and latency is presented for the warm and cold start deployment mode, and implemented using OpenFaaS, a well-known open-source FaaS framework which allows to test a cold start deployment with precise inactivity time setup thanks to its flexibility. This experimental analysis allows to evaluate the aptness of the two deployment modes under different operating conditions: Exploiting OpenFaaS minimum inactivity time setup, we find that the cold start mode can be convenient in order to save edge nodes limited resources, but only if the data transmission period is significantly higher than the time needed to trigger containers shutdown.",
      "authors": [
        "Priscilla Benedetti",
        "Mauro Femminella",
        "Gianluca Reali",
        "Kris Steenhaut"
      ],
      "categories": {},
      "citations": null,
      "comments": null,
      "databases": [
        "PubMed"
      ],
      "doi": null,
      "keywords": [
        "N serverless computing",
        "N performance evaluation",
        "N FaaS",
        "N IoT"
      ],
      "number_of_pages": null,
      "pages": null,
      "publication": {
        "category": "Journal",
        "cite_score": 5.8,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "1424-8220",
        "publisher": "Multidisciplinary Digital Publishing Institute (MDPI)",
        "sjr": 0.636,
        "snip": 1.555,
        "subject_areas": [
          "Information Systems",
          "Instrumentation",
          "Atomic and Molecular Physics, and Optics",
          "Electrical and Electronic Engineering",
          "Biochemistry",
          "Analytical Chemistry"
        ],
        "title": "Sensors (Basel, Switzerland)"
      },
      "publication_date": "2021-01-30",
      "selected": true,
      "title": "Experimental Analysis of the Application of Serverless Computing to IoT Platforms.",
      "urls": []
    },
    {
      "abstract": "As more computing shifts to a mobile, spread out model, previous issues ran into by the cloud become more evident. Often many users are not located closely to the cloud, thus causing greater latency to the user. To address this issue, edge computing has been suggested as an alternative to traditional cloud computing model. Edge computing attempts to bring data processing closer by implementing edge locations nearby the user geographically. This allows users to experience lower latency, as well as faster response times for applications. As content can be cached at the edge servers to further improve performance. While edge computing attempts to address the shortfalls of traditional cloud computing, edge computing still requires the end user to manage the application environment. AWS has led the way with their server-less architecture solutions such as AWS Lambda. The goal of server-less web applications is to allow programmers to focus solely on development and leave managing the environment to someone else. This method offers several benefits in price, as you minimize the number of resources you must use. In this paper we aim to compare AWS cloud services in five test cases, the goal being to see which service provides the fastest performance at the best price point. \u00c2\u00a9 2021 IEEE.",
      "authors": [
        "Jacob Koch",
        "Wei Hao"
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/CCWC51732.2021.9376039",
      "keywords": [
        "Edge Computing",
        "Performance",
        "Scalability",
        "Amazon Web Services",
        "Cloud Computing"
      ],
      "number_of_pages": 8,
      "pages": "0542-0549",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-6654-3058-6",
        "issn": null,
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "2021 IEEE 11th Annual Computing and Communication Workshop and Conference, CCWC 2021"
      },
      "publication_date": "2021-01-27",
      "selected": false,
      "title": "An Empirical Study in Edge Computing Using AWS",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85103446887&origin=inward",
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9376039"
      ]
    },
    {
      "abstract": "Sustainable development goals such as food security, high-quality habitat construction, biodiversity conservation, planetary health, and the understanding, modeling, and management of the Earth system urgently require multi-scale, long time series, high-accuracy, and consistent remote sensing observation datasets and mapping products with flexible classification systems to meet user needs. However, due to technical and cost constraints, it is difficult for conventional remote sensing satellites to provide observations with high spatial resolution, high temporal frequency, and high quality at the same time. The existing mapping and inversion schemes are mostly for a single sensor, making it difficult to fully exploit and jointly utilize the information potential of multi-source heterogeneous remote sensing big data, resulting in limited observation periods and resolutions, low spatial and temporal consistency and comparability. Therefore, new technical paradigms are urgently needed in the field of remote sensing. In this paper, based on advanced technologies, including cloud computing, artificial intelligence, virtual constellation, spatio-temporal fusion reconstruction, an intelligent mapping framework is proposed for remote sensing big data. The framework is user-driven and problem-driven, which can significantly improve the current situation that remote sensing data products can hardly meet users' diversified and high-precision surface monitoring needs in agriculture and forestry management, national monitoring, ecological environment protection, disaster prevention and mitigation, urban planning, etc. Under this framework's guidance, we built an online real-time, automated, serverless, end-to-end remote sensing big data production chain and parallel mapping system based on Amazon Web Services (AWS) high-performance, elastic, and scalable distributed computing resources. We produced the first set of 21st century daily Seamless Data Cube (SDC) and seasonal to annual land cover and land use mapping products of China. Integrating Landsat and MODIS satellite as a virtual constellation, through multi-source spatio-temporal data fusion and reconstruction technology, the daily SDC, cloud-free, high-precision reflectance product, is developed. As Analysis Ready Data (ARD), it lays the foundation for high-precision quantitative remote sensing inversion and mapping. Based on SDC, we developed the seasonal to annual mapping product with multiple multi-level land cover and land use classification systems, whose mean annual accuracy exceeds 80%. The main mapping pipeline includes migrating the all-season sample set based on stable classification theory with limited samples, optimizing and ensembling multiple classifiers by Automatic Machine Learning (AutoML) strategies, and using change detection and post-processing techniques to achieve consistency. The two sets of products demonstrate the feasibility and effectiveness of the intelligent remote sensing mapping framework proposed in this paper. We will continue to improve and develop the framework with an open and flexible concept to provide new ideas to promote remote sensing development in China. \u00c2\u00a9 2021, Science Press. All right reserved.",
      "authors": [
        "\u5218\u6db5",
        "\u5bab\u9e4f"
      ],
      "categories": null,
      "citations": 2,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.11834/jrs.20210580",
      "keywords": [
        "\u65e0\u7f1d\u6570\u636e\u7acb\u65b9\u4f53",
        "\u9010\u5b63\u8282\u5236\u56fe",
        "\u4eba\u5de5\u667a\u80fd",
        "\u65f6\u7a7a\u5927\u6570\u636e",
        "\u53d8\u5316\u76d1\u6d4b",
        "\u9010\u65e5\u6570\u636e",
        "\u4e91\u8ba1\u7b97",
        "\u957f\u65f6\u5e8f",
        "\u667a\u6167\u9065\u611f\u5236\u56fe"
      ],
      "number_of_pages": 22,
      "pages": "126-147",
      "publication": {
        "category": "Journal",
        "cite_score": 1.8,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "10074619",
        "publisher": "Science Press",
        "sjr": 0.292,
        "snip": 0.896,
        "subject_areas": [
          "Earth and Planetary Sciences (miscellaneous)",
          "Geography, Planning and Development",
          "Instrumentation"
        ],
        "title": "Yaogan Xuebao/Journal of Remote Sensing"
      },
      "publication_date": "2021-01-25",
      "selected": false,
      "title": "21\u4e16\u7eaa\u9010\u65e5\u65e0\u7f1d\u6570\u636e\u7acb\u65b9\u4f53\u6784\u5efa\u65b9\u6cd5\u53ca\u9010\u5e74\u9010\u5b63\u8282\u571f\u5730\u8986\u76d6\u548c\u571f\u5730\u5229\u7528\u52a8\u6001\u5236\u56fe\u2014\u4e2d\u56fd\u667a\u6167\u9065\u611f\u5236\u56feiMap \uff08China\uff09 1.0",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85102242387&origin=inward"
      ]
    },
    {
      "abstract": "Fog computing is a middle layer in the cloud-IoT model. The additional layer developed to offload the traffic from the cloud by sharing its workload. The offloading of tasks in Fog computing is done by deploying intelligent nodes near the edge of a network to process data locally. The smart nodes are also called Fog nodes, which act as a mini cloud within an area of the network. The Fog network comprises various Fog nodes and a Fog manager which handles their communication and allocates each incoming request to optimal capacity Fog node. The Fog manager at the Fog layer is busier in managing the network than providing the solution to different applications, which should be its primary responsibility. The vast responsibilities list of a Fog manager degrades its efficiency to provide solutions on time. This problem is targeting through this paper, and the proposed work provides a solution through a serverless approach at the Fog layer. \u00c2\u00a9 2021 Institute of Physics Publishing. All rights reserved.",
      "authors": [
        "Kaur, N.",
        "Mittal, A."
      ],
      "categories": {},
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1088/1757-899X/1022/1/012026",
      "keywords": [
        "For Serverless Architecture",
        "Fog Architecture",
        "Serverless Architecture",
        "Fog Computing",
        "Cloud Computing"
      ],
      "number_of_pages": null,
      "pages": null,
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": 0.7,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "17578981",
        "publisher": "IOP Publishing Ltd.",
        "sjr": 0.198,
        "snip": 0.484,
        "subject_areas": [
          "Engineering (all)",
          "Materials Science (all)"
        ],
        "title": "IOP Conference Series: Materials Science and Engineering"
      },
      "publication_date": "2021-01-18",
      "selected": true,
      "title": "Fog computing serverless architecture for real time unpredictable traffic",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85100824551&origin=inward"
      ]
    },
    {
      "abstract": "Serverless computing has seen rapid adoption due to its high scalability and flexible, pay-as-you-go billing model. In serverless, developers structure their services as a collection of functions, sporadically invoked by various events like clicks. High inter-arrival time variability of function invocations motivates the providers to start new function instances upon each invocation, leading to significant cold-start delays that degrade user experience. To reduce cold-start latency, the industry has turned to snapshotting, whereby an image of a fully-booted function is stored on disk, enabling a faster invocation compared to booting a function from scratch. This work introduces vHive, an open-source framework for serverless experimentation with the goal of enabling researchers to study and innovate across the entire serverless stack. Using vHive, we characterize a state-of-the-art snapshot-based serverless infrastructure, based on industry-leading Containerd orchestration framework and Firecracker hypervisor technologies. We find that the execution time of a function started from a snapshot is 95% higher, on average, than when the same function is memory-resident. We show that the high latency is attributable to frequent page faults as the function's state is brought from disk into guest memory one page at a time. Our analysis further reveals that functions access the same stable working set of pages across different invocations of the same function. By leveraging this insight, we build REAP, a light-weight software mechanism for serverless hosts that records functions' stable working set of guest memory pages and proactively prefetches it from disk into memory. Compared to baseline snapshotting, REAP slashes the cold-start delays by 3.7x, on average. \u00c2\u00a9 2021 ACM.",
      "authors": [
        "Dmitrii Ustiugov",
        "Plamen Petrov",
        "Marios Kogias",
        "Edouard Bugnion",
        "Boris Grot"
      ],
      "categories": {},
      "citations": 0,
      "comments": "To appear in ASPLOS 2021",
      "databases": [
        "arXiv",
        "Scopus"
      ],
      "doi": "10.1145/3445814.3446714",
      "keywords": [
        "cloud computing",
        "datacenters",
        "snapshots",
        "virtualization",
        "serverless"
      ],
      "number_of_pages": 14,
      "pages": "559-572",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450383172",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "International Conference on Architectural Support for Programming Languages and Operating Systems - ASPLOS"
      },
      "publication_date": "2021-01-16",
      "selected": true,
      "title": "Benchmarking, Analysis, and Optimization of Serverless Function Snapshots",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85104742254&origin=inward",
        "http://dx.doi.org/10.1145/3445814.3446714",
        "http://arxiv.org/abs/2101.09355v3",
        "http://arxiv.org/pdf/2101.09355v3"
      ]
    },
    {
      "abstract": "This paper explores serverless cloud computing for double machine learning. Being based on repeated cross-fitting, double machine learning is particularly well suited to exploit the high level of parallelism achievable with serverless computing. It allows to get fast on-demand estimations without additional cloud maintenance effort. We provide a prototype Python implementation DoubleML-Serverless for the estimation of double machine learning models with the serverless computing platform AWS Lambda and demonstrate its utility with a case study analyzing estimation times and costs. \u00c2\u00a9 2021 Copyright held by the owner/author(s).",
      "authors": [
        "Malte S. Kurz"
      ],
      "categories": {},
      "citations": 0,
      "comments": null,
      "databases": [
        "arXiv",
        "Scopus"
      ],
      "doi": "10.1145/3447545.3451181",
      "keywords": [
        "Causal Machine Learning",
        "Serverless Computing",
        "Distributed Computing",
        "Machine Learning",
        "Function-as-a-Service (FaaS)",
        "AWS Lambda"
      ],
      "number_of_pages": 7,
      "pages": "27-33",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450383318",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [
          "Learning",
          "Distributed, Parallel, and Cluster Computing",
          "Machine Learning"
        ],
        "title": "In Companion of the ACM/SPEC International Conference on\n  Performance Engineering (ICPE '21), 2021, Association for Computing\n  Machinery, New York, NY, USA, 27-33"
      },
      "publication_date": "2021-01-11",
      "selected": true,
      "title": "Distributed Double Machine Learning with a Serverless Architecture",
      "urls": [
        "http://dx.doi.org/10.1145/3447545.3451181",
        "http://arxiv.org/pdf/2101.04025v2",
        "http://arxiv.org/abs/2101.04025v2",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85104997470&origin=inward"
      ]
    },
    {
      "abstract": "We propose a novel SaaS platform, namely, motch to support the operation of the IoT systems developed by the end-users. The proposed motch consists of three modules to monitor the availability of various IoT devices to enable the end-users to easily operate their own IoT system: 1) survival report realization in various IoT devices, 2) Web front-end, and 3) serverless back-end. Performance evaluation shows that the proposed motch SDK and motch daemon can realize availability monitoring for various IoT devices. In addition, the serverless back-end achieves adequate running costs according to the required computational resource for the motch. \u00c2\u00a9 2021 IEEE.",
      "authors": [
        "Motoki Nagano",
        "Yusuke Arai",
        "Takuya Fujihashi",
        "Takashi Watanabe",
        "Shunsuke Saruwatari"
      ],
      "categories": {},
      "citations": 0,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/ICCE50685.2021.9427662",
      "keywords": [],
      "number_of_pages": 4,
      "pages": "1-4",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-7281-9767-8",
        "issn": "2158-3994",
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Digest of Technical Papers - IEEE International Conference on Consumer Electronics"
      },
      "publication_date": "2021-01-10",
      "selected": true,
      "title": "Design and Implementation of Device Monitoring SaaS for DIY-IoT Systems",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85106038406&origin=inward",
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9427662"
      ]
    },
    {
      "abstract": " Along with the wide-adoption of Serverless Computing, more and more\napplications are developed and deployed on cloud platforms. Major cloud\nproviders present their serverless workflow services to orchestrate serverless\nfunctions, making it possible to perform complex applications effectively. A\ncomprehensive instruction is necessary to help developers understand the pros\nand cons, and make better choices among these serverless workflow services.\nHowever, the characteristics of these serverless workflow services have not\nbeen systematically analyzed. To fill the knowledge gap, we survey four\nmainstream serverless workflow services, investigating their characteristics\nand performance. Specifically, we review their official documents and compare\nthem in terms of seven dimensions including programming model, state\nmanagement, etc. Then, we compare the performance (i.e., execution time of\nfunctions, execution time of workflows, orchestration overhead of workflows)\nunder various experimental settings considering activity complexity and\ndata-flow complexity of workflows, as well as function complexity of serverless\nfunctions. Finally, we discuss and verify the service effectiveness for two\nactual workloads. Our findings could help application developers and serverless\nproviders to improve the development efficiency and user experience.\n",
      "authors": [
        "Wen, Jinfeng",
        "Liu, Yi"
      ],
      "categories": {},
      "citations": null,
      "comments": null,
      "databases": [
        "arXiv"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": null,
      "publication_date": "2021-01-10",
      "selected": true,
      "title": "An Empirical Study on Serverless Workflow Service",
      "urls": [
        "http://arxiv.org/pdf/2101.03513v2",
        "http://arxiv.org/abs/2101.03513v2",
        "https://arxiv.org/pdf/2101.03513"
      ]
    },
    {
      "abstract": " The COVID-19 epidemic has been a significant healthcare challenge in the\nUnited States. According to the Centers for Disease Control and Prevention\n(CDC), COVID-19 infection is transmitted predominately by respiratory droplets\ngenerated when people breathe, talk, cough, or sneeze. Wearing a mask is the\nprimary, effective, and convenient method of blocking 80% of all respiratory\ninfections. Therefore, many face mask detection and monitoring systems have\nbeen developed to provide effective supervision for hospitals, airports,\npublication transportation, sports venues, and retail locations. However, the\ncurrent commercial face mask detection systems are typically bundled with\nspecific software or hardware, impeding public accessibility. In this paper, we\npropose an in-browser serverless edge-computing based face mask detection\nsolution, called Web-based efficient AI recognition of masks (WearMask), which\ncan be deployed on any common devices (e.g., cell phones, tablets, computers)\nthat have internet connections using web browsers, without installing any\nsoftware. The serverless edge-computing design minimizes the extra hardware\ncosts (e.g., specific devices or cloud computing servers). The contribution of\nthe proposed method is to provide a holistic edge-computing framework of\nintegrating (1) deep learning models (YOLO), (2) high-performance neural\nnetwork inference computing framework (NCNN), and (3) a stack-based virtual\nmachine (WebAssembly). For end-users, our web-based solution has advantages of\n(1) serverless edge-computing design with minimal device limitation and privacy\nrisk, (2) installation free deployment, (3) low computing requirements, and (4)\nhigh detection speed. Our WearMask application has been launched with public\naccess at facemask-detection.com.\n",
      "authors": [
        "Wang, Zekun",
        "Wang, Pengwei",
        "Louis, Peter C.",
        "Wheless, Lee E.",
        "Huo, Yuankai"
      ],
      "categories": {},
      "citations": null,
      "comments": null,
      "databases": [
        "arXiv"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": null,
      "publication_date": "2021-01-04",
      "selected": true,
      "title": "WearMask: Fast In-browser Face Mask Detection with Serverless Edge Computing for COVID-19",
      "urls": [
        "http://arxiv.org/abs/2101.00784v1",
        "https://arxiv.org/pdf/2101.00784",
        "http://arxiv.org/pdf/2101.00784v1"
      ]
    },
    {
      "abstract": "Scientific workflows are increasingly important for complex scientific applications. Recently, Function as a Service (FaaS) has emerged as a platform for processing non-interactive tasks. FaaS (such...",
      "authors": [
        "Ali Al-Haboobi",
        "Gabor Kecskemeti"
      ],
      "categories": {},
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1007/978-3-030-71593-9_21",
      "keywords": [
        "Scientific workflows",
        "Serverless architectures",
        "Makespan",
        "Cloud functions"
      ],
      "number_of_pages": 12,
      "pages": "261-272",
      "publication": {
        "category": "Book",
        "cite_score": 1.8,
        "is_potentially_predatory": false,
        "isbn": "9783030715922",
        "issn": "03029743",
        "publisher": "Springer Verlag",
        "sjr": 0.249,
        "snip": 0.628,
        "subject_areas": [
          "Databases",
          "Cryptography and Security",
          "Distributed, Parallel, and Cluster Computing",
          "Theoretical Computer Science",
          "Computer Science (all)"
        ],
        "title": "IFIP International Conference on Distributed Applications and\n  Interoperable Systems, DAIS 2017: Distributed Applications and Interoperable\n  Systems pp 83-98"
      },
      "publication_date": "2021-01-01",
      "selected": true,
      "title": "Improving Existing WMS for Reduced Makespan of Workflows with Lambda",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85103482067&origin=inward",
        "https://link.springer.com/content/pdf/10.1007%2F978-3-030-71593-9_21.pdf"
      ]
    },
    {
      "abstract": "Serverless workflow applications or function choreographies (FCs), which connect serverless functions by data- and control-flow, have gained considerable momentum recently to create more sophisticated applications as part of Function-as-a-Service (FaaS) platforms. Initial experimental analysis of the current support for FCs uncovered important weaknesses, including provider lock-in, and limited support for important data-flow and control-flow constructs. To overcome some of these weaknesses, we introduce the Abstract Function Choreography Language (AFCL) for describing FCs at a high-level of abstraction, which abstracts the function implementations from the developer. AFCL is a YAML-based language that supports a rich set of constructs to express advanced control-flow (e.g. parallelFor loops, parallel sections, dynamic loop iterations counts) and data-flow (e.g multiple input and output parameters of functions, DAG-based data-flow). We introduce data collections which can be distributed to loop iterations and parallel sections that may substantially reduce the delays for function invocations due to reduced data transfers between functions. We also support asynchronous functions to avoid delays due to blocking functions. AFCL supports properties (e.g. expected size of function input data) and constraints (e.g. minimize execution time) for the user to optionally provide hints about the behavior of functions and FCs and to control the optimization by the underlying execution environment. We implemented a prototype AFCL environment that supports AFCL as input language with multiple backends (AWS Lambda and IBM Cloud Functions) thus avoiding provider lock-in which is a common problem in serverless computing. We created two realistic FCs from two different domains and encoded them with AWS Step Functions, IBM Composer and AFCL. Experimental results demonstrate that our current implementation of the AFCL environment substantially outperforms AWS Step Functions and IBM Composer in terms of development effort, economic costs, and makespan. \u00c2\u00a9 2020 The Authors",
      "authors": [
        "Ristov, S.",
        "Pedratscher, S.",
        "Fahringer, T."
      ],
      "categories": {},
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1016/j.future.2020.08.012",
      "keywords": [
        "AWS Step Functions",
        "IBM Composer",
        "Performance",
        "FaaS",
        "Cost"
      ],
      "number_of_pages": 15,
      "pages": "368-382",
      "publication": {
        "category": "Journal",
        "cite_score": 13.3,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "0167739X",
        "publisher": "Elsevier",
        "sjr": 1.262,
        "snip": 2.72,
        "subject_areas": [
          "Hardware and Architecture",
          "Computer Networks and Communications",
          "Software"
        ],
        "title": "Future Generation Computer Systems"
      },
      "publication_date": "2021-01-01",
      "selected": true,
      "title": "AFCL: An Abstract Function Choreography Language for serverless workflow specification",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85090599945&origin=inward"
      ]
    },
    {
      "abstract": "In the recent era to gain speed up, scale-up/down, and for cost-effective features, people are moving toward services provided by AWS or other computing paradigms, (salesforce, etc.) i.e., AWS Lambda...",
      "authors": [
        "Vivek Sharma",
        "Akhilesh Kumar Singh",
        "Manish Raj"
      ],
      "categories": {},
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1007/978-981-15-5258-8_92",
      "keywords": [
        "Gateway",
        "Amazon S3",
        "Amazon Application Programming Interface",
        "Amazon DynamoDB",
        "Amazon Cognito and serverless architecture",
        "Amazon Web Service Lambda"
      ],
      "number_of_pages": 6,
      "pages": "999-1004",
      "publication": {
        "category": "Book",
        "cite_score": 0.8,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "23674512",
        "publisher": "Springer International Publishing AG",
        "sjr": 0.134,
        "snip": 0.204,
        "subject_areas": [
          "Information Systems",
          "Computer Networks and Communications",
          "Electrical and Electronic Engineering",
          "Media Technology",
          "Computer Science Applications"
        ],
        "title": "Lecture Notes on Data Engineering and Communications Technologies"
      },
      "publication_date": "2021-01-01",
      "selected": true,
      "title": "Efficient Deployment of a Web Application in Serverless Environment",
      "urls": [
        "https://link.springer.com/content/pdf/10.1007%2F978-981-15-5258-8_92.pdf",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85090372666&origin=inward"
      ]
    },
    {
      "abstract": "Triangle enumeration is a fundamental task in graph data analysis with many applications. Recently, Park et al. proposed a distributed algorithm, PTE (Pre-partitioned Triangle Enumeration), that,...",
      "authors": [
        "Tengkai Yu",
        "Venkatesh Srinivasan",
        "Alex Thomo"
      ],
      "categories": {},
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1007/978-3-030-57796-4_22",
      "keywords": [],
      "number_of_pages": 12,
      "pages": "226-237",
      "publication": {
        "category": "Book",
        "cite_score": 0.9,
        "is_potentially_predatory": false,
        "isbn": "9783030577957",
        "issn": "21945357",
        "publisher": "Springer Verlag",
        "sjr": 0.184,
        "snip": 0.428,
        "subject_areas": [
          "Control and Systems Engineering",
          "Computer Science (all)"
        ],
        "title": "Workshops of  the International Conference on Advanced Information Networking and Applications"
      },
      "publication_date": "2021-01-01",
      "selected": true,
      "title": "Triangle Enumeration on Massive Graphs Using AWS Lambda Functions",
      "urls": [
        "https://link.springer.com/content/pdf/10.1007%2F978-3-030-57796-4_22.pdf",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85090096329&origin=inward"
      ]
    },
    {
      "abstract": "With the rise of the adoption of microservice architecture due to its agility, scalability, and resiliency for building the cloud-based applications and their deployment using containerization,...",
      "authors": [
        "Anshul Jindal",
        "Michael Gerndt"
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1007/978-3-030-72369-9_8",
      "keywords": [
        "Cloud-native applications",
        "DevOps",
        "Serverless",
        "Cloud computing",
        "Microservices",
        "NoOps"
      ],
      "number_of_pages": 25,
      "pages": "178-202",
      "publication": {
        "category": "Book",
        "cite_score": 0.8,
        "is_potentially_predatory": false,
        "isbn": "9783030719050",
        "issn": "18650929",
        "publisher": "Springer Verlag",
        "sjr": 0.16,
        "snip": 0.32,
        "subject_areas": [
          "Mathematics (all)",
          "Computer Science (all)"
        ],
        "title": "International Conference on Software Process Improvement and Capability Determination"
      },
      "publication_date": "2021-01-01",
      "selected": false,
      "title": "From DevOps to NoOps: Is It Worth It?",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85104736630&origin=inward",
        "https://link.springer.com/content/pdf/10.1007%2F978-3-030-72369-9_8.pdf"
      ]
    },
    {
      "abstract": "The onset of microservices and serverless computer solutions has forced an ever-increasing demand for tools and techniques to establish and maintain the quality of infrastructure code, the blueprint...",
      "authors": [
        "Stefano Dalla Palma",
        "Martin Garriga",
        "Dario Di Nucci",
        "Damian Andrew Tamburri",
        "Willem-Jan Van Den Heuvel"
      ],
      "categories": {},
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1007/978-3-030-71906-7_13",
      "keywords": [
        "DevOps",
        "Software Quality",
        "Machine-Learning for Software Quality",
        "Microservices computing",
        "Serverless computing",
        "DataOps",
        "Infrastructure code"
      ],
      "number_of_pages": 6,
      "pages": "155-160",
      "publication": {
        "category": "Book",
        "cite_score": 0.8,
        "is_potentially_predatory": false,
        "isbn": "9783030719050",
        "issn": "18650929",
        "publisher": "Springer Verlag",
        "sjr": 0.16,
        "snip": 0.32,
        "subject_areas": [
          "Mathematics (all)",
          "Computer Science (all)"
        ],
        "title": "International Conference on Software Process Improvement and Capability Determination"
      },
      "publication_date": "2021-01-01",
      "selected": true,
      "title": "DevOps and Quality Management in Serverless Computing: The RADON Approach",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85103485228&origin=inward",
        "https://link.springer.com/content/pdf/10.1007%2F978-3-030-71906-7_13.pdf"
      ]
    },
    {
      "abstract": "The special issue of IEEE Software, the \u00e2\u0080\u0098Practitioners Digest\u00e2\u0080\u0099 reports on papers about serverless application engineering from Journal of Systems and Software, the 2020 European Conference on Software Architecture, and the 19th International Conference on Middleware. \u00e2\u0080\u0098Function-as-a-Service Performance Evaluation: A Multivocal Literature Review\u00e2\u0080\u0099 by Joel Scheuner and Philipp Leitner describes 112 studies that report the empirical evaluation of the performance of function-as-a-service (FaaS) platforms. FaaS is a form of serverless cloud computing and is de fined as FaaS platform Web Services (AWS) executing event-triggered code snippets. This paper consolidates the results from 61 industrial and 51 academic performance studies and provides actionable recommendations on reproducible FaaS experimentation.",
      "authors": [
        "Carver, J.C.",
        "Penzenstadler, B.",
        "Scheuner, J.",
        "Staron, M."
      ],
      "categories": {},
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1109/MS.2020.3028659",
      "keywords": [],
      "number_of_pages": 3,
      "pages": "123-125",
      "publication": {
        "category": "Journal",
        "cite_score": 6.9,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "07407459",
        "publisher": "IEEE Computer Society",
        "sjr": 0.692,
        "snip": 1.934,
        "subject_areas": [
          "Software"
        ],
        "title": "IEEE Software"
      },
      "publication_date": "2021-01-01",
      "selected": true,
      "title": "(Research) Insights for Serverless Application Engineering",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85098599165&origin=inward"
      ]
    },
    {
      "abstract": "We present an approach to optimally deploy Deep Neural Networks (DNNs) in serverless cloud architectures. A serverless architecture allows running code in response to events, automatically managing the required computing resources. However, these resources have limitations in terms of execution environment (CPU only), cold starts, space, scalability, etc. These limitations hinder the deployment of DNNs, especially considering that fees are charged according to the employed resources and the computation time. Our deployment approach is comprised of multiple decoupled software layers that allow effectively managing multiple processes, such as business logic, data access, and computer vision algorithms that leverage DNN optimization techniques. Experimental results in AWS Lambda reveal its potential to build cost-effective ondemand serverless video surveillance systems. Copyright \u00c2\u00a9 2021 by SCITEPRESS - Science and Technology Publications, Lda. All rights reserved.",
      "authors": [
        "Elordi, U.",
        "Unzueta, L.",
        "Goenetxea, J.",
        "Loyo, E.",
        "Arganda-Carreras, I.",
        "Otaegui, O."
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": null,
      "keywords": [
        "Deep Neural Networks Optimizations",
        "Serverless Computing",
        "Video Surveillance"
      ],
      "number_of_pages": 7,
      "pages": "717-723",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9789897584886",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "VISIGRAPP 2021 - Proceedings of the 16th International Joint Conference on Computer Vision, Imaging and Computer Graphics Theory and Applications"
      },
      "publication_date": "2021-01-01",
      "selected": null,
      "title": "On-demand serverless video surveillance with optimal deployment of deep neural networks",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85103014098&origin=inward"
      ]
    },
    {
      "abstract": "The proceedings contain 18 papers. The special focus in this conference is on Edge Adoption and Migration. The topics include: Towards Resolving Security Smells in Microservice-Based Applications; towards Citizen-Centric Marketplaces for Urban Sensed Data; DevOps and Quality Management in Serverless Computing: The RADON Approach; 5G-CARMEN: Service Continuity in\u00c2 5G-Enabled Edge Clouds; Services Computing for Cyber-Threat Intelligence: The ANITA Approach; Quality Assurance of Heterogeneous Applications: The SODALITE Approach; fogProtect: Protecting Sensitive Data in the Computing Continuum; intelligent Monitoring of Virtualized Services; edge Computing Simulation Platforms: A\u00c2 Technology Survey; platforms for Serverless at the Edge: A Review; formal Modeling and Simulation of Collaborative Intelligent Robots; virtual Machine Placement for Edge and Cloud Computing; Cloud-Edge Microservice Architecture for DNN-based Distributed Multimedia Event Processing; modelling Service-Oriented Systems and\u00c2 Cloud Services with Heraklit; an Evaluation of Frameworks for Microservices Development; mining the Architecture of Microservice-Based Applications from their Kubernetes Deployment.",
      "authors": [],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": {
        "category": "Book",
        "cite_score": 0.8,
        "is_potentially_predatory": false,
        "isbn": "9783030719050",
        "issn": "18650929",
        "publisher": "Springer Verlag",
        "sjr": 0.16,
        "snip": 0.32,
        "subject_areas": [
          "Mathematics (all)",
          "Computer Science (all)"
        ],
        "title": "International Conference on Software Process Improvement and Capability Determination"
      },
      "publication_date": "2021-01-01",
      "selected": null,
      "title": "1st International Workshop on Edge Adoption and Migration, EdgeWays 2020, 16th International Workshop on Engineering Service-Oriented Applications and Cloud Services, WESOACS 2020, ESOCC 2020 PhD Symposium, ESOCC 2020 EU Projects Track which took place at 8th European Conference on Service-Oriented and Cloud Computing, ESOCC 2020",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85103483277&origin=inward"
      ]
    },
    {
      "abstract": "With the increasing amount of data the importance of data analysis in various scientific domains has grown. A large amount of the scientific data has shifted to cloud based storage. The cloud offers storage and computation power. The Cookery framework is a tool developed to build scientific applications using cloud services. In this paper we present the Cookery systems and how they can be used to authenticate and use standard online third party services to easily create data analytic pipelines. Cookery framework is not limited to work with standard web services; it can also integrate and work with the emerging AWS Lambda which is part of a new computing paradigm, collectively, known as serverless computing. The combination of AWS Lambda and Cookery, which makes it possible for users in many scientific domains, who do not have any program experience, to create data processing pipelines using cloud services in a short time.",
      "authors": [
        "Miko\u0142aj Baranowski",
        "Adam Belloum",
        "Reginald Cushing",
        "Onno Valkering"
      ],
      "categories": null,
      "citations": 1,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.31577/CAI_2020_4_678",
      "keywords": [
        "Function-as-a-service (FaaS)",
        "Serverless computing",
        "Domain specific languages (DSL)",
        "AWS Lambda"
      ],
      "number_of_pages": 17,
      "pages": "678-694",
      "publication": {
        "category": "Journal",
        "cite_score": 1.4,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "13359150",
        "publisher": "Slovak Academy of Sciences",
        "sjr": 0.149,
        "snip": 0.396,
        "subject_areas": [
          "Software",
          "Hardware and Architecture",
          "Computer Networks and Communications",
          "Computational Theory and Mathematics"
        ],
        "title": "Computing and Informatics"
      },
      "publication_date": "2021-01-01",
      "selected": null,
      "title": "Cookery: A Framework for Creating Data Processing Pipeline Using Online Services",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85100322164&origin=inward",
        "http://www.cai.sk/ojs/index.php/cai/article/download/2020_4_678/1044"
      ]
    },
    {
      "abstract": "Serverless computing has emerged as a new application design and execution model. The serverless application is decomposed into granular logical functional units that run on small, low cost, and...",
      "authors": [
        "Urmil Bharti",
        "Deepali Bajaj",
        "Anita Goel",
        "S. C. Gupta"
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1007/978-981-33-6977-1_20",
      "keywords": [
        "Apache Bench",
        "Scalability in serverless infrastructure",
        "Apache JMeter",
        "FaaS",
        "Embarrassingly parallel computations",
        "AWS Lambda"
      ],
      "number_of_pages": 14,
      "pages": "247-260",
      "publication": {
        "category": "Book",
        "cite_score": 0.5,
        "is_potentially_predatory": false,
        "isbn": "9789813369764",
        "issn": "18761100",
        "publisher": "Springer Verlag",
        "sjr": 0.134,
        "snip": 0.204,
        "subject_areas": [
          "Industrial and Manufacturing Engineering"
        ],
        "title": "Lecture Notes in Electrical Engineering"
      },
      "publication_date": "2021-01-01",
      "selected": null,
      "title": "A Novel Design Approach Exploiting Data Parallelism in Serverless Infrastructure",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85105920114&origin=inward",
        "https://link.springer.com/content/pdf/10.1007%2F978-981-33-6977-1_20.pdf"
      ]
    },
    {
      "abstract": "The article presents MELODIC/FUNCTIONIZER platform, developed to support serverless deployment. It is a complete cross-cloud, cloud-agnostic deployment platform with advanced, utility-based...",
      "authors": [
        "Oliviu Matei",
        "Katarzyna Materka",
        "Pawe\u0142 Skyscraper",
        "Rudolf Erdei"
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1007/978-3-030-75078-7_54",
      "keywords": [],
      "number_of_pages": 10,
      "pages": "541-550",
      "publication": {
        "category": "Book",
        "cite_score": 0.6,
        "is_potentially_predatory": false,
        "isbn": "9783030750770",
        "issn": "23673370",
        "publisher": "Springer International Publishing AG",
        "sjr": 0.17,
        "snip": 0.797,
        "subject_areas": [
          "Control and Systems Engineering",
          "Computer Networks and Communications",
          "Signal Processing"
        ],
        "title": "Conference on Integrated Computer Technologies in Mechanical Engineering\u2013Synergetic Engineering"
      },
      "publication_date": "2021-01-01",
      "selected": null,
      "title": "Functionizer - A Cloud Agnostic Platform for Serverless Computing",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85106412062&origin=inward",
        "https://link.springer.com/content/pdf/10.1007%2F978-3-030-75078-7_54.pdf"
      ]
    },
    {
      "abstract": "Today human-machine dialogues performed and moderated by chat bots are ubiquitous. Commonly, centralised and server-based chat bot software is used to implement rule-based and intelligent dialogue robots. Furthermore, human networking is not supported. Rule-based chat bots typically implement an interface to a knowledge data base in a more natural way. The dialogue topics are narrowed and static. Intelligent chat bots aim to improve dialogues and conversational quality over time and user experience. In this work, mobile agents are used to implement a distributed, decentralised, serverless dialogue robot network that enables ad-hoc communication between humans and machines (networks) and between human groups via the chat bot network (supporting personalized and mass communication). I.e., the chat bot networks aims to extend the communication and social interaction range of humans, especially in mobile environments, by a distributed knowledge and data base approach. Additionally, the chat bot network is a sensor data acquisition and data aggregator system enabling large-scale crowd-based analytics. A first proof-of-concept demonstrator is shown identifying the challenges arising with self-organising distributed chat bot networks in resource-constrained mobile networks. The novelty of this work is a hybrid chat bot multi-agent architecture enabling scalable distributed and adaptive communicating chat bot networks. \u00c2\u00a9 2021 by SCITEPRESS - Science and Technology Publications, Lda. All rights reserved",
      "authors": [
        "Bosse, S."
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": null,
      "keywords": [
        "Self-organising MAS",
        "Chat bots",
        "Natural language processing",
        "Agent-based computing",
        "Crowd sensing",
        "Human-machine interface"
      ],
      "number_of_pages": 8,
      "pages": "398-405",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9789897584848",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "ICAART 2021 - Proceedings of the 13th International Conference on Agents and Artificial Intelligence"
      },
      "publication_date": "2021-01-01",
      "selected": null,
      "title": "Distributed serverless chat bot networks using mobile agents: A distributed data base model for social networking and data analytics",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85103817262&origin=inward"
      ]
    },
    {
      "abstract": "Fog computing extends multi-cloud computing by enabling services or application functions to be hosted close to their data sources. To take advantage of the capabilities of fog computing, serverless and the function-as-a-service (FaaS) software engineering paradigms allow for the flexible deployment of applications on multi-cloud, fog, and edge resources. This article reviews prominent fog computing frameworks and discusses some of the challenges and requirements of FaaS-enabled applications. Moreover, it proposes a novel framework able to dynamically manage multi-cloud, fog, and edge resources and to deploy data-intensive applications developed using the FaaS paradigm. The proposed framework leverages the FaaS paradigm in a way that improves the average service response time of data-intensive applications by a factor of three regardless of the underlying multi-cloud, fog, and edge resource infrastructure. Copyright \u00c2\u00a9 2021, IGI Global.",
      "authors": [
        "Verginadis, Y.",
        "Apostolou, D.",
        "Taherizadeh, S.",
        "Ledakis, I.",
        "Mentzas, G.",
        "Tsagkaropoulos, A.",
        "Papageorgiou, N.",
        "Paraskevopoulos, F."
      ],
      "categories": null,
      "citations": 1,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.4018/IRMJ.2021010104",
      "keywords": [
        "Multi-Clouds",
        "Edge",
        "Fog Computing",
        "IoT Applications"
      ],
      "number_of_pages": 20,
      "pages": "66-85",
      "publication": {
        "category": "Journal",
        "cite_score": 1.6,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "10401628",
        "publisher": "IGI Publishing",
        "sjr": 0.261,
        "snip": 0.495,
        "subject_areas": [
          "Business and International Management",
          "Library and Information Sciences",
          "Strategy and Management"
        ],
        "title": "Information Resources Management Journal (IRMJ)"
      },
      "publication_date": "2021-01-01",
      "selected": null,
      "title": "PrEstoCloud: A Novel Framework for Data-Intensive Multi-Cloud, Fog, and Edge Function-as-a-Service Applications",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85099880032&origin=inward",
        "https://www.igi-global.com/ViewTitle.aspx?TitleId=270886&isxn=9781799859123"
      ]
    },
    {
      "abstract": "The continuous demand for low latency, high reliability, and context-aware content has pushed the existing computational models to their limit. The cloud with its infinite resources can accommodate...",
      "authors": [
        "Nabil El Ioini",
        "David H\u00e4stbacka",
        "Claus Pahl",
        "Davide Taibi"
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1007/978-3-030-71906-7_3",
      "keywords": [
        "Technology review",
        "Serverless",
        "FaaS",
        "Edge computing",
        "Function-as-a-Service"
      ],
      "number_of_pages": 12,
      "pages": "29-40",
      "publication": {
        "category": "Book",
        "cite_score": 0.8,
        "is_potentially_predatory": false,
        "isbn": "9783030719050",
        "issn": "18650929",
        "publisher": "Springer Verlag",
        "sjr": 0.16,
        "snip": 0.32,
        "subject_areas": [
          "Mathematics (all)",
          "Computer Science (all)"
        ],
        "title": "International Conference on Software Process Improvement and Capability Determination"
      },
      "publication_date": "2021-01-01",
      "selected": null,
      "title": "Platforms for Serverless at the Edge: A Review",
      "urls": [
        "https://link.springer.com/content/pdf/10.1007%2F978-3-030-71906-7_3.pdf",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85103519569&origin=inward"
      ]
    },
    {
      "abstract": "This work presents an event-driven Extract, Transform, and Load (ETL) pipeline serverless architecture and provides an evaluation of its performance over a range of dataflow tasks of varying frequency, velocity, and payload size. We design an experiment while using generated tabular data throughout varying data volumes, event frequencies, and processing power in order to measure: (i) the consistency of pipeline executions; (ii) reliability on data delivery; (iii) maximum payload size per pipeline; and, (iv) economic scalability (cost of chargeable tasks). We run 92 parameterised experiments on a simple AWS architecture, thus avoiding any AWS-enhanced platform features, in order to allow for unbiased assessment of our model&rsquo;s performance. Our results indicate that our reference architecture can achieve time-consistent data processing of event payloads of more than 100 MB, with a throughput of 750 KB/s across four event frequencies. It is also observed that, although the utilisation of an SQS queue for data transfer enables easy concurrency control and data slicing, it becomes a bottleneck on large sized event payloads. Finally, we develop and discuss a candidate pricing model for our reference architecture usage.",
      "authors": [
        "Pogiatzis, Antreas",
        "Samakovitis, Georgios"
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.3390/app11010191",
      "keywords": [
        "ETL",
        "AWS",
        "Serverless",
        "Distributed",
        "Architecture",
        "FaaS",
        "Event-driven"
      ],
      "number_of_pages": 13,
      "pages": "1-13",
      "publication": {
        "category": "Journal",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": null,
        "publisher": "Multidisciplinary Digital Publishing Institute",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Applied Sciences (Switzerland)"
      },
      "publication_date": "2021-01-01",
      "selected": null,
      "title": "An Event-Driven Serverless ETL Pipeline on AWS",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85098539244&origin=inward",
        "https://www.mdpi.com/2076-3417/11/1/191/pdf"
      ]
    },
    {
      "abstract": "Serverless systems are becoming more popular and being adopted by a large number of companies. Serverless computing is a new paradigm that provides a platform to efficiently develop and deploy applications to the market without having to manage any underlying infrastructure. 1,2 However, serverless solutions introduce several new issues that companies need to tackle. In this article, we introduce serverless technology and its evolution, discuss its benefits and issues, and describe future challenges that researchers should address. \u00c2\u00a9 1984-2012 IEEE.",
      "authors": [
        "Davide Taibi",
        "Josef Spillner",
        "Konrad Wawruch"
      ],
      "categories": {},
      "citations": 4,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/MS.2020.3028708",
      "keywords": [],
      "number_of_pages": 7,
      "pages": "25-31",
      "publication": {
        "category": "Journal",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "1937-4194",
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "IEEE Software"
      },
      "publication_date": "2021-01-01",
      "selected": true,
      "title": "Serverless Computing-Where Are We Now, and Where Are We Heading?",
      "urls": [
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9305905",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85098534045&origin=inward"
      ]
    },
    {
      "abstract": "South Korea has a long history of the planning, development, and management of smart cities to integrate emerging technological advances into complex physical infrastructure. This article explores lessons learned from smart city programs in South Korea to better understand the challenges and opportunities of future sustainable smart city innovation and development. This article conducted a comprehensive review and analysis of South Korea's smart city programs and conceptualized a sustainable smart city framework that will assist policymakers, planners, citizens, and other key stakeholders. This research proposed Governance, Policy, and Services (GPS) as the three pillars of a successful smart city framework, in addition to integrating physical and cyber infrastructures. This article argues that a smart city should function as a service platform that incubates and delivers long-term services to citizens and society. This article also emphasizes that a strong groundwork of the GPS framework will lead to the successful adaptation of innovative technologies and ideas for future smart city programs. IEEE",
      "authors": [
        "Young Hoon Kwak",
        "Jaehyun Lee"
      ],
      "categories": {},
      "citations": 0,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/TEM.2021.3060956",
      "keywords": [
        "Planning",
        "governance",
        "Government",
        "Economics",
        "smart city",
        "Smart cities",
        "policy",
        "Stakeholders",
        "Technological innovation",
        "Framework",
        "South Korea",
        "services",
        "Information and communication technology"
      ],
      "number_of_pages": 15,
      "pages": "1-15",
      "publication": {
        "category": "Journal",
        "cite_score": 4.3,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "1558-0040",
        "publisher": "Institute of Electrical and Electronics Engineers Inc.",
        "sjr": 0.702,
        "snip": 1.255,
        "subject_areas": [
          "Electrical and Electronic Engineering",
          "Strategy and Management"
        ],
        "title": "IEEE Transactions on Engineering Management"
      },
      "publication_date": "2021-01-01",
      "selected": true,
      "title": "Toward Sustainable Smart City: Lessons From 20 Years of Korean Programs",
      "urls": [
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9381515",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85103294832&origin=inward"
      ]
    },
    {
      "abstract": "In this article, we advocate for access transparency: enabling local and remote resources to be accessed using identical operations. To this end, we present Lithops, a novel toolkit that allows regular, multiprocess Python programs to run at scale. \u00c2\u00a9 1984-2012 IEEE.",
      "authors": [
        "Sampe, J.",
        "Garcia-Lopez, P.",
        "Sanchez-Artigas, M.",
        "Vernik, G.",
        "Roca-Llaberia, P.",
        "Arjona, A."
      ],
      "categories": {},
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1109/MS.2020.3029994",
      "keywords": [],
      "number_of_pages": 7,
      "pages": "68-74",
      "publication": {
        "category": "Journal",
        "cite_score": 6.9,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "07407459",
        "publisher": "IEEE Computer Society",
        "sjr": 0.692,
        "snip": 1.934,
        "subject_areas": [
          "Software"
        ],
        "title": "IEEE Software"
      },
      "publication_date": "2021-01-01",
      "selected": true,
      "title": "Toward Multicloud Access Transparency in Serverless Computing",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85098557019&origin=inward"
      ]
    },
    {
      "abstract": "Operating data-intensive applications on edge systems is challenging, due to the extreme workload and device heterogeneity, as well as the geographic dispersion of compute and storage infrastructure. Serverless computing has emerged as a compelling model to manage the complexity of such systems, by decoupling the underlying infrastructure and scaling mechanisms from applications. Although serverless platforms have reached a high level of maturity, we have found several limiting factors that inhibit their use in an edge setting. This paper presents a container scheduling system that enables such platforms to make efficient use of edge infrastructures. Our scheduler makes heuristic trade-offs between data and computation movement, and considers workload-specific compute requirements such as GPU acceleration. Furthermore, we present a method to automatically fine-tune the weights of scheduling constraints to optimize high-level operational objectives such as minimizing task execution time, uplink usage, or cloud execution cost. We implement a prototype that targets the container orchestration system Kubernetes, and deploy it on an edge testbed we have built. We evaluate our system with trace-driven simulations in different infrastructure scenarios, using traces generated from running representative workloads on our testbed. Our results show that (a) our scheduler significantly improves the quality of task placement compared to the state-of-the-art scheduler of Kubernetes, and (b) our method for fine-tuning scheduling parameters helps significantly in meeting operational goals. \u00c2\u00a9 2020",
      "authors": [
        "Rausch, T.",
        "Rashed, A.",
        "Dustdar, S."
      ],
      "categories": {},
      "citations": 5,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1016/j.future.2020.07.017",
      "keywords": [
        "Machine learning",
        "Serverless",
        "Container scheduling",
        "Edge computing"
      ],
      "number_of_pages": 13,
      "pages": "259-271",
      "publication": {
        "category": "Journal",
        "cite_score": 13.3,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "0167739X",
        "publisher": "Elsevier",
        "sjr": 1.262,
        "snip": 2.72,
        "subject_areas": [
          "Hardware and Architecture",
          "Computer Networks and Communications",
          "Software"
        ],
        "title": "Future Generation Computer Systems"
      },
      "publication_date": "2021-01-01",
      "selected": true,
      "title": "Optimized container scheduling for data-intensive serverless edge computing",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85089211404&origin=inward"
      ]
    },
    {
      "abstract": "The proceedings contain 62 papers. The special focus in this conference is on Integrated Computer Technologies in Mechanical Engineering - Synergetic Engineering. The topics include: An Approach for Creating Learning Content from Knowledge Management System; improving Vehicle Safety Through the Use of Arduino Controller-Based Automotive Voice Informants; the Cascading Subsystem of Key Performance Indicators in the Enterprise Performance Management System; on Using Information and Communication Technologies in Process of Mathematical Specialties Education; social and Legal Aspects of the Transition to Industry 4.0; oil Products Moisture Measurement Using Adaptive Capacitive Instrument Measuring Transducers; sorption-Capacitive Gas Humidity Sensor of Increased Sensitivity; photoelectric Measurement and Control Methods of Angular Displacement of the Aircraft Control Surfaces; synthesis Method of Robust Neural Network Models of Systems and Processes; method for Designing Low-Orbit Clusters of Small Satellites Under Stochastic Disturbances; technology of Integrated Application of Classical Decision Making Criteria for Risk-Uncertainty Assessment of Group Systems of Preferences of Air Traffic Controllers on Error\u00e2\u0080\u0099s Dangers; smartphone for Smart Physics Learning; classification of Diabetes Disease Using Logistic Regression Method; conceptual Model of Information Security; serverless and Containerization Models and Methods in Challenger Banks Software; a Graphical Environment for Algorithms Training; cyberterrorism Attacks on Critical Infrastructure and Aviation: Criminal and Legal Policy of Countering; effect of Parameters of Adhesive Application by Intaglio Printing on Honeycomb Core Bonding Strength; analysis of Laminated Composites Subjected to Impact; A Fast Method for Visual Quality Prediction and Providing in Image Lossy Compression by SPIHT; review of Methods for Obtaining Hardening Coatings.",
      "authors": [],
      "categories": {},
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": {
        "category": "Book",
        "cite_score": 0.6,
        "is_potentially_predatory": false,
        "isbn": "9783030750770",
        "issn": "23673370",
        "publisher": "Springer International Publishing AG",
        "sjr": 0.17,
        "snip": 0.797,
        "subject_areas": [
          "Control and Systems Engineering",
          "Computer Networks and Communications",
          "Signal Processing"
        ],
        "title": "Conference on Integrated Computer Technologies in Mechanical Engineering\u2013Synergetic Engineering"
      },
      "publication_date": "2021-01-01",
      "selected": true,
      "title": "International Scientific and Technical Conference on Integrated Computer Technologies in Mechanical Engineering - Synergetic Engineering, ICTM 2020",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85101375171&origin=inward"
      ]
    },
    {
      "abstract": "Distributed information systems and applications are generally described in terms of components and interfaces among them. How these component-based architectures have been designed and implemented...",
      "authors": [
        "Giuseppe De Giacomo",
        "Maurizio Lenzerini",
        "Francesco Leotta",
        "Massimo Mecella"
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1007/978-3-030-73203-5_1",
      "keywords": [
        "Components",
        "SOC",
        "Middleware technologies",
        "Design methodologies",
        "Microservices"
      ],
      "number_of_pages": 13,
      "pages": "3-15",
      "publication": {
        "category": "Book",
        "cite_score": 1.8,
        "is_potentially_predatory": false,
        "isbn": "9783030715922",
        "issn": "03029743",
        "publisher": "Springer Verlag",
        "sjr": 0.249,
        "snip": 0.628,
        "subject_areas": [
          "Databases",
          "Cryptography and Security",
          "Distributed, Parallel, and Cluster Computing",
          "Theoretical Computer Science",
          "Computer Science (all)"
        ],
        "title": "IFIP International Conference on Distributed Applications and\n  Interoperable Systems, DAIS 2017: Distributed Applications and Interoperable\n  Systems pp 83-98"
      },
      "publication_date": "2021-01-01",
      "selected": false,
      "title": "From Component-Based Architectures to Microservices: A 25-years-long Journey in Designing and Realizing Service-Based Systems",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85104142076&origin=inward",
        "https://link.springer.com/content/pdf/10.1007%2F978-3-030-73203-5_1.pdf"
      ]
    },
    {
      "abstract": "Docker has revolutionized the cloud by popularizing containerization, changing the habits of developers and their tools, introducing new paradigms such as microservices and serverless computing,...",
      "authors": [
        "Ramzi Debab",
        "Walid Khaled Hidouci"
      ],
      "categories": {},
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1007/978-3-030-63089-8_9",
      "keywords": [
        "OCI",
        "IaC",
        "Unikernels",
        "OS virtualization",
        "Docker",
        "Hardware virtualization",
        "CNI",
        "Containerization"
      ],
      "number_of_pages": 27,
      "pages": "135-161",
      "publication": {
        "category": "Book",
        "cite_score": 0.9,
        "is_potentially_predatory": false,
        "isbn": "9783030577957",
        "issn": "21945357",
        "publisher": "Springer Verlag",
        "sjr": 0.184,
        "snip": 0.428,
        "subject_areas": [
          "Control and Systems Engineering",
          "Computer Science (all)"
        ],
        "title": "Workshops of  the International Conference on Advanced Information Networking and Applications"
      },
      "publication_date": "2021-01-01",
      "selected": true,
      "title": "Containers Runtimes War: A Comparative Study",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85096494198&origin=inward",
        "https://link.springer.com/content/pdf/10.1007%2F978-3-030-63089-8_9.pdf"
      ]
    },
    {
      "abstract": "Internet of Things applications are based on ubiquitous networks of multiple distributed devices, with limited computing resources and power, capable of collecting and storing data from heterogeneous sources in real-time. To avoid network saturation and delays, new architectures are needed to provide real-time Big Data and data analytics capabilities at the edge of the network, where energy efficiency needs to be considered to ensure a sustainable and effective deployment in areas of human activity. In this research, we present an IoT model based on the principles of Model-Based Systems Engineering. It covers the description of the entire architecture, from IoT devices to the processing units in edge data centres, and includes the location-awareness of user equipment, network, and computing infrastructures to optimise federated resource management in terms of delay and power consumption. We present a framework to assist the dimensioning and the dynamic operation of IoT data stream analytics applications. Abbreviations: ADAS Advanced Driver Assistance System. 20, 21, 24AI Artificial Intelligence. 2, 24ANN Artificial Neural Network. 2, 21AP Access Point. 5, 10, 11, 12, 13, 17, 18, 19, 20CNF Core Network Function. 5DEVS Discrete Event System Specification. 3, 5, 6, 7, 9, 10, 11, 12, 15, 16, 17, 18, 20, 21, 24, 27, 28EDC Edge Data Centre. 2, 3, 5, 6, 9, 10, 12, 13, 20, 21, 22, 23, 25FaaS Function-as-a-Service. 3, 4, 5, 6FDD Frequency Division Duplexing. 11, 18, 19FSPL Free-Space Path Loss. 20GPU Graphics Processing Unit. 2, 21IoT Internet of Things. 2, 3, 4, 5, 6, 14, 19, 23, 24ISP Internet Service Provider. 5, 10M&S Modelling and Simulation. 3, 24M&S&O Modelling, Simulation, and Optimisation. 21MBSE Model-Based Systems Engineering. 3, 4, 5, 24MCS Modulation and Codification Scheme. 12MDC Micro Data Centre. 2ML Machine Learning. 2, 20, 24, 25NR 5G New Radio. 12P2P Point-to-Point. 5, 10PBCH Physical Broadcast Channel. 19PDCCH Physical Downlink Control Channel. 19PDSCH Physical Downlink Shared Channel. 19PSS Primary Synchronisation Signal. 11, 14PU Processing Unit. 7, 9, 21, 22, 23, 24, 25PUCCH Physical Uplink Control Channel. 19PUSCH Physical Uplink Shared Channel. 19QoS Quality of Service. 2, 4, 5, 6, 12, 24RAN Radio Access Network. 5, 10, 13, 16, 17, 20SDN Software-Defined Network. 5, 10SNR Signal-to-Noise Ratio. 11, 12, 14, 17UE User Equipment. 4, 5, 6, 10, 11, 12, 13, 14, 16, 17, 18, 19, 21, 22, 23, 24, 25WSN Wireless Sensor Network. 4. \u00c2\u00a9 2021 Operational Research Society.",
      "authors": [
        "C\u00c3\u00a1rdenas, R.",
        "Arroba, P.",
        "Risco Mart\u00c3\u00adn, J.L."
      ],
      "categories": {},
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1080/17477778.2020.1863755",
      "keywords": [
        "incremental Learning",
        "Edge Computing",
        "internet of Things",
        "model-Based Systems Engineering",
        "computation Offloading"
      ],
      "number_of_pages": null,
      "pages": null,
      "publication": {
        "category": "Journal",
        "cite_score": 3.5,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "17477778",
        "publisher": "Taylor and Francis Ltd.",
        "sjr": 0.294,
        "snip": 0.635,
        "subject_areas": [
          "Modeling and Simulation",
          "Management Science and Operations Research",
          "Industrial and Manufacturing Engineering",
          "Software"
        ],
        "title": "Journal of Simulation"
      },
      "publication_date": "2021-01-01",
      "selected": true,
      "title": "Bringing AI to the edge: A formal M&amp;S specification to deploy effective IoT architectures",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85098736477&origin=inward"
      ]
    },
    {
      "abstract": "The proceedings contain 48 papers. The special focus in this conference is on Intelligent Networking and Collaborative Systems. The topics include: Applying a consensus building approach to communication projects in the health sector: The momento medico case study; gesture-based human-machine interface system by using omnidirectional camera; A secure group communication (SGC) protocol for a P2P group of peers using blockchain; method for detecting onset times of sounds of string instrument; PageRank for billion-scale networks in RDBMS; Welcome message from the INCoS-2020 Organizing Committee; Performance evaluation of WMNs by WMN-PSODGA simulation system considering exponential distribution of mesh clients and different router replacement methods; an algorithm to select an energy-efficient sever for an application process in a cluster of servers; suggesting cultural heritage points of interest through a specialized chatbot; considering a method for generating human mobility model by reinforcement learning; Data mining on open public transit data for transportation analytics during pre-COVID-19 era and COVID-19 era; eye movement patterns as a cryptographic lock; evolutionary fuzzy rules for intrusion detection in wireless sensor networks; blockchain architecture for secured inter-healthcare electronic health records exchange; semi-automatic knowledge base expansion for question answering; mina: SeMantic virtual assistant for domain ontology based question-answering; safeEat: Extraction of information about the presence of food allergens in recipes; An integrated fuzzy-based simulation system for driving risk management in VANETs considering road condition as a new parameter; accelerated neural intrusion detection for wireless sensor networks; end-to-end security for connected vehicles; Triangle enumeration on massive graphs using AWS lambda functions.",
      "authors": [],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": {
        "category": "Book",
        "cite_score": 0.9,
        "is_potentially_predatory": false,
        "isbn": "9783030577957",
        "issn": "21945357",
        "publisher": "Springer Verlag",
        "sjr": 0.184,
        "snip": 0.428,
        "subject_areas": [
          "Control and Systems Engineering",
          "Computer Science (all)"
        ],
        "title": "Workshops of  the International Conference on Advanced Information Networking and Applications"
      },
      "publication_date": "2021-01-01",
      "selected": false,
      "title": "12th International Conference on Intelligent Networking and Collaborative Systems, INCoS 2020",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85090092938&origin=inward"
      ]
    },
    {
      "abstract": "With the innovation of new Information and Communication Technologies and the needs of information and knowledge sharing among the city, a smart city system aims to improve it's citizens life quality by offering a set of public services. Within this context, this research work proposes a smart city approach for using these technologies in public services delivery to allow real-time interactions with citizens; we propose a service providing framework based on context-aware recommendation approach to improve the city's digital services according to citizen\u00e2\u0080\u0099s context and the backend as a service (BAAS) approach on cloud to enhance the scalability of the system in large workloads. In this study, we evaluated the scalability and interactivity of the proposed approach by measuring response time and exchanged data metrics. To estimate the scalability, we performed series of load tests where response time values increased with the addition of requests in different cases but remained acceptable. In terms of interactivity, the exchanged data between the citizen application and the city\u00e2\u0080\u0099s backend was measured at maximum by 117 Kb/s. The experiments revealed that context-aware recommendation approach optimised interactions by reducing the amount of exchanged data, and the BAAS approach improved the scalability of the system and allowed handling concurrent requests. \u00c2\u00a9 2019 Informa UK Limited, trading as Taylor & Francis Group.",
      "authors": [
        "Hoadjli, A.",
        "Rezeg, K."
      ],
      "categories": null,
      "citations": 1,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1080/17445760.2019.1626855",
      "keywords": [
        "Smart city",
        "cloud backend",
        "public services",
        "citizens",
        "context-aware recommendations",
        "scalability",
        "ICT"
      ],
      "number_of_pages": 20,
      "pages": "97-116",
      "publication": {
        "category": "Journal",
        "cite_score": 2.2,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "17445760",
        "publisher": "Taylor and Francis Ltd.",
        "sjr": 0.183,
        "snip": 0.595,
        "subject_areas": [
          "Computer Networks and Communications",
          "Software"
        ],
        "title": "International Journal of Parallel, Emergent and Distributed Systems"
      },
      "publication_date": "2021-01-01",
      "selected": false,
      "title": "A scalable mobile context-aware recommender system for a smart city administration",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85067586775&origin=inward"
      ]
    },
    {
      "abstract": "Satisfying the software requirements of emerging service-based Internet of Things (IoT) applications has become challenging for cloud-centric architectures, as applications demand fast response times and availability of computational resources closer to end-users. As such, meeting application demands must occur at runtime, facing uncertainty and in a decentralized manner, something that must be reflected in system deployment. We propose a decentralized resource management technique and accompanying technical framework for the deployment of service-based IoT applications on resource-constrained devices. Faithful to services engineering, applications we consider are composed of interdependent tasks, which in the IoT setting may be concretized as e.g., containerized microservices or serverless functions. A deployment for an arbitrary application is found at runtime through satisfiability; the mapping produced is compliant with tasks' individual resource requirements and latency constraints by construction. Our approach ensures seamless deployment at runtime, assuming no design-time knowledge of device resources or the current network topology. We evaluate the applicability and realizability of our technique over resource-constrained edge devices and particularly in the absence of cloud resources. IEEE",
      "authors": [
        "Cosmin Avasalcai",
        "Christos Tsigkanos",
        "Schahram Dustdar"
      ],
      "categories": {},
      "citations": 0,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/TSC.2021.3074188",
      "keywords": [
        "Runtime",
        "Resource management",
        "Edge Computing Services",
        "Decentralization",
        "Task analysis",
        "Resource Management",
        "Internet of Things",
        "Edge computing",
        "Image edge detection",
        "Computer architecture"
      ],
      "number_of_pages": 1,
      "pages": "1-1",
      "publication": {
        "category": "Journal",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "2372-0204",
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "IEEE Transactions on Services Computing"
      },
      "publication_date": "2021-01-01",
      "selected": true,
      "title": "Resource Management for Latency-Sensitive IoT Applications with Satisfiability",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85104630968&origin=inward",
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9409738"
      ]
    },
    {
      "abstract": "Edge computing has emerged as a new paradigm to bring cloud applications closer to users for increased performance. Unlike back-end cloud systems which consolidate their resources in a centralized data center location with virtually unlimited capacity, edge-clouds comprise distributed resources at various computation spots, each with very limited capacity. In this paper, we consider Function-as-a-Service (FaaS) edge-clouds where application providers deploy their latency-critical functions that process user requests with strict response time deadlines. In this setting, we investigate the problem of resource provisioning and allocation. After formulating the optimal solution, we propose resource allocation and provisioning algorithms across the spectrum of fully-centralized to fully-decentralized. We evaluate the performance of these algorithms in terms of their ability to utilize CPU resources and meet request deadlines under various system parameters. Our results indicate that practical decentralized strategies, which require no coordination among computation spots, achieve performance that is close to the optimal fully-centralized strategy with coordination overheads. IEEE",
      "authors": [
        "Onur Ascigil",
        "Argyrios Tasiopoulos",
        "Truong Khoa Phan",
        "Vasilis Sourlas",
        "Ioannis Psaras",
        "George Pavlou"
      ],
      "categories": {},
      "citations": 1,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/TSC.2021.3052139",
      "keywords": [
        "Resource management",
        "FAA",
        "Containers",
        "Cloud computing",
        "Routing",
        "Image edge detection",
        "Delays"
      ],
      "number_of_pages": 1,
      "pages": "1-1",
      "publication": {
        "category": "Journal",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "2372-0204",
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "IEEE Transactions on Services Computing"
      },
      "publication_date": "2021-01-01",
      "selected": true,
      "title": "Resource Provisioning and Allocation in Function-as-a-Service Edge-Clouds",
      "urls": [
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9326369",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85099726971&origin=inward"
      ]
    },
    {
      "abstract": "Porting an existing monolith to a serverless platform (\"FaaSification\") can be challenging because monoliths commonly have many interdependencies and are highly cohesive. This article introduces a Dependency-Aware FaaSifier (DAF), which allows developers to annotate a method that should be faasified. \u00c2\u00a9 1984-2012 IEEE.",
      "authors": [
        "Sasko Ristov",
        "Stefan Pedratscher",
        "Jakob Wallnoefer",
        "Thomas Fahringer"
      ],
      "categories": {},
      "citations": 0,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/MS.2020.3018334",
      "keywords": [],
      "number_of_pages": 6,
      "pages": "48-53",
      "publication": {
        "category": "Journal",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "1937-4194",
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "IEEE Software"
      },
      "publication_date": "2021-01-01",
      "selected": true,
      "title": "DAF: Dependency-Aware FaaSifier for Node.js Monolithic Applications",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85091353727&origin=inward",
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9171848"
      ]
    },
    {
      "abstract": "In the article \"Benchmarking Deep Neural Network Inference Performance on Serverless Environments With MLPerf,\" 1 which was published in the January/February 2021 issue of IEEE Software, there was an error introduced during the production process. The expansion of the acronym IE was incorrectly given as \"interference engine.\" The correct expansion of IE is \"inference engine.\" This is of crucial relevance in the article because it means the \"inference of the deep neural network.\" We sincerely apologize for this error and regret any confusion it may have caused. \u00c2\u00a9 2021 IEEE Computer Society. All rights reserved.",
      "authors": [],
      "categories": {},
      "citations": 0,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/MS.2021.3052061",
      "keywords": [],
      "number_of_pages": 1,
      "pages": "127-127",
      "publication": {
        "category": "Journal",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "1937-4194",
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "IEEE Software"
      },
      "publication_date": "2021-01-01",
      "selected": true,
      "title": "Erratum",
      "urls": [
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9354390",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85101097566&origin=inward"
      ]
    },
    {
      "abstract": "We provide a novel decomposition methodology from the current MLPerf benchmark to the serverless function execution model. We have tested our approach in Amazon Lambda to benchmark the processing capabilities of OpenCV and OpenVINO inference engines. \u00c2\u00a9 1984-2012 IEEE.",
      "authors": [
        "Unai Elordi",
        "Luis Unzueta",
        "Jon Goenetxea",
        "Sergio Sanchez-Carballido",
        "Ignacio Arganda-Carreras",
        "Oihana Otaegui"
      ],
      "categories": {},
      "citations": 1,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/MS.2020.3030199",
      "keywords": [],
      "number_of_pages": 7,
      "pages": "81-87",
      "publication": {
        "category": "Journal",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "1937-4194",
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "IEEE Software"
      },
      "publication_date": "2021-01-01",
      "selected": true,
      "title": "Benchmarking Deep Neural Network Inference Performance on Serverless Environments With MLPerf",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85098554553&origin=inward",
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9219119"
      ]
    },
    {
      "abstract": "Serverless computing is becoming a promising paradigm for Distributed Deep Neural Network (DDNN) training in the cloud, as it allows users to decompose complex model training into a number of <formula><tex>$functions$</tex></formula> without managing virtual machines or servers. Though provided with a simpler resource interface (<formula><tex>$i.e.,$</tex></formula> function number and memory size), inadequate function resource provisioning (either under-provisioning or over-provisioning) easily leads to <formula><tex>$unpredictable$</tex></formula> DDNN training performance in serverless platforms. Our empirical studies on AWS Lambda indicate that, such <formula><tex>$unpredictable performance$</tex></formula> of serverless DDNN training is mainly caused by the resource bottleneck of Parameter Servers (PS) and small local batch size. In this paper, we design and implement <formula><tex>$\\lambda DNN$</tex></formula>, a cost-efficient function resource provisioning framework to provide predictable performance for serverless DDNN training workloads, while saving the budget of provisioned functions. Leveraging the PS network bandwidth and function CPU utilization, we build a <formula><tex>$lightweight$</tex></formula> analytical DDNN training performance model to enable our design of <formula><tex>$\\lambda DNN$</tex></formula> resource provisioning strategy, so as to guarantee DDNN training performance with serverless functions. Extensive prototype experiments on AWS Lambda and complementary trace-driven simulations demonstrate that, <formula><tex>$\\lambda DNN$</tex></formula> can deliver predictable DDNN training performance and save the monetary cost of function resources by up to 66.7%, compared with the state-of-the-art resource provisioning strategies, yet with an acceptable runtime overhead. IEEE",
      "authors": [
        "Fei Xu",
        "Yiling Qin",
        "Li Chen",
        "Zhi Zhou",
        "Fangming Liu"
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/TC.2021.3054656",
      "keywords": [
        "Bandwidth",
        "predictable performance",
        "Throughput",
        "Servers",
        "Training",
        "Cloud computing",
        "Central Processing Unit",
        "serverless computing",
        "Distributed DNN training",
        "Computational modeling",
        "function resource provisioning"
      ],
      "number_of_pages": 1,
      "pages": "1-1",
      "publication": {
        "category": "Journal",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "2326-3814",
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "IEEE Transactions on Computers"
      },
      "publication_date": "2021-01-01",
      "selected": null,
      "title": "$\\lambda DNN$: Achieving Predictable Distributed DNN Training with Serverless Architectures",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85100476464&origin=inward",
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9336272"
      ]
    },
    {
      "abstract": "Our function-as-a-service (FaaS) framework transformed end users' questions into automated tests for scientific software. Our case study illustrates the FaaSification of scientific software testing and the importance of value-driven evaluations by focusing on real-world defect detection. \u00c2\u00a9 1984-2012 IEEE.",
      "authors": [
        "Xuanyi Lin",
        "Michelle Simon",
        "Nan Niu"
      ],
      "categories": null,
      "citations": 2,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/MS.2020.3029468",
      "keywords": [
        "Storm Water Management Model (SWMM)",
        "FaaS",
        "scientific software testing"
      ],
      "number_of_pages": 7,
      "pages": "61-67",
      "publication": {
        "category": "Journal",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "1937-4194",
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "IEEE Software"
      },
      "publication_date": "2021-01-01",
      "selected": null,
      "title": "Scientific Software Testing Goes Serverless: Creating and Invoking Metamorphic Functions",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85092266042&origin=inward",
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9214819"
      ]
    },
    {
      "abstract": "Keeping containers warm for prompt service responses and reducing warm containers for light-weight system management exhibit a fundamental tradeoff in serverless computing systems. In this letter, we investigate the problem of container warming control for serverless computing, and we formulate it as a Markov decision process (MDP). By observing that the value functions corresponding to the MDP are partially submodular, we show that the derived optimal policy is hysteretic and partially non-decreasing. Our numerical results show that the derived optimal policy exhibits a hysteretic structure, which can be realized via switching-up/-down thresholds in practice.",
      "authors": [
        "Yi-Han Chiang",
        "Chao Zhu",
        "Hai Lin",
        "Yusheng Ji"
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "IEEE"
      ],
      "doi": "10.1109/LNET.2021.3086489",
      "keywords": [
        "function as a service",
        "hysteresis.",
        "submodularity",
        "Markov decision process",
        "cold start",
        "Serverless computing"
      ],
      "number_of_pages": 1,
      "pages": "1-1",
      "publication": {
        "category": null,
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "2576-3156",
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "IEEE Networking Letters"
      },
      "publication_date": "2021-01-01",
      "selected": null,
      "title": "Hysteretic Optimality of Container Warming Control in Serverless Computing Systems",
      "urls": [
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9447030"
      ]
    },
    {
      "abstract": "Testing serverless applications plays an important role in software quality assurance. The current status of testing and debugging in serverless-based applications depicted by the experts helped us highlight issues and challenges that need to be deeply investigated. \u00c2\u00a9 1984-2012 IEEE.",
      "authors": [
        "Valentina Lenarduzzi",
        "Annibale Panichella"
      ],
      "categories": null,
      "citations": 3,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/MS.2020.3030803",
      "keywords": [],
      "number_of_pages": 7,
      "pages": "54-60",
      "publication": {
        "category": "Journal",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "1937-4194",
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "IEEE Software"
      },
      "publication_date": "2021-01-01",
      "selected": null,
      "title": "Serverless Testing: Tool Vendors' and Experts' Points of View",
      "urls": [
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9222011",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85092927141&origin=inward"
      ]
    },
    {
      "abstract": "Enterprises are moving their business critical workloads to public clouds at an accelerating pace. Cloud data services for Online Transaction Processing (OLTP), Data Analytics and NoSQL are essential building blocks for enterprise applications. Multi-tenancy is a crucial tenet for cloud data service providers that allows sharing of data center resources across tenants, thereby reducing cost. In this monograph, the authors review architectures of today\u2019s cloud data services and identify trends and challenges that arise in multi-tenant cloud data services. They survey techniques that have been developed for enabling elasticity, providing SLAs, ensuring performance isolation and reducing cost. The emerging paradigm of serverless databases is reviewed and opportunities and challenges highlighted. Finally, the authors identify open research problems in the fast-changing landscape of cloud data services. This timely overview, written by recognized experts in the field provides readers with essential insights into designing cloud data services to day and in the future. This concise and accessible review will save designers and researchers hours by having it at their fingertips.",
      "authors": [
        "Vivek Narasayya",
        "Surajit Chaudhuri"
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "IEEE"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": {
        "category": "Book",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781680837759",
        "issn": null,
        "publisher": "now",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Cloud Data Services: Workloads, Architectures and Multi-Tenancy"
      },
      "publication_date": "2021-01-01",
      "selected": null,
      "title": "Cloud Data Services: Workloads, Architectures and Multi-Tenancy",
      "urls": [
        "https://ieeexplore.ieee.org/xpl/ebooks/bookPdfWithBanner.jsp?fileName=9426559.pdf&bkn=9426558&pdfType=book"
      ]
    },
    {
      "abstract": "Serverless computing aims at reducing processing and operational units to single event-driven functions. It is bound to face considerable architectural issues and challenges. Are these bound to become technical debt? What does technical debt mean and how is it expressed in serverless computing models. \u00c2\u00a9 1984-2012 IEEE.",
      "authors": [
        "Valentina Lenarduzzi",
        "Jeremy Daly",
        "Antonio Martini",
        "Sebastiano Panichella",
        "Damian Andrew Tamburri"
      ],
      "categories": null,
      "citations": 2,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/MS.2020.3030786",
      "keywords": [],
      "number_of_pages": 8,
      "pages": "40-47",
      "publication": {
        "category": "Journal",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "1937-4194",
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "IEEE Software"
      },
      "publication_date": "2021-01-01",
      "selected": null,
      "title": "Toward a Technical Debt Conceptualization for Serverless Computing",
      "urls": [
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9222009",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85092909092&origin=inward"
      ]
    },
    {
      "abstract": "The serverless technology, introduced for data center operation, represents an attractive technology for latency-sensitive applications operated at the edge, enabling a resource-aware deployment accounting for limited edge computing resources or end-to-end network congestion to the cloud. This paper presents and validates a framework for automated deployment and dynamic reconfiguration of serverless functions at either the edge or cloud. The framework relies on extensive telemetry data retrieved from both the computing and packet-optical network infrastructure and operates on diverse Amazon Web Services technologies, including Greengrass on the edge. Experimental demonstration with a latency-sensitive serverless application is then provided, showing fast dynamic reconfiguration capabilities, e.g., enabling even zero outage time under certain conditions. IEEE",
      "authors": [
        "Istv\u00e1n Pelle",
        "Francesco Paolucci",
        "Bal\u00e1zs Sonkoly",
        "Filippo Cugini"
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/JSAC.2021.3064655",
      "keywords": [
        "telemetry",
        "edge",
        "IoT",
        "Greengrass",
        "AWS",
        "5G",
        "Function as a Service",
        "cloud",
        "P4",
        "FaaS",
        "Lambda",
        "serverless"
      ],
      "number_of_pages": 1,
      "pages": "1-1",
      "publication": {
        "category": "Journal",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "1558-0008",
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "IEEE Journal on Selected Areas in Communications"
      },
      "publication_date": "2021-01-01",
      "selected": null,
      "title": "Latency-sensitive Edge/Cloud Serverless Dynamic Deployment over Telemetry-based Packet-Optical Network",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85102636803&origin=inward",
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9374995"
      ]
    },
    {
      "abstract": "This article focuses on the feasibility of commercial cloud services for connected vehicle (CV) applications in a transportation cyberphysical systems (TCPS) environment. TCPS implies that CVs, in addition to being connected with each other, communicate with the transportation and computing infrastructure to fulfill application requirements. The motivation of this study is to accelerate commercial cloud-based CV application development by presenting the lessons learned from implementing a CV mobility application using Amazon Web Services (AWS). The feasibility of our cloud-based CV application is assessed at three levels: 1) the development of a cloud-based TCPS architecture, 2) the deployment of a cloud-based CV application using AWS, and 3) the evaluation of the cloud-based CV application. We implemented this CV mobility application using a serverless cloud architecture and found that such a cloud-based TCPS environment could meet the permissible delay limits of CV mobility applications. As the CV penetration levels on the surface transportation systems increase significantly over the next several years, this article illustrates how the commercial cloud could automatically scale the backend infrastructure to meet the rapidly increasing demand of real-world CV applications. Through real-world experiments, we demonstrated how commercial cloud services, along with a serverless cloud architecture, can advance the transportation digital infrastructure for supporting CV mobility applications in a TCPS environment. In addition, to enable other researchers to recreate the serverless cloud computing environment in AWS efficiently and to further contribute to commercial cloud utilization for developing CV applications, an AWS CloudFormation template related to our CV mobility application is published in an open source data management platform and is referred to in this article. \u00c2\u00a9 2009-2012 IEEE.",
      "authors": [
        "Hsien-Wen Deng",
        "Mizanur Rahman",
        "Mashrur Chowdhury",
        "M Sabbir Salek",
        "Mitch Shue"
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/MITS.2020.3037314",
      "keywords": [],
      "number_of_pages": 14,
      "pages": "6-19",
      "publication": {
        "category": "Journal",
        "cite_score": 8.7,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "1941-1197",
        "publisher": "Institute of Electrical and Electronics Engineers Inc.",
        "sjr": 0.831,
        "snip": 2.366,
        "subject_areas": [
          "Automotive Engineering",
          "Mechanical Engineering",
          "Computer Science Applications"
        ],
        "title": "IEEE Intelligent Transportation Systems Magazine"
      },
      "publication_date": "2021-01-01",
      "selected": null,
      "title": "Commercial Cloud Computing for Connected Vehicle Applications in Transportation Cyberphysical Systems: A Case Study",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85097940631&origin=inward",
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9290006"
      ]
    },
    {
      "abstract": "Serverless platforms facilitate transparent resource elasticity and fine-grained billing, making them an attractive choice for data analytics. We find that while server-centric analytics frameworks typically optimize for job completion time (JCT), resource utilization and isolation via inter-job scheduling policies, serverless analytics requires optimizing for JCT and cost of execution instead, introducing a new scheduling problem. We present Caerus, a task scheduler for serverless analytics frameworks that employs a fine-grained NIMBLE scheduling algorithm to solve this problem. NIMBLE efficiently pipelines task executions within a job, minimizing execution cost while being Pareto-optimal between cost and JCT for arbitrary analytics jobs. To this end, NIMBLE models a wide range of execution parameters-pipelineable and non-piplineable data dependencies, data generation, consumption and processing rates, etc.-to determine the ideal task launch times. Our evaluation results show that in practice, Caerus is able to achieve both optimal cost and JCT for queries across a wide range of analytics workloads. \u00c2\u00a9 2021 by The USENIX Association.",
      "authors": [
        "Zhang, H.",
        "Tang, Y.",
        "Khandelwal, A.",
        "Chen, J.",
        "Stoica, I."
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": 16,
      "pages": "653-668",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781939133212",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings of the 18th USENIX Symposium on Networked Systems Design and Implementation, NSDI 2021"
      },
      "publication_date": "2021-01-01",
      "selected": null,
      "title": "Caerus: NIMBLE task scheduling for serverless analytics",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85106195917&origin=inward"
      ]
    },
    {
      "abstract": "Containers emerge as the prevalent virtualization technology in cloud computing. Containers are more light-weight and agile compared to traditional virtual machines (VMs), since they provide virtualization at the operating system level. There are specific factors driving the container adoption in cloud, however, the main disadvantage of container-based virtualization technologies is poor isolation. To address isolation and security-related issues, new container runtimes appeared. In this study we present and evaluate the most common security-oriented runtimes, Kata, gVisor and Nabla, running with Docker, Containerd, and CRI-O. We deploy containers for all the aforementioned container solutions, as well as the default Kubernetes runtime runc, on a Kubernetes cluster and additionally on a Docker node. Moreover, in a similar way to containers, we deploy and evaluate unikernels and security-oriented lightweight Linux-based VMs running on Kubernetes cluster. To evaluate container runtimes, we take under consideration Firecracker microVM too. To automate the deployment of high isolated containers and VMs on Kubernetes clusters, we have developed our own tool. Finally, we recognize the increasing interest on Function-as-a-Service and other serverless architectures. In the same direction with these emerging cloud computing services, we have extended the Kubeless serverless framework to support security-oriented container runtimes. \u00c2\u00a9 2021 John Wiley & Sons Ltd.",
      "authors": [
        "Mavridis, I.",
        "Karatza, H."
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1002/cpe.6365",
      "keywords": [
        "unikernels",
        "Kubevirt",
        "Kubeless",
        "cloud",
        "sandboxed containers",
        "Kubernetes"
      ],
      "number_of_pages": null,
      "pages": null,
      "publication": {
        "category": "Journal",
        "cite_score": 3.8,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "15320626",
        "publisher": "John Wiley and Sons Ltd",
        "sjr": 0.309,
        "snip": 0.828,
        "subject_areas": [
          "Computer Networks and Communications",
          "Computational Theory and Mathematics",
          "Software",
          "Theoretical Computer Science",
          "Computer Science Applications"
        ],
        "title": "Concurrency Computation"
      },
      "publication_date": "2021-01-01",
      "selected": null,
      "title": "Orchestrated sandboxed containers, unikernels, and virtual machines for isolation-enhanced multitenant workloads and serverless computing in cloud",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85106297437&origin=inward"
      ]
    },
    {
      "abstract": "The edge or edge computing refers to the computational infrastructure between sensors and Internet-of-Things world on the one side and centralised cloud data centres on the other. Edge clusters could...",
      "authors": [
        "Fabian Gand",
        "Ilenia Fronza",
        "Nabil El Ioini",
        "Hamid R. Barzegar",
        "Shelernaz Azimi",
        "Claus Pahl"
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1007/978-3-030-72369-9_9",
      "keywords": [
        "Edge cloud",
        "Performance engineering",
        "Self-adaptive system",
        "Cluster",
        "Auto-scaling",
        "Fuzzy logic",
        "Container technology"
      ],
      "number_of_pages": 30,
      "pages": "203-232",
      "publication": {
        "category": "Book",
        "cite_score": 0.8,
        "is_potentially_predatory": false,
        "isbn": "9783030719050",
        "issn": "18650929",
        "publisher": "Springer Verlag",
        "sjr": 0.16,
        "snip": 0.32,
        "subject_areas": [
          "Mathematics (all)",
          "Computer Science (all)"
        ],
        "title": "International Conference on Software Process Improvement and Capability Determination"
      },
      "publication_date": "2021-01-01",
      "selected": null,
      "title": "Fuzzy Container Orchestration for Self-adaptive Edge Architectures",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85104760574&origin=inward",
        "https://link.springer.com/content/pdf/10.1007%2F978-3-030-72369-9_9.pdf"
      ]
    },
    {
      "abstract": "Cloud computing enables performing computations and analysis tasks and sharing services in web-based computer centres instead of local desktop systems. One of the most used areas of cloud computing is geographic information systems (GIS) applications. Although Desktop GIS products are still used in the community frequently, Web GIS and Cloud GIS applications have drawn attention and have become more efficient for users. In this study, a serverless Cloud GIS framework is implemented for the land valuation platform. In order to store, analyse, and share geospatial data, the Aurora Serverless PostgreSQL database is created on Amazon Web Services (AWS). While adopting Aurora Serverless PostgreSQL as a database management system, a simple point in polygon analysis conducted to compare the performances with Amazon Relational Database Service (RDS) instance. Results showed that the serverless database responded to the query faster and scaled up during high workload to decrease latency. Hence, parcel vector data, which conveys ownership information and land values attributes, is shared directly from the PostGIS database as vector tiles. Besides S3 and AWS Lambda services are used for storing and disseminating raster-based land value map tiles. To visualize all shared data and maps through a web browser, open source web mapping library Mapbox GL JS is used. \u00c2\u00a9 2021 Informa UK Limited, trading as Taylor & Francis Group.",
      "authors": [
        "Mete, M.O.",
        "Yomralioglu, T."
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1080/17538947.2021.1889056",
      "keywords": [
        "cloud GIS",
        "Serverless cloud computing",
        "open source GIS",
        "value map",
        "real estate valuation"
      ],
      "number_of_pages": null,
      "pages": null,
      "publication": {
        "category": "Journal",
        "cite_score": 6.6,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "17538947",
        "publisher": "Taylor and Francis Ltd.",
        "sjr": 0.813,
        "snip": 1.434,
        "subject_areas": [
          "Software",
          "Earth and Planetary Sciences (all)",
          "Computer Science Applications"
        ],
        "title": "International Journal of Digital Earth"
      },
      "publication_date": "2021-01-01",
      "selected": null,
      "title": "Implementation of serverless cloud GIS platform for land valuation",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85101194528&origin=inward"
      ]
    },
    {
      "abstract": "The article describes the perks of the serverless and containerization models and methods in challenger banks software. Data sovereignty in the context of microservices means that the stored model of...",
      "authors": [
        "Yuliia Kuznetsova",
        "Artem Kolomytsev",
        "Maksym Somochkin",
        "Oleksandr Vdovitchenko"
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1007/978-3-030-66717-7_15",
      "keywords": [
        "Cloud software",
        "Distributer systems",
        "Serverless",
        "Containerization",
        "Challenger bank",
        "Microservices"
      ],
      "number_of_pages": 17,
      "pages": "169-185",
      "publication": {
        "category": "Book",
        "cite_score": 0.6,
        "is_potentially_predatory": false,
        "isbn": "9783030750770",
        "issn": "23673370",
        "publisher": "Springer International Publishing AG",
        "sjr": 0.17,
        "snip": 0.797,
        "subject_areas": [
          "Control and Systems Engineering",
          "Computer Networks and Communications",
          "Signal Processing"
        ],
        "title": "Conference on Integrated Computer Technologies in Mechanical Engineering\u2013Synergetic Engineering"
      },
      "publication_date": "2021-01-01",
      "selected": null,
      "title": "Serverless and Containerization Models and Methods in Challenger Banks Software",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85101423920&origin=inward",
        "https://link.springer.com/content/pdf/10.1007%2F978-3-030-66717-7_15.pdf"
      ]
    },
    {
      "abstract": "This article presents an application for face recognition, which takes its video input streamed from smart glasses through an internet connection. The application resides in the cloud and uses...",
      "authors": [
        "Oliviu Matei",
        "Rudolf Erdei",
        "Alexandru Moga",
        "Robert Heb"
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1007/978-3-030-68787-8_46",
      "keywords": [
        "Serverless architecture",
        "Augmented Reality",
        "Serverless computing",
        "Face recognition"
      ],
      "number_of_pages": 14,
      "pages": "642-655",
      "publication": {
        "category": "Book",
        "cite_score": 1.8,
        "is_potentially_predatory": false,
        "isbn": "9783030715922",
        "issn": "03029743",
        "publisher": "Springer Verlag",
        "sjr": 0.249,
        "snip": 0.628,
        "subject_areas": [
          "Databases",
          "Cryptography and Security",
          "Distributed, Parallel, and Cluster Computing",
          "Theoretical Computer Science",
          "Computer Science (all)"
        ],
        "title": "IFIP International Conference on Distributed Applications and\n  Interoperable Systems, DAIS 2017: Distributed Applications and Interoperable\n  Systems pp 83-98"
      },
      "publication_date": "2021-01-01",
      "selected": null,
      "title": "A Serverless Architecture for a Wearable Face Recognition Application",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85104442923&origin=inward",
        "https://link.springer.com/content/pdf/10.1007%2F978-3-030-68787-8_46.pdf"
      ]
    },
    {
      "abstract": " Function-as-a-Service (FaaS) is one of the most promising directions for the\nfuture of cloud services, and serverless functions have immediately become a\nnew middleware for building scalable and cost-efficient microservices and\napplications. However, the quickly moving technology hinders reproducibility,\nand the lack of a standardized benchmarking suite leads to ad-hoc solutions and\nmicrobenchmarks being used in serverless research, further complicating\nmetaanalysis and comparison of research solutions. To address this challenge,\nwe propose the Serverless Benchmark Suite: the first benchmark for FaaS\ncomputing that systematically covers a wide spectrum of cloud resources and\napplications. Our benchmark consists of the specification of representative\nworkloads, the accompanying implementation and evaluation infrastructure, and\nthe evaluation methodology that facilitates reproducibility and enables\ninterpretability. We demonstrate that the abstract model of a FaaS execution\nenvironment ensures the applicability of our benchmark to multiple commercial\nproviders such as AWS, Azure, and Google Cloud. Our work facilities\nexperimental evaluation of serverless systems, and delivers a standardized,\nreliable and evolving evaluation methodology of performance, efficiency,\nscalability and reliability of middleware FaaS platforms.\n",
      "authors": [
        "Copik, Marcin",
        "Kwasniewski, Grzegorz",
        "Besta, Maciej",
        "Podstawski, Michal",
        "Hoefler, Torsten"
      ],
      "categories": null,
      "citations": null,
      "comments": null,
      "databases": [
        "arXiv"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": null,
      "publication_date": "2020-12-28",
      "selected": null,
      "title": "SeBS: A Serverless Benchmark Suite for Function-as-a-Service Computing",
      "urls": [
        "http://arxiv.org/abs/2012.14132v1",
        "https://arxiv.org/pdf/2012.14132",
        "http://arxiv.org/pdf/2012.14132v1"
      ]
    },
    {
      "abstract": "Real-time appliance-usage recommendation (RT-AUR) is an essential pre-requisite for various demand response (DR) programmes. This paper presents a simple yet effective integer programming (IP)-based model to solve the appliance-usage scheduling problem in a dynamic pricing scenario. The proposed work further explores the viability of using a Serverless cloud-computing (SCC) framework for the actual implementation of RT-AUR algorithm. The efficacy of the overall proposal is demonstrated using a co-simulation architecture, combining a grid-simulation platform- MATLAB with a real-time cloud-computing platform- Amazon Web Services (AWS). Various co-simulation results clearly reveal the effectiveness of the proposed SCC framework for RT-AUR. \u00c2\u00a9 2020 IEEE",
      "authors": [
        "Shitikantha Dash",
        "Ranjana Sodhi",
        "Balwinder Sodhi"
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/NPSC49263.2020.9331847",
      "keywords": [
        "Amazon Web Services",
        "Serverless Cloud Computing",
        "Appliance-Usage Recommendation",
        "Integer Programming",
        "Demand Response"
      ],
      "number_of_pages": 6,
      "pages": "1-6",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-7281-8555-2",
        "issn": null,
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "2020 21st National Power Systems Conference, NPSC 2020"
      },
      "publication_date": "2020-12-17",
      "selected": null,
      "title": "A Serverless Cloud Computing Framework for Real-Time Appliance-Usage Recommendation",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85100895510&origin=inward",
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9331847"
      ]
    },
    {
      "abstract": "The rise of IoT has led to large volumes of personal data being produced at the network's edge. Most IoT applications process data in the cloud raising concerns over privacy and security. As many IoT applications are event-based and are implemented on cloud-based, serverless platforms, we've seen a number of proposals to deploy serverless solutions at the edge to address concerns over data transfer. However, conventional serverless platforms use container technology to run user-defined functions. Containers introduce their own issues regarding security-due to a large trusted computing base-, and performance issues including long initialisation times. Additionally, OpenWhisk a popular and widely used container-based serverless platform available for edge devices perform relatively poorly as we demonstrate in our evaluation. In this paper, we propose to investigate unikernel as a solution to build serverless platform at the edge, addressing in particular performance and security concerns. We present UniFaaS, a prototype edge-serverless platform which leverages unikernels-tiny library single-address-space operating systems that only contain the parts of the OS needed to run a given application-to execute functions. The result is a serverless platform with extremely low memory and CPU footprints, and excellent performance. UniFaaS has been designed to be deployed on low-powered single-board computer devices, such as Raspberry Pi or Arduino, without compromising on performance. \u00c2\u00a9 2020 IEEE.",
      "authors": [
        "Chetankumar Mistry",
        "Bogdan Stelea",
        "Vijay Kumar",
        "Thomas Pasquier"
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/CloudCom49646.2020.00001",
      "keywords": [],
      "number_of_pages": 8,
      "pages": "25-32",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-5386-0693-3",
        "issn": "2330-2186",
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings of the International Conference on Cloud Computing Technology and Science, CloudCom"
      },
      "publication_date": "2020-12-14",
      "selected": null,
      "title": "Demonstrating the Practicality of Unikernels to Build a Serverless Platform at the Edge",
      "urls": [
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9407311",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85105779524&origin=inward"
      ]
    },
    {
      "abstract": "Serverless clouds allocate multiple tasks (e.g., microservices) from multiple users on a shared pool of computing resources. This enables serverless cloud providers to reduce their resource usage by transparently aggregate similar tasks of a certain context (e.g., video processing) that share the whole or part of their computation. To this end, it is crucial to know the amount of time-saving achieved by aggregating the tasks. Lack of such knowledge can lead to uninformed merging and scheduling decisions that, in turn, can cause deadline violation of either the merged tasks or other following tasks. Accordingly, in this paper, we study the problem of estimating execution-Time saving resulted from merging tasks with the example in the context of video processing. To learn the execution-Time saving in different forms of merging, we first establish a set of benchmarking videos and examine a wide variety of video processing tasks-with and without merging in place. We observed that although merging can save up to 44% in the execution-Time, the number of possible merging cases is intractable. Hence, in the second part, we leverage the benchmarking results and develop a method based on Gradient Boosting Decision Tree (GBDT) to estimate the time-saving for any given task merging case. Experimental results show that the method can estimate the time-saving with the error rate of 0.04, measured based on Root Mean Square Error (RMSE). \u00c2\u00a9 2020 IEEE.",
      "authors": [
        "Shangrui Wu",
        "Chavit Denninnart",
        "Xiangbo Li",
        "Yang Wang",
        "Mohsen Amini Salehi"
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/HPCC-SmartCity-DSS50907.2020.00004",
      "keywords": [
        "Gradient Boosting Decision Tree (GBDT)",
        "Task Merging",
        "Video Stream Processing",
        "Oversubscription",
        "Serverless",
        "Cloud Computing"
      ],
      "number_of_pages": 8,
      "pages": "19-26",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-7281-7650-5",
        "issn": null,
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings - 2020 IEEE 22nd International Conference on High Performance Computing and Communications, IEEE 18th International Conference on Smart City and IEEE 6th International Conference on Data Science and Systems, HPCC-SmartCity-DSS 2020"
      },
      "publication_date": "2020-12-14",
      "selected": null,
      "title": "Descriptive and Predictive Analysis of Aggregating Functions in Serverless Clouds: the Case of Video Streaming",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85105254802&origin=inward",
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9407824"
      ]
    },
    {
      "abstract": "Complex Event Processing (CEP) is a powerful paradigm for scalable data management that is employed in many real-world scenarios such as detecting credit card fraud in banks. The so-called complex events are expressed using a specification language that is typically implemented and executed on a specific runtime system. While the tight coupling of these two components has been regarded as the key for supporting CEP at high performance, such dependencies pose several inherent challenges as follows. (1) Application development atop a CEP system requires extensive knowledge of how the runtime system operates, which is typically highly complex in nature. (2) The specification language dependence requires the need of domain experts and further restricts and steepens the learning curve for application developers.In this paper, we propose CEPless, a scalable data management system that decouples the specification from the runtime system by building on the principles of serverless computing. CEPless provides \"operator as a service\"and offers flexibility by enabling the development of CEP application in any specification language while abstracting away the complexity of the CEP runtime system. As part of CEPless, we designed and evaluated novel mechanisms for in-memory processing and batching that enable the stateful processing of CEP operators even under high rates of ingested events. Our evaluation demonstrates that CEPless can be easily integrated into existing CEP systems like Apache Flink while attaining similar throughput under high scale of events (up to 100K events per second) and dynamic operator update in 238 ms. \u00c2\u00a9 2020 IEEE.",
      "authors": [
        "Manisha Luthra",
        "Sebastian Hennig",
        "Kamran Razavi",
        "Lin Wang",
        "Boris Koldehofe"
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/BigData50022.2020.9378142",
      "keywords": [
        "Function as a Service",
        "Complex Event Processing",
        "Internet of Things",
        "Serverless computing"
      ],
      "number_of_pages": 10,
      "pages": "1964-1973",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-7281-6252-2",
        "issn": null,
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings - 2020 IEEE International Conference on Big Data, Big Data 2020"
      },
      "publication_date": "2020-12-10",
      "selected": null,
      "title": "Operator as a Service: Stateful Serverless Complex Event Processing",
      "urls": [
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9378142",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85103850111&origin=inward"
      ]
    },
    {
      "abstract": "Motivated by recent developments in serverless systems for large-scale computation as well as improvements in scalable randomized matrix algorithms, we develop OverSketched Newton, a randomized Hessian-based optimization algorithm to solve large-scale convex optimization problems in serverless systems. OverSketched Newton leverages matrix sketching ideas from Randomized Numerical Linear Algebra to compute the Hessian approximately. These sketching methods lead to inbuilt resiliency against stragglers that are a characteristic of serverless architectures. Depending on whether or not the problem is strongly convex, we propose different iteration updates using the approximate Hessian. For both cases, we establish convergence guarantees for OverSketched Newton, and we empirically validate our results by solving large-scale supervised learning problems on real-world datasets. Experiments demonstrate a reduction of \u00e2\u0088\u00bc50% in total running time on AWS Lambda, compared to state-of-the-art distributed optimization schemes. \u00c2\u00a9 2020 IEEE.",
      "authors": [
        "Vipul Gupta",
        "Swanand Kadhe",
        "Thomas Courtade",
        "Michael W. Mahoney",
        "Kannan Ramchandran"
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/BigData50022.2020.9378289",
      "keywords": [
        "matrix sketching",
        "serverless computing",
        "coded computing",
        "second-order optimization"
      ],
      "number_of_pages": 10,
      "pages": "288-297",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-7281-6252-2",
        "issn": null,
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings - 2020 IEEE International Conference on Big Data, Big Data 2020"
      },
      "publication_date": "2020-12-10",
      "selected": null,
      "title": "OverSketched Newton: Fast Convex Optimization for Serverless Systems",
      "urls": [
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9378289",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85103823362&origin=inward"
      ]
    },
    {
      "abstract": "Deep Neural Networks are used to solve the most challenging world problems. In spite of the numerous advancements in the field, most of the models are being tuned manually. Experienced Data Scientists have to manually optimize hyperparameters, such as dropout rate, learning rate or number of neurons for Big Data applications. We have implemented a flexible automatic real-time hyperparameter tuning methodology. It works for arbitrary models written in Python and Keras. We also utilized state of the art Cloud services such as trigger based serverless computing (Lambda), and advanced GPU instances to implement automation, reliability and scalability.The existing tuning libraries, such as hyperopt, Scikit-Optimize or SageMaker, require developers to provide a list of hyperparameters and the range of their values manually. Our novel approach detects potential hyperparameters automatically from the source code, updates the original model to tune the parameters, runs the evaluation in the Cloud on spot instances, finds the optimal hyperparameters, and saves the results in the No-SQL database. The methodology can be applied to numerous Big Data Machine Learning systems. \u00c2\u00a9 2020 IEEE.",
      "authors": [
        "Alex Kaplunovich",
        "Yelena Yesha"
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/BigData50022.2020.9378280",
      "keywords": [
        "Machine Learning",
        "Automation",
        "AWS",
        "Neural Networks",
        "Serverless",
        "Big Data",
        "Hyperparameter",
        "Optimization",
        "Cloud"
      ],
      "number_of_pages": 6,
      "pages": "2751-2756",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-7281-6252-2",
        "issn": null,
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings - 2020 IEEE International Conference on Big Data, Big Data 2020"
      },
      "publication_date": "2020-12-10",
      "selected": null,
      "title": "Automatic Tuning of Hyperparameters for Neural Networks in Serverless Cloud",
      "urls": [
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9378280",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85103842373&origin=inward"
      ]
    },
    {
      "abstract": "This paper proposes a new technique which can predict soil type and gives correct information to the farmers in audio format for improvised cultivation. It collects different soil parameters such as soil temperature, moisture and nitrogen, phosphorous and potassium (NPK) values present in the soil by taking the help of different sensors and predict the soil type using Random Forest Classifier, Support Vector Machine and Linear Regression Algorithms. From the comparison of all the mentioned machine learning algorithms, it is found that Random Forest Classifier gives the best soil type prediction with least Root Mean Square Error (RMSE) value. Using AWS technique, the predicted soil type information which is given in text format is converted to audio format which is easily understand by the farmers. A serverless application has been utilized to convey the information about the soil type to the farmers for better cultivation. \u00c2\u00a9 2020 IEEE.",
      "authors": [
        "Suman Mohapatra",
        "Alivarani Mohapatra",
        "Aniket Patil"
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/INDICON49873.2020.9342465",
      "keywords": [
        "IoT",
        "Serverless Computing",
        "AWS",
        "Soil Analysis",
        "Random Forest Classifier",
        "Soil Type Prediction"
      ],
      "number_of_pages": 4,
      "pages": "1-4",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-7281-6917-0",
        "issn": "2325-940X",
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "2020 IEEE 17th India Council International Conference, INDICON 2020"
      },
      "publication_date": "2020-12-10",
      "selected": null,
      "title": "Soil Analysis and its Type Prediction with Speech Enabled Output using IoT and AWS",
      "urls": [
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9342465",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85101587102&origin=inward"
      ]
    },
    {
      "abstract": " Serverless clouds allocate multiple tasks (e.g., micro-services) from\nmultiple users on a shared pool of computing resources. This enables serverless\ncloud providers to reduce their resource usage by transparently aggregate\nsimilar tasks of a certain context (e.g., video processing) that share the\nwhole or part of their computation. To this end, it is crucial to know the\namount of time-saving achieved by aggregating the tasks. Lack of such knowledge\ncan lead to uninformed merging and scheduling decisions that, in turn, can\ncause deadline violation of either the merged tasks or other following tasks.\nAccordingly, in this paper, we study the problem of estimating execution-time\nsaving resulted from merging tasks with the example in the context of video\nprocessing. To learn the execution-time saving in different forms of merging,\nwe first establish a set of benchmarking videos and examine a wide variety of\nvideo processing tasks -- with and without merging in place. We observed that\nalthough merging can save up to 44% in the execution-time, the number of\npossible merging cases is intractable. Hence, in the second part, we leverage\nthe benchmarking results and develop a method based on Gradient Boosting\nDecision Tree (GBDT) to estimate the time-saving for any given task merging\ncase. Experimental results show that the method can estimate the time-saving\nwith the error rate of 0.04, measured based on Root Mean Square Error (RMSE).\n",
      "authors": [
        "Wu, Shangrui",
        "Denninnart, Chavit",
        "Li, Xiangbo",
        "Wang, Yang",
        "Salehi, Mohsen Amini"
      ],
      "categories": null,
      "citations": null,
      "comments": null,
      "databases": [
        "arXiv"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": {
        "category": null,
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [
          "Distributed, Parallel, and Cluster Computing",
          "Multimedia"
        ],
        "title": "IEEE HPCC 2020"
      },
      "publication_date": "2020-12-10",
      "selected": null,
      "title": "Descriptive and Predictive Analysis of Aggregating Functions in Serverless Clouds: the Case of Video Streaming",
      "urls": [
        "http://arxiv.org/abs/2012.06021v1",
        "https://arxiv.org/pdf/2012.06021",
        "http://arxiv.org/pdf/2012.06021v1"
      ]
    },
    {
      "abstract": " Serverless computing offers an event driven pay-as-you-go framework for\napplication development. A key selling point is the concept of no back-end\nserver management, allowing developers to focus on application functionality.\nThis is achieved through severe abstraction of the underlying architecture the\nfunctions run on. We examine the underlying architecture and report on the\nperformance of serverless functions and how they are effected by certain\nfactors such as memory allocation and interference caused by load induced by\nother users on the platform. Specifically, we focus on the serverless offerings\nof the four largest platforms; AWS Lambda, Google Cloud Functions, Microsoft\nAzure Functions and IBM Cloud Functions}. In this paper, we observe and\ncontrast between these platforms in their approach to the common issue of \"cold\nstarts\", we devise a means to unveil the underlying architecture serverless\nfunctions execute on and we investigate the effects of interference from load\non the platform over the time span of one month.\n",
      "authors": [
        "Kelly, Daniel",
        "Glavin, Frank G",
        "Barrett, Enda"
      ],
      "categories": null,
      "citations": null,
      "comments": null,
      "databases": [
        "arXiv"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": null,
      "publication_date": "2020-12-10",
      "selected": null,
      "title": "Serverless Computing: Behind the Scenes of Major Platforms",
      "urls": [
        "http://arxiv.org/abs/2012.05600v1",
        "http://arxiv.org/pdf/2012.05600v1",
        "https://arxiv.org/pdf/2012.05600"
      ]
    },
    {
      "abstract": " Complex Event Processing (CEP) is a powerful paradigm for scalable data\nmanagement that is employed in many real-world scenarios such as detecting\ncredit card fraud in banks. The so-called complex events are expressed using a\nspecification language that is typically implemented and executed on a specific\nruntime system. While the tight coupling of these two components has been\nregarded as the key for supporting CEP at high performance, such dependencies\npose several inherent challenges as follows. (1) Application development atop a\nCEP system requires extensive knowledge of how the runtime system operates,\nwhich is typically highly complex in nature. (2) The specification language\ndependence requires the need of domain experts and further restricts and\nsteepens the learning curve for application developers. In this paper, we\npropose CEPLESS, a scalable data management system that decouples the\nspecification from the runtime system by building on the principles of\nserverless computing. CEPLESS provides operator as a service and offers\nflexibility by enabling the development of CEP application in any specification\nlanguage while abstracting away the complexity of the CEP runtime system. As\npart of CEPLESS, we designed and evaluated novel mechanisms for in-memory\nprocessing and batching that enables the stateful processing of CEP operators\neven under high rates of ingested events. Our evaluation demonstrates that\nCEPLESS can be easily integrated into existing CEP systems like Apache Flink\nwhile attaining similar throughput under a high scale of events (up to 100K\nevents per second) and dynamic operator update in up to 238 ms.\n",
      "authors": [
        "Luthra, Manisha",
        "Hennig, Sebastian",
        "Razavi, Kamran",
        "Wang, Lin",
        "Koldehofe, Boris"
      ],
      "categories": null,
      "citations": null,
      "comments": "10 pages",
      "databases": [
        "arXiv"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": null,
      "publication_date": "2020-12-09",
      "selected": null,
      "title": "Operator as a Service: Stateful Serverless Complex Event Processing",
      "urls": [
        "http://arxiv.org/pdf/2012.04982v2",
        "https://arxiv.org/pdf/2012.04982",
        "http://arxiv.org/abs/2012.04982v2"
      ]
    },
    {
      "abstract": "While much of the software running on today's serverless platforms is written in easily-analyzed high-level interpreted languages, many performance-conscious users choose to deploy their applications as container-encapsulated compiled binaries on serverless container platforms such as AWS Fargate or Google Cloud Run. Modern CI/CD workflows make this deployment process nearly-instantaneous, leaving little time for in-depth manual application security reviews. This combination of opaque binaries and rapid deployment prevents cloud developers and platform operators from knowing if their applications contain outdated, vulnerable, or legally-compromised code. This paper proposes Approximate Concrete Execution (ACE), a just-in-time binary analysis technique that enables automatic software component discovery for serverless binaries. Through classification and search engine experiments with common cloud software packages, we find that ACE scans binaries 5.2x faster than a state-of-the-art binary analysis tool, minimizing the impact on deployment and cold-start latency while maintaining comparable recall. \u00c2\u00a9 2020 ACM.",
      "authors": [
        "Byrne, A.",
        "Nadgowda, S.",
        "Coskun, A.K."
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1145/3429880.3430098",
      "keywords": [
        "software integrity",
        "software component discovery",
        "serverless computing"
      ],
      "number_of_pages": 6,
      "pages": "37-42",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450382045",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "WOSC 2020 - Proceedings of the 2020 6th International Workshop on Serverless Computing, Part of Middleware 2020"
      },
      "publication_date": "2020-12-07",
      "selected": null,
      "title": "ACE: Just-in-time Serverless Software Component Discovery through Approximate Concrete Execution",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85099566388&origin=inward"
      ]
    },
    {
      "abstract": "Emerging IoT applications with real-time latency constraints require new data processing systems operating at the Edge. Serverless computing offers a new compelling paradigm, where a user can execute a small application without handling the operational issues of server provisioning and resource management. Despite a variety of existing commercial and open source serverless platforms (utilizing VMs and containers), these solutions are too heavy-weight for a resource-constrained Edge systems (due to large memory footprint and high invocation time). Moreover, serverless workloads that focus on per-client, short-running computations are not an ideal fit for existing general purpose computing systems. In this paper, we present the design and implementation of Sledge - a novel and efficient WebAssembly-based serverless framework for the Edge. Sledge is optimized for supporting unique properties of serverless workloads: the need for high density multi-tenancy, low startup time, bursty client request rates, and short-lived computations. Sledge is designed for these constraints by offering (i) optimized scheduling policies and efficient work-distribution for short-lived computations, and (ii) a light-weight function isolation model implemented using our own WebAssembly-based software fault isolation infrastructure. These lightweight sandboxes are designed to support high-density computation: with fast startup and teardown times to handle high client request rates. An extensive evaluation of Sledge with varying workloads and real-world serverless applications demonstrates the effectiveness of the designed serverless-first runtime for the Edge. Sledge supports up to 4 times higher throughput and 4 times lower latencies compared to Nuclio, one of the fastest open-source serverless frameworks. \u00c2\u00a9 2020 Association for Computing Machinery.",
      "authors": [
        "Gadepalli, P.K.",
        "McBride, S.",
        "Peach, G.",
        "Cherkasova, L.",
        "Parmer, G."
      ],
      "categories": null,
      "citations": 1,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1145/3423211.3425680",
      "keywords": [
        "IoT",
        "WebAssembly",
        "Serverless",
        "Edge computing"
      ],
      "number_of_pages": 15,
      "pages": "265-279",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450381536",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Middleware 2020 - Proceedings of the 2020 21st International Middleware Conference"
      },
      "publication_date": "2020-12-07",
      "selected": null,
      "title": "Sledge: A Serverless-first, Light-weight Wasm Runtime for the Edge",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85098498610&origin=inward"
      ]
    },
    {
      "abstract": "Federated learning (FL) enables resource-constrained edge devices to learn a shared Machine Learning (ML) or Deep Neural Network (DNN) model, while keeping the training data local and providing privacy, security, and economic benefits. However, building a shared model for heterogeneous devices such as resource-constrained edge and cloud makes the efficient management of FL-clients challenging. Furthermore, with the rapid growth of FL-clients, the scaling of FL training process is also difficult. In this paper, we propose a possible solution to these challenges: federated learning over a combination of connected Function-as-a-Service platforms, i.e., FaaS fabric offering a seamless way of extending FL to heterogeneous devices. Towards this, we present FedKeeper, a tool for efficiently managing FL over FaaS fabric. We demonstrate the functionality of FedKeeper by using three FaaS platforms through an image classification task with a varying number of devices/clients, different stochastic optimizers, and local computations (local epochs). \u00c2\u00a9 2020 ACM.",
      "authors": [
        "Chadha, M.",
        "Jindal, A.",
        "Gerndt, M."
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1145/3429880.3430100",
      "keywords": [
        "Neural networks",
        "Serverless",
        "Federated learning",
        "FaaS",
        "Function-as-a-service",
        "FaaS platforms"
      ],
      "number_of_pages": 6,
      "pages": "49-54",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450382045",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "WOSC 2020 - Proceedings of the 2020 6th International Workshop on Serverless Computing, Part of Middleware 2020"
      },
      "publication_date": "2020-12-07",
      "selected": null,
      "title": "Towards Federated Learning using FaaS Fabric",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85099604179&origin=inward"
      ]
    },
    {
      "abstract": "Serverless computing is a promising cloud execution model that significantly simplifies cloud users' operational concerns by offering features such as auto-scaling and a pay-as-you-go cost model. Consequently, serverless systems promise to provide an excellent fit for ad-hoc data processing. Unsurprisingly, numerous serverless systems/frameworks for data processing emerged recently from research and industry. However, systems researchers, decision-makers, and data analysts are unaware of how these serverless systems compare to each other. In this paper, we identify existing serverless frameworks for data processing. We present a qualitative assessment of different system architectures and an experiment-driven quantitative comparison, including performance, cost, and usability using the TPC-H benchmark. Our results show that the three publicly available serverless data processing frameworks outperform a comparatively sized Apache Spark cluster in terms of performance and cost for ad-hoc queries on cold data. \u00c2\u00a9 2020 ACM.",
      "authors": [
        "Werner, S.",
        "Girke, R.",
        "Kuhlenkamp, J."
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1145/3429880.3430095",
      "keywords": [
        "Benchmarking",
        "Data Processing",
        "Serverless"
      ],
      "number_of_pages": 6,
      "pages": "19-24",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450382045",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "WOSC 2020 - Proceedings of the 2020 6th International Workshop on Serverless Computing, Part of Middleware 2020"
      },
      "publication_date": "2020-12-07",
      "selected": null,
      "title": "An Evaluation of Serverless Data Processing Frameworks",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85099529671&origin=inward"
      ]
    },
    {
      "abstract": "Analytical performance models have been shown very efficient in analyzing, predicting, and improving the performance of distributed computing systems. However, there is a lack of rigorous analytical models for analyzing the transient behaviour of serverless computing platforms, which is expected to be the dominant computing paradigm in cloud computing. Also, due to its unique characteristics and policies, performance models developed for other systems cannot be directly applied to modelling these systems. In this work, we propose an analytical performance model that is capable of predicting several key performance metrics for serverless workloads using only their average response time for warm and cold requests. The introduced model uses realistic assumptions, which makes it suitable for online analysis of real-world platforms. We validate the proposed model through extensive experimentation on AWS Lambda. Although we focus primarily on AWS Lambda due to its wide adoption in our experimentation, the proposed model can be leveraged for other public serverless computing platforms with similar auto-scaling policies, e.g., Google Cloud Functions, IBM Cloud Functions, and Azure Functions. \u00c2\u00a9 2020 ACM.",
      "authors": [
        "Mahmoudi, N.",
        "Khazaei, H."
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1145/3429880.3430092",
      "keywords": [
        "temporal",
        "performance",
        "performance modelling",
        "serverless computing",
        "transient",
        "serverless"
      ],
      "number_of_pages": 6,
      "pages": "1-6",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450382045",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "WOSC 2020 - Proceedings of the 2020 6th International Workshop on Serverless Computing, Part of Middleware 2020"
      },
      "publication_date": "2020-12-07",
      "selected": null,
      "title": "Temporal Performance Modelling of Serverless Computing Platforms",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85099565736&origin=inward"
      ]
    },
    {
      "abstract": "The proceedings contain 12 papers. The topics discussed include: temporal performance modelling of serverless computing platforms; implications of public cloud resource heterogeneity for inference serving; resource management for cloud functions with memory tracing, profiling and autotuning; an evaluation of serverless data processing frameworks; evaluation of network file system as a shared data storage in serverless computing; active-standby for high-availability in FaaS; ACE: just-in-time serverless software component discovery through approximate concrete execution; and serverless isn\u00e2\u0080\u0099t server-less: measuring and exploiting resource variability on cloud FaaS platforms.",
      "authors": [],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450382045",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "WOSC 2020 - Proceedings of the 2020 6th International Workshop on Serverless Computing, Part of Middleware 2020"
      },
      "publication_date": "2020-12-07",
      "selected": null,
      "title": "WOSC 2020 - Proceedings of the 2020 6th International Workshop on Serverless Computing, Part of Middleware 2020",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85099585776&origin=inward"
      ]
    },
    {
      "abstract": "Application software provisioning evolved from monolithic designs towards differently designed abstractions including serverless applications. The promise of that abstraction is that developers are free from infrastructural concerns such as instance activation and autoscaling. Today's serverless architectures based on FaaS are however still exposing developers to explicit low-level decisions about the amount of memory to allocate for the respective cloud functions. In many cases, guesswork and ad-hoc decisions determine the values a developer will put into the configuration. We contribute tools to measure the memory consumption of a function in various Docker, OpenFaaS and GCF/GCR configurations over time and to create trace profiles that advanced FaaS engines can use to autotune memory dynamically. Moreover, we explain how pricing forecasts can be performed by connecting these traces with a FaaS characteristics knowledge base. \u00c2\u00a9 2020 ACM.",
      "authors": [
        "Spillner, J."
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1145/3429880.3430094",
      "keywords": [
        "serverless computing",
        "models",
        "vertical scaling"
      ],
      "number_of_pages": 6,
      "pages": "13-18",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450382045",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "WOSC 2020 - Proceedings of the 2020 6th International Workshop on Serverless Computing, Part of Middleware 2020"
      },
      "publication_date": "2020-12-07",
      "selected": null,
      "title": "Resource Management for Cloud Functions with Memory Tracing, Profiling and Autotuning",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85099592865&origin=inward"
      ]
    },
    {
      "abstract": "Serverless computing in the cloud, or functions as a service (FaaS), poses new and unique systems design challenges. Serverless offers improved programmability for customers, yet at the cost of increased design complexity for cloud providers. One such challenge is effective and consistent resource management for serverless platforms, the implications of which we explore in this paper. In this paper, we conduct one of the first detailed in situ measurement studies of performance variability in AWS Lambda. We show that the observed variations in performance are not only significant, but stable enough to exploit. We then design and evaluate an end-to-end system that takes advantage of this resource variability to exploit the FaaS consumption-based pricing model, in which functions are charged based on their fine-grain execution time rather than actual low-level resource consumption. By using both light-weight resource probing and function execution times to identify attractive servers in serverless platforms, customers of FaaS services can cause their functions to execute on better performing servers and realize a cost savings of up to 13% in the same AWS region. \u00c2\u00a9 2020 ACM.",
      "authors": [
        "Ginzburg, S.",
        "Freedman, M.J."
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1145/3429880.3430099",
      "keywords": [],
      "number_of_pages": 6,
      "pages": "43-48",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450382045",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "WOSC 2020 - Proceedings of the 2020 6th International Workshop on Serverless Computing, Part of Middleware 2020"
      },
      "publication_date": "2020-12-07",
      "selected": null,
      "title": "Serverless Isn't Server-Less: Measuring and Exploiting Resource Variability on Cloud FaaS Platforms",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85099607225&origin=inward"
      ]
    },
    {
      "abstract": "Organization of tasks as workflows are an essential feature to expand the applicability of the serverless computing framework. Existing serverless platforms are either agnostic to function chains (workflows as a composition of functions) or rely on naive provisioning and management mechanisms of the serverless framework-an example is that they provision resources after the trigger to each function in a workflow arrives thereby forcing a setup latency for each function in the workflow. In this work, we focus on mitigating the cascading cold start problem- the latency overheads in triggering a sequence of serverless functions according to a workflow specification. We first establish the nature and extent of the cascading effects in cold start situations across multiple commercial server platforms and cloud providers. Towards mitigating these cascading overheads, we design and develop several optimizations, that are built into our tool Xanadu. Xanadu offers multiple instantiation options based on the desired runtime isolation requirements and supports function chaining with or without explicit workflow specifications. Xanadu's optimizations to address the cascading cold start problem are built on speculative and just-in-time provisioning of resources. Our evaluation of the Xanadu system reveals almost complete elimination of cascading cold starts at minimal cost overheads, outperforming the available state of the art platforms. For even relatively short workflows, Xanadu reduces platform overheads by almost 18x compared to Knative and 10x compared to Apache Openwhisk. \u00c2\u00a9 2020 Association for Computing Machinery.",
      "authors": [
        "Daw, N.",
        "Bellur, U.",
        "Kulkarni, P."
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1145/3423211.3425690",
      "keywords": [
        "Just-in-time scheduling",
        "Serverless workflows",
        "Speculative deployment"
      ],
      "number_of_pages": 15,
      "pages": "356-370",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450381536",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Middleware 2020 - Proceedings of the 2020 21st International Middleware Conference"
      },
      "publication_date": "2020-12-07",
      "selected": null,
      "title": "Xanadu: Mitigating cascading cold starts in serverless function chain deployments",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85098485885&origin=inward"
      ]
    },
    {
      "abstract": "The serverless computing paradigm ushers in new concepts for running applications and services in the cloud. Currently, commercial solutions dominate the market, though open-source solutions do exist. As a consequence of this, there is little research detailing how well the different open-source solutions perform. In this paper, one such open-source solution, Apache OpenWhisk, is investigated to shed light on the capabilities and limitations inherent of such serverless computing architecture, and principally to provide further research on this particular solution's performance. This is accomplished through an extensive evaluation of OpenWhisk, involving a variety of experiments and benchmarks. \u00c2\u00a9 2020 IEEE.",
      "authors": [
        "Karim Djemame",
        "Matthew Parker",
        "Daniel Datsev"
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/UCC48980.2020.00052",
      "keywords": [
        "Containerisation",
        "Serverless Architecture",
        "Openwhisk",
        "Performance Evaluation",
        "Cloud Computing"
      ],
      "number_of_pages": 7,
      "pages": "329-335",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-6654-1563-7",
        "issn": null,
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings - 2020 IEEE/ACM 13th International Conference on Utility and Cloud Computing, UCC 2020"
      },
      "publication_date": "2020-12-07",
      "selected": null,
      "title": "Open-source Serverless Architectures: an Evaluation of Apache OpenWhisk",
      "urls": [
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9302817",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85099593459&origin=inward"
      ]
    },
    {
      "abstract": "We are witnessing an increasing trend towards using Machine Learning (ML) based prediction systems, spanning across different application domains, including product recommendation systems, personal assistant devices, facial recognition, etc. These applications typically have diverse requirements in terms of accuracy and response latency, that can be satisfied by a myriad of ML models. However, the deployment cost of prediction serving primarily depends on the type of resources being procured, which by themselves are heterogeneous in terms of provisioning latencies and billing complexity. Thus, it is strenuous for an inference serving system to choose from this confounding array of resource types and model types to provide low-latency and cost-effective inferences. In this work we quantitatively characterize the cost, accuracy and latency implications of hosting ML inferences on different public cloud resource offerings. Our evaluation shows that, prior work does not solve the problem from both dimensions of model and resource heterogeneity. Hence, to holistically address this problem, we need to solve the issues that arise from combining both model and resource heterogeneity towards optimizing for application constraints. Towards this, we discuss the design implications of a self-managed inference serving system, which can optimize for application requirements based on public cloud resource characteristics. \u00c2\u00a9 2020 ACM.",
      "authors": [
        "Gunasekaran, J.R.",
        "Mishra, C.S.",
        "Thinakaran, P.",
        "Kandemir, M.T.",
        "Das, C.R."
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1145/3429880.3430093",
      "keywords": [
        "resource-management",
        "inference",
        "serverless"
      ],
      "number_of_pages": 6,
      "pages": "7-12",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450382045",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "WOSC 2020 - Proceedings of the 2020 6th International Workshop on Serverless Computing, Part of Middleware 2020"
      },
      "publication_date": "2020-12-07",
      "selected": null,
      "title": "Implications of Public Cloud Resource Heterogeneity for Inference Serving",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85099607718&origin=inward"
      ]
    },
    {
      "abstract": "Datacenters are witnessing a rapid surge in the adoption of serverless functions for microservices-based applications. A vast majority of these microservices typically span less than a second, have strict SLO requirements, and are chained together as per the requirements of an application. The aforementioned characteristics introduce a new set of challenges, especially in terms of container provisioning and management, as the state-of-the-art resource management frameworks, employed in serverless platforms, tend to look at microservice-based applications similar to conventional monolithic applications. Hence, these frameworks suffer from microservice agnostic scheduling and colossal container over-provisioning, especially during workload fluctuations, thereby resulting in poor resource utilization. In this work, we quantify the above shortcomings using a variety of workloads on a multi-node cluster managed by the Kubernetes and Brigade serverless framework. To address them, we propose Fifer \u00c3\u0090 an adaptive resource management framework to efficiently manage function-chains on serverless platforms. The key idea is to make Fifer (i) utilization conscious by efficiently bin packing jobs to fewer containers using function-aware container scaling and intelligent request batching, and (ii) at the same time, SLO-compliant by proactively spawning containers to avoid cold-starts, thus minimizing the overall response latency. Combining these benefits, Fifer improves container utilization and cluster-wide energy consumption by 4\u00c3\u0097 and 31%, respectively, without compromising on SLO's, when compared to the state-of-the-art schedulers employed by serverless platforms. \u00c2\u00a9 2020 Association for Computing Machinery.",
      "authors": [
        "Gunasekaran, J.R.",
        "Thinakaran, P.",
        "Nachiappan, N.C.",
        "Kandemir, M.T.",
        "Das, C.R."
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1145/3423211.3425683",
      "keywords": [
        "Scheduling",
        "Queuing",
        "Serverless",
        "Resource-management"
      ],
      "number_of_pages": 16,
      "pages": "280-295",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450381536",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Middleware 2020 - Proceedings of the 2020 21st International Middleware Conference"
      },
      "publication_date": "2020-12-07",
      "selected": null,
      "title": "Fifer: Tackling resource underutilization in the serverless era",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85098501448&origin=inward"
      ]
    },
    {
      "abstract": "Function-as-service (FaaS) platforms promise a simpler programming model for cloud computing, in which the developers concentrate on writing its applications. In contrast, platform providers take care of resource management and administration. As FaaS users are billed based on the execution of the functions, platform providers have a natural incentive not to keep idle resources running at the platform's expense. However, this strategy may lead to the cold start issue, in which the execution of a function is delayed because there is no ready resource to host the execution. Cold starts can take hundreds of milliseconds to seconds and have been a prohibitive and painful disadvantage for some applications. This work describes and evaluates a technique to start functions, which restores snapshots from previously executed function processes. We developed a prototype of this technique based on the CRIU process checkpoint/restore Linux tool. We evaluate this prototype by running experiments that compare its start-up time against the standard Unix process creation/start-up procedure. We analyze the following three functions: i) a \"do-nothing\" function, ii) an Image Resizer function, and iii) a function that renders Markdown files. The results attained indicate that the technique can improve the start-up time of function replicas by 40% (in the worst case of a \"do-nothing\" function) and up to 71% for the Image Resizer one. Further analysis indicates that the runtime initialization is a key factor, and we confirmed it by performing a sensitivity analysis based on synthetically generated functions of different code sizes. These experiments demonstrate that it is critical to decide when to create a snapshot of a function. When one creates the snapshots of warm functions, the speed-up achieved by the prebaking technique is even higher: the speed-up increases from 127.45% to 403.96%, for a small, synthetic function; and for a bigger, synthetic function, this ratio increases from 121.07% to 1932.49%. \u00c2\u00a9 2020 Association for Computing Machinery.",
      "authors": [
        "Silva, P.",
        "Fireman, D.",
        "Pereira, T.E."
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1145/3423211.3425682",
      "keywords": [
        "Faas",
        "Serverless",
        "Cloud",
        "Performance evaluation"
      ],
      "number_of_pages": 13,
      "pages": "1-13",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450381536",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Middleware 2020 - Proceedings of the 2020 21st International Middleware Conference"
      },
      "publication_date": "2020-12-07",
      "selected": null,
      "title": "Prebaking functions to warm the serverless cold start",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85098482026&origin=inward"
      ]
    },
    {
      "abstract": "Serverless computing is becoming more and more attractive for cloud solution architects and developers. This new computing paradigm relies on Function-as-a-Service (FaaS) platforms that enable deploying functions without being concerned with the underlying infrastructure. An important challenge in designing FaaS platforms is ensuring the availability of deployed functions. Existing FaaS platforms address this challenge principally through retrying function executions. In this paper, we propose and implement an alternative fault-tolerance approach based on active-standby failover. Results from an experimental evaluation show that our approach increases availability and performance compared to the retry-based approach. \u00c2\u00a9 2020 ACM.",
      "authors": [
        "Bouizem, Y.",
        "Parlavantzas, N.",
        "DIb, D.",
        "Morin, C."
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1145/3429880.3430097",
      "keywords": [
        "availability",
        "FaaS",
        "fault tolerance"
      ],
      "number_of_pages": 6,
      "pages": "31-36",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450382045",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "WOSC 2020 - Proceedings of the 2020 6th International Workshop on Serverless Computing, Part of Middleware 2020"
      },
      "publication_date": "2020-12-07",
      "selected": null,
      "title": "Active-Standby for High-Availability in FaaS",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85099596478&origin=inward"
      ]
    },
    {
      "abstract": "The proceedings contain 30 papers. The topics discussed include: prebaking functions to warm the serverless cold start; resilient cloud-based replication with low latency; practical active revocation; secureTF: a secure tensorflow framework; on delivery guarantees in distributed content-based publish/subscribe systems; MATCH: a decentralized middleware for fair matchmaking in peer-to-peer markets; PipeTune: pipeline parallelism of hyper and system parameters tuning for deep learning clusters; fast training of deep learning models over multiple GPUs; and FLeet: online federated learning via staleness awareness and performance prediction.",
      "authors": [],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450381536",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Middleware 2020 - Proceedings of the 2020 21st International Middleware Conference"
      },
      "publication_date": "2020-12-07",
      "selected": null,
      "title": "Middleware 2020 - Proceedings of the 2020 21st International Middleware Conference",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85098508770&origin=inward"
      ]
    },
    {
      "abstract": "To help better understand factors that impact performance on Function-as-a-Service (FaaS) platforms we have developed the Serverless Application Analytics Framework (SAAF). SAAF provides a reusable framework supporting multiple programming languages that developers can integrate into a function's package for deployment to multiple commercial and open source FaaS platforms. SAAF improves the observability of FaaS function deployments by collecting forty-eight distinct metrics to enable developers to profile CPU and memory utilization, monitor infrastructure state, and observe platform scalability. In this paper, we describe SAAF in detail and introduce supporting tools highlighting important features and how to use them. Our client application, FaaS Runner, provides a tool to orchestrate workloads and automate the process of conducting experiments across FaaS platforms. We provide a case study demonstrating the integration of SAAF into an existing open source image processing pipeline built for AWS Lambda. Using FaaS Runner, we automate experiments and acquire metrics from SAAF to profile each function of the pipeline to evaluate performance implications. Finally, we summarize contributions using our tools to evaluate implications of different programming languages for serverless data processing, and to build performance models to predict runtime for serverless workloads. \u00c2\u00a9 2020 ACM.",
      "authors": [
        "Cordingly, R.",
        "Yu, H.",
        "Hoang, V.",
        "Sadeghi, Z.",
        "Foster, D.",
        "Perez, D.",
        "Hatchett, R.",
        "Lloyd, W."
      ],
      "categories": null,
      "citations": 1,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1145/3429880.3430103",
      "keywords": [
        "Serverless Computing",
        "Programming Languages",
        "Frameworks",
        "Performance Evaluation",
        "Function-as-a-Service"
      ],
      "number_of_pages": 6,
      "pages": "67-72",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450382045",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "WOSC 2020 - Proceedings of the 2020 6th International Workshop on Serverless Computing, Part of Middleware 2020"
      },
      "publication_date": "2020-12-07",
      "selected": null,
      "title": "The Serverless Application Analytics Framework: Enabling Design Trade-off Evaluation for Serverless Software",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85099550918&origin=inward"
      ]
    },
    {
      "abstract": "Serverless computing has recently gained much attention as a feasible alternative to always-on IaaS for data processing. However, existing severless frameworks are not (yet) usable enough to reach out to a large number of users. To wit, they still require developers to specify the number of serverless functions for a simple sort job. We report our experience in designing Primula, a serverless sort operator that abstracts away users from the complexities of resource provisioning, skewed data and stragglers, yielding the most accessible sort primitive to date. Our evaluation on the IBM Cloud platform demonstrates the usability of Primula without abandoning performance (e.g., 3x faster than a serverless Spark backend and 62% slower than a hybrid serverless/IaaS solution). \u00c2\u00a9 2020 ACM.",
      "authors": [
        "S\u00c3\u00a1nchez-Artigas, M.",
        "Eizaguirre, G.T.",
        "Vernik, G.",
        "Stuart, L.",
        "Garci\u00c3\u00a1-L\u00c3\u00b3pez, P."
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1145/3429357.3430522",
      "keywords": [
        "Function-as-a-service",
        "Serverless computing"
      ],
      "number_of_pages": 7,
      "pages": "31-37",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450382014",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Middleware Industry 2020 - Proceedings of the 2020 21st International Middleware Conference Industrial Track, Part of Middleware 2020"
      },
      "publication_date": "2020-12-07",
      "selected": null,
      "title": "Primula: A practical shuffle/sort operator for serverless computing",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85100496382&origin=inward"
      ]
    },
    {
      "abstract": "Fully-managed cloud and Function-as-a-Service (FaaS) services allow the wide adoption of serverless computing for various cloud-native applications. Despite the many advantages that serverless computing provides, no direct connection support exists between function run-times, and it is a barrier for data-intensive applications. To overcome this limitation, the leading cloud computing vendor Amazon Web Services (AWS) has started to support mounting the network file system (NFS) across different function run-times. This paper quantitatively evaluates the performance of accessing NFS storage from multiple function run-times and compares the performance with other methods of sharing data among function run-times. Despite the great qualitative benefits of the approach, the limited I/O bandwidth of NFS storage can become a bottleneck, especially when the number of concurrent access from function run-times increases. \u00c2\u00a9 2020 ACM.",
      "authors": [
        "Choi, J.",
        "Lee, K."
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1145/3429880.3430096",
      "keywords": [],
      "number_of_pages": 6,
      "pages": "25-30",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450382045",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "WOSC 2020 - Proceedings of the 2020 6th International Workshop on Serverless Computing, Part of Middleware 2020"
      },
      "publication_date": "2020-12-07",
      "selected": null,
      "title": "Evaluation of Network File System as a Shared Data Storage in Serverless Computing",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85099566413&origin=inward"
      ]
    },
    {
      "abstract": "Scaling transparency means that applications can expand in scale without changes to the system structure or the application algorithms. Serverless Computing's inherent auto-scaling support and fast function launching is ideally suited to support scaling transparency in different domains. In particular, Proteomic applications could considerably benefit from scaling transparency and serverless technologies due to their high concurrency requirements. Therefore, the auto-provisioning nature of serverless platforms makes this computing model an alternative to satisfy dynamically the resources required by protein folding simulation processes. However, the transition to these architectures must face challenges: they should show comparable performance and cost to code running in Virtual Machines (VMs). In this article, we demonstrate that Proteomics applications implemented with the Replica Exchange algorithm can be moved to serverless settings guaranteeing scaling transparency. We also validate that we can reduce the total execution time by around forty percent with comparable cost to cluster technologies (Work Queue) over VMs. \u00c2\u00a9 2020 ACM.",
      "authors": [
        "Mirabelli, M.E.",
        "Garc\u00c3\u00ada-L\u00c3\u00b3pez, P.",
        "Vernik, G."
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1145/3429880.3430101",
      "keywords": [
        "Scaling Transparency",
        "Replica Exchange",
        "Serverless"
      ],
      "number_of_pages": 6,
      "pages": "55-60",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450382045",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "WOSC 2020 - Proceedings of the 2020 6th International Workshop on Serverless Computing, Part of Middleware 2020"
      },
      "publication_date": "2020-12-07",
      "selected": null,
      "title": "Bringing scaling transparency to Proteomics applications with serverless computing",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85099557165&origin=inward"
      ]
    },
    {
      "abstract": "This paper introduces a new primitive to serverless language runtimes called freshen. With freshen, developers or providers specify functionality to perform before a given function executes. This proactive technique allows for overheads associated with serverless functions to be mitigated at execution time, which improves function responsiveness. We show various predictive opportunities exist to run freshen within reasonable time windows. A high-level design and implementation are described, along with preliminary results to show the potential benefits of our scheme. \u00c2\u00a9 2020 ACM.",
      "authors": [
        "Hunhoff, E.",
        "Irshad, S.",
        "Thurimella, V.",
        "Tariq, A.",
        "Rozner, E."
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1145/3429880.3430102",
      "keywords": [
        "Serverless Computing",
        "Resource Management"
      ],
      "number_of_pages": 6,
      "pages": "61-66",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450382045",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "WOSC 2020 - Proceedings of the 2020 6th International Workshop on Serverless Computing, Part of Middleware 2020"
      },
      "publication_date": "2020-12-07",
      "selected": null,
      "title": "Proactive Serverless Function Resource Management",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85099584821&origin=inward"
      ]
    },
    {
      "abstract": "As serverless computing continues to revolutionize the design and deployment of web services, it has become an increasingly attractive target to attackers. These adversaries are developing novel tactics for circumventing the ephemeral nature of serverless functions, exploiting container reuse optimizations and achieving lateral movement by \"living off the land\"provided by legitimate serverless workflows. Unfortunately, the traditional security controls currently offered by cloud providers are inadequate to counter these new threats. In this work, we propose will.iam,1 a workflow-aware access control model and reference monitor that satisfies the functional requirements of the serverless computing paradigm. will.iam encodes the protection state of a serverless application as a permissions graph that describes the permissible transitions of its workflows, associating web requests with a permissions set at the point of ingress according to a graph-based labeling state. By proactively enforcing the permissions requirements of downstream workflow components, will.iam is able to avoid the costs of partially processing unauthorized requests and reduce the attack surface of the application. We implement the will.iam framework in Go and evaluate its performance as compared to recent related work against the well-established Nordstrom \"Hello, Retail!\"application. We demonstrate that will.iam imposes minimal burden to requests, averaging 0.51% overhead across representative workflows, but dramatically improves performance when handling unauthorized requests (e.g., DDoS attacks) as compared to past solutions. will.iam thus demonstrates an effective and practical alternative for authorization in the serverless paradigm. \u00c2\u00a9 2020 ACM.",
      "authors": [
        "Sankaran, A.",
        "Datta, P.",
        "Bates, A."
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1145/3427228.3427665",
      "keywords": [
        "Information Flow Control",
        "Serverless Computing",
        "Access Control"
      ],
      "number_of_pages": 14,
      "pages": "496-509",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450388580",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "ACM International Conference Proceeding Series"
      },
      "publication_date": "2020-12-07",
      "selected": null,
      "title": "Workflow Integration Alleviates Identity and Access Management in Serverless Computing",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85098070402&origin=inward"
      ]
    },
    {
      "abstract": "The proceedings contain 6 papers. The topics discussed include: mmFilter: language-guided video analytics at the edge; blockNDP: block-storage near data processing; DiagSys: network and third-party web-service monitoring from the browser\u00e2\u0080\u0099s perspective (industry track); HopsFS-S3: extending object stores with POSIX-like semantics and more (industry track); Primula: a practical shu\u00ef\u00ac\u0084e/sort operator for serverless computing; and secure volume hot-plugging for containers (industry track).",
      "authors": [],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450382014",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Middleware Industry 2020 - Proceedings of the 2020 21st International Middleware Conference Industrial Track, Part of Middleware 2020"
      },
      "publication_date": "2020-12-07",
      "selected": null,
      "title": "Middleware Industry 2020 - Proceedings of the 2020 21st International Middleware Conference Industrial Track, Part of Middleware 2020",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85100468197&origin=inward"
      ]
    },
    {
      "abstract": " Serverless computing becomes the new trending paradigm in cloud computing,\nallowing developers to focus on the core application logic and rapidly\nprototype applications. Due to the great prospects of serverless computing, in\nrecent years, most major cloud vendors have rolled out their commodity\nserverless computing platforms. However, the characteristics of these platforms\nhave not been systematically studied. To fill this knowledge gap, this paper\npresents a comprehensive study on characterizing mainstream commodity\nserverless computing platforms (i.e., AWS Lambda, Azure Functions, Google Cloud\nFunctions, and Alibaba Cloud Function Compute). First, we qualitatively analyze\nthese platforms from development, deployment, and runtime aspects to form the\ntaxonomy of characteristics. Additionally, we quantitatively evaluate the\nactual performance of different serverless computing platforms through our\ndesigned benchmark platform. Our benchmark platform has two types of\nbenchmarks, i.e., microbenchmarks and macrobenchmarks. Based on the results of\nqualitative and quantitative analyses, we derive a series of findings and\nprovide insightful implications for both developers and cloud vendors.\n",
      "authors": [
        "Wen, Jinfeng",
        "Liu, Yi",
        "Chen, Zhenpeng",
        "Ma, Yun",
        "Wang, Haoyu",
        "Liu, Xuanzhe"
      ],
      "categories": null,
      "citations": null,
      "comments": null,
      "databases": [
        "arXiv"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": null,
      "publication_date": "2020-12-02",
      "selected": null,
      "title": "Understanding Characteristics of Commodity Serverless Computing Platforms",
      "urls": [
        "https://arxiv.org/pdf/2012.00992",
        "http://arxiv.org/abs/2012.00992v2",
        "http://arxiv.org/pdf/2012.00992v2"
      ]
    },
    {
      "abstract": "In this paper, we present the Pipeline for Observational Data Processing, Analysis, and Collaboration (PODPAC) software. PODPAC is an open-source Python li",
      "authors": [
        "Mattheus P. Ueckermann",
        "Jerry Bieszczad",
        "Dara Entekhabi",
        "Marc L. Shapiro",
        "David R. Callendar",
        "David Sullivan",
        "Jeffrey Milloy"
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1007/s12145-020-00506-0",
      "keywords": [
        "JupyterLab",
        "Reproducibility",
        "Serverless cloud computing",
        "Plug-and-play algorithms",
        "Data harmonization",
        "SMAP",
        "Python"
      ],
      "number_of_pages": 15,
      "pages": "1507-1521",
      "publication": {
        "category": "Journal",
        "cite_score": 2.9,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "18650473",
        "publisher": "Springer Verlag",
        "sjr": 0.511,
        "snip": 0.999,
        "subject_areas": [
          "Earth and Planetary Sciences (all)"
        ],
        "title": "Earth Science Informatics"
      },
      "publication_date": "2020-12-01",
      "selected": null,
      "title": "PODPAC: open-source Python software for enabling harmonized, plug-and-play processing of disparate earth observation data sets and seamless transition onto the serverless cloud by earth scientists",
      "urls": [
        "https://link.springer.com/content/pdf/10.1007/s12145-020-00506-0.pdf",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85089885051&origin=inward"
      ]
    },
    {
      "abstract": "The shift towards microservisation which can be observed in recent developments of the cloud landscape for applications has led towards the emergence of the Function as a Service (FaaS) concept, also called Serverless. This term describes the event-driven, reactive programming paradigm of functional components in container instances, which are scaled, deployed, executed and billed by the cloud provider on demand. However, increasing reports of issues of Serverless services have shown significant obscurity regarding its reliability. In particular, developers and especially system administrators struggle with latency compliance. In this paper, following a systematic literature review, the performance indicators influencing traffic and the effective delivery of the provider&rsquo;s underlying infrastructure are determined by carrying out empirical measurements based on the example of a File Upload Stream on Amazon&rsquo;s Web Service Cloud. This popular example was used as an experimental baseline in this study, based on different incoming request rates. Different parameters were used to monitor and evaluate changes through the function&rsquo;s logs. It has been found that the so-called Cold-Start, meaning the time to provide a new instance, can increase the Round-Trip-Time by 15%, on average. Cold-Start happens after an instance has not been called for around 15 min, or after around 2 h have passed, which marks the end of the instance&rsquo;s lifetime. The research shows how the numbers have changed in comparison to earlier related work, as Serverless is a fast-growing field of development. Furthermore, emphasis is given towards future research to improve the technology, algorithms, and support for developers.",
      "authors": [
        "Muller, Lisa",
        "Chrysoulas, Christos",
        "Pitropakis, Nikolaos",
        "Barclay, Peter  J."
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.3390/bdcc4040038",
      "keywords": [
        "Cloud computing",
        "Performance",
        "FaaS",
        "Serverless computing",
        "Traffic analysis",
        "AWS Lambda"
      ],
      "number_of_pages": 29,
      "pages": "1-29",
      "publication": {
        "category": "Journal",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": null,
        "publisher": "Multidisciplinary Digital Publishing Institute",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Big Data and Cognitive Computing"
      },
      "publication_date": "2020-12-01",
      "selected": null,
      "title": "A Traffic Analysis on Serverless Computing Based on the Example of a File Upload Stream on AWS Lambda",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85098247059&origin=inward",
        "https://www.mdpi.com/2504-2289/4/4/38/pdf"
      ]
    },
    {
      "abstract": "With reference to the MeSmart project, the Municipality of Messina is making a great investments to deploy several types of cameras and digital devices across the city for carrying out different tasks related to mobility management, such as traffic flow monitoring, number plate recognition, video surveillance etc. To this aim, exploiting specific devices for each task increases infrastructure and management costs, reducing flexibility. On the contrary, using general-purpose devices customized to accomplish multiple tasks at the same time can be a more efficient solution. Another important approach that can improve the efficiency of mobility services is moving computation tasks at the Edge of the managed system instead of in remote centralized serves, so reducing delays in event detection and processing and making the system more scalable. In this paper, we investigate the adoption of Edge devices connected to high-resolution cameras to create a general-purpose solution for performing different tasks. In particular, we use the Function as a Service (FaaS) paradigm to easily configure the Edge device and set up new services. The key results of our work is deploying versatile, scalable and adaptable systems able to respond to smart city&rsquo;s needs, even if such needs change over time. We tested the proposed solution setting up a vehicle counting solution based on OpenCV, and automatically deploying necessary functions into an Edge device. From experimental results, it results that computing performance at the Edge overtakes the performance of a device specifically designed for vehicle counting under certain conditions and thanks to our reconfigurable functions.",
      "authors": [
        "Galletta, Antonino",
        "Ruggeri, Armando",
        "Fazio, Maria",
        "Dini, Gianluca",
        "Villari, Massimo"
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.3390/jsan9040055",
      "keywords": [
        "OpenCV",
        "Traffic flow monitoring",
        "FaaS",
        "Edge computing",
        "Virtual device"
      ],
      "number_of_pages": null,
      "pages": null,
      "publication": {
        "category": "Journal",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": null,
        "publisher": "Multidisciplinary Digital Publishing Institute",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Journal of Sensor and Actuator Networks"
      },
      "publication_date": "2020-12-01",
      "selected": null,
      "title": "MeSmart-Pro: Advanced Processing at the Edge for Smart Urban Monitoring and Reconfigurable Services",
      "urls": [
        "https://www.mdpi.com/2224-2708/9/4/55/pdf",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85104152047&origin=inward"
      ]
    },
    {
      "abstract": "The Function-as-a-Service paradigm emerged not only as a pricing technique, but also as a programming model promising to simplify developing to the cloud. Interestingly, while placing functions across hosts under the service platform is believed to be flexible, currently the available platforms pay little attention to co-locate connected functions, or data with the respective processing function in order to improve performance. Even though the local function invocation and data access might be an order of magnitude faster than their remote intra-cloud counterparts. In this paper, we therefore propose a Function-as-a-Service platform design that reaps the performance benefits of co-location. We build the platform on WebAssembly, a secure and flexible tool for efficient local function invocations, and on a distributed in-memory database, which allows arbitrary data placement. On top we advocate smart placement strategies for function executions and data, decoupled from the functions. Hence we envision good horizontal scaling of functions while keeping the experienced processing latency to that of a single machine case. \u00c2\u00a9 2020 Scientific Association for Infocommunications. All rights reserved.",
      "authors": [
        "Haja, D.",
        "Turanyi, Z.R.",
        "Toka, L."
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.36244/ICJ.2020.4.3",
      "keywords": [
        "Runtime",
        "Function as a service",
        "Platform",
        "Performance",
        "FaaS",
        "WebAssembly",
        "Co-location"
      ],
      "number_of_pages": 8,
      "pages": "14-21",
      "publication": {
        "category": "Journal",
        "cite_score": 0.8,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "20612079",
        "publisher": "Scientific Association for Infocommunications",
        "sjr": 0.185,
        "snip": 0.221,
        "subject_areas": [
          "Computer Science (all)",
          "Electrical and Electronic Engineering"
        ],
        "title": "Infocommunications Journal"
      },
      "publication_date": "2020-12-01",
      "selected": null,
      "title": "Location, proximity, affinity - The key factors in faas",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85101339658&origin=inward"
      ]
    },
    {
      "abstract": "The proceedings contain 183 papers. The topics discussed include: design of direct read from sparse segments in MPI-IO; descriptive and predictive analysis of aggregating functions in serverless clouds: the case of video streaming; a proactive uncertainty driven model for data synopses management in pervasive applications; on-line traffic scheduling optimization in IEEE 802.1Qch based time-sensitive networks; multi-layer and heterogeneous resource management in SDN-based space-terrestrial integrated networks; structure preserved graph reordering for fast graph processing without the pain; an efficient approach to vectorize the hybrid breadth-first search; a novel developer portrait model based on Bert-capsule network; job placement strategy with opportunistic resource sharing for distributed deep learning clusters; and batched pattern-aware cache management strategy for astronomical time series sub-images retrieval.",
      "authors": [],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781728176499",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings - 2020 IEEE 22nd International Conference on High Performance Computing and Communications, IEEE 18th International Conference on Smart City and IEEE 6th International Conference on Data Science and Systems, HPCC-SmartCity-DSS 2020"
      },
      "publication_date": "2020-12-01",
      "selected": null,
      "title": "Proceedings - 2020 IEEE 22nd International Conference on High Performance Computing and Communications, IEEE 18th International Conference on Smart City and IEEE 6th International Conference on Data Science and Systems, HPCC-SmartCity-DSS 2020",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85105360704&origin=inward"
      ]
    },
    {
      "abstract": "We propose a benchmarking test suite to evaluate performance of cloud serverless platforms and an open source software tool to automate the test process. A",
      "authors": [
        "Hor\u00e1cio Martins",
        "Filipe Araujo",
        "Paulo Rupino da Cunha"
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1007/s10723-020-09523-1",
      "keywords": [
        "Benchmarking",
        "Cloud computing",
        "Serverless computing"
      ],
      "number_of_pages": 19,
      "pages": "691-709",
      "publication": {
        "category": "Journal",
        "cite_score": 5.6,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "15707873",
        "publisher": "Springer Netherlands",
        "sjr": 0.611,
        "snip": 1.693,
        "subject_areas": [
          "Information Systems",
          "Hardware and Architecture",
          "Computer Networks and Communications",
          "Software"
        ],
        "title": "Journal of Grid Computing"
      },
      "publication_date": "2020-12-01",
      "selected": null,
      "title": "Benchmarking Serverless Computing Platforms",
      "urls": [
        "https://link.springer.com/content/pdf/10.1007/s10723-020-09523-1.pdf",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85087642711&origin=inward"
      ]
    },
    {
      "abstract": "The proceedings contain 10 papers. The topics discussed include: demonstrating the practicality of unikernels to build a serverless platform at the edge; an experimental evaluation of the kubernetes cluster autoscaler in the cloud; malchain: virtual application behavior profiling by aggregated microservice data exchange graph; ReLeaSER: a reinforcement learning strategy for optimizing utilization of ephemeral cloud resources; test-based least privilege discovery on cloud infrastructure as code; scaling telecom core network functions in public cloud infrastructure; NFVGuard: verifying the security of multilevel network functions virtualization (NFV) stack; stateful container migration in geo-distributed environments; and on evolving software defined storage architecture.",
      "authors": [],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9780738143767",
        "issn": "23302194",
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings of the International Conference on Cloud Computing Technology and Science, CloudCom"
      },
      "publication_date": "2020-12-01",
      "selected": null,
      "title": "Proceedings - 2020 IEEE International Conference on Cloud Computing Technology and Science, CloudCom 2020",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85105792193&origin=inward"
      ]
    },
    {
      "abstract": "Building energy management and smart energy efficiency are two important application areas for computational intelligence systems. This work describes how we create computational intelligence (CI) in a building energy management system that learns about typical energy use in the building environment and alerts building managers when it detects unusual operating conditions. The CI system is part of a more extensive energy management system, named Tornado, and comprises multiple buildings, various energy forms, and roughly one hundred sensors. The Tornado computational intelligence system (short: Toci) executes both in the cloud and at the edge, on IoT devices deployed in the managed buildings. The machine learning that underlies the alerts that Toci generates runs in the cloud, but learned models are also deployed at the edge. Computational intelligence is not entirely lost when network connectivity is interrupted. One key aspect of our system is that it implemented using the serverless computing paradigm, making our system both highly scalable and efficient. In the paper, we describe several practical applications of TOCI and demonstrate that Toci can detect unusual operating conditions relevant in practice. Taking weather conditions into account, Toci can identify failing inverters in PV installations, despite the high normal fluctuation of solar power production. Due to the serverless architecture, Toci scales very well, and we demonstrate that this is achieved at a low monetary cost. \u00c2\u00a9 2020 IEEE.",
      "authors": [
        "Florian Huber",
        "Markus Mock"
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/SSCI47803.2020.9308324",
      "keywords": [
        "IoT",
        "serverless analytics",
        "computational intelligence",
        "serverless computing",
        "energy management systems"
      ],
      "number_of_pages": 10,
      "pages": "1287-1296",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-7281-2548-0",
        "issn": null,
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "2020 IEEE Symposium Series on Computational Intelligence, SSCI 2020"
      },
      "publication_date": "2020-12-01",
      "selected": null,
      "title": "Toci: Computational Intelligence in an Energy Management System",
      "urls": [
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9308324",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85099688730&origin=inward"
      ]
    },
    {
      "abstract": " Although historically the term serverless was also used in the context of\npeer-to-peer systems, it is more frequently associated with the architectural\nstyle for developing cloud-native applications. From the developer's\nperspective, serverless architectures allow reducing management efforts since\napplications are composed using provider-managed components, e.g.,\nDatabase-as-a-Service (DBaaS) and Function-as-a-Service (FaaS) offerings.\nBlockchains are distributed systems designed to enable collaborative scenarios\ninvolving multiple untrusted parties. It seems that the decentralized\npeer-to-peer nature of blockchains makes it interesting to consider them in\nserverless architectures, since resource allocation and management tasks are\nnot required to be performed by users. Moreover, considering their useful\nproperties of ensuring transaction's immutability and facilitating accountable\ninteractions, blockchains might enhance the overall guarantees and capabilities\nof serverless architectures. Therefore, in this work, we analyze how the\nblockchain technology and smart contracts fit into the serverless picture and\nderive a set of scenarios in which they act as different component types in\nserverless architectures. Furthermore, we formulate the implementation\nrequirements that have to be fulfilled to successfully use blockchains and\nsmart contracts in these scenarios. Finally, we investigate which existing\ntechnologies enable these scenarios, and analyze their readiness and\nsuitability to fulfill the formulated requirements.\n",
      "authors": [
        "Yussupov, Vladimir",
        "Falazi, Ghareeb",
        "Breitenb\u00fccher, Uwe",
        "Leymann, Frank"
      ],
      "categories": null,
      "citations": null,
      "comments": null,
      "databases": [
        "arXiv"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": null,
      "publication_date": "2020-11-24",
      "selected": null,
      "title": "On the Serverless Nature of Blockchains and Smart Contracts",
      "urls": [
        "http://arxiv.org/abs/2011.12729v1",
        "http://arxiv.org/pdf/2011.12729v1",
        "https://arxiv.org/pdf/2011.12729"
      ]
    },
    {
      "abstract": " Cloud-based serverless computing systems, either public or privately\nprovisioned, aim to provide the illusion of infinite resources and abstract\nusers from details of the allocation decisions. With the goal of providing a\nlow cost and a high QoS, the serverless computing paradigm offers opportunities\nthat can be harnessed to attain the goals. Specifically, our strategy in this\ndissertation is to avoid redundant computing, in cases where independent task\nrequests are similar to each other and for tasks that are pointless to process.\nWe explore two main approaches to (A) reuse part of computation needed to\nprocess the services and (B) proactively pruning tasks with a low chance of\nsuccess to improve the overall QoS of the system. For the first approach, we\npropose a mechanism to identify various types of \"mergeable\" tasks, which can\nbenefit from computational reuse if they are executed together as a group. To\nevaluate the task merging configurations extensively, we quantify the\nresource-saving magnitude and then leveraging the experimental data to create a\nresource-saving predictor. We investigate multiple tasks merging approaches\nthat suit different workload scenarios to determine when it is appropriate to\naggregate tasks and how to allocate them so that the QoS of other tasks is\nminimally affected. For the second approach, we developed the mechanisms to\nskip tasks whose chance of completing on time is not worth pursuing by drop or\ndefer them. We determined the minimum chance of success thresholds for tasks to\npass to get scheduled and executed. We dynamically adjust such thresholds based\non multiple characteristics of the arriving workload and the system's\nconditions. We employed approximate computing to reduce the pruning mechanism's\ncomputational overheads and ensure that the mechanism can be used practically.\n",
      "authors": [
        "Denninnart, Chavit"
      ],
      "categories": null,
      "citations": null,
      "comments": "PhD thesis, University of Louisiana at Lafayette (2020)",
      "databases": [
        "arXiv"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": null,
      "publication_date": "2020-11-23",
      "selected": null,
      "title": "Cost- and QoS-Efficient Serverless Cloud Computing",
      "urls": [
        "https://arxiv.org/pdf/2011.11711",
        "http://arxiv.org/abs/2011.11711v1",
        "http://arxiv.org/pdf/2011.11711v1"
      ]
    },
    {
      "abstract": "The Internet of Things is a novel and promising paradigm already being part of some of our daily activities. At the end of this year, the Internet will connect about 7 billion smart things. They are part of solutions ranging from Smart Cities to telemetry collection for Industrial applications generating a colossal amount of real-time streaming data. Cloud-based services have also being evolved from pure IaaS providing Virtual Machines to sophisticated PaaS, SaaS, and FaaS designed explicitly for Big Data, Analytics and IoT, they all exhibiting serverless architectures. Moreover, Information Retrieval (IR) is becoming a crucial application layer on top of IoT application for searching and retrieving relevant data on the real-time streaming collections, on sensors, or things. In the last years, a significant set of approaches have been explored IoT, Big Data, and IoT Search Engines. However, the cybersecurity has not been meticulously researched. Neither for IoT nor IR, as a critical component at searching on the IoT. In this paper, we present an approach to consider cybersecurity as an IR dimension for cloud-based edge-powered searching over IoT from a theoretical perspective, we compare through a compact survey the related works and finalise with a multi-perspective discussion to embrace cybersecurity in the IoT/IoTSE architectures. \u00c2\u00a9 2020 IEEE.",
      "authors": [
        "Cristyan Manta-Caro",
        "Juan M. Fern\u00e1ndez-Luna",
        "Wilmar Jaimes Fern\u00e1ndez"
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/LATINCOM50620.2020.9282336",
      "keywords": [
        "IoT",
        "Privacy and Trust",
        "Cybersecurity",
        "IoTSE Search Engines",
        "Security"
      ],
      "number_of_pages": 6,
      "pages": "1-6",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-7281-8904-8",
        "issn": "2330-989X",
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings - 2020 IEEE Latin-American Conference on Communications, LATINCOM 2020"
      },
      "publication_date": "2020-11-18",
      "selected": null,
      "title": "Cybersecurity as Information Retrieval Dimension for Cloud-based Edge-powered IoT Search",
      "urls": [
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9282336",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85099239090&origin=inward"
      ]
    },
    {
      "abstract": "Function-as-a-Service (FaaS) has become increasingly popular in the software industry due to the implied cost-savings in event-driven workloads and its synergy with DevOps. To size an on-premise FaaS platform, it is important to estimate the required CPU and memory capacity to serve the expected loads. Given the service-level agreements, it is however challenging to take the cold start issue into account during the sizing process. We have investigated the similarity of this problem with the hit rate improvement problem in Time to Live (TTL) caches and concluded that solutions for TTL cache, although potentially applicable, lead to over-provisioning in FaaS. Thus, we propose a novel approach, COCOA, to solve this issue. COCOA uses a queueing-based approach to assess the effect of cold starts on FaaS response times. It also considers different memory consumption values depending on whether the function is idle or in execution. Using an event-driven FaaS simulator, FaasSim, that we have developed, we show that COCOA can reduce overprovisioning by over 70% under some of the workloads we have considered, while satisfying the service-level agreements. \u00c2\u00a9 2020 IEEE.",
      "authors": [
        "Alim Ul Gias",
        "Giuliano Casale"
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/MASCOTS50786.2020.9285966",
      "keywords": [
        "sizing",
        "layered queueing network",
        "serverless computing",
        "cold start",
        "Function-as-a-service"
      ],
      "number_of_pages": 8,
      "pages": "1-8",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-7281-9239-0",
        "issn": "1526-7539",
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings - IEEE Computer Society's Annual International Symposium on Modeling, Analysis, and Simulation of Computer and Telecommunications Systems, MASCOTS"
      },
      "publication_date": "2020-11-17",
      "selected": null,
      "title": "COCOA: Cold Start Aware Capacity Planning for Function-as-a-Service Platforms",
      "urls": [
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9285966",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85098847952&origin=inward"
      ]
    },
    {
      "abstract": "Internet of Things (IoT) devices are becoming increasingly prevalent in our environment, yet the process of programming these devices and processing the data they produce remains difficult. Typically, data is processed on device, involving arduous work in low level languages, or data is moved to the cloud, where abundant resources are available for Functions as a Service (FaaS) or other handlers. FaaS is an emerging category of flexible computing services, where developers deploy self-contained functions to be run in portable and secure containerized environments; however, at the moment, these functions are limited to running in the cloud or in some cases at the 'edge' of the network using resource rich, Linux-based systems.In this paper, we present NanoLambda, a portable platform that brings FaaS, high-level language programming, and familiar cloud service APIs to non-Linux and microcontroller-based IoT devices. To enable this, NanoLambda couples a new, minimal Python runtime system that we have designed for the least capable end of the IoT device spectrum, with API compatibility for AWS Lambda and S3. NanoLambda transfers functions between IoT devices (sensors, edge, cloud), providing power and latency savings while retaining the programmer productivity benefits of high-level languages and FaaS. A key feature of NanoLambda is a scheduler that intelligently places function executions across multi-scale IoT deployments according to resource availability and power constraints. We evaluate a range of applications that use NanoLambda to run on devices as small as the ESP8266 with 64KB of ram and 512KB flash storage. \u00c2\u00a9 2020 IEEE.",
      "authors": [
        "Gareth George",
        "Fatih Bakir",
        "Rich Wolski",
        "Chandra Krintz"
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/SEC50012.2020.00035",
      "keywords": [
        "IoT",
        "cloud functions",
        "microcontrollers",
        "portability",
        "serverless",
        "edge computing"
      ],
      "number_of_pages": 12,
      "pages": "220-231",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-7281-5944-7",
        "issn": null,
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings - 2020 IEEE/ACM Symposium on Edge Computing, SEC 2020"
      },
      "publication_date": "2020-11-12",
      "selected": null,
      "title": "NanoLambda: Implementing Functions as a Service at All Resource Scales for the Internet of Things.",
      "urls": [
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9355717",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85102176586&origin=inward"
      ]
    },
    {
      "abstract": " As an emerging application paradigm, serverless computing attracts attention\nfrom more and more attackers. Unfortunately, security tools for conventional\napplications cannot be easily ported to serverless, and existing serverless\nsecurity solutions are inadequate. In this paper, we present \\emph{SecLambda},\nan extensible security framework that leverages local function state and global\napplication state to perform sophisticated security tasks to protect an\napplication. We show how SecLambda can be used to achieve control flow\nintegrity, credential protection, and rate limiting in serverless applications.\nWe evaluate the performance overhead and security of SecLambda using realistic\nopen-source applications, and our results suggest that SecLambda can mitigate\nseveral attacks while introducing relatively low performance overhead.\n",
      "authors": [
        "Jegan, Deepak Sirone",
        "Wang, Liang",
        "Bhagat, Siddhant",
        "Ristenpart, Thomas",
        "Swift, Michael"
      ],
      "categories": null,
      "citations": null,
      "comments": null,
      "databases": [
        "arXiv"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": null,
      "publication_date": "2020-11-10",
      "selected": null,
      "title": "Guarding Serverless Applications with SecLambda",
      "urls": [
        "http://arxiv.org/pdf/2011.05322v1",
        "http://arxiv.org/abs/2011.05322v1",
        "https://arxiv.org/pdf/2011.05322"
      ]
    },
    {
      "abstract": "Serverless computing is a new pay-per-use cloud service paradigm that automates resource scaling for stateless functions and can potentially facilitate bursty machine learning serving. Batching is critical for latency performance and cost-effectiveness of machine learning inference, but unfortunately it is not supported by existing serverless platforms due to their stateless design. Our experiments show that without batching, machine learning serving cannot reap the benefits of serverless computing. In this paper, we present BATCH, a framework for supporting efficient machine learning serving on serverless platforms. BATCH uses an optimizer to provide inference tail latency guarantees and cost optimization and to enable adaptive batching support. We prototype BATCH atop of AWS Lambda and popular machine learning inference systems. The evaluation verifies the accuracy of the analytic optimizer and demonstrates performance and cost advantages over the state-of-the-art method MArk and the state-of-the-practice tool SageMaker. \u00c2\u00a9 2020 IEEE.",
      "authors": [
        "Ahsan Ali",
        "Riccardo Pinciroli",
        "Feng Yan",
        "Evgenia Smirni"
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/SC41405.2020.00073",
      "keywords": [
        "Prediction",
        "Serving",
        "Service Level Objective (SLO)",
        "Inference",
        "Serverless",
        "Modeling",
        "Batching",
        "Machine-learning-as-a-service (MLaaS)",
        "Cost-effective",
        "Optimization",
        "Cloud"
      ],
      "number_of_pages": 15,
      "pages": "1-15",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-7281-9999-3",
        "issn": "21674329",
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "SC20: International Conference for High Performance Computing, Networking, Storage and Analysis"
      },
      "publication_date": "2020-11-09",
      "selected": null,
      "title": "BATCH: Machine Learning Inference Serving on Serverless Platforms with Adaptive Batching",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85102384238&origin=inward",
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9355312"
      ]
    },
    {
      "abstract": "Fog computing, which distributes computing resources to multiple locations between the Internet of Things (IoT) devices and the cloud, is attracting considerable attention from academia and industry. Yet, despite the excitement about the potential of fog computing, few comprehensive studies quantitatively characterizing the properties of fog computing architectures have been conducted. In this paper we examine the statistical properties of fog computing task completion latencies, which are important to understand to develop algorithms that match IoT nodes\u00e2\u0080\u0099 tasks with the best execution points within the fog computing substrate. Towards characterizing task completion latencies, we developed and deployed a set of benchmarks in 6 different locations, which included local nodes of different grades, conventional cloud computing services in two different regions, and Amazon Web Services (AWS) and Microsoft Azure serverless computing options. Using the developed infrastructure, we conducted a series of targeted experiments with a node invoking our benchmarks from different locations and in different conditions. The empirical study elucidated several important properties of task execution latencies, including latency variation across different execution points and execution options, and stability with respect to time. The study also demonstrated important properties of serverless execution options, and showed that statistical structure of computing latencies can be accurately characterized based on a small number (only 10\u00e2\u0080\u009350) of latency samples. The complete measurement set we have captured as part of this study is publicly available. \u00c2\u00a9 2020 Elsevier B.V.",
      "authors": [
        "Gorlatova, M.",
        "Inaltekin, H.",
        "Chiang, M."
      ],
      "categories": null,
      "citations": 1,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1016/j.comnet.2020.107526",
      "keywords": [
        "Measurement study",
        "Fog computing",
        "Latency",
        "Serverless computing",
        "Smart gateway"
      ],
      "number_of_pages": null,
      "pages": null,
      "publication": {
        "category": "Journal",
        "cite_score": 8.1,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "13891286",
        "publisher": "Elsevier",
        "sjr": 0.798,
        "snip": 1.731,
        "subject_areas": [
          "Computer Networks and Communications"
        ],
        "title": "Computer Networks"
      },
      "publication_date": "2020-11-09",
      "selected": null,
      "title": "Characterizing task completion latencies in multi-point multi-quality fog computing systems",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85090868102&origin=inward"
      ]
    },
    {
      "abstract": "Cloud computing has grown because of lowered costs due to economies of scale and multiplexing. Serverless computing exploits multiplexing in cloud computing however, for low latency required by IoT applications, the cloud should be moved nearer to the IoT device and the cold start problem should be addressed. Using a real-world dataset, we showed through implementation in an open-source cloud environment based on Knative that a serverless approach to manage IoT traffic is feasible, uses less resources than a serverfull approach and traffic prediction with prefetching can mitigate the cold start delay penalty. However applying the Knative framework directly to IoT traffic without considering the execution context gives unnecessary overhead. \u00c2\u00a9 2020 IEEE.",
      "authors": [
        "I. Wang",
        "E. Liri",
        "K. K. Ramakrishnan"
      ],
      "categories": null,
      "citations": 1,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/CloudNet51028.2020.9335805",
      "keywords": [],
      "number_of_pages": 4,
      "pages": "1-4",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-7281-9487-5",
        "issn": null,
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings - 2020 IEEE 9th International Conference on Cloud Networking, CloudNet 2020"
      },
      "publication_date": "2020-11-09",
      "selected": null,
      "title": "Supporting IoT Applications with Serverless Edge Clouds",
      "urls": [
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9335805",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85100031703&origin=inward"
      ]
    },
    {
      "abstract": "The creation of realistic 3D human model is traditionally timeconsuming and cumbersome, and is typically done by professionals. In recent years computer vision technologies can assist in generating human models from controlled environments, we demonstrate a different but easy capturing scenario with less constraints on the subject or the environmental setup. The reconstruction process for 3D human model consists of various intermediate process such as semantic human segmentation, human skeletal keypoint detection, and texture generation. In order to achieve easy, scalable, and flexible deployment to different cloud environments, we have chosen the serverless architecture to offload some common service functionalities to the cloud infrastructure but focused on the core task,which is the reconstruction itself. The event-driven serverless architecture eases the building of such multimedia web services with minimal coding efforts, but simply defines the APIs and declares the APIs with correspondent lambda functions. The proposed approach in this paper allow anyone with a mobile phone to generate 3D models easily and quickly in the scale of few 2-3 minutes, rather than hours. \u00c2\u00a9 2020 IEEE.",
      "authors": [
        "Peter Fasogbon",
        "Yu You",
        "Emre Aksu"
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/ISMAR-Adjunct51615.2020.00044",
      "keywords": [
        "Graph-cut",
        "OpenPose;",
        "Smartphones-Texture Generation-OpenGL",
        "Neural Network",
        "3D-human-model",
        "SMPL",
        "Visualization",
        "Serverless-Architecture"
      ],
      "number_of_pages": 5,
      "pages": "118-122",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-7281-7676-5",
        "issn": null,
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Adjunct Proceedings of the 2020 IEEE International Symposium on Mixed and Augmented Reality, ISMAR-Adjunct 2020"
      },
      "publication_date": "2020-11-09",
      "selected": null,
      "title": "3D human model creation on a serverless environment",
      "urls": [
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9287825",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85099535391&origin=inward"
      ]
    },
    {
      "abstract": "Multi-access Edge Computing (MEC) provides cloud computing capabilities at the edge by offloading users' service requests on MEC servers deployed at Base Stations (BS). Optimising the resource allocation on such distributed units in a physical area such as a city, especially for compute-intensive and latency-critical services, is a key challenge. We propose a swarm-based approach for placing functions in the edge using a serverless architecture, which does not require services to pre-occupy the required computing resources. The approach uses a probabilistic model to decide where to place the functions while considering the resources available at each MEC server and the latency between the physical servers and the application requester. A central controller with a federated view of available MEC servers orchestrates functions' deployment and deals changes available resources. We compare our approach against the Best-Fit, Max-Fit, MultiOpt, ILP and Random baselines. Results show that our approach can reduce the latency of applications with limited effect on the resource utilisation. \u00c2\u00a9 2020 IEEE.",
      "authors": [
        "Andrei Palade",
        "Atri Mukhopadhyay",
        "Aqeel Kazmi",
        "Christian Cabrera",
        "Evelyn Nomayo",
        "Georgios Iosifidis",
        "Marco Ruffini",
        "Siobh\u00e1n Clarke"
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/SCC49832.2020.00013",
      "keywords": [
        "Service Placement",
        "Edge Computing",
        "Serverless"
      ],
      "number_of_pages": 3,
      "pages": "48-50",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-7281-2721-7",
        "issn": "2474-8137",
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings - 2019 IEEE International Conference on Services Computing, SCC 2019 - Part of the 2019 IEEE World Congress on Services"
      },
      "publication_date": "2020-11-07",
      "selected": null,
      "title": "A Swarm-based Approach for Function Placement in Federated Edges",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85099248747&origin=inward",
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9284644"
      ]
    },
    {
      "abstract": "With the rapid growth in Natural Language Processing (NLP), all types of industries find a need for analyzing a massive amount of data. Sentiment analysis is becoming a more exciting area for the businessmen and researchers in Text mining NLP. This process includes the calculation of various sentiments with the help of text mining. Supplementary to this, the world is connected through Information Technology and, businesses are moving toward the next step of the development to make their system more intelligent. Microservices have fulfilled the need for development platforms which help the developers to use various development tools (Languages and applications) efficiently. With the consideration of data analysis for business growth, data security becomes a major concern in front of developers. This paper gives a solution to keep the data secured by providing required access to data scientists without disturbing the base system software. This paper has discussed data storage and exchange policies of microservices through common JavaScript Object Notation (JSON) response which performs the sentiment analysis of customer's data fetched from various microservices through secured APIs. \u00c2\u00a9 2020 IEEE.",
      "authors": [
        "Bhagat, V.",
        "Bastin Robins, J."
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1109/INOCON50539.2020.9298027",
      "keywords": [
        "Text Mining",
        "Sentiment Analysis",
        "Distributed NLP",
        "Microservices",
        "Serverless API"
      ],
      "number_of_pages": null,
      "pages": null,
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781728197449",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "2020 IEEE International Conference for Innovation in Technology, INOCON 2020"
      },
      "publication_date": "2020-11-06",
      "selected": null,
      "title": "Natural Language Processing on Diverse Data Layers through Microservice Architecture",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85099605988&origin=inward"
      ]
    },
    {
      "abstract": "Mordent IoT industries have the requirements of low energy consumption, stable connectivity, smart control, and high cost-efficiency for controlling system. The Bluetooth mesh technology and serverless cloud computing make it possible to realize such systems. This paper designed a cost-efficient smart IoT device controlling system based on the Bluetooth mesh technology and cloud computing services. The system is composed of two parts, a cloud part and a local Bluetooth mesh network. The cloud part utilizes several cloud services to control the states of the local endpoints and handle the voice directives from the user. The local network achieves a decentralized structure using Bluetooth mesh technology and MQTT protocol. The performance of the system is verified via an experiment under the real-world office scenes. \u00c2\u00a9 2020 IEEE.",
      "authors": [
        "Xiaodong Zheng",
        "Shuangsi Xue",
        "Hui Cao",
        "Feng Wang",
        "Mingke Zhang"
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/CAC51589.2020.9326634",
      "keywords": [
        "IoT controlling system",
        "cloud computing",
        "Bluetooth mesh",
        "network"
      ],
      "number_of_pages": 6,
      "pages": "3374-3379",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-7281-7688-8",
        "issn": "2688-092X",
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings - 2020 Chinese Automation Congress, CAC 2020"
      },
      "publication_date": "2020-11-06",
      "selected": null,
      "title": "A Cost-efficient Smart IoT Device Controlling System Based on Bluetooth Mesh and Cloud Computing",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85100920746&origin=inward",
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9326634"
      ]
    },
    {
      "abstract": "Depending on the requirements, the deployment of containerized applications for monitoring Internet of Things devices can be done in Cloud or on the Edge. This paper discusses the design of a containerized application monitoring temperature and humidity for IoT devices in three implementations: (1) balenaCloud for edge deployment; (2) Amazon Web Services cloud with EC2 instances; and (3) dedicated Amazon Web Services IoT service. The experiments showed that there are no significant performance differences between Edge and Cloud deployments regarding the resource consumption. However, for fast and almost effortless action, Amazon Web Services IoT is the go-to option when it comes to serverless applications based on Message Queuing Telemetry Transport. For all-in-one automated fleet management balenaCloud seems to be a good tool for IoT developers. \u00c2\u00a9 2020 IEEE.",
      "authors": [
        "Robert Botez",
        "Vlad Strautiu",
        "Iustin-Alexandru Ivanciu",
        "Virgil Dobrota"
      ],
      "categories": null,
      "citations": 1,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/ISETC50328.2020.9301070",
      "keywords": [
        "balenaCloud",
        "containers",
        "Amazon Web Services",
        "Docker"
      ],
      "number_of_pages": 4,
      "pages": "1-4",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-7281-9514-8",
        "issn": "2475-787X",
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "2020 14th International Symposium on Electronics and Telecommunications, ISETC 2020 - Conference Proceedings"
      },
      "publication_date": "2020-11-05",
      "selected": null,
      "title": "Containerized Application for IoT Devices: Comparison between balenaCloud and Amazon Web Services Approaches",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85099564251&origin=inward",
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9301070"
      ]
    },
    {
      "abstract": "The proceedings contain 76 papers. The topics discussed include: augmented reality for easy sailing; 3D human model creation on a serverless environment; AR circuit constructor: combining electricity building blocks and augmented reality for analogy-driven learning and experimentation; AR mini-games for supermarkets; a brain-computer interface and augmented reality neurofeedback to treat ADHD: a virtual telekinesis approach; machine intelligence matters: rethink human-robot collaboration based on symmetrical reality; real-time gait reconstruction for virtual reality using a single sensor; living with rules: an AR approach; and locomotive and cognitive trade-offs for target-based travel.",
      "authors": [],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781728176758",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Adjunct Proceedings of the 2020 IEEE International Symposium on Mixed and Augmented Reality, ISMAR-Adjunct 2020"
      },
      "publication_date": "2020-11-01",
      "selected": null,
      "title": "Adjunct Proceedings of the 2020 IEEE International Symposium on Mixed and Augmented Reality, ISMAR-Adjunct 2020",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85099602078&origin=inward"
      ]
    },
    {
      "abstract": "The architecture for 5G core includes a Service-Based Architecture for the diverse network functions (NFs), which relies on HTTP/2 for the SBI and TCP as the underlying transport protocol. The specifications of the HTTP family is moving towards more efficient and secure protocols, which are based on UDP to assure enhanced transport but using TLS to secure the communication channel. The next generation of microservices needs to be more secure, performant and easily manageable, where HTTP/3 and containers orchestration platforms (like Kubernetes) can provide significative contributions towards such goals. Different deployment approaches can be followed for services implemented in compliance to the 5G SBA. This paper contributes with the assessment of deployment models for services in 5G networks, where NFs are implemented following traditional architectures (all the functions in a VM) or as serverless architectures (with functions distributed in containers). The performance of microservices in Kubernetes is also evaluated. The evaluation conducted also considers the employment of different versions of HTTPs to empower the service-based interfaces of 5G services. Results demonstrate performance benefits of employing HTTP/3, based on QUIC protocol, in scenarios with networks characterised by losses or delay conditions. Despite such gain, deployment in 5G networks needs to carefully consider aspects related with connection tracking mechanisms to support high volumes of requests. \u00c2\u00a9 2020 John Wiley & Sons, Ltd.",
      "authors": [
        "Moreira, J.B.",
        "Mamede, H.",
        "Pereira, V.",
        "Sousa, B."
      ],
      "categories": null,
      "citations": 1,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1002/nem.2132",
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": {
        "category": "Journal",
        "cite_score": 4.1,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "10557148",
        "publisher": "John Wiley and Sons Ltd",
        "sjr": 0.373,
        "snip": 0.989,
        "subject_areas": [
          "Computer Networks and Communications",
          "Computer Science Applications"
        ],
        "title": "International Journal of Network Management"
      },
      "publication_date": "2020-11-01",
      "selected": null,
      "title": "Next generation of microservices for the 5G Service-Based Architecture",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85089027508&origin=inward"
      ]
    },
    {
      "abstract": "The challenges of the conventional cloud computing paradigms motivated the emergence of the next generation cloud computing architectures. The emerging cloud computing architectures generate voluminous amount of data that are beyond the capability of the shallow intelligent algorithms to process. Deep learning algorithms, with their ability to process large-scale datasets, have recently started gaining tremendous attentions from researchers to solve problem in the emerging cloud computing architectures. However, no comprehensive literature review exists on the applications of deep learning architectures to solve complex problems in emerging cloud computing architectures. To fill this gap, we conducted a comprehensive literature survey on the applications of deep learning architectures in emerging cloud computing architectures. The survey shows that the adoption of deep learning architectures in emerging cloud computing architectures are increasingly becoming an interesting research area. We introduce a new taxonomy of deep learning architectures for emerging cloud computing architectures and provide deep insights into the current state-of-the-art active research works on deep learning to solve complex problems in emerging cloud computing architectures. The synthesis and analysis of the articles as well as their limitation are presented. A lot of challenges were identified in the literature and new future research directions to solve the identified challenges are presented. We believed that this article can serve as a reference guide to new researchers and an update for expert researchers to explore and develop more deep learning applications in the emerging cloud computing architectures. \u00c2\u00a9 2020 Elsevier B.V.",
      "authors": [
        "Jauro, F.",
        "Chiroma, H.",
        "Gital, A.Y.",
        "Almutairi, M.",
        "Abdulhamid, S.M.",
        "Abawajy, J.H."
      ],
      "categories": null,
      "citations": 5,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1016/j.asoc.2020.106582",
      "keywords": [
        "Deep reinforcement learning",
        "Fog computing",
        "Convolutional neural network",
        "Emerging cloud computing",
        "Serverless computing",
        "Edge computing",
        "Deep learning"
      ],
      "number_of_pages": null,
      "pages": null,
      "publication": {
        "category": "Journal",
        "cite_score": 11.2,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "15684946",
        "publisher": "Elsevier BV",
        "sjr": 1.29,
        "snip": 2.472,
        "subject_areas": [
          "Software"
        ],
        "title": "Applied Soft Computing Journal"
      },
      "publication_date": "2020-11-01",
      "selected": null,
      "title": "Deep learning architectures in emerging cloud computing architectures: Recent development, challenges and next research trend",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85088917070&origin=inward"
      ]
    },
    {
      "abstract": "Inexpensive cloud services, such as serverless computing, are often vulnerable to straggling nodes that increase the end-to-end latency for distributed computation. We propose and implement simple yet principled approaches for straggler mitigation in serverless systems for matrix multiplication and evaluate them on several common applications from machine learning and high-performance computing. The proposed schemes are inspired by error-correcting codes and employ parallel encoding and decoding over the data stored in the cloud using serverless workers. This creates a fully distributed computing framework without using a master node to conduct encoding or decoding, which removes the computation, communication and storage bottleneck at the master. On the theory side, we establish that our proposed scheme is asymptotically optimal in terms of decoding time and provide a lower bound on the number of stragglers it can tolerate with high probability. Through extensive experiments, we show that our scheme outperforms existing schemes such as speculative execution and other coding theoretic methods by at least 25%. \u00c2\u00a9 2020 IEEE",
      "authors": [
        "Gupta, V.",
        "Carrano, D.",
        "Yang, Y.",
        "Shankar, V.",
        "Courtade, T.",
        "Ramchandran, K."
      ],
      "categories": null,
      "citations": 1,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1109/ICDCS47774.2020.00019",
      "keywords": [],
      "number_of_pages": 11,
      "pages": "135-145",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781728170022",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings - International Conference on Distributed Computing Systems"
      },
      "publication_date": "2020-11-01",
      "selected": null,
      "title": "Serverless straggler mitigation using error-correcting codes",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85102011615&origin=inward"
      ]
    },
    {
      "abstract": "The development of mobile applications for various platforms requires enormous amount of time and effort. Demand for high performance, high quality, cloud enabled, social media and security aware features in a limited time to market environment requires systems which solve the task of integrating the front ends with various back ends. The model of 'Mobile Backend as a service' (MBaaS) offers a cloud server infrastructure with Application Programming Interface/Software Development Kits for development on various mobile, web and desktop platforms. This saves considerable amount of app development expense, time, as it eases up the backend development work, thereby enabling the developer to focus on functionality, its promotion and on the improvement of the user experience. Technical requirements and various features of both open source and commercial MBaaS products are compiled. The paper evaluates popular, open source products available for enterprise mobile, web and desktop applications, and documents the fundamental and common set of capabilities provided by MBaaS. The developers, technical architects and managers will benefit from the qualitative analysis of development, deployment and engagement services of each MBaaS platform. The constraints discussed can be a feedback to platform vendors and hence the observations can help the complete ecosystem of mobile application development. \u00c2\u00a9 2020 IEEE.",
      "authors": [
        "Aslam B Nandyal",
        "Mohammed Rafi"
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/DISCOVER50404.2020.9278113",
      "keywords": [
        "Mobile backend as a service",
        "middleware",
        "mobile platforms",
        "mobile computing",
        "mobile enterprise applications"
      ],
      "number_of_pages": 6,
      "pages": "200-205",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-7281-9886-6",
        "issn": null,
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "2020 IEEE International Conference on Distributed Computing, VLSI, Electrical Circuits and Robotics, DISCOVER 2020 - Proceedings"
      },
      "publication_date": "2020-10-30",
      "selected": null,
      "title": "Determining Feature Gaps Of Open Source Cloud Platforms for Mobile Backend as service (MBaaS) in Enterprise Mobile Applications",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85099687131&origin=inward",
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9278113"
      ]
    },
    {
      "abstract": "We pose and study forensic analysis in the context of access control systems in a manner that prior work has not. Forensics seeks to answer questions about past states of a system, and thereby provides important clues and evidence in the event of a security incident. Access control deals with who may perform what action on a resource and is a critical security function. Our focus is access control systems that allow for changes to the authorization state to be delegated to potentially untrusted users. We argue that this context in access control is an important one in which to consider forensic analysis, and observe that it is a natural complement of safety analysis, which has been considered extensively in the literature. We pose the forensic analysis problem for such access control systems abstractly, and instantiate it for three schemes from the literature: a well-known access matrix scheme, a role-based scheme, and a discretionary scheme. We identify the computational complexity of forensic analysis, and compare it to that of safety analysis for each of the schemes. We consider also the notion of logs, i.e., data that can be collected over time to aid forensic analysis. We present results for sufficient and minimal logs that render forensic analysis for the three schemes efficient. This motivates discussions on goal-directed logging, with the explicit intent of aiding forensic analysis. We carry out a case-study in the realistic setting of a serverless cloud application, and observe that goal-directed logging can be highly effective. Our work makes contributions at the foundations of information security, and its practical implications. \u00c2\u00a9 2020 ACM.",
      "authors": [
        "Juma, N.",
        "Huang, X.",
        "Tripunitara, M."
      ],
      "categories": null,
      "citations": 1,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1145/3372297.3417860",
      "keywords": [
        "access control",
        "forensic analysis"
      ],
      "number_of_pages": 18,
      "pages": "1533-1550",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450370899",
        "issn": "15437221",
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings of the ACM Conference on Computer and Communications Security"
      },
      "publication_date": "2020-10-30",
      "selected": null,
      "title": "Forensic Analysis in Access Control: Foundations and a Case-Study from Practice",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85096159169&origin=inward"
      ]
    },
    {
      "abstract": "In this paper we present a comparison of the various compute resources offered Amazon Web Services, Microsoft Azure, and Google Cloud Platform. We further identify several platform features including geographic availability, security and compliance, operating system support, container support, and serverless computing support that are directly comparable and provide recommendations and guidance for choosing a platform. We found that overall, for compute resources, Microsoft Azure is the preferred provider for many of the features we identify. However, that differential is quite small; in reality it is difficult to find significant differences between the platforms since they are ever-changing. \u00c2\u00a9 2020 IEEE.",
      "authors": [
        "Robert Kelley",
        "Antara Debnath Antu",
        "Anup Kumar",
        "Bin Xie"
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/CyberC49757.2020.00042",
      "keywords": [
        "Virtual Machines",
        "Microsoft Azure",
        "Compute Resources",
        "Google Cloud Platform",
        "Amazon Web Services",
        "Compute"
      ],
      "number_of_pages": 10,
      "pages": "214-223",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-7281-8449-4",
        "issn": null,
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings - 2020 International Conference on Cyber-Enabled Distributed Computing and Knowledge Discovery, CyberC 2020"
      },
      "publication_date": "2020-10-29",
      "selected": null,
      "title": "Choosing the Right Compute Resources in the Cloud: An analysis of the compute services offered by Amazon, Microsoft and Google",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85100489795&origin=inward",
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9329426"
      ]
    },
    {
      "abstract": "CONTEXT.\u2014 UNASSIGNED Tumor reporting constitutes a significant daily task of pathologists. An efficient tumor-reporting methodology is thus vitally important. The Web dynamic form (WbDF) method offers a multitude of advantages over the prevailing transcription-mediated reporting method based on static-text checklists. However, its adaptation has been severely hampered for 2 decades by its costly needs to maintain a complex back-end system and to change the system for frequent updates of reporting content.\nOBJECTIVE.\u2014 UNASSIGNED To overcome these 2 obstacles with a serverless Web platform that enables users to create, customize, use and download WbDFs as synoptic templates for structured tumor reporting.\nDESIGN.\u2014 UNASSIGNED Deploy ReactJS as a Web platform. Create form components in JavaScript Object Notation files. Use JavaScript Object Notation files to make WbDFs on the Web platform. Use the WbDFs to generate final pathology reports.\nRESULTS.\u2014 UNASSIGNED Ordinary users (pathologists) can create/customize reporting templates as WbDFs on the Web platform. The WbDF can be used to make a pathology report and stored/shared like ordinary document files. There is no back-end system to change, nor a requirement for computer programming skills.\nCONCLUSIONS.\u2014 UNASSIGNED This strategy eliminates the need for a complex back-end system and the associated cost when updating tumor-reporting standards, making it possible to adopt the WbDF method without the technological drawbacks associated with content updates. It also opens a new field of how the tumor-reporting system should be organized, updated, and implemented.",
      "authors": [
        "Zhenhong Qu",
        "Keran Zhao",
        "Jason Guo Jin",
        "Elaine Qu",
        "Zongshan Lai"
      ],
      "categories": null,
      "citations": null,
      "comments": null,
      "databases": [
        "PubMed"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": {
        "category": "Journal",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "1543-2165",
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Archives of pathology & laboratory medicine"
      },
      "publication_date": "2020-10-28",
      "selected": null,
      "title": "A Novel Method Enables General Pathologists to Create Web Dynamic Forms for Synoptic Tumor Reporting.",
      "urls": []
    },
    {
      "abstract": " Serverless functions are a cloud computing paradigm where the provider takes\ncare of resource management tasks such as resource provisioning, deployment,\nand auto-scaling. The only resource management task that developers are still\nin charge of is selecting how much resources are allocated to each worker\ninstance. However, selecting the optimal size of serverless functions is quite\nchallenging, so developers often neglect it despite its significant cost and\nperformance benefits. Existing approaches aiming to automate serverless\nfunctions resource sizing require dedicated performance tests, which are\ntime-consuming to implement and maintain. In this paper, we introduce an\napproach to predict the optimal resource size of a serverless function using\nmonitoring data from a single resource size. As our approach does not require\ndedicated performance tests, it enables cloud providers to implement resource\nsizing on a platform level and automate the last resource management task\nassociated with serverless functions. We evaluate our approach on three\ndifferent serverless applications, where it selects the optimal memory size for\n71.7% of the serverless functions and the second-best memory size for 22.3% of\nthe serverless functions, which results in an average speedup of 43.6% while\nsimultaneously decreasing average costs by 10.2%.\n",
      "authors": [
        "Eismann, Simon",
        "Bui, Long",
        "Grohmann, Johannes",
        "Abad, Cristina L.",
        "Herbst, Nikolas",
        "Kounev, Samuel"
      ],
      "categories": null,
      "citations": null,
      "comments": "11 pages, 6 figures, conference",
      "databases": [
        "arXiv"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": null,
      "publication_date": "2020-10-28",
      "selected": null,
      "title": "Sizeless: Predicting the optimal size of serverless functions",
      "urls": [
        "http://arxiv.org/abs/2010.15162v3",
        "https://arxiv.org/pdf/2010.15162",
        "http://arxiv.org/pdf/2010.15162v3"
      ]
    },
    {
      "abstract": " Serverless computing has seen a myriad of work exploring its potential. Some\nsystems tackle Function-as-a-Service (FaaS) properties on automatic elasticity\nand scale to run highly-parallel computing jobs. However, they focus on\nspecific platforms and convey that their ideas can be extrapolated to any FaaS\nruntime. An important question arises: do all FaaS platforms fit parallel\ncomputations? In this paper, we argue that not all of them provide the\nnecessary means to host highly-parallel applications. To validate our\nhypothesis, we create a comparative framework and categorize the architectures\nof four cloud FaaS offerings, emphasizing parallel performance. We attest and\nextend this description with an empirical experiment that consists in plotting\nin deep detail the evolution of a parallel computing job on each service. The analysis of our results evinces that FaaS is not inherently good for\nparallel computations and architectural differences across platforms are\ndecisive to categorize their performance. A key insight is the importance of\nvirtualization technologies and the scheduling approach of FaaS platforms.\nParallelism improves with lighter virtualization and proactive scheduling due\nto finer resource allocation and faster elasticity. This causes some platforms\nlike AWS and IBM to perform well for highly-parallel computations, while others\nsuch as Azure present difficulties to achieve the required parallelism degree.\nConsequently, the information in this paper becomes of special interest to help\nusers choose the most adequate infrastructure for their parallel applications.\n",
      "authors": [
        "Barcelona-Pons, Daniel",
        "Garc\u00eda-L\u00f3pez, Pedro"
      ],
      "categories": null,
      "citations": null,
      "comments": "19 pages, 15 figures, submitted to FGCS, revised",
      "databases": [
        "arXiv"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": null,
      "publication_date": "2020-10-28",
      "selected": null,
      "title": "Benchmarking Parallelism in FaaS Platforms",
      "urls": [
        "http://arxiv.org/pdf/2010.15032v3",
        "https://arxiv.org/pdf/2010.15032",
        "http://arxiv.org/abs/2010.15032v3"
      ]
    },
    {
      "abstract": "The emergence of serverless computing has brought significant advancements to the delivery of computing resources to cloud users. With the abstraction of infrastructure, platform, and execution environments, the administration overhead of these layers is shifted to the cloud provider. Thus, cloud users can focus on the application layer while relying on the cloud provider to provision and operate the underlying layers. Furthermore, desirable features such as autoscaling and high-availability are implemented by the cloud provider and adopted by the user's code at no extra overhead. Despite such advancements, as applications transition from monolithic stand-alone deployments to the ephemeral and stateless microservice model of serverless computing, significant challenges must be overcome. These challenges pertain to the uniqueness of the conceptual and implementation models of serverless computing. In this paper, we investigate the modeling of the Service Level Agreement (SLA) of serverless functions' executions. We highlight how serverless SLA fundamentally differs from earlier cloud delivery models. We then propose an approach to define SLA for serverless functions in terms of resource utilization fingerprints for functions' executions, and a method to assess if executions adhere to that SLA. We conclude by presenting the empirical validation of our proposed approach, which was able to detect Execution-SLA violations with accuracy exceeding 76% and up to 100%. \u00c2\u00a9 2020 IEEE.",
      "authors": [
        "Mohamed Elsakhawy",
        "Michael Bauer"
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/IEEECloudSummit48914.2020.00015",
      "keywords": [
        "Execution-performance guarantees",
        "SLA",
        "FaaS",
        "Serverless computing"
      ],
      "number_of_pages": 8,
      "pages": "58-65",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-7281-8267-4",
        "issn": null,
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings - 2020 IEEE Cloud Summit, Cloud Summit 2020"
      },
      "publication_date": "2020-10-21",
      "selected": null,
      "title": "FaaS2F: A Framework for Defining Execution-SLA in Serverless Computing",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85099255351&origin=inward",
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9283723"
      ]
    },
    {
      "abstract": "The edge computing ecosystem has been evolving in the last few years. There have been different architectural patterns proposed to implement edge computing solutions. This paper focuses on serverless edge computing architecture and evaluates webassembly based approach for the same. The current state of serverless edge computing is explained followed by providing high level conceptual overview of webassembly. We-bassembly performance is evaluated against native and container based applications using the current toolchain supported for ARM architecture. Benchmarking is done for different categories of applications like compute intensive, memory intensive, file I/O intensive and a simple image classification - machine learning application. This paper describes the experimental setup, discusses the performance results and provides the conclusion. \u00c2\u00a9 2020 IEEE.",
      "authors": [
        "Pankaj Mendki"
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/IEEECloudSummit48914.2020.00031",
      "keywords": [
        "Webassembly",
        "Serverless",
        "Performance benchmarks",
        "Edge computing"
      ],
      "number_of_pages": 6,
      "pages": "161-166",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-7281-8267-4",
        "issn": null,
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings - 2020 IEEE Cloud Summit, Cloud Summit 2020"
      },
      "publication_date": "2020-10-21",
      "selected": null,
      "title": "Evaluating Webassembly Enabled Serverless Approach for Edge Computing",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85099243938&origin=inward",
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9283720"
      ]
    },
    {
      "abstract": " Increasing popularity of the serverless computing approach has led to the\nemergence of new cloud infrastructures working in Container-as-a-Service (CaaS)\nmodel like AWS Fargate, Google Cloud Run, or Azure Container Instances. They\nintroduce an innovative approach to running cloud containers where developers\nare freed from managing underlying resources. In this paper, we focus on\nevaluating capabilities of elastic containers and their usefulness for\nscientific computing in the scientific workflow paradigm using AWS Fargate and\nGoogle Cloud Run infrastructures. For experimental evaluation of our approach,\nwe extended HyperFlow engine to support these CaaS platform, together with\nadapting four real-world scientific workflows composed of several dozen to over\na hundred of tasks organized into a dependency graph. We used these workflows\nto create cost-performance benchmarks and flow execution plots, measuring\ndelays, elasticity, and scalability. The experiments proved that serverless\ncontainers can be successfully applied for scientific workflows. Also, the\nresults allow us to gain insights on specific advantages and limits of such\nplatforms.\n",
      "authors": [
        "Burkat, Krzysztof",
        "Pawlik, Maciej",
        "Balis, Bartosz",
        "Malawski, Maciej",
        "Vahi, Karan",
        "Rynge, Mats",
        "da Silva, Rafael Ferreira",
        "Deelman, Ewa"
      ],
      "categories": null,
      "citations": null,
      "comments": null,
      "databases": [
        "arXiv"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": null,
      "publication_date": "2020-10-21",
      "selected": null,
      "title": "Serverless Containers -- rising viable approach to Scientific Workflows",
      "urls": [
        "http://arxiv.org/pdf/2010.11320v1",
        "https://arxiv.org/pdf/2010.11320",
        "http://arxiv.org/abs/2010.11320v1"
      ]
    },
    {
      "abstract": "Serverless computing and public Function-as-a-Service (FaaS) systems are gaining significant attention because they help easily build a highly available system. With recent advances in micro virtual machines (microVM), the internal architecture of FaaS systems substantially changes. This paper focuses on a thorough investigation of the recent improvement in public FaaS systems concerning numerous concurrent executions. The adoption of microVM has changed the nature of FaaS, especially for runtime reservations. As a result, the performance degradation has decreased significantly compared to the previous generation FaaS, as shown in the experiment. \u00c2\u00a9 2020 IEEE.",
      "authors": [
        "Jungae Park",
        "Hyunjune Kim",
        "Kyungyong Lee"
      ],
      "categories": null,
      "citations": 1,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/CLOUD49709.2020.00080",
      "keywords": [
        "Serverless",
        "microVM",
        "FaaS"
      ],
      "number_of_pages": 5,
      "pages": "532-536",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-7281-8781-5",
        "issn": "2159-6182",
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "2020 IEEE 13th International Conference on Cloud Computing (CLOUD)"
      },
      "publication_date": "2020-10-19",
      "selected": null,
      "title": "Evaluating Concurrent Executions of Multiple Function-as-a-Service Runtimes with MicroVM",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85099387920&origin=inward",
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9284320"
      ]
    },
    {
      "abstract": "In recent years, serverless computing and, in particular the Function-as-a-Service (Faas) execution model, has proven to be efficient for running parallel computing tasks. However, little attention has been paid to highly-parallel applications with unbalanced and irregular workloads. The main challenge of executing this type of algorithms in the cloud is the difficulty to account for the computing requirements beforehand. This places a burden on scientific users who very often make bad decisions by either overprovisioning resources or inadvertently limiting the parallelism of these algorithms due to resource contention. Our hypothesis is that the elasticity and ease of management of serverless computing can help users avoid such decisions, which may lead to undesirable cost-performance consequences for unbalanced problem spaces. In this work, we show that with a simple serverless executor pool abstraction one can achieve a better cost-performance trade-off than a Spark cluster of static size and large EC2 VMs. To support this conclusion, we evaluate two unbalanced algorithms: The Unbalanced Tree Search (UTS) and the Mandelbrot Set using the Mariani-Silver algorithm. For instance, our serverless implementation of UTS is able to outperform Spark by up to 55% with the same cost. This provides the first concrete evidence that highly-parallel, irregular workloads can be efficiently executed using purely stateless functions with almost zero burden on users-i.e., no need for users to understand non-obvious system-level parameters and optimizations. \u00c2\u00a9 2020 IEEE.",
      "authors": [
        "Gerard Par\u00eds",
        "Pedro Garc\u00eda-L\u00f3pez",
        "Marc S\u00e1nchez-Artigas"
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/CLOUD49709.2020.00033",
      "keywords": [
        "UTS",
        "Mariani-Silver",
        "FaaS",
        "Serverless computing",
        "elasticity"
      ],
      "number_of_pages": 9,
      "pages": "149-157",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-7281-8781-5",
        "issn": "2159-6182",
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "2020 IEEE 13th International Conference on Cloud Computing (CLOUD)"
      },
      "publication_date": "2020-10-19",
      "selected": null,
      "title": "Serverless Elastic Exploration of Unbalanced Algorithms",
      "urls": [
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9284321",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85099379100&origin=inward"
      ]
    },
    {
      "abstract": "Serverless computing offers an event driven pay-as-you-go framework for application development. A key selling point is the concept of no back-end server management, allowing developers to focus on application functionality. This is achieved through severe abstraction of the underlying architecture the functions run on. We examine the underlying architecture and report on the performance of serverless functions and how they are effected by certain factors such as memory allocation and interference caused by load induced by other users on the platform. Specifically, we focus on the serverless offerings of the four largest platforms; AWS Lambda, Google Cloud Functions, Microsoft Azure Functions and IBM Cloud Functions. In this paper, we observe and contrast between these platforms in their approach to the common issue of 'cold starts', we devise a means to unveil the underlying architecture serverless functions execute on and we investigate the effects of interference from load on the platform over the time span of one month. \u00c2\u00a9 2020 IEEE.",
      "authors": [
        "Daniel Kelly",
        "Frank Glavin",
        "Enda Barrett"
      ],
      "categories": null,
      "citations": 1,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/CLOUD49709.2020.00050",
      "keywords": [
        "Serverless Computing",
        "Performance Measurement",
        "Benchmarking",
        "Function-as-a-Service",
        "Cloud Computing"
      ],
      "number_of_pages": 9,
      "pages": "304-312",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-7281-8781-5",
        "issn": "2159-6182",
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "2020 IEEE 13th International Conference on Cloud Computing (CLOUD)"
      },
      "publication_date": "2020-10-19",
      "selected": null,
      "title": "Serverless Computing: Behind the Scenes of Major Platforms",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85099369944&origin=inward",
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9284261"
      ]
    },
    {
      "abstract": " Smart doorbells have been playing an important role in protecting our modern\nhomes. Existing approaches of sending video streams to a centralized server (or\nCloud) for video analytics have been facing many challenges such as latency,\nbandwidth cost and more importantly users' privacy concerns. To address these\nchallenges, this paper showcases the ability of an intelligent smart doorbell\nbased on Federated Deep Learning, which can deploy and manage video analytics\napplications such as a smart doorbell across Edge and Cloud resources. This\nplatform can scale, work with multiple devices, seamlessly manage online\norchestration of the application components. The proposed framework is\nimplemented using state-of-the-art technology. We implement the Federated\nServer using the Flask framework, containerized using Nginx and Gunicorn, which\nis deployed on AWS EC2 and AWS Serverless architecture.\n",
      "authors": [
        "Patel, Vatsal",
        "Kanani, Sarth",
        "Pathak, Tapan",
        "Patel, Pankesh",
        "Ali, Muhammad Intizar",
        "Breslin, John"
      ],
      "categories": null,
      "citations": null,
      "comments": "6",
      "databases": [
        "arXiv"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": null,
      "publication_date": "2020-10-19",
      "selected": null,
      "title": "A Demonstration of Smart Doorbell Design Using Federated Deep Learning",
      "urls": [
        "http://arxiv.org/pdf/2010.09687v1",
        "http://arxiv.org/abs/2010.09687v1",
        "https://arxiv.org/pdf/2010.09687"
      ]
    },
    {
      "abstract": "Serverless computing emerges as a new paradigm to build cloud applications, in which developers write small functions that react to cloud infrastructure events, and cloud providers maintain all resources and schedule the functions in containers. Serverless computing thus enables developers to focus on their core business logic and leave server management and scaling to cloud providers. Unfortunately, existing serverless computing systems suffer from a key limitation that deprives them of enjoying significant speedups. Specifically, they treat each cloud function as a black box and are blind to which data the function reads or writes, therefore missing potentially huge optimization opportunities, such as caching data and colocating functions. We present Lambdata, a novel serverless computing system that enables developers to declare a cloud function's data intents, including both data read and data written. Once data intents are made explicit, Lambdata performs a variety of optimizations to improve speed, including caching data locally and scheduling functions based on code and data locality. Our evaluation of Lambdata shows that it achieves an average speedup of 1.51x on the turnaround time of practical workloads and reduces monetary cost by 16.5%. \u00c2\u00a9 2020 IEEE.",
      "authors": [
        "Yang Tang",
        "Junfeng Yang"
      ],
      "categories": null,
      "citations": 1,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/CLOUD49709.2020.00049",
      "keywords": [
        "serverless computing",
        "cloud function",
        "cloud storage"
      ],
      "number_of_pages": 10,
      "pages": "294-303",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-7281-8781-5",
        "issn": "2159-6182",
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "2020 IEEE 13th International Conference on Cloud Computing (CLOUD)"
      },
      "publication_date": "2020-10-19",
      "selected": null,
      "title": "Lambdata: Optimizing Serverless Computing by Making Data Intents Explicit",
      "urls": [
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9284203",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85099371511&origin=inward"
      ]
    },
    {
      "abstract": "The development of the smart grid (SG) has the potential to bring significant improvements to the energy generation, transmission, and distribution sectors. Hence, adequate handling of fluctuating energy demands is required. This can only be achieved by implementing the concept of transactive energy. Transactive energy aims to optimize energy production, transmission, and distribution combined with next-generation hardware and software, making it a challenge for implementation at a national level, and to ensure the effective collaboration of energy exchange between consumers and producers, a serverless architecture based on functionality can make significant contributions to the smart grids advanced metering infrastructure (SG-AMI). In this paper, a scalable serverless SG-AMI architecture is proposed based on fog-edge computing, virtualization consideration, and Function as a service (FaaS) as a services model to increase the operational flexibility, increase the system performance, and reduce the total cost of ownership. The design was benchmarked against the Iraqi Ministry of Electricity (MOELC) proposed designs for the smart grid, and it was evaluated based on the MOELC traditional computing-design, and a related cloud computing-based design. The results show that our proposed design offers an improvement of 20% to 65% performance on network traffic load, latency, and time to respond, with a reduction of 50% to 67% on the total cost of ownership, lower power and cooling consumption compared to the SG design proposed by MOELC. From this paper, it can be observed that a robust roadmap for SG-AMI architecture can effectively contribute towards increasing the scalability and interoperability, automation, and standardization of the energy sector.",
      "authors": [
        "Albayati, Ammar",
        "Abdullah, Nor  Fadzilah",
        "Abu-Samah, Asma",
        "Mutlag, Ammar  Hussein",
        "Nordin, Rosdiadee"
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.3390/en13205460",
      "keywords": [
        "Smart grid",
        "Fog computing",
        "Advanced metering infrastructure",
        "Serverless",
        "Function as a Services (FaaS)"
      ],
      "number_of_pages": null,
      "pages": null,
      "publication": {
        "category": "Journal",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": null,
        "publisher": "Multidisciplinary Digital Publishing Institute",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Energies"
      },
      "publication_date": "2020-10-19",
      "selected": null,
      "title": "A Serverless Advanced Metering Infrastructure Based on Fog-Edge Computing for a Smart Grid: A Comparison Study for Energy Sector in Iraq",
      "urls": [
        "https://www.mdpi.com/1996-1073/13/20/5460/pdf",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85093839167&origin=inward"
      ]
    },
    {
      "abstract": "Federated learning is a technique that enables distributed clients to collaboratively learn a shared machine learning model without sharing their training data. This reduces data privacy risks, however, privacy concerns still exist since it is possible to leak information about the training dataset from the trained model's weights or parameters. Therefore, it is important to develop federated learning algorithms that train highly accurate models in a privacy-preserving manner. Setting up a federated learning environment, especially with security and privacy guarantees, is a time-consuming process with numerous configurations and parameters that can be manipulated. In order to help clients ensure that collaboration is feasible and to check that it improves their model accuracy, a real-world simulator for privacy-preserving and secure federated learning is required. In this paper, we introduce PrivacyFL, which is an extensible, easily configurable, and scalable simulator for federated learning environments. Its key features include latency simulation, robustness to client departure/failure, support for both centralized (with one or more servers) and decentralized (serverless) learning, and configurable privacy and security mechanisms based on differential privacy and secure multiparty computation (MPC). In this paper, we motivate our research, describe the architecture of the simulator and associated protocols, and discuss its evaluation in numerous scenarios that highlight its wide range of functionality and its advantages. Our paper addresses a significant real-world problem: checking the feasibility of participating in a federated learning environment under a variety of circumstances. It also has a strong practical impact because organizations such as hospitals, banks, and research institutes, which have large amounts of sensitive data and would like to collaborate, would greatly benefit from having a system that enables them to do so in a privacy-preserving and secure manner. \u00c2\u00a9 2020 Owner/Author.",
      "authors": [
        "Mugunthan, V.",
        "Peraire-Bueno, A.",
        "Kagal, L."
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1145/3340531.3412771",
      "keywords": [
        "federated learning",
        "privacy-preserving federated learning",
        "secure multiparty computation",
        "differential privacy"
      ],
      "number_of_pages": 8,
      "pages": "3085-3092",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450368599",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "International Conference on Information and Knowledge Management, Proceedings"
      },
      "publication_date": "2020-10-19",
      "selected": null,
      "title": "PrivacyFL: A Simulator for Privacy-Preserving and Secure Federated Learning",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85095864610&origin=inward"
      ]
    },
    {
      "abstract": "We present a framework for scheduling multifunction serverless applications over a hybrid public-private cloud. A set of serverless jobs is input as a batch, and the objective is to schedule function executions over the hybrid platform to minimize the cost of public cloud use, while completing all jobs by a specified deadline. As this scheduling problem is NP-Hard, we propose a greedy algorithm that dynamically determines both the order and placement of each function execution using predictive models of function execution time and network latencies. We present a prototype implementation of our framework that uses AWS Lambda and OpenFaaS, for the public and private cloud, respectively. We evaluate our prototype in live experiments using a mixture of compute and I/O heavy serverless applications. Our results show that our framework can achieve a speedup in batch processing of up to 1.92 times that of an approach that uses only the private cloud, at 40.5% the cost of an approach that uses only the public cloud. \u00c2\u00a9 2020 IEEE.",
      "authors": [
        "Anirban Das",
        "Andrew Leaf",
        "Carlos A. Varela",
        "Stacy Patterson"
      ],
      "categories": null,
      "citations": 1,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/CLOUD49709.2020.00090",
      "keywords": [
        "Serverless Computing",
        "Computational Offloading",
        "Function as a Service",
        "Cloud Scheduling",
        "Performance Optimization",
        "Hybrid Cloud"
      ],
      "number_of_pages": 10,
      "pages": "609-618",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-7281-8781-5",
        "issn": "2159-6182",
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "2020 IEEE 13th International Conference on Cloud Computing (CLOUD)"
      },
      "publication_date": "2020-10-19",
      "selected": null,
      "title": "Skedulix: Hybrid Cloud Scheduling for Cost-Efficient Execution of Serverless Applications",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85099350558&origin=inward",
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9284265"
      ]
    },
    {
      "abstract": " In this paper, we show how the Federated Learning (FL) framework enables\nlearning collectively from distributed data in connected robot teams. This\nframework typically works with clients collecting data locally, updating neural\nnetwork weights of their model, and sending updates to a server for aggregation\ninto a global model. We explore the design space of FL by comparing two\nvariants of this concept. The first variant follows the traditional FL approach\nin which a server aggregates the local models. In the second variant, that we\ncall Flow-FL, the aggregation process is serverless thanks to the use of a\ngossip-based shared data structure. In both variants, we use a data-driven\nmechanism to synchronize the learning process in which robots contribute model\nupdates when they collect sufficient data. We validate our approach with an\nagent trajectory forecasting problem in a multi-agent setting. Using a\ncentralized implementation as a baseline, we study the effects of staggered\nonline data collection, and variations in data flow, number of participating\nrobots, and time delays introduced by the decentralization of the framework in\na multi-robot setting.\n",
      "authors": [
        "Majcherczyk, Nathalie",
        "Srishankar, Nishan",
        "Pinciroli, Carlo"
      ],
      "categories": null,
      "citations": null,
      "comments": "8 pages, 7 figures. For associated datasets, see\n  http://www.nestlab.net/doku.php/papers:mrs_fl_dataset",
      "databases": [
        "arXiv"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": null,
      "publication_date": "2020-10-16",
      "selected": null,
      "title": "Flow-FL: Data-Driven Federated Learning for Spatio-Temporal Predictions in Multi-Robot Systems",
      "urls": [
        "http://arxiv.org/abs/2010.08595v1",
        "http://arxiv.org/pdf/2010.08595v1",
        "https://arxiv.org/pdf/2010.08595"
      ]
    },
    {
      "abstract": "Serverless computing is increasingly being used for parallel computing, which\nhave traditionally been implemented as stateful applications. Executing\ncomplex, burst-parallel, directed acyclic graph (DAG) jobs poses a major\nchallenge for serverless execution frameworks, which will need to rapidly scale\nand schedule tasks at high throughput, while minimizing data movement across\ntasks. We demonstrate that, for serverless parallel computations, decentralized\nscheduling enables scheduling to be distributed across Lambda executors that\ncan schedule tasks in parallel, and brings multiple benefits, including\nenhanced data locality, reduced network I/Os, automatic resource elasticity,\nand improved cost effectiveness. We describe the implementation and deployment\nof our new serverless parallel framework, called Wukong, on AWS Lambda. We show\nthat Wukong achieves near-ideal scalability, executes parallel computation jobs\nup to 68.17x faster, reduces network I/O by multiple orders of magnitude, and\nachieves 92.96% tenant-side cost savings compared to numpywren.",
      "authors": [
        "Benjamin Carver",
        "Jingyuan Zhang",
        "Ao Wang",
        "Ali Anwar",
        "Panruo Wu",
        "Yue Cheng"
      ],
      "categories": null,
      "citations": 0,
      "comments": "Appears at ACM Symposium on Cloud Computing (SoCC) 2020",
      "databases": [
        "arXiv",
        "Scopus"
      ],
      "doi": "10.1145/3419111.3421286",
      "keywords": [],
      "number_of_pages": 15,
      "pages": "1-15",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450381376",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "SoCC 2020 - Proceedings of the 2020 ACM Symposium on Cloud Computing"
      },
      "publication_date": "2020-10-14",
      "selected": null,
      "title": "Wukong: A Scalable and Locality-Enhanced Framework for Serverless Parallel Computing",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85095448759&origin=inward",
        "http://dx.doi.org/10.1145/3419111.3421286",
        "http://arxiv.org/abs/2010.07268v1",
        "http://arxiv.org/pdf/2010.07268v1"
      ]
    },
    {
      "abstract": " This paper introduces Beldi, a library and runtime system for writing and\ncomposing fault-tolerant and transactional stateful serverless functions. Beldi\nruns on existing providers and lets developers write complex stateful\napplications that require fault tolerance and transactional semantics without\nthe need to deal with tasks such as load balancing or maintaining virtual\nmachines. Beldi's contributions include extending the log-based fault-tolerant\napproach in Olive (OSDI 2016) with new data structures, transaction protocols,\nfunction invocations, and garbage collection. They also include adapting the\nresulting framework to work over a federated environment where each serverless\nfunction has sovereignty over its own data. We implement three applications on\nBeldi, including a movie review service, a travel reservation system, and a\nsocial media site. Our evaluation on 1,000 AWS Lambdas shows that Beldi's\napproach is effective and affordable.\n",
      "authors": [
        "Zhang, Haoran",
        "Cardoza, Adney",
        "Chen, Peter Baile",
        "Angel, Sebastian",
        "Liu, Vincent"
      ],
      "categories": null,
      "citations": null,
      "comments": "Paper appears at OSDI 2020",
      "databases": [
        "arXiv"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [
          "Distributed, Parallel, and Cluster Computing"
        ],
        "title": "Proceedings of the USENIX Symposium on Operating Systems Design\n  and Implementation (OSDI). November, 2020"
      },
      "publication_date": "2020-10-13",
      "selected": null,
      "title": "Fault-tolerant and Transactional Stateful Serverless Workflows (extended version)",
      "urls": [
        "http://arxiv.org/abs/2010.06706v1",
        "http://arxiv.org/pdf/2010.06706v1",
        "https://arxiv.org/pdf/2010.06706"
      ]
    },
    {
      "abstract": "FaaS (Function as a Service) allows developers to upload and execute code in\nthe cloud without managing servers. FaaS offerings from leading public cloud\nproviders are based on system microVM or application container technologies\nsuch as Firecracker or Docker. In this paper, we demonstrate that lightweight\nhigh-level runtimes, such as WebAssembly, could offer performance and scaling\nadvantages over existing solutions, and could enable finely-grained\npay-as-you-use business models. We compared widely used performance benchmarks\nbetween Docker native and WebAssembly implementations of the same algorithms.\nWe also discuss the barriers for WebAssembly adoption in serverless computing,\nsuch as the lack of tooling support.",
      "authors": [
        "Ju Long",
        "Hung-Ying Tai",
        "Shen-Ta Hsieh",
        "Michael Juntao Yuan"
      ],
      "categories": null,
      "citations": 0,
      "comments": "5 pages, 2 figures, 1 table, in IEEE Software, 2020",
      "databases": [
        "arXiv",
        "Scopus"
      ],
      "doi": "10.1109/MS.2020.3028991",
      "keywords": [],
      "number_of_pages": 6,
      "pages": "75-80",
      "publication": {
        "category": "Journal",
        "cite_score": 6.9,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "07407459",
        "publisher": "IEEE Computer Society",
        "sjr": 0.692,
        "snip": 1.934,
        "subject_areas": [
          "Software"
        ],
        "title": "IEEE Software"
      },
      "publication_date": "2020-10-13",
      "selected": null,
      "title": "A lightweight design for serverless Function-as-a-Service",
      "urls": [
        "http://arxiv.org/pdf/2010.07115v1",
        "http://dx.doi.org/10.1109/MS.2020.3028991",
        "http://arxiv.org/abs/2010.07115v1",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85092269630&origin=inward"
      ]
    },
    {
      "abstract": "Our work addresses how a cloud provider can offer Network Functions (NF) as a Service, or NFaaS, using the emerging serverless computing paradigm. Serverless computing has the right NFaaS building blocks - usage-based billing, event-driven programming model and elastic scaling. But we identify two core limitations of existing serverless platforms that undermine support for NFaaS - coupling of the billing and work assignment granularities, and state sharing via an external store. Our framework, SNF, overcomes these limitations via two ideas. SNF allocates work at the granularity of flowlets observed in network traffic, whereas billing and programming occur at a finer level. SNF embellishes serverless platforms with ephemeral local state that lasts for the flowlet duration and supports high performance state operations. We demonstrate that our SNF prototype matches utilization closely with demand and reduces tail packet processing latency substantially compared to alternatives. \u00c2\u00a9 2020 ACM.",
      "authors": [
        "Singhvi, A.",
        "Khalid, J.",
        "Akella, A.",
        "Banerjee, S."
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1145/3419111.3421295",
      "keywords": [
        "flowlets",
        "network functions",
        "serverless computing"
      ],
      "number_of_pages": 15,
      "pages": "296-310",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450381376",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "SoCC 2020 - Proceedings of the 2020 ACM Symposium on Cloud Computing"
      },
      "publication_date": "2020-10-12",
      "selected": null,
      "title": "SNF: Serverless network functions",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85095455718&origin=inward"
      ]
    },
    {
      "abstract": "Serverless computing allows users to create short, stateless functions and invoke hundreds of them concurrently to tackle massively parallel workloads. We observe that even though most of the footprint of a serverless function is fixed across its invocations - - language runtime, libraries, and other application state - - today's serverless platforms do not exploit this redundancy. Such an inefficiency has cascading negative impacts: longer startup times, lower throughput, higher latency, and higher cost. To mitigate these problems, we have built Photons, a framework leveraging workload parallelism to co-locate multiple instances of the same function within the same runtime. Concurrent invocations can then share the runtime and application state transparently, without compromising execution safety. Photons reduce function's memory consumption by 25% to 98% per invocation, with no performance degradation compared to today's serverless platforms. We also show that our approach can reduce the overall memory utilization by 30%, and the total number of cold starts by 52%. \u00c2\u00a9 2020 ACM.",
      "authors": [
        "Dukic, V.",
        "Bruno, R.",
        "Singla, A.",
        "Alonso, G."
      ],
      "categories": null,
      "citations": 1,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1145/3419111.3421297",
      "keywords": [
        "shared runtime",
        "serverless computing",
        "workload collocation"
      ],
      "number_of_pages": 15,
      "pages": "45-59",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450381376",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "SoCC 2020 - Proceedings of the 2020 ACM Symposium on Cloud Computing"
      },
      "publication_date": "2020-10-12",
      "selected": null,
      "title": "Photons: Lambdas on a diet",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85095437945&origin=inward"
      ]
    },
    {
      "abstract": "Burst-parallel serverless applications invoke thousands of short-lived distributed functions to complete complex jobs such as data analytics, video encoding, or compilation. While these tasks execute in seconds, starting and configuring the virtual network they rely on is a major bottleneck that can consume up to 84% of total startup time. In this paper we characterize the magnitude of this network cold start problem in three popular overlay networks, Docker Swarm, Weave, and Linux Overlay. We focus on end-to-end startup time that encompasses both the time to boot a group of containers as well as interconnecting them. Our primary observation is that existing overlay approaches for serverless networking scale poorly in short-lived serverless environments. Based on our findings we develop Particle, a network stack tailored for multi-node serverless overlay networks that optimizes network creation without sacrificing multi-tenancy, generality, or throughput. When integrated into a serverless burst-parallel video processing pipeline, Particle improves application runtime by 2.4 - 3X over existing overlays. \u00c2\u00a9 2020 Owner/Author.",
      "authors": [
        "Thomas, S.",
        "Ao, L.",
        "Voelker, G.M.",
        "Porter, G."
      ],
      "categories": null,
      "citations": 1,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1145/3419111.3421275",
      "keywords": [
        "lambda",
        "networking",
        "burst parallel",
        "serverless"
      ],
      "number_of_pages": 14,
      "pages": "16-29",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450381376",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "SoCC 2020 - Proceedings of the 2020 ACM Symposium on Cloud Computing"
      },
      "publication_date": "2020-10-12",
      "selected": null,
      "title": "Particle: Ephemeral endpoints for serverless networking",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85095437810&origin=inward"
      ]
    },
    {
      "abstract": "The blockchain technology provides a data authentication and permanent storage solution to the data volatility issue in peer-to-peer games. In this work, we present the Infinity Battle, a serverless turn-based strategy game supported by a novel Proof-of-Play consensus model. Comprising three major phases: matchmaking, gaming session and global synchronization, the proposed demo game generates a blockchain through distributed storage and processing. \u00c2\u00a9 2020 Owner/Author.",
      "authors": [
        "Wu, F.",
        "Yuen, H.Y.",
        "Chan, H.C.B.",
        "Leung, V.C.M.",
        "Cai, W."
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1145/3394171.3414458",
      "keywords": [
        "peer-to-peer",
        "game",
        "blockchain"
      ],
      "number_of_pages": 3,
      "pages": "4559-4561",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450379885",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "MM 2020 - Proceedings of the 28th ACM International Conference on Multimedia"
      },
      "publication_date": "2020-10-12",
      "selected": null,
      "title": "Infinity Battle: A Glance at How Blockchain Techniques Serve in a Serverless Gaming System",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85106948869&origin=inward"
      ]
    },
    {
      "abstract": "Datacenter disaggregation provides numerous benefits to both the datacenter operator and the application designer. However switching from the server-centric model to a disaggregated model requires developing new programming abstractions that can achieve high performance while benefiting from the greater elasticity. To explore the limits of datacenter disaggregation, we study an application area that near-maximally benefits from current server-centric datacenters: dense linear algebra. We build NumPyWren, a system for linear algebra built on a disaggregated serverless programming model, and LAmbdaPACK, a companion domain-specific language designed for serverless execution of highly parallel linear algebra algorithms. We show that, for a number of linear algebra algorithms such as matrix multiply, singular value decomposition, Cholesky decomposition, and QR decomposition, NumPyWren's performance (completion time) is within a factor of 2 of optimized server-centric MPI implementations, and has up to 15% greater compute efficiency (total CPU-hours), while providing fault tolerance. \u00c2\u00a9 2020 Owner/Author.",
      "authors": [
        "Shankar, V.",
        "Krauth, K.",
        "Vodrahalli, K.",
        "Pu, Q.",
        "Recht, B.",
        "Stoica, I.",
        "Ragan-Kelley, J.",
        "Jonas, E.",
        "Venkataraman, S."
      ],
      "categories": null,
      "citations": 2,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1145/3419111.3421287",
      "keywords": [],
      "number_of_pages": 15,
      "pages": "281-295",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450381376",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "SoCC 2020 - Proceedings of the 2020 ACM Symposium on Cloud Computing"
      },
      "publication_date": "2020-10-12",
      "selected": null,
      "title": "Serverless linear algebra",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85095420600&origin=inward"
      ]
    },
    {
      "abstract": "Serverless computing is a rapidly growing paradigm that easily harnesses the power of the cloud. With serverless computing, developers simply provide an event-driven function to cloud providers, and the provider seamlessly scales function invocations to meet demands as event-triggers occur. As current and future serverless offerings support a wide variety of serverless applications, effective techniques to manage serverless workloads becomes an important issue. This work examines current management and scheduling practices in cloud providers, uncovering many issues including inflated application run times, function drops, inefficient allocations, and other undocumented and unexpected behavior. To fix these issues, a new quality-of-service function scheduling and allocation framework, called Sequoia, is designed. Sequoia allows developers or administrators to easily def ne how serverless functions and applications should be deployed, capped, prioritized, or altered based on easily configured, flexible policies. Results with controlled and realistic workloads show Sequoia seamlessly adapts to policies, eliminates mid-chain drops, reduces queuing times by up to 6.4X, enforces tight chain-level fairness, and improves run-time performance up to 25X. \u00c2\u00a9 2020 ACM.",
      "authors": [
        "Tariq, A.",
        "Pahl, A.",
        "Nimmagadda, S.",
        "Rozner, E.",
        "Lanka, S."
      ],
      "categories": null,
      "citations": 2,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1145/3419111.3421306",
      "keywords": [
        "serverless computing",
        "measurement",
        "quality-of-service"
      ],
      "number_of_pages": 17,
      "pages": "311-327",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450381376",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "SoCC 2020 - Proceedings of the 2020 ACM Symposium on Cloud Computing"
      },
      "publication_date": "2020-10-12",
      "selected": null,
      "title": "Sequoia: Enabling quality-of-service in serverless computing",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85095439090&origin=inward"
      ]
    },
    {
      "abstract": "Serverless computing promises auto-scalability and cost-efficiency (in \"pay-as-you-go\"manner) for high-productive software development. Because of its virtue, serverless computing has motivated increasingly new applications and services in the cloud. This, however, also presents new challenges including how to efficiently design high-performance serverless platforms and how to efficiently program on the platforms. This paper proposes ServerlessBench, an open-source benchmark suite for characterizing serverless platforms. It includes test cases exploring characteristic metrics of serverless computing, e.g., communication efficiency, startup latency, stateless overhead, and performance isolation. We have applied the benchmark suite to evaluate the most popular serverless computing platforms, including AWS Lambda, Open-Whisk, and Fn, and present new serverless implications from the study. For example, we show scenarios where decoupling an application into a composition of serverless functions can be beneficial in cost-saving and performance, and that the \"stateless\"property in serverless computing can hurt the execution performance of serverless functions. These implications form several design guidelines, which may help platform designers to optimize serverless platforms and application developers to design their functions best fit to the platforms. \u00c2\u00a9 2020 ACM.",
      "authors": [
        "Yu, T.",
        "Liu, Q.",
        "Du, D.",
        "Xia, Y.",
        "Zang, B.",
        "Lu, Z.",
        "Yang, P.",
        "Qin, C.",
        "Chen, H."
      ],
      "categories": null,
      "citations": 3,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1145/3419111.3421280",
      "keywords": [],
      "number_of_pages": 15,
      "pages": "30-44",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450381376",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "SoCC 2020 - Proceedings of the 2020 ACM Symposium on Cloud Computing"
      },
      "publication_date": "2020-10-12",
      "selected": null,
      "title": "Characterizing serverless platforms with serverlessbench",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85095411264&origin=inward"
      ]
    },
    {
      "abstract": "Serverless computing has recently emerged as a new paradigm for running software on the cloud. In this paradigm, programs need to be expressed as a set of short-lived tasks, each of which can complete within a short bounded time (e.g., 15 minutes on AWS Lambda). Serverless computing is beneficial to cloud providers - -by allowing them to better utilize resources - -and to users - -by simplifying management and enabling greater elasticity. However, developing applications to run in this environment is challenging, requiring users to appropriately partition their code, develop new coordination mechanisms, and deal with failure recovery. In this paper, we propose Kappa, a framework that simplifies serverless development. It uses checkpointing to handle lambda function timeouts, and provides concurrency mechanisms that enable parallel computation and coordination. \u00c2\u00a9 2020 Owner/Author.",
      "authors": [
        "Zhang, W.",
        "Fang, V.",
        "Panda, A.",
        "Shenker, S."
      ],
      "categories": null,
      "citations": 1,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1145/3419111.3421277",
      "keywords": [
        "distributed computing",
        "serverless"
      ],
      "number_of_pages": 16,
      "pages": "328-343",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450381376",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "SoCC 2020 - Proceedings of the 2020 ACM Symposium on Cloud Computing"
      },
      "publication_date": "2020-10-12",
      "selected": null,
      "title": "Kappa: A programming framework for serverless computing",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85095438979&origin=inward"
      ]
    },
    {
      "abstract": "The proceedings contain 35 papers. The topics discussed include: Wukong: a scalable and locality-enhanced framework for serverless parallel computing; particle: ephemeral endpoints for serverless networking; characterizing serverless platforms with ServerlessBench; photons: lambdas on a diet; ByteSeries : an in-memory time series database for large-scale monitoring systems; BAOVERLAY: a block-accessible overlay file system for fast and efficient container storage; challenges and solutions for fast remote persistent memory access; improving the accuracy, adaptability, and interpretability of SSD failure prediction models; leveraging application classes to save power in highly-utilized data centers; and peafowl: in-application CPU scheduling to reduce power consumption of in-memory key-value stores.",
      "authors": [],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450381376",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "SoCC 2020 - Proceedings of the 2020 ACM Symposium on Cloud Computing"
      },
      "publication_date": "2020-10-12",
      "selected": null,
      "title": "SoCC 2020 - Proceedings of the 2020 ACM Symposium on Cloud Computing",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85095457011&origin=inward"
      ]
    },
    {
      "abstract": "Serverless computing platform is emerging as a solution for event-driven artificial intelligence applications. Function-as-a-Service (FaaS) using serverless computing paradigm provides high performance and low cost solutions for deploying such applications on cloud while minimizing the operational logic. Using FaaS for efficient deployment of complex applications, such as natural language processing (NLP) and image processing, containing large deep learning models will be an advantage. However, constrained resources and stateless nature of FaaS offers numerous challenges while deploying such applications. In this work, we discuss the methodological suggestions and their implementation for deploying pre-trained large size machine learning and deep learning models on FaaS. We also evaluate the performance and deployment cost of an enterprise application, consisting of suite of deep vision preprocessing algorithms and models, on VM and FaaS platform. Our evaluation shows that migration from monolithic to FaaS platform significantly improves the performance of the application at a reduced cost. \u00c2\u00a9 2020 IEEE.",
      "authors": [
        "Dheeraj Chahal",
        "Ravi Ojha",
        "Manju Ramesh",
        "Rekha Singhal"
      ],
      "categories": null,
      "citations": 1,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/ISSREW51248.2020.00047",
      "keywords": [
        "AI",
        "cloud",
        "FaaS",
        "serverless"
      ],
      "number_of_pages": 6,
      "pages": "111-116",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-7281-7736-6",
        "issn": null,
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings - 2020 IEEE 31st International Symposium on Software Reliability Engineering Workshops, ISSREW 2020"
      },
      "publication_date": "2020-10-12",
      "selected": null,
      "title": "Migrating Large Deep Learning Models to Serverless Architecture",
      "urls": [
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9307673",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85099848738&origin=inward"
      ]
    },
    {
      "abstract": " This paper introduces a new primitive to serverless language runtimes called\nfreshen. With freshen, developers or providers specify functionality to perform\nbefore a given function executes. This proactive technique allows for overheads\nassociated with serverless functions to be mitigated at execution time, which\nimproves function responsiveness. We show various predictive opportunities\nexist to run freshen within reasonable time windows. A high-level design and\nimplementation are described, along with preliminary results to show the\npotential benefits of our scheme.\n",
      "authors": [
        "Hunhoff, Erika",
        "Irshad, Shazal",
        "Thurimella, Vijay",
        "Tariq, Ali",
        "Rozner, Eric"
      ],
      "categories": null,
      "citations": null,
      "comments": "To appear in the Sixth International Workshop on Serverless Computing\n  (WoSC6) 2020",
      "databases": [
        "arXiv"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": null,
      "publication_date": "2020-10-09",
      "selected": null,
      "title": "Proactive Serverless Function Resource Management",
      "urls": [
        "http://arxiv.org/pdf/2010.04312v1",
        "https://arxiv.org/pdf/2010.04312",
        "http://arxiv.org/abs/2010.04312v1"
      ]
    },
    {
      "abstract": "The role of IoT and related internet-based applications in otherwise mechanical devices to monitor, manage and enhance the performance of the same is quite widespread now. Almost all public cloud service providers provide scalable, fully managed and elastic IoT related services. The data flows from these services are essentially streaming and can be consumed for further use in various predictive, descriptive and visualization modules. The cloud platforms enable ingestion, transformation and usage of the data by providing streaming, machine learning and sharable visualization services. This ecosystem greatly reduces the time to create IoT based minimum viable product creation which in turn enhances the business value realization cycle. The effect of cycle time reduction to design, architect and develop IoT solutions leads to a rapid improvement of business lead time and makes it easier for businesses to gain from the data insights and plan the next course of action. In this paper, one such enterprise graded use case is explored, in which the Azure IoT platform in terms of the offerings and associated ecosystem of Azure Stream Analytics and Azure Machine learning services are explained. This paper covers design, architecture, development and deployment of the solution prepared and how the same is monitored once in production. Security is a very important aspect of the same and here the security architecture is being explored. A conclusion is presented with the scope of future enhancements using auto ML services in serverless platforms to enable real-time automated decision making augmented with human expertise and intelligence. \u00c2\u00a9 2020 IEEE.",
      "authors": [
        "Ankit Kumar Shaw",
        "Amit Chakraborty",
        "Debaniranjan Mohapatra",
        "Subrata Dutta"
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/I-SMAC49090.2020.9243544",
      "keywords": [
        "Power BI",
        "Blob Storage",
        "Stream analytics",
        "Azure IoT"
      ],
      "number_of_pages": 6,
      "pages": "326-331",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-7281-5465-7",
        "issn": null,
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings of the 4th International Conference on IoT in Social, Mobile, Analytics and Cloud, ISMAC 2020"
      },
      "publication_date": "2020-10-07",
      "selected": null,
      "title": "Scalable IoT Solution using Cloud Services \u2013 An Automobile Industry Use Case",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85097850548&origin=inward",
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9243544"
      ]
    },
    {
      "abstract": "We present Nimbus, a framework for writing and deploying Java applications on a Function-as-a-Service (\"serverless\") platform. Nimbus aims to soothe four main pain points experienced by developers working on serverless applications: that testing can be difficult, that deployment can be a slow and painful process, that it is challenging to avoid vendor lock-in, and that long cold start times can introduce unwelcome latency to function invocations. Nimbus provides a number of features that aim to overcome these challenges when working with serverless applications. It uses an annotation-based configuration to avoid having to work with large configuration files. It aims to allow the code written to be cloud-agnostic. It provides an environment for local testing where the complete application can be run locally before deployment. Lastly, Nimbus provides mechanisms for optimising the contents and size of the artifacts that are deployed to the cloud, which helps to reduce both deployment times and cold start times.",
      "authors": [
        "Robert Chatley",
        "Thomas Allerton"
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "IEEE"
      ],
      "doi": null,
      "keywords": [
        "developer tools",
        "developer experience",
        "serverless"
      ],
      "number_of_pages": 4,
      "pages": "85-88",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-7281-6528-8",
        "issn": "2574-1926",
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "2020 IEEE/ACM 42nd International Conference on Software Engineering: Companion Proceedings (ICSE-Companion)"
      },
      "publication_date": "2020-10-05",
      "selected": null,
      "title": "Nimbus: Improving the Developer Experience for Serverless Applications",
      "urls": [
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9270303"
      ]
    },
    {
      "abstract": "We present Nimbus, a framework for writing and deploying Java applications on a Function-as-a-Service (\"serverless\") platform. Nimbus aims to soothe four main pain points experienced by developersworking on serverless applications: that testing can be difficult, thatdeployment can be a slow and painful process, that it is challengingto avoid vendor lock-in, and that long cold start times can introduceunwelcome latency to function invocations.Nimbus provides a number of features that aim to overcomethese challenges when working with serverless applications. It usesan annotation-based configuration to avoid having to work withlarge configuration files. It aims to allow the code written to becloud-agnostic. It provides an environment for local testing wherethe complete application can be run locally before deployment.Lastly, Nimbus provides mechanisms for optimising the contentsand size of the artifacts that are deployed to the cloud, which helpsto reduce both deployment times and cold start times. \u00c2\u00a9 2020 Copyright held by the owner/author(s).",
      "authors": [
        "Chatley, R.",
        "Allerton, T."
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1145/3377812.3382135",
      "keywords": [
        "developer tools",
        "developer experience",
        "serverless"
      ],
      "number_of_pages": 4,
      "pages": "85-88",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": 4.6,
        "is_potentially_predatory": false,
        "isbn": "9781450371223",
        "issn": "02705257",
        "publisher": "IEEE Computer Society",
        "sjr": 0.399,
        "snip": 1.68,
        "subject_areas": [
          "Software"
        ],
        "title": "Proceedings - 2020 ACM/IEEE 42nd International Conference on Software Engineering: Companion, ICSE-Companion 2020"
      },
      "publication_date": "2020-10-01",
      "selected": null,
      "title": "Nimbus: Improving the Developer Experience for Serverless Applications",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85094165391&origin=inward",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85098557655&origin=inward"
      ]
    },
    {
      "abstract": "With diverse IoT workloads, placing compute and analytics close to where data is collected is becoming increasingly important. We seek to understand what is the performance and the cost implication of running analytics on IoT data at the various available platforms. These workloads can be compute-light, such as outlier detection on sensor data, or compute-intensive, such as object detection from video feeds obtained from drones. In our paper, Janus, we profile the performance/$ and the compute versus communication cost for a compute-light IoT workload and a compute-intensive IoT workload. In addition, we also look at the pros and cons of some of the proprietary deep-learning object detection packages, such as Amazon Rekognition, Google Vision, and Azure Cognitive Services, to contrast with open-source and tunable solutions, such as Faster R-CNN (FRCNN). We find that AWS IoT Greengrass delivers at least 2X lower latency and 1.25X lower cost compared to all other cloud platforms for the compute-light outlier detection workload. For the compute-intensive streaming video analytics task, an open-source solution to object detection running on cloud VMs saves on dollar costs compared to proprietary solutions provided by Amazon, Microsoft, and Google, but loses out on latency (up to 6X). If it runs on a low-powered edge device, the latency is up to 49X lower. \u00c2\u00a9 2020 IEEE.",
      "authors": [
        "Shankar, K.",
        "Wang, P.",
        "Xu, R.",
        "Mahgoub, A.",
        "Chaterji, S."
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1109/CLOUD49709.2020.00088",
      "keywords": [
        "Aws ec2",
        "Object detection",
        "Sensor data outlier detection",
        "Aws lambda",
        "Aws iot greengrass"
      ],
      "number_of_pages": 10,
      "pages": "590-599",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781728187808",
        "issn": "21596182",
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "IEEE International Conference on Cloud Computing, CLOUD"
      },
      "publication_date": "2020-10-01",
      "selected": null,
      "title": "JANUS: Benchmarking Commercial and Open-Source Cloud and Edge Platforms for Object and Anomaly Detection Workloads",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85099391188&origin=inward"
      ]
    },
    {
      "abstract": "The proceedings contain 84 papers. The topics discussed include: RSDS: getting system call whitelist for container through dynamic and static analysis; Lambdata: optimizing serverless computing by making data intents explicit; CFP: a cross-layer recommender system with fine-grained preloading for short video streaming at network edge; proactive container auto-scaling for cloud native machine learning services; TensorExpress: in-network communication scheduling for distributed deep learning; energy efficient decentralized geographical load balancing via dynamic deferral of workload; optimal application deployment in mobile edge computing environment; FedMax: enabling a highly-efficient federated learning framework; and analysis of SQL workloads on an enterprise datalake.",
      "authors": [],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781728187808",
        "issn": "21596182",
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "IEEE International Conference on Cloud Computing, CLOUD"
      },
      "publication_date": "2020-10-01",
      "selected": null,
      "title": "Proceedings - 2020 IEEE 13th International Conference on Cloud Computing, CLOUD 2020",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85099363487&origin=inward"
      ]
    },
    {
      "abstract": "Our function-as-a-service (FaaS) framework transformed end users' questions into automated tests for scientific software. Our case study illustrates the FaaSification of scientific software testing and the importance of value-driven evaluations by focusing on real-world defect detection.",
      "authors": [
        "Xuanyi Lin",
        "Michelle Simon",
        "Nan Niu"
      ],
      "categories": null,
      "citations": null,
      "comments": null,
      "databases": [
        "PubMed"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": 7,
      "pages": "61-67",
      "publication": {
        "category": "Journal",
        "cite_score": 6.9,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "0740-7459",
        "publisher": "IEEE Computer Society",
        "sjr": 0.692,
        "snip": 1.934,
        "subject_areas": [
          "Software"
        ],
        "title": "IEEE software"
      },
      "publication_date": "2020-10-01",
      "selected": null,
      "title": "Scientific Software Testing Goes Serverless: Creating and Invoking Metamorphic Functions.",
      "urls": []
    },
    {
      "abstract": "Serverless computing has emerged as a new cloud computing execution model that liberates users and application developers from explicitly managing 'physical' resources, leaving such a resource management burden to service providers. In this article, we study the problem of resource allocation for multi-tenant serverless computing platforms explicitly taking into account workload fluctuations including sudden surges. In particular, we investigate different root causes of performance degradation in these platforms where tenants (their applications) have different workload characteristics. To this end, we develop a fine-grained CPU cap control solution as a resource manager that dynamically adjusts CPU usage limit (or CPU cap) concerning applications with same/similar performance requirements, i.e., application groups. The adjustment of CPU caps applies primarily to co-located worker processes of serverless computing platforms to minimize resource contention, which is the major source of performance degradation. The actual adjustment decisions are made based on performance metrics (e.g., throttled time and queue length) using a group-aware scheduling algorithm. The extensive experimental results performed in our local cluster confirm that the proposed resource manager can effectively eliminate the burden of explicit reservation of computing capacity, even when fluctuations and sudden surges in the incoming workload exist. We measure the robustness of the proposed resource manager by comparing it with several heuristics which extensively used in practice, including the enhanced version of round robin and the least length queue scheduling policies, under various workload intensities driven by real-world scenarios. Notably, our resource manager outperforms other heuristics by decreasing skewness and average response time up to 44 and 94 percent, respectively, while it does not over-use the CPU resources. \u00c2\u00a9 1990-2012 IEEE.",
      "authors": [
        "Young Ki Kim",
        "M. Reza HoseinyFarahabady",
        "Young Choon Lee",
        "Albert Y. Zomaya"
      ],
      "categories": null,
      "citations": 4,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/TPDS.2020.2989771",
      "keywords": [
        "operating system process management",
        "performance modeling",
        "dynamic CPU scheduling",
        "Serverless computing",
        "virtualized cloud platforms"
      ],
      "number_of_pages": 13,
      "pages": "2289-2301",
      "publication": {
        "category": "Journal",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "2161-9883",
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "IEEE Transactions on Parallel and Distributed Systems"
      },
      "publication_date": "2020-10-01",
      "selected": null,
      "title": "Automated Fine-Grained CPU Cap Control in Serverless Computing Platform",
      "urls": [
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9076860",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85084929023&origin=inward"
      ]
    },
    {
      "abstract": "Strengthen by Artificial Intelligence (AI) and complexly integrated sensors, an autonomous mobile robot (AMR) is extensively applied in coping with various human resources tasks in indoor office environments. However, implementing an AMR system from scratch needs a strong Electric Engineer background due to the complexity of robot-controlling. Besides, Communication between robot-server, sensor, and client-service also increases the difficulty and time-cost in AMR developing. In this paper, the AMR system we proposed aims to be implemented by people without a EE background, and we will achieve this by employing Robot Operating System. Besides, the AMR system should work independently but still capable of responding to human requests. We will demonstrate a serverless could structure that includes the client-side service and integrate the edge-computing, which in charge of the immediacy-demanding job. \u00c2\u00a9 2020 KICS.",
      "authors": [
        "Tri Thong Tran",
        "Yu-Chen Zhang",
        "Wei-Tung Liao",
        "Yu-Jen Lin",
        "Ming-Chia Li",
        "Huai-Sheng Huang"
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.23919/APNOMS50412.2020.9236976",
      "keywords": [
        "cloud computing",
        "autonomous mobile robot",
        "AMR",
        "serverless",
        "edge computing"
      ],
      "number_of_pages": 4,
      "pages": "334-337",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-7281-9872-9",
        "issn": "2576-8565",
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "APNOMS 2020 - 2020 21st Asia-Pacific Network Operations and Management Symposium: Towards Service and Networking Intelligence for Humanity"
      },
      "publication_date": "2020-09-22",
      "selected": null,
      "title": "An autonomous Mobile Robot System based on Serverless Computing and Edge Computing",
      "urls": [
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9236976",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85096961248&origin=inward"
      ]
    },
    {
      "abstract": "Serverless computing shows good promise for efficiency and ease-of-use. Yet,\nthere are only a few, scattered and sometimes conflicting reports on questions\nsuch as 'Why do so many companies adopt serverless?', 'When are serverless\napplications well suited?', and 'How are serverless applications currently\nimplemented?' To address these questions, we analyze 89 serverless applications\nfrom open-source projects, industrial sources, academic literature, and\nscientific computing - the most extensive study to date.",
      "authors": [
        "Simon Eismann",
        "Joel Scheuner",
        "Erwin van Eyk",
        "Maximilian Schwinger",
        "Johannes Grohmann",
        "Nikolas Herbst",
        "Cristina L. Abad",
        "Alexandru Iosup"
      ],
      "categories": null,
      "citations": 1,
      "comments": "8 pages, 3 figures, IEEE Software",
      "databases": [
        "arXiv",
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/MS.2020.3023302",
      "keywords": [],
      "number_of_pages": 8,
      "pages": "32-39",
      "publication": {
        "category": "Journal",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "1937-4194",
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "IEEE Software"
      },
      "publication_date": "2020-09-17",
      "selected": null,
      "title": "Serverless Applications: Why, When, and How?",
      "urls": [
        "http://arxiv.org/pdf/2009.08173v2",
        "http://dx.doi.org/10.1109/MS.2020.3023302",
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9190031",
        "http://arxiv.org/abs/2009.08173v2",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85090945169&origin=inward"
      ]
    },
    {
      "abstract": " Serverless computing with cloud functions is quickly gaining adoption, but\nconstrains programmers with its limited support for state management. We\nintroduce a shared file system for cloud functions. It offers familiar POSIX\nsemantics while taking advantage of distinctive aspects of cloud functions to\nachieve scalability and performance beyond what traditional shared file systems\ncan offer. We take advantage of the function-grained fault tolerance model of\ncloud functions to proceed optimistically using local state, safe in the\nknowledge that we can restart if cache reads or lock activity cannot be\nreconciled upon commit. The boundaries of cloud functions provide implicit\ncommit and rollback points, giving us the flexibility to use transaction\nprocessing techniques without changing the programming model or API. This\nallows a variety of stateful sever-based applications to benefit from the\nsimplicity and scalability of serverless computing, often with little or no\nmodification.\n",
      "authors": [
        "Schleier-Smith, Johann",
        "Holz, Leonhard",
        "Pemberton, Nathan",
        "Hellerstein, Joseph M."
      ],
      "categories": null,
      "citations": null,
      "comments": null,
      "databases": [
        "arXiv"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": null,
      "publication_date": "2020-09-16",
      "selected": null,
      "title": "A FaaS File System for Serverless Computing",
      "urls": [
        "http://arxiv.org/abs/2009.09845v1",
        "http://arxiv.org/pdf/2009.09845v1",
        "https://arxiv.org/pdf/2009.09845"
      ]
    },
    {
      "abstract": "The fast-paced evolution of ICT technology is revolutionizing our every day life, endowing us with a seamless digital assistant accessible through smart-devices. In this context, even the way we approach tourism and holidays has undergone many changes. In fact, most of us nowadays exploit smart devices to plan, book and manage the experience. This different approach to tourism is often called Smart Tourism and it is acquiring more and more importance for business, public administrations, and tourists themselves. The idea behind our proposal is to further enhance existing structure and services of a city, promoting and encouraging the smart tourism concept while satisfying the ever increasing necessity, dynamicity and stringent Quality of Service (QoS) requirements future application scenarios embody. To this end, we propose a conceptual architectural model following a Mobile Edge Computing (MEC) approach, exploiting virtualization and multiple geographically distributed Function as a Service (FaaS) edge clouds equipped with storage capabilities. While preserving the general aspect of our study and without loss of generality, we envision a reference scenario where users consume and produce data that are geographically bound to a location of interest. This modus operandi could help unlock smart tourism potential, focusing on local communal phenomena, harvesting socio-technical data which would otherwise not be possible on a global scale through traditional centralized information systems. Along with the proposal, we discuss some preliminary evaluation of the envisioned platform, outlining some research directions. \u00c2\u00a9 2020 ACM.",
      "authors": [
        "Bujari, A.",
        "Bergamini, C.",
        "Corradi, A.",
        "Foschini, L.",
        "Palazzi, C.E.",
        "Sabbioni, A."
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1145/3411170.3411242",
      "keywords": [
        "location-based services",
        "5G",
        "Function as a Service",
        "publish-subscribe",
        "Mobile edge computing",
        "NFV"
      ],
      "number_of_pages": 6,
      "pages": "12-17",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450375597",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "ACM International Conference Proceeding Series"
      },
      "publication_date": "2020-09-14",
      "selected": null,
      "title": "A Geo-distributed Architectural Approach Favouring Smart Tourism Development in the 5G Era",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85091300091&origin=inward"
      ]
    },
    {
      "abstract": "With the widespread emergence of the Internet of Things (IoT), our environment and locations are turning progressively into smart environments ranging from individual houses/offices to schools, factories, and hospitals. Even more interesting, with the rise of Fog/Edge paradigms, the IoT application scope has been extended to provide critical services. By pushing resources such as compute and storage to the network edge, IoT-based services are taking benefits from their proximity to provide better performances. However, albeit an exciting development in and by itself, Edge/Fog computing platforms currently do not provide a convenient level of flexibility and efficiency to support the dynamic composition of services with a data-oriented approach. In this context, the Function-as-a-Service computing paradigm rises as a convenient/suitable paradigm to be adopted in the IoT landscape. For the sake of providing flexible IoT Edge/Fog deployments, this paper introduces a system providing FaaS services based on a distributed IoT infrastructure. Besides, we provide a dashboard based on Node-RED that exploits, in the backend, the FaaS system to make the users able to conceive customized applications using the resources (i.e., sensors and actuators) that the IoT devices can host. \u00c2\u00a9 2020 IEEE.",
      "authors": [
        "Giuseppe Tricomi",
        "Zakaria Benomar",
        "Francesco Aragona",
        "Giovanni Merlino",
        "Francesco Longo",
        "Antonio Puliafito"
      ],
      "categories": null,
      "citations": 1,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/SMARTCOMP50058.2020.00036",
      "keywords": [
        "IoT",
        "Node-Red",
        "Containers",
        "Edge Computing",
        "I/Ocloud",
        "FaaS",
        "Fog Computing",
        "Cloud Computing"
      ],
      "number_of_pages": 8,
      "pages": "122-129",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-7281-6998-9",
        "issn": null,
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings - 2020 IEEE International Conference on Smart Computing, SMARTCOMP 2020"
      },
      "publication_date": "2020-09-14",
      "selected": null,
      "title": "A NodeRED-based dashboard to deploy pipelines on top of IoT infrastructure",
      "urls": [
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9239699",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85097334874&origin=inward"
      ]
    },
    {
      "abstract": "Nowadays, the study of nucleic acids (DNA/RNA) has become a digital science thanks to the advent of modern massive parallel sequencing technologies, better known with the acronym NGS standing for next-generation sequencing, and to the availability of a vast amount of genetic data easily accessible from publicly available databases. Due to the quantity and complexity of such data, its processing requires strong computer science knowledge and skills. This background includes topics such as programming and scripting languages, command-line interfaces, low-level data management tools, which are not always part of the toolbox of molecular biologists and geneticists. The need to adapt to entirely new IT tools and workflows slow down even the more experienced researchers, thus dedicated and customizable GUIs would be much more preferable and conducive. In this paper, we tackle this issue by proposing a preliminary architecture for a framework providing the following benefits: i) it supports the post-NGS analysis process definition phase (commonly called pipeline definition) via a graphical dashboard designed with NodeRED; ii) it automatically deploys the workflows on top of a cluster of computational resources, according to the Function-as-a-Service paradigm, i.e., treating each step of the pipeline as a function to be executed within Linux-based containers, pre-configured with all the necessary dependencies; iii) it runs such containers taking care automatically of resource load balancing. Finally, the framework is thought to include human feedback in the loop, thanks to the availability of a smart notification system, allowing the researcher to monitor the workflows and make any decision needed for its continuation. \u00c2\u00a9 2020 IEEE.",
      "authors": [
        "Giuseppe Tricomi",
        "Domenico Giosa",
        "Giovanni Merlino",
        "Orazio Romeo",
        "Francesco Longo"
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/SMARTCOMP50058.2020.00070",
      "keywords": [
        "string matching",
        "Serverless",
        "FaaS",
        "Next Generation Sequencing",
        "DNA sequence alignment",
        "NodeRED flow editor"
      ],
      "number_of_pages": 6,
      "pages": "314-319",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-7281-6998-9",
        "issn": null,
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings - 2020 IEEE International Conference on Smart Computing, SMARTCOMP 2020"
      },
      "publication_date": "2020-09-14",
      "selected": null,
      "title": "Toward a Function-as-a-Service Framework for Genomic Analysis",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85097347996&origin=inward",
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9239679"
      ]
    },
    {
      "abstract": "The severe acute respiratory syndrome coronavirus 2 (SARS-CoV-2) pandemic found Italy unprepared to cope with the large concentrated numbers of patients infected with coronavirus disease 2019 (COVID-19) who often required hospital admission and in many cases intensive care. This pandemic very quickly overwhelmed the Italian Healthcare System. This paper describes the Active Home Surveillance System (Operations Center for Discharged Patients; COD19) and the Home Hospital Care System (COD20) and presents the clinical data collected and the level of user satisfaction with the service. The Operations Center for Discharged Patients (COD19) is an active surveillance service for home-care patients which involves: (1) monitoring critical clinical conditions; (2) recognizing social and health issues; (3) and providing necessary clinical services in the form of a telemedicine service. COD20 is a patient-specialist video consultation service that allows to perform an assessment of clinical conditions and any need to visit; defining the priority of access to specialist outpatient visits in the presence or manageable with the new video consultation model. This service was immediately necessary during the COD19 monitoring. COD19 and COD20 are based on the Amazon Web Services Serverless certified platform. The COD19 and COD20 platform can be intrinsically utilized for future epidemic outbreaks; also those with non-respiratory transmission; and is sufficiently flexible to adapt to natural catastrophes.",
      "authors": [
        "Gian Vincenzo Zuccotti",
        "Simona Bertoli",
        "Andrea Foppiani",
        "Elvira Verduci",
        "Alberto Battezzati"
      ],
      "categories": null,
      "citations": null,
      "comments": null,
      "databases": [
        "PubMed"
      ],
      "doi": null,
      "keywords": [
        "Y COD19",
        "Y COD20",
        "Y telemedicine service",
        "Y home surveillance"
      ],
      "number_of_pages": null,
      "pages": null,
      "publication": {
        "category": "Journal",
        "cite_score": 3.4,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "1660-4601",
        "publisher": "Frontiers Media S.A.",
        "sjr": 0.747,
        "snip": 1.356,
        "subject_areas": [
          "Public Health, Environmental and Occupational Health",
          "Health, Toxicology and Mutagenesis",
          "Pollution"
        ],
        "title": "International journal of environmental research and public health"
      },
      "publication_date": "2020-09-14",
      "selected": null,
      "title": "COD19 and COD20: An Italian Experience of Active Home Surveillance in COVID-19 Patients.",
      "urls": []
    },
    {
      "abstract": "Background UNASSIGNED Whole-slide images (WSI) are produced by a high-resolution scanning of pathology glass slides. There are a large number of whole-slide imaging scanners, and the resulting images are frequently larger than 100,000 \u00d7 100,000 pixels which typically image 100,000 to one million cells, ranging from several hundred megabytes to many gigabytes in size.\nAims and Objectives UNASSIGNED Provide HTTP access over the web to Whole Slide Image tiles that do not have localized tiling servers but only basic HTTP access. Move all image decode and tiling functions to calling agent (ImageBox).\nMethods UNASSIGNED Current software systems require tiling image servers to be installed on systems providing local disk access to these images. ImageBox2 breaks this requirement by accessing tiles from remote HTTP source via byte-level HTTP range requests. This method does not require changing the client software as the operation is relegated to the ImageBox2 server which is local (or remote) to the client and can access tiles from remote images that have no server of their own such as Amazon S3 hosted images. That is, it provides a data service [on a server that does not need to be managed], the definition of serverless execution model increasingly favored by cloud computing infrastructure.\nConclusions UNASSIGNED The specific methodology described and assessed in this report preserves normal client connection semantics by enabling cloud-friendly tiling, promoting a web of http connected whole-slide images from a wide-ranging number of sources, and providing tiling where local tiling servers would have been otherwise unavailable.",
      "authors": [
        "Erich Bremer",
        "Joel Saltz",
        "Jonas S Almeida"
      ],
      "categories": null,
      "citations": null,
      "comments": null,
      "databases": [
        "PubMed"
      ],
      "doi": null,
      "keywords": [
        "N Digital imaging",
        "N serverless cloud computing",
        "N whole-slide images",
        "N World Wide Web",
        "N web services"
      ],
      "number_of_pages": null,
      "pages": "29",
      "publication": {
        "category": "Journal",
        "cite_score": 5.6,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "2229-5089",
        "publisher": "Wolters Kluwer Medknow Publications",
        "sjr": 1.009,
        "snip": 1.142,
        "subject_areas": [
          "Pathology and Forensic Medicine",
          "Health Informatics",
          "Computer Science Applications"
        ],
        "title": "Journal of pathology informatics"
      },
      "publication_date": "2020-09-10",
      "selected": null,
      "title": "ImageBox 2 - Efficient and Rapid Access of Image Tiles from Whole-Slide Images Using Serverless HTTP Range Requests.",
      "urls": []
    },
    {
      "abstract": "Function as a Service (FaaS) permits cloud customers to deploy to cloud individual functions, in contrast to complete virtual machines or Linux containers. All major cloud providers offer FaaS products (Amazon Lambda, Google Cloud Functions, Azure Serverless); there are also popular open-source implementations (Apache OpenWhisk) with commercial offerings (Adobe I/O Runtime, IBM Cloud Functions). A new feature of FaaS is function composition: a function may (sequentially) call another function, which, in turn, may call yet another function - forming a chain of invocations. From the perspective of the infrastructure, a composed FaaS is less opaque than a virtual machine or a container. We show that this additional information enables the infrastructure to reduce the response latency. In particular, knowing the sequence of future invocations, the infrastructure can schedule these invocations along with environment preparation. We model resource management in FaaS as a scheduling problem combining (1) sequencing of invocations, (2) deploying execution environments on machines, and (3) allocating invocations to deployed environments. For each aspect, we propose heuristics. We explore their performance by simulation on a range of synthetic workloads. Our results show that if the setup times are long compared to invocation times, algorithms that use information about the composition of functions consistently outperform greedy, myopic algorithms, leading to significant decrease in response latency. \u00c2\u00a9 2020 IEEE.",
      "authors": [
        "Pawel Zuk",
        "Krzysztof Rzadca"
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/SBAC-PAD49847.2020.00028",
      "keywords": [
        "Serverless",
        "Scheduling",
        "Workflow",
        "Function-as-a-service",
        "Setup time"
      ],
      "number_of_pages": 9,
      "pages": "132-140",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-7281-9925-2",
        "issn": "1550-6533",
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "2020 IEEE 32nd International Symposium on Computer Architecture and High Performance Computing (SBAC-PAD)"
      },
      "publication_date": "2020-09-09",
      "selected": null,
      "title": "Scheduling Methods to Reduce Response Latency of Function as a Service",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85095865911&origin=inward",
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9235070"
      ]
    },
    {
      "abstract": "Runtime environments like Java's JRE,.NET's CLR, and Ruby's MRI, are popular choices for cloud-based applications and particularly in the Function as a Service (FaaS) serverless computing context. A critical component of runtime environments of these languages is the garbage collector (GC). The GC frees developers from manual memory management, which could potentially ease development and avoid bugs. The benefits of using the GC come with a negative impact on performance; that impact happens because either the GC needs to pause the runtime execution or competes with the running program for computational resources. In this work, we evaluated the usage of a technique - Garbage Collector Control Interceptor (GCI) - that eliminates the negative impact of GC on performance by controlling GC executions and transparently shedding requests while the collections are happening. We executed experiments simulating AWS Lambda's behavior and found that GCI is a viable solution. It benefited the user by improving the response time up to 10.86% at 99.9th percentile and reducing cost by 7.22%, but it also helped the platform provider by improving resource utilization by 14.52%. \u00c2\u00a9 2020 IEEE.",
      "authors": [
        "David Quaresma",
        "Daniel Fireman",
        "Thiago Emmanuel Pereira"
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/SBAC-PAD49847.2020.00033",
      "keywords": [
        "cloud computing",
        "faas",
        "gci",
        "garbage collector",
        "cold start",
        "cloud services",
        "serverless"
      ],
      "number_of_pages": 8,
      "pages": "175-182",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-7281-9925-2",
        "issn": "1550-6533",
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "2020 IEEE 32nd International Symposium on Computer Architecture and High Performance Computing (SBAC-PAD)"
      },
      "publication_date": "2020-09-09",
      "selected": null,
      "title": "Controlling Garbage Collection and Request Admission to Improve Performance of FaaS Applications",
      "urls": [
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9235063",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85095863255&origin=inward"
      ]
    },
    {
      "abstract": "This research explores possibilities of creating software architectures for managing multiple autonomous objects in computational environments, which move away from clouds and use computational power of objects, at the edge of computing and communication networks. The emphasis is on shaping the behaviour of autonomous objects through human involvement in order to manipulate functions and change the purpose and levels of autonomy of these objects. The proposed computational model, generated from the software architectures, which gives rise to serverless and edge computing, should work across problem domain. By collecting relevant data and allowing a variable level of human input, the solution will enable us to choose, merge and combine multiple objects for a variety of tasks and according to environments in which autonomous objects reside. \u00c2\u00a9 2020 IEEE.",
      "authors": [
        "Karoline McClenaghan",
        "Ole Christian Moholth",
        "Jan Dyre Bjerknes"
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/ICHMS49158.2020.9209547",
      "keywords": [
        "human involvement",
        "Autonomous objects",
        "edge computing"
      ],
      "number_of_pages": 6,
      "pages": "1-6",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-7281-5872-3",
        "issn": null,
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings of the 2020 IEEE International Conference on Human-Machine Systems, ICHMS 2020"
      },
      "publication_date": "2020-09-07",
      "selected": null,
      "title": "Computational Edge for Multiple Autonomous Objects",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85093953553&origin=inward",
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9209547"
      ]
    },
    {
      "abstract": "The severe acute respiratory syndrome coronavirus 2 (SARS-CoV-2) pandemic found Italy unprepared to cope with the large concentrated numbers of patients infected with coronavirus disease 2019 (COVID-19) who often required hospital admission and in many cases intensive care. This pandemic very quickly overwhelmed the Italian Healthcare System. This paper describes the Active Home Surveillance System (Operations Center for Discharged Patients; COD19) and the Home Hospital Care System (COD20) and presents the clinical data collected and the level of user satisfaction with the service. The Operations Center for Discharged Patients (COD19) is an active surveillance service for home-care patients which involves: (1) monitoring critical clinical conditions; (2) recognizing social and health issues; (3) and providing necessary clinical services in the form of a telemedicine service. COD20 is a patient-specialist video consultation service that allows to perform an assessment of clinical conditions and any need to visit; defining the priority of access to specialist outpatient visits in the presence or manageable with the new video consultation model. This service was immediately necessary during the COD19 monitoring. COD19 and COD20 are based on the Amazon Web Services Serverless certified platform. The COD19 and COD20 platform can be intrinsically utilized for future epidemic outbreaks; also those with non-respiratory transmission; and is sufficiently flexible to adapt to natural catastrophes.",
      "authors": [
        "Zuccotti, Gian  Vincenzo",
        "Bertoli, Simona",
        "Foppiani, Andrea",
        "Verduci, Elvira",
        "Battezzati, Alberto"
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.3390/ijerph17186699",
      "keywords": [
        "Telemedicine service",
        "COD20",
        "COD19",
        "Home surveillance"
      ],
      "number_of_pages": 13,
      "pages": "1-13",
      "publication": {
        "category": "Journal",
        "cite_score": 3.4,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "16617827",
        "publisher": "Frontiers Media S.A.",
        "sjr": 0.747,
        "snip": 1.356,
        "subject_areas": [
          "Public Health, Environmental and Occupational Health",
          "Health, Toxicology and Mutagenesis",
          "Pollution"
        ],
        "title": "International Journal of Environmental Research and Public Health"
      },
      "publication_date": "2020-09-02",
      "selected": null,
      "title": "COD19 and COD20: An Italian Experience of Active Home Surveillance in COVID-19 Patients",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85090770708&origin=inward",
        "https://www.mdpi.com/1660-4601/17/18/6699/pdf"
      ]
    },
    {
      "abstract": "Scientific workflows consisting of a high number of interdependent tasks represent an important class of complex scientific applications. Recently, a new type of serverless infrastructures has emerged, represented by such services as Google Cloud Functions and AWS Lambda, also referred to as the Function-as-a-Service model. In this paper we take a look at such serverless infrastructures, which are designed mainly for processing background tasks of Web and Internet of Things applications, or event-driven stream processing. We evaluate their applicability to more compute- and data-intensive scientific workflows and discuss possible ways to repurpose serverless architectures for execution of scientific workflows. We have developed prototype workflow executor functions using AWS Lambda and Google Cloud Functions, coupled with the HyperFlow workflow engine. These functions can run workflow tasks in AWS and Google infrastructures, and feature such capabilities as data staging to/from S3 or Google Cloud Storage and execution of custom application binaries. We have successfully deployed and executed the Montage astronomy workflow, often used as a benchmark, and we report on initial results of its performance evaluation. Our findings indicate that the simple mode of operation makes this approach easy to use, although there are costs involved in preparing portable application binaries for execution in a remote environment. While our solution is an early prototype, we find the presented approach highly promising. We also discuss possible future steps related to execution of scientific workflows in serverless infrastructures. Finally, we perform a cost analysis and discuss implications with regard to resource management for scientific applications in general. \u00c2\u00a9 2017 Elsevier B.V.",
      "authors": [
        "Malawski, M.",
        "Gajek, A.",
        "Zima, A.",
        "Balis, B.",
        "Figiela, K."
      ],
      "categories": null,
      "citations": 16,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1016/j.future.2017.10.029",
      "keywords": [
        "Serverless architectures",
        "Scientific workflows",
        "FaaS",
        "Cloud functions"
      ],
      "number_of_pages": 13,
      "pages": "502-514",
      "publication": {
        "category": "Journal",
        "cite_score": 13.3,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "0167739X",
        "publisher": "Elsevier",
        "sjr": 1.262,
        "snip": 2.72,
        "subject_areas": [
          "Hardware and Architecture",
          "Computer Networks and Communications",
          "Software"
        ],
        "title": "Future Generation Computer Systems"
      },
      "publication_date": "2020-09-01",
      "selected": null,
      "title": "Serverless execution of scientific workflows: Experiments with HyperFlow, AWS Lambda and Google Cloud Functions",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85035082302&origin=inward"
      ]
    },
    {
      "abstract": "Serverless computing and a function execution model, Function-as-a-Service (FaaS), are currently receiving considerable attention from both academia and in",
      "authors": [
        "Jeongchul Kim",
        "Kyungyong Lee"
      ],
      "categories": null,
      "citations": 3,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1007/s10586-020-03103-4",
      "keywords": [
        "Data-intensive application",
        "I/O resource",
        "FaaS",
        "Cloud functions",
        "Serverless computing",
        "Resource isolation"
      ],
      "number_of_pages": 11,
      "pages": "2249-2259",
      "publication": {
        "category": "Journal",
        "cite_score": 3.1,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "13867857",
        "publisher": "Kluwer Academic Publishers",
        "sjr": 0.335,
        "snip": 0.744,
        "subject_areas": [
          "Computer Networks and Communications",
          "Software"
        ],
        "title": "Cluster Computing"
      },
      "publication_date": "2020-09-01",
      "selected": null,
      "title": "I/O resource isolation of public cloud serverless function runtimes for data-intensive applications",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85083836443&origin=inward",
        "https://link.springer.com/content/pdf/10.1007/s10586-020-03103-4.pdf"
      ]
    },
    {
      "abstract": "With the increasing amount of sensor data available online, it is becoming more difficult for users to identify useful datasets. Semantic Web technologies can improve such discovery via meaningful ontologies, but the decision of whether a dataset is suitable remains with the users. Users can be aided in this process through the GEO label, which provides a visual summary of the standardised metadata. However, the GEO label is not yet available for the Semantic Sensor Web. This work presents novel rules for deriving the information for the GEO label\u2019s multiple facets, such as user feedback or quality information, based on the Semantic Sensor Network Ontology and related ontologies. Thereby, this work enhances an existing implementation of the GEO label API to generate labels for resources of the Semantic Sensor Web. Further, the prototype is deployed to serverless cloud infrastructures. We find that serverless GEO label generation is capable of handling two evaluation scenarios for concurrent users and burst generation. Nonetheless, more real-world semantic sensor descriptions, an analysis of requirements for GEO label facets specific to the Semantic Sensor Web, and an integration into large-scale discovery platforms are needed.",
      "authors": [
        "Graupner, Anika",
        "N\u00fcst, Daniel"
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.4230/LIPIcs.GIScience.2021.I.4",
      "keywords": [
        "data discovery",
        "geospatial metadata",
        "GEO label",
        "Semantic Sensor Web",
        "serverless"
      ],
      "number_of_pages": null,
      "pages": null,
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": 1.7,
        "is_potentially_predatory": false,
        "isbn": "9783959771665",
        "issn": "18688969",
        "publisher": "Schloss Dagstuhl- Leibniz-Zentrum fur Informatik GmbH, Dagstuhl Publishing",
        "sjr": 0.54,
        "snip": 0.78,
        "subject_areas": [
          "Software"
        ],
        "title": "11th International Conference on Geographic Information Science (GIScience 2021) - Part I"
      },
      "publication_date": "2020-09-01",
      "selected": null,
      "title": "Serverless GEO Labels for the Semantic Sensor Web",
      "urls": [
        "https://drops.dagstuhl.de/opus/volltexte/2020/13039/pdf/LIPIcs-GIScience-2021-I-4.pdf/",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85092761834&origin=inward"
      ]
    },
    {
      "abstract": "Adapting the cloud for high-performance computing (HPC) is a challenging task, as software for HPC applications hinges on fast network connections and is sensitive to hardware failures. Using cloud infrastructure to recreate conventional HPC clusters is therefore in many cases an infeasible solution for migrating HPC applications to the cloud. As an alternative to the generic lift and shift approach, we consider the specific application of seismic imaging and demonstrate a serverless and event-driven approach for running large-scale instances of this problem in the cloud. Instead of permanently running compute instances, our workflow is based on a serverless architecture with high throughput batch computing and event-driven computations, in which computational resources are only running as long as they are utilized. We demonstrate that this approach is very flexible and allows for resilient and nested levels of parallelization, including domain decomposition for solving the underlying partial differential equations. While the event-driven approach introduces some overhead as computational resources are repeatedly restarted, it inherently provides resilience to instance shut-downs and allows a significant reduction of cost by avoiding idle instances, thus making the cloud a viable alternative to on-premise clusters for large-scale seismic imaging. \u00c2\u00a9 1990-2012 IEEE.",
      "authors": [
        "Philipp A. Witte",
        "Mathias Louboutin",
        "Henryk Modzelewski",
        "Charles Jones",
        "James Selvage",
        "Felix J. Herrmann"
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/TPDS.2020.2982626",
      "keywords": [],
      "number_of_pages": 18,
      "pages": "2032-2049",
      "publication": {
        "category": "Journal",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "2161-9883",
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "IEEE Transactions on Parallel and Distributed Systems"
      },
      "publication_date": "2020-09-01",
      "selected": null,
      "title": "An Event-Driven Approach to Serverless Seismic Imaging in the Cloud",
      "urls": [
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9044390",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85084113891&origin=inward"
      ]
    },
    {
      "abstract": "In a serverless cloud computing environment, the cloud provider dynamically manages the allocation of resources whereas the developers purely focus on their applications. The data-driven applications in serverless cloud computing mainly address the web as well as other distributed scenarios, and therefore, it is essential to offer a consistent user experience across different connection types. In order to address the issues of data-driven application in a real-time distributed environment, the use of GraphQL (Graph Query Language) is getting more and more popularity in state-of-the-art cloud computing approaches. However, the existing solutions target the low level implementation of GraphQL, for the development of a complex data-driven application, which may lead to several errors and involve a significant amount of development efforts due to various users' requirements in real-time. Therefore, it is critical to simplify the development process of data-driven applications in a serverless cloud computing environment. Consequently, this research introduces UMLPDA (Unified Modeling Language Profile for Data-driven Applications), which adopts the concepts of UML-based Model-driven Architectures to model the frontend as well as the backend requirements for data-driven applications developed at a higher abstraction level. Particularly, a modeling approach is proposed to resolve the development complexities such as data communication and synchronization. Subsequently, a complete open source transformation engine is developed using a Model-to-Text approach to automatically generate the frontend as well as backend low level implementations of Angular2 and GraphQL respectively. The validation of proposed work is performed with three different case studies, deployed on Amazon Web Services platform. The results show that the proposed framework enables to develop the data-driven applications with simplicity.",
      "authors": [
        "Fatima Samea",
        "Farooque Azam",
        "Muhammad Rashid",
        "Muhammad Waseem Anwar",
        "Wasi Haider Butt",
        "Abdul Wahab Muzaffar"
      ],
      "categories": null,
      "citations": null,
      "comments": null,
      "databases": [
        "PubMed"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": "e0237317",
      "publication": {
        "category": "Journal",
        "cite_score": 5.3,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "1932-6203",
        "publisher": "Public Library of Science",
        "sjr": 0.99,
        "snip": 1.349,
        "subject_areas": [
          "Multidisciplinary"
        ],
        "title": "PloS one"
      },
      "publication_date": "2020-08-28",
      "selected": null,
      "title": "A model-driven framework for data-driven applications in serverless cloud computing.",
      "urls": []
    },
    {
      "abstract": " Datacenters are witnessing a rapid surge in the adoption of serverless\nfunctions for microservices-based applications. A vast majority of these\nmicroservices typically span less than a second, have strict SLO requirements,\nand are chained together as per the requirements of an application. The\naforementioned characteristics introduce a new set of challenges, especially in\nterms of container provisioning and management, as the state-of-the-art\nresource management frameworks, employed in serverless platforms, tend to look\nat microservice-based applications similar to conventional monolithic\napplications. Hence, these frameworks suffer from microservice-agnostic\nscheduling and colossal container over-provisioning, especially during workload\nfluctuations, thereby resulting in poor resource utilization. In this work, we quantify the above shortcomings using a variety of workloads\non a multi-node cluster managed by Kubernetes and Brigade serverless framework.\nTo address them, we propose \\emph{Fifer} -- an adaptive resource management\nframework to efficiently manage function-chains on serverless platforms. The\nkey idea is to make \\emph{Fifer} (i) utilization conscious by efficiently bin\npacking jobs to fewer containers using function-aware container scaling and\nintelligent request batching, and (ii) at the same time, SLO-compliant by\nproactively spawning containers to avoid cold-starts, thus minimizing the\noverall response latency. Combining these benefits, \\emph{Fifer} improves\ncontainer utilization and cluster-wide energy consumption by 4x and 31%,\nrespectively, without compromising on SLO's, when compared to the\nstate-of-the-art schedulers employed by serverless platforms.\n",
      "authors": [
        "Gunasekaran, Jashwant Raj",
        "Thinakaran, Prashanth",
        "Chidambaram, Nachiappan",
        "Kandemir, Mahmut T.",
        "Das, Chita R."
      ],
      "categories": null,
      "citations": null,
      "comments": null,
      "databases": [
        "arXiv"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": null,
      "publication_date": "2020-08-28",
      "selected": null,
      "title": "Fifer: Tackling Underutilization in the Serverless Era",
      "urls": [
        "https://arxiv.org/pdf/2008.12819",
        "http://arxiv.org/abs/2008.12819v1",
        "http://arxiv.org/pdf/2008.12819v1"
      ]
    },
    {
      "abstract": "Function as a Service (FaaS) is an integral part of the serverless computing paradigm. It offers a true pay-per-use billing model and releases developers from the burden of managing the application stack. A discussion on whether and when this model is more appropriate for cloud computing users in terms of accruing costs compared to the more \"traditional\"delivery models has already been started by existing works. However, by treating this subject as a regular service selection problem, these approaches fail to exploit the space created by distributing the load between simultaneous FaaS and non-FaaS deployments of an application in a hybrid deployment model. This work aims to provide the means for application owners to decide which deployment scenario is cost optimal for their needs. In case this scenario is a hybrid deployment, the proposed approach also determines the optimal number of virtual machines that will need to be provisioned. An extensible and configurable FaasSimulator open source tool is presented for these purposes. \u00c2\u00a9 2020 IEEE.",
      "authors": [
        "Anja Reuter",
        "Timon Back",
        "Vasilios Andrikopoulos"
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/SEAA51224.2020.00049",
      "keywords": [
        "simulation",
        "cost efficiency",
        "FaaS",
        "serverless"
      ],
      "number_of_pages": 4,
      "pages": "242-245",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-7281-9533-9",
        "issn": null,
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings - 46th Euromicro Conference on Software Engineering and Advanced Applications, SEAA 2020"
      },
      "publication_date": "2020-08-26",
      "selected": null,
      "title": "Cost efficiency under mixed serverless and serverful deployments",
      "urls": [
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9226321",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85096523450&origin=inward"
      ]
    },
    {
      "abstract": " The serverless computing paradigm promises many desirable properties for\ncloud applications - low-cost, fine-grained deployment, and management-free\noperation. Consequently, the paradigm has underwent rapid growth: there\ncurrently exist tens of serverless platforms and all global cloud providers\nhost serverless operations. To help tune existing platforms, guide the design\nof new serverless approaches, and overall contribute to understanding this\nparadigm, in this work we present a long-term, comprehensive effort to\nidentify, collect, and characterize 89 serverless use cases. We survey use\ncases, sourced from white and grey literature, and from consultations with\nexperts in areas such as scientific computing. We study each use case using 24\ncharacteristics, including general aspects, but also workload, application, and\nrequirements. When the use cases employ workflows, we further analyze their\ncharacteristics. Overall, we hope our study will be useful for both academia\nand industry, and encourage the community to further share and communicate\ntheir use cases. This article appears also as a SPEC Technical Report:\nhttps://research.spec.org/fileadmin/user_upload/documents/rg_cloud/endorsed_publications/SPEC_RG_2020_Serverless_Usecases.pdf The article may be submitted for peer-reviewed publication.\n",
      "authors": [
        "Eismann, Simon",
        "Scheuner, Joel",
        "van Eyk, Erwin",
        "Schwinger, Maximilian",
        "Grohmann, Johannes",
        "Herbst, Nikolas",
        "Abad, Cristina L.",
        "Iosup, Alexandru"
      ],
      "categories": null,
      "citations": null,
      "comments": "47 pages, 29 figures, SPEC RG technical report",
      "databases": [
        "arXiv"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": null,
      "publication_date": "2020-08-25",
      "selected": null,
      "title": "A Review of Serverless Use Cases and their Characteristics",
      "urls": [
        "http://arxiv.org/abs/2008.11110v2",
        "https://arxiv.org/pdf/2008.11110",
        "http://arxiv.org/pdf/2008.11110v2"
      ]
    },
    {
      "abstract": " With the emergence of distributed data, training machine learning models in\nthe serverless manner has attracted increasing attention in recent years.\nNumerous training approaches have been proposed in this regime, such as\ndecentralized SGD. However, all existing decentralized algorithms only focus on\nstandard SGD. It might not be suitable for some applications, such as deep\nfactorization machine in which the feature is highly sparse and categorical so\nthat the adaptive training algorithm is needed. In this paper, we propose a\nnovel adaptive decentralized training approach, which can compute the learning\nrate from data dynamically. To the best of our knowledge, this is the first\nadaptive decentralized training approach. Our theoretical results reveal that\nthe proposed algorithm can achieve linear speedup with respect to the number of\nworkers. Moreover, to reduce the communication-efficient overhead, we further\npropose a communication-efficient adaptive decentralized training approach,\nwhich can also achieve linear speedup with respect to the number of workers. At\nlast, extensive experiments on different tasks have confirmed the effectiveness\nof our proposed two approaches.\n",
      "authors": [
        "Gao, Hongchang",
        "Huang, Heng"
      ],
      "categories": null,
      "citations": null,
      "comments": null,
      "databases": [
        "arXiv"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": null,
      "publication_date": "2020-08-24",
      "selected": null,
      "title": "Adaptive Serverless Learning",
      "urls": [
        "https://arxiv.org/pdf/2008.10422",
        "http://arxiv.org/abs/2008.10422v1",
        "http://arxiv.org/pdf/2008.10422v1"
      ]
    },
    {
      "abstract": " Serverless computing platforms currently rely on basic pricing schemes that\nare static and do not reflect customer feedback. This leads to significant\ninefficiencies from a total utility perspective. As one of the fastest-growing\ncloud services, serverless computing provides an opportunity to better serve\nboth users and providers through the incorporation of market-based strategies\nfor pricing and resource allocation. With the help of utility functions to\nmodel the delay-sensitivity of customers, we propose a novel scheduler to\nallocate resources for serverless computing. The resulting resource allocation\nscheme is optimal in the sense that it maximizes the aggregate utility of all\nusers across the system, thus maximizing social welfare. Our approach gives\nrise to a dynamic pricing scheme which is obtained by solving an optimization\nproblem in its dual form. We further develop feedback mechanisms that allow the\ncloud provider to converge to optimal resource allocation, even when the users'\nutilities are unknown. Simulations show that our approach can track market\ndemand and achieve significantly higher social welfare (or, equivalently, cost\nsavings for customers) as compared to existing schemes.\n",
      "authors": [
        "Gupta, Vipul",
        "Phade, Soham",
        "Courtade, Thomas",
        "Ramchandran, Kannan"
      ],
      "categories": null,
      "citations": null,
      "comments": "24 pages, 8 figures",
      "databases": [
        "arXiv"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": null,
      "publication_date": "2020-08-18",
      "selected": null,
      "title": "Utility-based Resource Allocation and Pricing for Serverless Computing",
      "urls": [
        "http://arxiv.org/pdf/2008.07793v1",
        "http://arxiv.org/abs/2008.07793v1",
        "https://arxiv.org/pdf/2008.07793"
      ]
    },
    {
      "abstract": "Next generation software built for the cloud recently has embraced serverless computing platforms that use temporary infrastructure to host microservices offering building blocks for resilient, loosely coupled systems that are scalable, easy to manage, and extend. Serverless architectures enable decomposing software into independent components packaged and run using isolated containers or microVMs. This decomposition approach enables application hosting using very fine-grained cloud infrastructure enabling cost savings as deployments are billed granularly for resource use. Adoption of serverless platforms promise reduced hosting costs while achieving high availability, fault tolerance, and dynamic elasticity. These benefits are offset by pricing obfuscation, as performance variance from CPU heterogeneity, multitenancy, and provisioning variation obscure the true cost of hosting applications with serverless platforms. Where determining hosting costs for traditional VM-based application deployments simply involves accounting for the number of VMs and their uptime, predicting hosting costs for serverless applications can be far more complex. To address these challenges, we introduce the Serverless Application Analytics Framework (SAAF), a tool that allows profiling FaaS workload performance, resource utilization, and infrastructure to enable accurate performance predictions. We apply Linux CPU time accounting principles and multiple regression to estimate FaaS function runtime. We predict runtime using a series of increasingly variant compute bound workloads that execute across heterogeneous CPUs, different memory settings, and to alternate FaaS platforms evaluating our approach for 77 different scenarios. We found that the mean absolute percentage error of our runtime predictions for these scenarios was just ~3.49% resulting in an average cost error of 6.46 for 1-million FaaS function workloads averaging 150.45 in price. \u00c2\u00a9 2020 IEEE.",
      "authors": [
        "Robert Cordingly",
        "Wen Shu",
        "Wes J. Lloyd"
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/DASC-PICom-CBDCom-CyberSciTech49142.2020.00111",
      "keywords": [
        "Serverless Computing",
        "Performance Evaluation",
        "Performance Modeling",
        "Resource Contention",
        "Multitenancy",
        "Function-as-a-Service"
      ],
      "number_of_pages": 10,
      "pages": "640-649",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-7281-6610-0",
        "issn": null,
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings - IEEE 18th International Conference on Dependable, Autonomic and Secure Computing, IEEE 18th International Conference on Pervasive Intelligence and Computing, IEEE 6th International Conference on Cloud and Big Data Computing and IEEE 5th Cyber Science and Technology Congress, DASC/PiCom/CBDCom/CyberSciTech 2020"
      },
      "publication_date": "2020-08-17",
      "selected": null,
      "title": "Predicting Performance and Cost of Serverless Computing Functions with SAAF",
      "urls": [
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9251165",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85097651725&origin=inward"
      ]
    },
    {
      "abstract": "Serverless computing platforms have emerged offering software engineers an option for application hosting without the need to configure servers or manage scaling while guaranteeing high availability and fault tolerance. In the ideal scenario, a developer should be able to create a microservice, deploy it to a serverless platform, and never have to manage or configure anything; a truly serverless platform. The current implementation of serverless computing platforms is known as Function-as-a-Service or FaaS. Adoption of FaaS platforms, however, requires developers to address a major question- what programming language should functions be written in? To investigate this question, we implemented identical multi-function data processing pipelines in Java, Python, Go, and Node.js. Using these pipelines as a case study, we ran experiments tailored to investigate FaaS data processing performance. Specifically, we investigate data processing performance implications: for data payloads of varying size, with cold and warm serverless infrastructure, over scaling workloads, and when varying the available function memory. We found that Node.js had up to 94% slower runtime vs. Java for the same workload. In other scenarios, Java had 20% slower runtime than Go resulting from differences in how the cloud provider orchestrates infrastructure for each language with respect to the serverless freeze/thaw lifecycle. We found that no single language provided the best performance for every stage of a data processing pipeline and the fastest pipeline could be derived by combining a hybrid mix of languages to optimize performance. \u00c2\u00a9 2020 IEEE.",
      "authors": [
        "Robert Cordingly",
        "Hanfei Yu",
        "Varik Hoang",
        "David Perez",
        "David Foster",
        "Zohreh Sadeghi",
        "Rashad Hatchett",
        "Wes J. Lloyd"
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/DASC-PICom-CBDCom-CyberSciTech49142.2020.00120",
      "keywords": [
        "Serverless Computing",
        "Programming Languages",
        "FaaS",
        "Function-as-a-Service",
        "AWS Lambda"
      ],
      "number_of_pages": 8,
      "pages": "704-711",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-7281-6610-0",
        "issn": null,
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings - IEEE 18th International Conference on Dependable, Autonomic and Secure Computing, IEEE 18th International Conference on Pervasive Intelligence and Computing, IEEE 6th International Conference on Cloud and Big Data Computing and IEEE 5th Cyber Science and Technology Congress, DASC/PiCom/CBDCom/CyberSciTech 2020"
      },
      "publication_date": "2020-08-17",
      "selected": null,
      "title": "Implications of Programming Language Selection for Serverless Data Processing Pipelines",
      "urls": [
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9251194",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85097643570&origin=inward"
      ]
    },
    {
      "abstract": "An imminent challenge in the serverless computing landscape is the escalating cost of infrastructure needed to handle the growing traffic at scale. This work presents ENSURE, a function-level scheduler and autonomous resource manager designed to minimize provider resource costs while meeting customer performance requirements. ENSURE works by classifying incoming function requests at runtime and carefully regulating the resource usage of colocated functions on each invoker. Beyond a single invoker, ENSURE elastically scales capacity, using concepts from operations research, in response to varying workload traffic to prevent cold starts. Finally, ENSURE schedules requests by concentrating load on an adequate number of invokers to encourage reuse of active hosts (thus further avoiding cold starts) and allow unneeded capacity to provably and gracefully time out. We implement ENSURE on Apache OpenWhisk and show that, across several serverless applications and compared to existing baselines, ENSURE significantly improves resource efficiency, by as much as 52%, while providing acceptable application latency. \u00c2\u00a9 2020 IEEE.",
      "authors": [
        "Amoghavarsha Suresh",
        "Gagan Somashekar",
        "Anandh Varadarajan",
        "Veerendra Ramesh Kakarla",
        "Hima Upadhyay",
        "Anshul Gandhi"
      ],
      "categories": null,
      "citations": 1,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/ACSOS49614.2020.00020",
      "keywords": [],
      "number_of_pages": 10,
      "pages": "1-10",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-7281-7278-1",
        "issn": null,
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings - 2020 IEEE International Conference on Autonomic Computing and Self-Organizing Systems, ACSOS 2020"
      },
      "publication_date": "2020-08-17",
      "selected": null,
      "title": "ENSURE: Efficient Scheduling and Autonomous Resource Management in Serverless Environments",
      "urls": [
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9196359",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85092746691&origin=inward"
      ]
    },
    {
      "abstract": " This study focuses on the feasibility of commercial cloud services for\nconnected vehicle (CV) applications in a Transportation Cyber-Physical Systems\n(TCPS) environment. TCPS implies that CVs, in addition to being connected with\neach other, communicates with the transportation and computing infrastructure\nto fulfill application requirements. The motivation of this study is to\naccelerate commercial cloud-based CV application development by presenting the\nlessons learned by implementing a CV mobility application using Amazon Web\nServices (AWS). The feasibility of the cloud-based CV application is assessed\nat three levels: (i) the development of a cloud-based TCPS architecture, (ii)\nthe deployment of a cloud-based CV application using AWS, and (iii) the\nevaluation of the cloud-based CV application. We implemented this CV mobility\napplication using a serverless cloud architecture and found that such a\ncloud-based TCPS environment could meet the permissible delay limits of CV\nmobility applications. Commercial cloud services, as an integral part of TCPS,\ncould reduce costs associated with establishing and maintaining vast computing\ninfrastructure for supporting CV applications. As the CV penetration levels on\nthe surface transportation systems increase significantly over the next several\nyears, scaling the backend infrastructure to support such applications is a\ncritical issue. This study shows how commercial cloud services could\nautomatically scale the backend infrastructure to meet the rapidly changing\ndemands of real-world CV applications. Through real-world experiments, we\ndemonstrate how commercial cloud services along with serverless cloud\narchitecture could advance the transportation digital infrastructure for\nsupporting connected mobility applications in a TCPS environment.\n",
      "authors": [
        "Deng, Hsien-Wen",
        "Rahman, Mizanur",
        "Chowdhury, Mashrur",
        "Salek, M Sabbir",
        "Shue, Mitch"
      ],
      "categories": null,
      "citations": null,
      "comments": "15 pages, 9 figures",
      "databases": [
        "arXiv"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": null,
      "publication_date": "2020-08-17",
      "selected": null,
      "title": "Commercial Cloud Computing for Connected Vehicle Applications in Transportation Cyber-Physical Systems",
      "urls": [
        "http://arxiv.org/pdf/2008.07290v1",
        "http://arxiv.org/abs/2008.07290v1",
        "https://arxiv.org/pdf/2008.07290"
      ]
    },
    {
      "abstract": "The proceedings contain 10 papers. The topics discussed include: towards deep network & application integration: possibilities, challenges, and research directions; NetworkAPI: an in-band signalling application-aware traffic engineering using SRv6 and IP anycast; dawn: co-programming distributed applications with network control; MoWIE: toward systematic, adaptive network information exposure as an enabling technique for 5G and beyond; federated adaptive bitrate live streaming over locality sensitive playback coalitions; trading latency for compute in the network; semantically aware, mission-oriented (SAMO) networks: a framework for application/network integration; ETCNet: encrypted traffic classification using Siamese convolutional networks; and tackling cold start in serverless computing with container runtime reusing.",
      "authors": [],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450380447",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "NAI 2020 - Proceedings of the 2020 Workshop on Network Application Integration/CoDesign"
      },
      "publication_date": "2020-08-14",
      "selected": null,
      "title": "NAI 2020 - Proceedings of the 2020 Workshop on Network Application Integration/CoDesign",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85094942156&origin=inward"
      ]
    },
    {
      "abstract": "During past few years, serverless computing has changed the paradigm of application development and deployment in the cloud and edge due to its unique advantages, including easy administration, automatic scaling, built-in fault tolerance, etc. Nevertheless, serverless computing is also facing challenges such as long latency due to the cold start. In this paper, we propose HotC, a container-based runtime management framework which leverages the lightweight containers to mitigate the cold start and improve network performance of serverless applications. HotC maintains a live container runtime pool, analyzes the user input or configuration file, and provides available runtime for immediate reuse. Our evaluation results show that HotC introduces negligible overhead and can efficiently improve performance of various applications in both cloud servers and edge devices. \u00c2\u00a9 2020 ACM.",
      "authors": [
        "Suo, K.",
        "Shi, Y.",
        "Xu, X.",
        "Cheng, D.",
        "Chen, W."
      ],
      "categories": null,
      "citations": 1,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1145/3405672.3409493",
      "keywords": [
        "Container",
        "Cold Start",
        "Serverless",
        "Performance"
      ],
      "number_of_pages": 2,
      "pages": "54-55",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450380447",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "NAI 2020 - Proceedings of the 2020 Workshop on Network Application Integration/CoDesign"
      },
      "publication_date": "2020-08-14",
      "selected": null,
      "title": "Tackling Cold Start in Serverless Computing with Container Runtime Reusing",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85094958728&origin=inward"
      ]
    },
    {
      "abstract": " Function as a Service (FaaS) permits cloud customers to deploy to cloud\nindividual functions, in contrast to complete virtual machines or Linux\ncontainers. All major cloud providers offer FaaS products (Amazon Lambda,\nGoogle Cloud Functions, Azure Serverless); there are also popular open-source\nimplementations (Apache OpenWhisk) with commercial offerings (Adobe I/O\nRuntime, IBM Cloud Functions). A new feature of FaaS is function composition: a\nfunction may (sequentially) call another function, which, in turn, may call yet\nanother function - forming a chain of invocations. From the perspective of the\ninfrastructure, a composed FaaS is less opaque than a virtual machine or a\ncontainer. We show that this additional information enables the infrastructure\nto reduce the response latency. In particular, knowing the sequence of future\ninvocations, the infrastructure can schedule these invocations along with\nenvironment preparation. We model resource management in FaaS as a scheduling\nproblem combining (1) sequencing of invocations, (2) deploying execution\nenvironments on machines, and (3) allocating invocations to deployed\nenvironments. For each aspect, we propose heuristics. We explore their\nperformance by simulation on a range of synthetic workloads. Our results show\nthat if the setup times are long compared to invocation times, algorithms that\nuse information about the composition of functions consistently outperform\ngreedy, myopic algorithms, leading to significant decrease in response latency.\n",
      "authors": [
        "Zuk, Pawel",
        "Rzadca, Krzysztof"
      ],
      "categories": null,
      "citations": null,
      "comments": null,
      "databases": [
        "arXiv"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": null,
      "publication_date": "2020-08-11",
      "selected": null,
      "title": "Scheduling Methods to Reduce Response Latency of Function as a Service",
      "urls": [
        "http://arxiv.org/pdf/2008.04830v1",
        "http://arxiv.org/abs/2008.04830v1",
        "https://arxiv.org/pdf/2008.04830"
      ]
    },
    {
      "abstract": "GitHub provides the environment for developing and publishing website in integrated environment. By GitHub Pages, we can host the static web easy, fast and free. It helps the developer for integrating development and deployment process, because GitHub Pages is integrating with GitHub environment that support continuous integration and continuous delivery, and also become a content delivery network (CDN), as a part of JAMstack building block. Unfortunately, the usage GitHub as web hosting and JAMstack as an approach for developing web is not very popular among developer in Indonesia. The purpose of this research is to show how implement the JAMstack approach on designing and building website and host it on the GitHub. The website we designed using JAMstack approach by implementing Hugo as static site generator (SSG) and GitHub as content delivery network (CDN). We also insert API for showing the easiness of integrating lots of components on JAMstack approach. We do several tests to check the quality of the website, such as functional test and performance test. The performance test results show that Google PageSpeed score is 97% (A) and YSlow score is 91% (A). It shows that the website can run in good performance although it connected with others services through API. \u00c2\u00a9 Published under licence by IOP Publishing Ltd.",
      "authors": [
        "Utomo, P.",
        "Falahah"
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1088/1757-899X/879/1/012077",
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": 0.7,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "17578981",
        "publisher": "IOP Publishing Ltd.",
        "sjr": 0.198,
        "snip": 0.484,
        "subject_areas": [
          "Engineering (all)",
          "Materials Science (all)"
        ],
        "title": "IOP Conference Series: Materials Science and Engineering"
      },
      "publication_date": "2020-08-05",
      "selected": null,
      "title": "Building Serverless Website on GitHub Pages",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85091346359&origin=inward"
      ]
    },
    {
      "abstract": "Serverless computing is becoming one of the mainstream trends in cloud computing due to its advantages of simplified programming and cost saving. However, existing serverless platforms still adopt Docker container as its execution engine, which has the cold start problem and causes high common-case invocation latency. In this work, we analyze the lifecycle of common-case serverless invocation on existing serverless platforms and find that current container startup and pulling remote images are the two main reasons causing cold start so slow. Based on the study, we implement Nuka, a generic engine with millisecond initialization for serverless computing. Nuka is fully compatible with Docker interface and can smoothly re-place Docker as the execution engine of existing serverless plat-forms. Through the isolation pool that reuses Linux's isolation configurations, Nuka avoids the high cost of container startup's scalability bottleneck, which reduces container's startup time with high concurrency scale. Nuka also avoids pulling remote images through dynamically resolving and importing required software packages from local package caching. A self-adaptive container reuse strategy dynamically controls container's pause time and replica numbers, which effectively reduces the frequency of cold start. Compared with Docker, Nuka can get a millisecond initialization with high concurrency and significantly reduces average time cost of cold startup by 6\u00c3\u0097 on existing serverless platforms. \u00c2\u00a9 2020 IEEE.",
      "authors": [
        "Shijun Qin",
        "Heng Wu",
        "Yuewen Wu",
        "Bowen Yan",
        "Yuanjia Xu",
        "Wenbo Zhang"
      ],
      "categories": null,
      "citations": 1,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/JCC49151.2020.00021",
      "keywords": [
        "Performance-Analysis",
        "Serverless-Computing",
        "Container",
        "Performance-Optimization",
        "Cloud-Computing"
      ],
      "number_of_pages": 8,
      "pages": "78-85",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-7281-6982-8",
        "issn": null,
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings - 2020 IEEE International Conference on Joint Cloud Computing, JCC 2020"
      },
      "publication_date": "2020-08-03",
      "selected": null,
      "title": "Nuka: A Generic Engine with Millisecond Initialization for Serverless Computing",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85092043440&origin=inward",
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9183562"
      ]
    },
    {
      "abstract": "Serverless computing is known as an appealing alternative cloud computing paradigm with its auto-scaling nature and pay-as-you-go charging model. Mainstream cloud vendors have proposed their own serverless platforms, while various kinds of applications have been refactored in a serverless manner for execution. However, the serverless computing model still entails refinement as it introduces performance and security issues. In this paper, we conduct a comprehensive survey on the serverless computing, mainly in three aspects: the type of applications suitable for serverless, the performance issues, and the security issues. We specifically elaborate previous efforts on resolving issues in serverless and shed light on the unresolved issues. We also discuss the opportunities and challenges in integrating serverless computing in the jointcloud infrastructure. \u00c2\u00a9 2020 IEEE.",
      "authors": [
        "Mingyu Wu",
        "Zeyu Mi",
        "Yubin Xia"
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/JCC49151.2020.00023",
      "keywords": [
        "survey",
        "jointcloud computing",
        "serverless computing"
      ],
      "number_of_pages": 8,
      "pages": "94-101",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-7281-6982-8",
        "issn": null,
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings - 2020 IEEE International Conference on Joint Cloud Computing, JCC 2020"
      },
      "publication_date": "2020-08-03",
      "selected": null,
      "title": "A Survey on Serverless Computing and Its Implications for JointCloud Computing",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85092043596&origin=inward",
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9183650"
      ]
    },
    {
      "abstract": "Serverless computing is a popular trend in cloud computing based on serverless functions. These functions are stateless which can be utilized by the cloud platform provider to scale functions dynamically. While these small functions are easy to test in isolation, integrating them with other resources provided by the cloud platform provider or third parties creates a complex system whose emerging behavior is hard to test. Integration tests help test the interaction of the serverless functions with other resources and their environment. However, it is hard to decide if a test case is adequate and focuses on the critical parts of the system. Therefore, coverage criteria can be used to measure the coverage of the relevant software components and help assess the quality of the test suite. In this paper, we identified serverless applications based on serverless functions on GitHub and used them to investigate which coverage criteria can be used to capture the interaction of serverless functions with other resources. Furthermore, we show a general approach to implement the measurement of the coverage on FaaS platforms. Thus, developers have means to test the adequacy of their applications on any FaaS platform. \u00c2\u00a9 2020 IEEE.",
      "authors": [
        "Stefan Winzinger",
        "Guido Wirtz"
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/SOSE49046.2020.00013",
      "keywords": [
        "Coverage Criteria",
        "Serverless Computing",
        "Integration Testing",
        "FaaS"
      ],
      "number_of_pages": 8,
      "pages": "49-56",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-7281-6973-6",
        "issn": "2640-8228",
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings - 14th IEEE International Conference on Service-Oriented System Engineering, SOSE 2020"
      },
      "publication_date": "2020-08-03",
      "selected": null,
      "title": "Applicability of Coverage Criteria for Serverless Applications",
      "urls": [
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9183589",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85092789775&origin=inward"
      ]
    },
    {
      "abstract": "Most of today's cloud providers, including Amazon, Google and Microsoft, usually offer computing services with the abstraction of virtual machines (VMs), which are also known as instances. Even though these public clouds share similar infrastructures, they provide different service quality standards and price models for users, which fluctuate according to the dynamic loads. The JointCloud computing model empowers the cooperation among multiple public clouds, which can provide the users better service quality with reasonable prices. However, it is difficult to dynamically cooperate among clouds based on the traditional VM abstraction. Any computation migration among clouds will trigger costly VM states transfer, which makes it extremely hard for users to adjust their deployment models swiftly. Fortunately, serverless computing model is getting popular recently and has been supported by major cloud vendors. This model allows users to upload their computing tasks to the cloud in the unit of function. Users do not need to consider all of the tedious works like virtual server maintenance; instead, the cloud automatically instantiates function workers to handle incoming requests on the fly. In this paper, we propose a new JointCloud platform called HCloud, which efficiently manages computing resources of multiple clouds while offering the server-less model to the users. The fine-grained granularity of function enables HCloud to flexibly migrate workloads among clouds, thus brings better service qualities and lower prices at the same time. For example, HCloud can reduce the cost by requesting resource from a cheaper cloud for latency-insensitive jobs while routing the requests of latency-sensitive ones to the nearest and performant clouds. We have implemented a prototype of HCloud and evaluated it by simulating multiple cloud providers. The evaluation results show that HCloud can greatly improve the performance of serverless workloads with small costs. \u00c2\u00a9 2020 IEEE.",
      "authors": [
        "Jinfeng Liu",
        "Zeyu Mi",
        "Zheng Huang",
        "Zhichao Hua",
        "Yubin Xia"
      ],
      "categories": null,
      "citations": 1,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/JCC49151.2020.00022",
      "keywords": [
        "JointCloud",
        "Serverless",
        "Cross-Cloud Scheduling"
      ],
      "number_of_pages": 8,
      "pages": "86-93",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-7281-6982-8",
        "issn": null,
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings - 2020 IEEE International Conference on Joint Cloud Computing, JCC 2020"
      },
      "publication_date": "2020-08-03",
      "selected": null,
      "title": "HCloud: A Serverless Platform for JointCloud Computing",
      "urls": [
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9183584",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85092046384&origin=inward"
      ]
    },
    {
      "abstract": "Fudan University Library's digital collection Seal Stamping Catalogs Virtual Library follows the IIIF standard and adopts the Serverless architecture based on AWS. Therefore, it implements the advanced interactive functionality of image-based resources to support academic research and development. At the same time, it provides a service of high-precision image resources with a good interactive experience yet being cost-effective. \u00c2\u00a9 2020. ACM ISBN.",
      "authors": [
        "Xue, S.",
        "Li, Y.",
        "Ren, L."
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1145/3383583.3398549",
      "keywords": [
        "Chinese seal stamping catalogs",
        "Serverless",
        "Iiif"
      ],
      "number_of_pages": 2,
      "pages": "547-548",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450375856",
        "issn": "15525996",
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings of the ACM/IEEE Joint Conference on Digital Libraries"
      },
      "publication_date": "2020-08-01",
      "selected": null,
      "title": "Representing the chinese seal stamping catalogs using iiif and serverless",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85095115283&origin=inward"
      ]
    },
    {
      "abstract": "Emerging serverless computing technologies, such as function as a service\u00a0(FaaS), enable developers to virtualize the internal logic of an application",
      "authors": [
        "G. Casale",
        "M. Arta\u010d",
        "W.-J. van den Heuvel",
        "A. van Hoorn",
        "P. Jakovits",
        "F. Leymann",
        "M. Long",
        "V. Papanikolaou",
        "D. Presenza",
        "A. Russo",
        "S. N. Srirama",
        "D. A. Tamburri",
        "M. Wurster",
        "L. Zhu"
      ],
      "categories": null,
      "citations": 6,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1007/s00450-019-00413-w",
      "keywords": [
        "DevOps",
        "Function as a service",
        "Serverless computing",
        "Software models"
      ],
      "number_of_pages": 11,
      "pages": "77-87",
      "publication": {
        "category": "Journal",
        "cite_score": 6.7,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "25248510",
        "publisher": "Springer Berlin",
        "sjr": 0.519,
        "snip": 1.241,
        "subject_areas": [
          "Information Systems",
          "Computer Networks and Communications",
          "Computer Science (miscellaneous)",
          "Hardware and Architecture",
          "Software",
          "Computational Theory and Mathematics"
        ],
        "title": "SICS Software-Intensive Cyber-Physical Systems"
      },
      "publication_date": "2020-08-01",
      "selected": null,
      "title": "RADON: rational decomposition and orchestration for serverless computing",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85071490657&origin=inward",
        "https://link.springer.com/content/pdf/10.1007/s00450-019-00413-w.pdf"
      ]
    },
    {
      "abstract": "The proceedings contain 13 papers. The topics discussed include: aggregating atomic clocks for time-stamping; risk breakdown structure and security space for security management; service-oriented software design model for communication robot; on coalitional and non-coalitional games in the design of user incentives for dependable mobile crowdsensing services; applicability of coverage criteria for serverless applications; container mapping and its impact on performance in containerized cloud environments; system decomposition to optimize functionality distribution in microservices with rule based approach; scheduling heterogeneous multiprocessor real-time systems with mixed sets of task; a social sensing approach for quality changes of real-world services; and pattern-based approach to modeling and verifying system security.",
      "authors": [],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781728169729",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings - 14th IEEE International Conference on Service-Oriented System Engineering, SOSE 2020"
      },
      "publication_date": "2020-08-01",
      "selected": null,
      "title": "Proceedings - 14th IEEE International Conference on Service-Oriented System Engineering, SOSE 2020",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85092755573&origin=inward"
      ]
    },
    {
      "abstract": "The amount of data generated by millions of connected IoT sensors and devices is growing exponentially. The need to extract relevant information from this data in modern and future generation computing system, necessitates efficient data handling and processing platforms that can migrate such big data from one location to other locations seamlessly and securely, and can provide a way to preprocess and analyze that data before migrating to the final destination. Various data pipeline architectures have been proposed allowing the data administrator/user to handle the data migration operation efficiently. However, the modern data pipeline architectures do not offer built-in functionalities for ensuring data veracity, which includes data accuracy, trustworthiness and security. Furthermore, allowing the intermediate data to be processed, especially in the serverless computing environment, is becoming a cumbersome task. In order to fill this research gap, this paper introduces an efficient and novel data pipeline architecture, named as CCoDaMiC (Coherent Coordination of Data Migration and Computation), which brings both the data migration operation and its computation together into one place. This also ensures that the data delivered to the next destination/pipeline block is accurate and secure. The proposed framework is implemented in private OpenStack environment and Apache Nifi. \u00c2\u00a9 2020 The Authors",
      "authors": [
        "Dehury, C.K.",
        "Srirama, S.N.",
        "Chhetri, T.R."
      ],
      "categories": null,
      "citations": 1,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1016/j.future.2020.03.029",
      "keywords": [
        "Data pipeline",
        "TOSCA",
        "Data migration",
        "Serverless computing",
        "Data flow management"
      ],
      "number_of_pages": 16,
      "pages": "1-16",
      "publication": {
        "category": "Journal",
        "cite_score": 13.3,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "0167739X",
        "publisher": "Elsevier",
        "sjr": 1.262,
        "snip": 2.72,
        "subject_areas": [
          "Hardware and Architecture",
          "Computer Networks and Communications",
          "Software"
        ],
        "title": "Future Generation Computer Systems"
      },
      "publication_date": "2020-08-01",
      "selected": null,
      "title": "CCoDaMiC: A framework for Coherent Coordination of Data Migration and Computation platforms",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85082001581&origin=inward"
      ]
    },
    {
      "abstract": "In a serverless cloud computing environment, the cloud provider dynamically manages the allocation of resources whereas the developers purely focus on their applications. The data-driven applications in serverless cloud computing mainly address the web as well as other distributed scenarios, and therefore, it is essential to offer a consistent user experience across different connection types. In order to address the issues of data-driven application in a real-time distributed environment, the use of GraphQL (Graph Query Language) is getting more and more popularity in state-of-the-art cloud computing approaches. However, the existing solutions target the low level implementation of GraphQL, for the development of a complex data-driven application, which may lead to several errors and involve a significant amount of development efforts due to various users\u2019 requirements in real-time. Therefore, it is critical to simplify the development process of data-driven applications in a serverless cloud computing environment. Consequently, this research introduces UMLPDA (Unified Modeling Language Profile for Data-driven Applications), which adopts the concepts of UML-based Model-driven Architectures to model the frontend as well as the backend requirements for data-driven applications developed at a higher abstraction level. Particularly, a modeling approach is proposed to resolve the development complexities such as data communication and synchronization. Subsequently, a complete open source transformation engine is developed using a Model-to-Text approach to automatically generate the frontend as well as backend low level implementations of Angular2 and GraphQL respectively. The validation of proposed work is performed with three different case studies, deployed on Amazon Web Services platform. The results show that the proposed framework enables to develop the data-driven applications with simplicity.",
      "authors": [
        "Fatima Samea",
        "Farooque Azam",
        "Muhammad Rashid",
        "Muhammad Waseem Anwar",
        "Wasi Haider Butt",
        "Abdul Wahab Muzaffar"
      ],
      "categories": null,
      "citations": 3,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1371/journal.pone.0237317",
      "keywords": [
        "User interfaces",
        "Engines",
        "Open source software",
        "Cloud computing",
        "Language",
        "Data management",
        "Verbal communication",
        "Prototypes"
      ],
      "number_of_pages": null,
      "pages": null,
      "publication": {
        "category": "Journal",
        "cite_score": 5.3,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "1932-6203",
        "publisher": "Public Library of Science",
        "sjr": 0.99,
        "snip": 1.349,
        "subject_areas": [
          "Multidisciplinary"
        ],
        "title": "PloS one"
      },
      "publication_date": "2020-08-01",
      "selected": null,
      "title": "A model-driven framework for data-driven applications in serverless cloud computing",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85090169441&origin=inward",
        "https://journals.plos.org/plosone/article/file?id=10.1371/journal.pone.0237317&type=printable"
      ]
    },
    {
      "abstract": "The proceedings contain 44 papers. The topics discussed include: a survey on multimodal data stream mining for e-learner\u00e2\u0080\u0099s emotion recognition; AlphaNet: an attention guided deep network for automatic image matting; network traffic modeling for IoT-device re-identification; cold start in serverless computing: current trends and mitigation strategies; deployment of application microservices in multi-domain federated fog environments; HAC-T and fast search for similarity in security; and trustworthiness in sensor networks a reputation-based method for weather stations.",
      "authors": [],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781728163710",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "2020 International Conference on Omni-Layer Intelligent Systems, COINS 2020"
      },
      "publication_date": "2020-08-01",
      "selected": null,
      "title": "2020 International Conference on Omni-Layer Intelligent Systems, COINS 2020",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85092238210&origin=inward"
      ]
    },
    {
      "abstract": "In April 2020, NTT formulated a technology roadmap for implementing the Innovative Optical and Wireless Network (IOWN). Photonic disaggregated computing, one of the key technologies that make up IOWN, is generating great interest as a new architecture that shifts from the conventional physical-server-oriented computing platform to a serverless computing platform based on photonic data planes. We asked Masaya Notomi, a senior distinguished scientist at the Nanophotonics Center of NTT Basic Research Laboratories conducting basic research on enabling photonic disaggregated computing, about his current research efforts and attitude as a researcher. \u00c2\u00a9 2020 Nippon Telegraph and Telephone Corp.. All rights reserved.",
      "authors": [
        "Notomi, M."
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": null,
      "keywords": [
        "Photonic crystals",
        "All-optical switch",
        "Nanophotonics"
      ],
      "number_of_pages": null,
      "pages": null,
      "publication": {
        "category": "Journal",
        "cite_score": 0.8,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "13483447",
        "publisher": "Nippon Telegraph and Telephone Corp.",
        "sjr": 0.19,
        "snip": 0.409,
        "subject_areas": [
          "Computer Networks and Communications",
          "Electrical and Electronic Engineering",
          "Computer Science Applications"
        ],
        "title": "NTT Technical Review"
      },
      "publication_date": "2020-08-01",
      "selected": null,
      "title": "Exploring new fields and the world: Front-line researchers",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85093358488&origin=inward"
      ]
    },
    {
      "abstract": "NINo is a future DevOps / Data Science pipeline tool that is being developed by JHU APL and two ASPIRE interns. The goal of this capability is to expose function-level capabilities, via either a simple application or configuration file, for use in Docker [1], Serverless Architectures [2], or data science/analytic pipelines. The goal is similar to efforts such as Metaparticle [3] and Source-to-Image[4] that aim to lower the barrier to horizontal scaling of data processing and analysis capabilities. In previous years ASPIRE interns have developed tools to ease the acceptance of DevOps principles in JHU APL. They have created a web application, Harmonia, that asked users a few simple questions and supplied the scaffolding for a software project with artifacts to support sound software engineering processes. The lack of user interest has driven us to a more focused objective. NINo will focus on easing deployment to cloud environments. Ideally, any person could develop cloud-based data science services. The team and its work has been organized in an asynchronous and agile manner. There have been three members working on three subsystems: configuration, framework/integration, and artifact generation. An incremental and prototype-driven approach has allowed for creation of increasingly more functional software as internship has proceeded. Interns have been given extensive control over their development processes and have investigated the programming frameworks used. While the initial stages have not resulted in a complete system, the interns have improved their programming skills and complete common coding challenges. The team is close to integration testing and initial demonstration. As the academic year closes, team members will work on design improvement, refactoring, and generation of future feature requests from prospective users. One summer intern will focus on developing a user interface for configuring and observing results.",
      "authors": [
        "Chancellor T. Pascale",
        "Maria Rice",
        "Shiva Sharma"
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "IEEE"
      ],
      "doi": "10.1109/ISEC49744.2020.9397808",
      "keywords": [],
      "number_of_pages": 1,
      "pages": "1-1",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-7281-7521-8",
        "issn": "2330-331X",
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "2020 IEEE Integrated STEM Education Conference (ISEC)"
      },
      "publication_date": "2020-08-01",
      "selected": null,
      "title": "Nanoservice Infrastructure Notation (NINo) and the ASPIRE Interns",
      "urls": [
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9397808"
      ]
    },
    {
      "abstract": "Operating a modern power grid reliably in case of SCADA/EMS failure or amid difficult times like COVID-19 pandemic is a challenging task for grid operators. In [11], a PMU-based emergency generation dispatch scheme has been proposed to help the system operators with the supply and demand balancing; however, its realization highly relies on the control center infrastructure for computing and communication. This work, rather than using the on-premises server and dispatch communication system, proposes and implements a cloud-centric serverless architecture to ensure the operation continuity regardless of local infrastructure's availability and accessibility. Through its prototype implementation and evaluation at ISO New England, the solution has demonstrated two major advantages. Firstly, the cloud infrastructure is independent and fault-tolerant, providing grid monitoring and control capability even when EMS loses the corresponding functionality or when operators need to work remotely away from the control center. Secondly, the overall design is event-driven using serverless cloud services in response to the SCADA/EMS failure event. Thanks to \u00e2\u0080\u009cserverless\u00e2\u0080\u009d, the burden of the server provisioning and maintenance can be avoided from the user side. The cost of using public cloud services for this solution is extremely low since it is architected and implemented based on the event-driven Function-as-a-Service (FaaS) model. This work also develops a comprehensive cyber security mechanism to comply with critical infrastructure requirements for the power grid, which can serve as an exemplary framework for other grid operators to secure their cloud services. \u00c2\u00a9 2020",
      "authors": [
        "Song Zhang",
        "Xiaochuan Luo",
        "Eugene Litvinov"
      ],
      "categories": null,
      "citations": 2,
      "comments": null,
      "databases": [
        "arXiv",
        "Scopus"
      ],
      "doi": "10.1016/j.ijepes.2020.106366",
      "keywords": [
        "Cloud computing",
        "Emergency generation dispatch",
        "Serverless computing",
        "PMU",
        "Event-driven",
        "Function-as-a-Service"
      ],
      "number_of_pages": null,
      "pages": null,
      "publication": {
        "category": "Journal",
        "cite_score": 7.5,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "01420615",
        "publisher": "Elsevier Ltd.",
        "sjr": 1.05,
        "snip": 1.711,
        "subject_areas": [
          "Energy Engineering and Power Technology",
          "Electrical and Electronic Engineering"
        ],
        "title": "International Journal of Electrical Power and Energy Systems"
      },
      "publication_date": "2020-07-24",
      "selected": null,
      "title": "Serverless computing for cloud-based power grid emergency generation dispatch",
      "urls": [
        "http://arxiv.org/abs/2007.13733v1",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85088370876&origin=inward",
        "http://dx.doi.org/10.1016/j.ijepes.2020.106366",
        "http://arxiv.org/pdf/2007.13733v1"
      ]
    },
    {
      "abstract": " Organisations are increasingly putting machine learning models into\nproduction at scale. The increasing popularity of serverless scale-to-zero\nparadigms presents an opportunity for deploying machine learning models to help\nmitigate infrastructure costs when many models may not be in continuous use. We\nwill discuss the KFServing project which builds on the KNative serverless\nparadigm to provide a serverless machine learning inference solution that\nallows a consistent and simple interface for data scientists to deploy their\nmodels. We will show how it solves the challenges of autoscaling GPU based\ninference and discuss some of the lessons learnt from using it in production.\n",
      "authors": [
        "Cox, Clive",
        "Sun, Dan",
        "Tarn, Ellis",
        "Singh, Animesh",
        "Kelkar, Rakesh",
        "Goodwin, David"
      ],
      "categories": null,
      "citations": null,
      "comments": "4 pages, 1 figure, presented at workshop on \"Challenges in Deploying\n  and Monitoring Machine Learning System\" at ICML 2020",
      "databases": [
        "arXiv"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": null,
      "publication_date": "2020-07-14",
      "selected": null,
      "title": "Serverless inferencing on Kubernetes",
      "urls": [
        "http://arxiv.org/pdf/2007.07366v2",
        "https://arxiv.org/pdf/2007.07366",
        "http://arxiv.org/abs/2007.07366v2"
      ]
    },
    {
      "abstract": "The proceedings contain 28 papers. The topics discussed include: Triggerflow: trigger-based orchestration of serverless workflows; leaving stragglers at the window: low-latency stream sampling with accuracy guarantees; EdgeScaler: effective elastic scaling for graph stream processing systems; mechanisms for outsourcing computation via a decentralized market; FaaSdom: a benchmark suite for serverless computing; ByzGame: Byzantine generals game; the Kaiju project: enabling event-driven observability; DeepMatch: deep matching for in-vehicle presence detection in transportation; Hermes: enabling energy-efficient IoT networks with generalized deduplication; and doctoral symposium: trade-off analysis of thermal-constrained scheduling strategies in multi-core systems.",
      "authors": [],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450380287",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "DEBS 2020 - Proceedings of the 14th ACM International Conference on Distributed and Event-Based Systems"
      },
      "publication_date": "2020-07-13",
      "selected": null,
      "title": "DEBS 2020 - Proceedings of the 14th ACM International Conference on Distributed and Event-Based Systems",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85089266066&origin=inward"
      ]
    },
    {
      "abstract": " Prediction serving systems are designed to provide large volumes of\nlow-latency inferences machine learning models. These systems mix data\nprocessing and computationally intensive model inference and benefit from\nmultiple heterogeneous processors and distributed computing resources. In this\npaper, we argue that a familiar dataflow API is well-suited to this\nlatency-sensitive task, and amenable to optimization even with unmodified\nblack-box ML models. We present the design of Cloudflow, a system that provides\nthis API and realizes it on an autoscaling serverless backend. Cloudflow\ntransparently implements performance-critical optimizations including operator\nfusion and competitive execution. Our evaluation shows that Cloudflow's\noptimizations yield significant performance improvements on synthetic workloads\nand that Cloudflow outperforms state-of-the-art prediction serving systems by\nas much as 2x on real-world prediction pipelines, meeting latency goals of\ndemanding applications like real-time video analysis.\n",
      "authors": [
        "Sreekanti, Vikram",
        "Subbaraj, Harikaran",
        "Wu, Chenggang",
        "Gonzalez, Joseph E.",
        "Hellerstein, Joseph M."
      ],
      "categories": null,
      "citations": null,
      "comments": null,
      "databases": [
        "arXiv"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": null,
      "publication_date": "2020-07-11",
      "selected": null,
      "title": "Optimizing Prediction Serving on Low-Latency Serverless Dataflow",
      "urls": [
        "http://arxiv.org/pdf/2007.05832v1",
        "https://arxiv.org/pdf/2007.05832",
        "http://arxiv.org/abs/2007.05832v1"
      ]
    },
    {
      "abstract": " We describe a simple approach to peer-to-peer electronic mail that would\nallow users of ordinary workstations and mobile devices to exchange messages\nwithout relying upon third-party mail server operators. Crucially, the system\nallows participants to establish and use multiple unlinked identities for\ncommunication with each other. The architecture leverages ordinary SMTP for\nmessage delivery and Tor for peer-to-peer communication. The design offers a\nrobust, unintrusive method to use self-certifying Tor onion service names to\nbootstrap a web of trust based on public keys for end-to-end authentication and\nencryption, which in turn can be used to facilitate message delivery when the\nsender and recipient are not online simultaneously. We show how the system can\ninteroperate with existing email systems and paradigms, allowing users to hold\nmessages that others can retrieve via IMAP or to operate as a relay between\nsystem participants and external email users. Finally, we show how it is\npossible to use a broadcast protocol to implement mailing lists and how\ndistributed ledger technology might be used to bootstrap consensus about shared\nknowledge among list members.\n",
      "authors": [
        "Goodell, Geoffrey"
      ],
      "categories": null,
      "citations": null,
      "comments": "10 pages, 8 figures",
      "databases": [
        "arXiv"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": null,
      "publication_date": "2020-07-09",
      "selected": null,
      "title": "Serverless Electronic Mail",
      "urls": [
        "http://arxiv.org/abs/2007.04608v2",
        "https://arxiv.org/pdf/2007.04608",
        "http://arxiv.org/pdf/2007.04608v2"
      ]
    },
    {
      "abstract": "Concurrency in evolutionary algorithms allow researchers to leverage the performance of powerful multi-core desktop architectures by parallelizing tasks using a high-level interface. However, concurrency also introduces additional complexity at the model and the implementation level. In this paper we describe how using parallel execution monitoring tools to check the effective parallelism of the implementation, can help to work out some of said complexities at the implementation-level, which in turn, are translated into improvements at the algorithmic-level. The performance gain is noticeable from an evaluations/seconds point of view to the possible scaling that can be achieved in the running machine, up to a superlinear scaling in an off-the-shelf platfonn. We show that the design using communicating sequential processes implemented in the language Raku is the basis for these improvements. \u00c2\u00a9 2020 ACM.",
      "authors": [
        "Guerv\u00c3\u00b3s, J.-J.M.",
        "Garc\u00c3\u00ada-Valdez, M.",
        "Rojas-Galeano, S."
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1145/3377929.3398120",
      "keywords": [
        "Communicating sequential processes",
        "Functions as a service",
        "Algorithm implementation",
        "Performance evaluation",
        "CSP",
        "Distributed computing",
        "Heterogeneous distributed systems",
        "Concurrent algorithms",
        "Serverless computing",
        "Stateless algorithms",
        "Event-based systems"
      ],
      "number_of_pages": 8,
      "pages": "1591-1598",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450371278",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "GECCO 2020 Companion - Proceedings of the 2020 Genetic and Evolutionary Computation Conference Companion"
      },
      "publication_date": "2020-07-08",
      "selected": null,
      "title": "Implementation matters, also in concurrent evolutionary algorithms",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85089732504&origin=inward"
      ]
    },
    {
      "abstract": " Traditionally, Network Function Virtualization (NFV) has been implemented to\nrun on Virtual Machines (VMs) in form of Virtual Network Functions (VNFs). More\nrecently, the so-called Serverless Computing has gained traction in cloud\ncomputing, offering Function-as-a-Service (FaaS) platforms that make use of\ncontainerization techniques to deploy services. In contrast to VM-based VNFs,\nwhere resources are usually reserved and continuously running, FaaS can just be\nsubsets of code implementing small functions allowing for event-driven,\non-demand instantiations. Thus, a hybrid VM-Container based Service Function\nChains (SFCs) are a natural evolution of NFV architecture. We study a novel\nproblem of optimal placement of hybrid SFCs from an Internet Service Provider\n(ISP) point of view, whereby VNFs can be instantiated either over VMs or\ncontainers in a generic edge and cloud continuum. To this end, we propose a\nMixed-Integer Linear Programming model as well as a heuristic solution to solve\nthis optimization problem that considers three objectives unique to the\nspecific VM and container deployment in a carrier network: operational costs\nfor maintaining servers in the edge, costs of placing VNFs in third-party cloud\nproviders and penalty costs applied when SLA agreements are violated in terms\nof end-to-end delay. We also propose 2-phases optimization process to analyze\nthe effect on performance as a result of replications and migrations of VNFs.\nThe model can be used to highlight scenarios where a combination of VMs and\ncontainers can provide most benefits from the monetary costs point of view.\n",
      "authors": [
        "Carpio, Francisco",
        "Bziuk, Wolfgang",
        "Jukan, Admela"
      ],
      "categories": null,
      "citations": null,
      "comments": null,
      "databases": [
        "arXiv"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": null,
      "publication_date": "2020-07-08",
      "selected": null,
      "title": "On Optimal Placement of Hybrid Service Function Chains (SFCs) of Virtual Machines and Containers in a Generic Edge-Cloud Continuum",
      "urls": [
        "http://arxiv.org/abs/2007.04151v1",
        "https://arxiv.org/pdf/2007.04151",
        "http://arxiv.org/pdf/2007.04151v1"
      ]
    },
    {
      "abstract": "This paper presents SLATE, a fully-managed, heterogeneous Function-as-a-Service (FaaS) system for deploying serverless functions onto heterogeneous cloud infrastructures. We extend the traditional homogeneous FaaS execution model to support heterogeneous functions, automating and abstracting runtime management of heterogeneous compute resources in order to improve cloud tenant accessibility to specialised, accelerator resources, such as FPGAs and GPUs. In particular, we focus on the mechanisms required for heterogeneous scaling of deployed function instances to guarantee latency objectives while minimising cost. We develop a simulator to validate and evaluate our approach, considering case-study functions in three application domains: machine learning, bio-informatics, and physics. We incorporate empirically derived performance models for each function implementation targeting a hardware platform with combined computational capacity of 24 FPGAs and 12 CPU cores. Compared to homogeneous CPU and homogeneous FPGA functions, simulation results achieve respectively a cost improvement for non-uniform task traffic of up to 8.7 times and 1.7 times, while maintaining specified latency objectives. \u00c2\u00a9 2020 IEEE.",
      "authors": [
        "Jessica Vandebon",
        "Jos\u00e9 G. F. Coutinho",
        "Wayne Luk",
        "Eriko Nurvitadhi",
        "Mishali Naik"
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/ASAP49362.2020.00032",
      "keywords": [],
      "number_of_pages": 8,
      "pages": "141-148",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-7281-7279-8",
        "issn": "2160-0511",
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "2020 IEEE 31st International Conference on Application-specific Systems, Architectures and Processors (ASAP)"
      },
      "publication_date": "2020-07-06",
      "selected": null,
      "title": "SLATE: Managing Heterogeneous Cloud Functions",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85090823556&origin=inward",
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9153229"
      ]
    },
    {
      "abstract": "Serverless computing has emerged as a new compelling paradigm for the deployment of applications and services. It represents an evolution of cloud computing with a simplified programming model, that aims to abstract away most operational concerns. Running serverless functions requires users to configure multiple parameters, such as memory, CPU, cloud provider, etc. While relatively simpler, configuring such parameters correctly while minimizing cost and meeting delay constraints is not trivial. In this paper, we present COSE, a framework that uses Bayesian Optimization to find the optimal configuration for serverless functions. COSE uses statistical learning techniques to intelligently collect samples and predict the cost and execution time of a serverless function across unseen configuration values. Our framework uses the predicted cost and execution time, to select the best configuration parameters for running a single or a chain of functions, while satisfying customer objectives. In addition, COSE has the ability to adapt to changes in the execution time of a serverless function. We evaluate COSE not only on a commercial cloud provider, where we successfully found optimal/near-optimal configurations in as few as five samples, but also over a wide range of simulated distributed cloud environments that confirm the efficacy of our approach. \u00c2\u00a9 2020 IEEE.",
      "authors": [
        "Nabeel Akhtar",
        "Ali Raza",
        "Vatche Ishakian",
        "Ibrahim Matta"
      ],
      "categories": null,
      "citations": 2,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/INFOCOM41043.2020.9155363",
      "keywords": [],
      "number_of_pages": 10,
      "pages": "129-138",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": 8.3,
        "is_potentially_predatory": false,
        "isbn": "978-1-7281-6413-7",
        "issn": "0743-166X",
        "publisher": "Institute of Electrical and Electronics Engineers Inc.",
        "sjr": 1.183,
        "snip": 1.799,
        "subject_areas": [
          "Computer Science (all)",
          "Electrical and Electronic Engineering"
        ],
        "title": "IEEE INFOCOM '99. Conference on Computer Communications. Proceedings. Eighteenth Annual Joint Conference of the IEEE Computer and Communications Societies. The Future is Now (Cat. No.99CH36320)"
      },
      "publication_date": "2020-07-06",
      "selected": null,
      "title": "COSE: Configuring Serverless Functions using Statistical Learning",
      "urls": [
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9155363",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85090269401&origin=inward"
      ]
    },
    {
      "abstract": "This paper mainly studies the optimization of pod scheduling in the large-scale concurrent scenario of Serverless framework base on Kubernetes platform. In Serverless cloud computing paradigm, rapid deployment and running of pods is the most critical step to improve resource efficiency. However, the deployment and operation of pods depend on images, and Kubernetes default scheduler currently base on pod-by-pod mode for scheduling, it cannot fully meet the needs of Serverless in resource scheduling. In view of this problem, we propose an algorithm using the same pod simultaneous scheduling to further optimize the efficiency of pod scheduling in Serverless cloud paradigm. Through preliminary verification, we can greatly reduce the delay of pod start-up while ensuring the balance of node resources. \u00c2\u00a9 2020 ACM.",
      "authors": [
        "Fan, D.",
        "He, D."
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1145/3409501.3409503",
      "keywords": [
        "Serverless",
        "Kubernetes",
        "Cloud Computing"
      ],
      "number_of_pages": 4,
      "pages": "229-232",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450375603",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "ACM International Conference Proceeding Series"
      },
      "publication_date": "2020-07-03",
      "selected": null,
      "title": "A Scheduler for Serverless Framework base on Kubernetes",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85090917188&origin=inward"
      ]
    },
    {
      "abstract": "<b><i>Background:</i></b> Due to declining birthrates and an increasing aging population, shortage of the caregiving labor force has become a global issue. Among various efforts toward the solution, introducing robotic products for assistance could provide an effective way to help older adults in their daily lives. As previous studies have indicated that older adults\u2019 acceptance of robots is lower than that of younger adults, enhancing older adults\u2019 acceptance of robots is imperative. Because older adults\u2019 first impressions based on a robot\u2019s appearance might affect their acceptance of the robot, we investigated the uncanny valley effect (UVE) here. The UVE refers to the phenomenon that people rate robots more positively as robots become more humanlike, but only up to a certain point; as robots approach a near-perfect similarity to human appearance, likeability drops and forms the uncanny valley. Nevertheless, evidence for the UVE came mainly from younger adults. <b><i>Objective:</i></b> The present study aimed to examine whether the UVE varies across different age groups and whether a robot\u2019s appearance would affect participants\u2019 acceptance of the robot\u2019s service or companionship. <b><i>Methods:</i></b> An online questionnaire study was conducted with 255 participants, including younger (<i>n</i> = 77, age 18\u201339 years), middle-aged (<i>n</i> = 87, age 40\u201359 years), and older (<i>n</i> = 91, age 60\u201387 years) adults. Participants were asked to view each picture in a set selected from a total of 83 robot pictures and evaluate their impressions of each robot and the intention of use regarding robot function as a service provider or a companion. <b><i>Results:</i></b> The UVE was found in younger and middle-aged adults; however, older adults did not show the UVE. Older adults preferred humanlike over non-humanlike robots, regardless of robot function. <b><i>Conclusion:</i></b> The design of assistive robots should take the UVE into consideration by customizing robot appearance based on the age group of the intended user. ",
      "authors": [
        "Yun-Chen Tu",
        "Sung-En Chien",
        "Su-Ling Yeh"
      ],
      "categories": null,
      "citations": 2,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1159/000507812",
      "keywords": [
        "",
        "Older adults",
        "Age differences",
        "Robot acceptance",
        "Uncanny valley"
      ],
      "number_of_pages": 11,
      "pages": "382-392",
      "publication": {
        "category": "Journal",
        "cite_score": 6.2,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "0304324X",
        "publisher": "S. Karger AG",
        "sjr": 1.397,
        "snip": 1.588,
        "subject_areas": [
          "Aging",
          "Geriatrics and Gerontology"
        ],
        "title": "Gerontology"
      },
      "publication_date": "2020-07-01",
      "selected": null,
      "title": "Age-Related Differences in the Uncanny Valley Effect",
      "urls": [
        "https://www.karger.com/Article/Pdf/507812",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85087014269&origin=inward"
      ]
    },
    {
      "abstract": "FaaS is a novel, but highly emerging service model in cloud computing. The importance of FaaS can be seen as public service providers have their own FaaS infrastructures and also the open source community makes efforts to implement FaaS initiatives.In this paper, we show the performance differences of the Python3, Node.js and Golang runtimes of OpenFaaS, Kubeless, Fission, and Knative platforms. We also show how the supported auto-scaling algorithms of the examined FaaS systems influence the performance of the function runtimes. Finally, we propose solutions to increase the performance of the Python3 runtime of OpenFaaS and Kubeless. \u00c2\u00a9 2020 IEEE.",
      "authors": [
        "Balla, D.",
        "Maliosz, M.",
        "Simon, C."
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1109/TSP49548.2020.9163456",
      "keywords": [
        "Serverless",
        "Function as a Service; FaaS",
        "FaaS, Cloud, Runtimes, Auto-scaling",
        "Serverless, Function as a Service",
        "Runtimes",
        "Auto-scaling",
        "Cloud"
      ],
      "number_of_pages": 7,
      "pages": "358-364",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781728163765",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "2020 43rd International Conference on Telecommunications and Signal Processing, TSP 2020"
      },
      "publication_date": "2020-07-01",
      "selected": null,
      "title": "Open Source FaaS Performance Aspects",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85090550768&origin=inward"
      ]
    },
    {
      "abstract": "Cloud applications are exposed to workloads whose intensity can change unpredictably over time. Hence, the ability to quickly scale the amount of computing resources provisioned to applications is essential to minimize costs while providing reliable services. In this context, containers are deemed to be a promising technology to enable fast elasticity in resource allocation schemes. In this paper, we propose and experimentally test an efficient container-based cloud computing provisioning system. First, we address the container deployment problem and discuss how to manage container provisioning and scaling. Second, we devise a resource management mechanism leveraging on both admission control and auto-scaling techniques. We propose to drive auto-scaling decisions through a Q-Learning algorithm, which is agnostic to the specific computing environment, and proceeds based only on the load of the physical processors assigned to a container. We evaluate our solution in two experimental setups, and show that it yields significant advantages when compared to popular container managers such as Kubernetes. \u00c2\u00a9 2020 IEEE.",
      "authors": [
        "Somma, G.",
        "Ayimba, C.",
        "Casari, P.",
        "Romano, S.P.",
        "Mancuso, V."
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1109/INFOCOMWKSHPS50562.2020.9162876",
      "keywords": [
        "Provisioning",
        "Docker",
        "Container",
        "Autoscaling",
        "Q-Learning",
        "Kubernetes"
      ],
      "number_of_pages": 7,
      "pages": "1153-1159",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781728186955",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "IEEE INFOCOM 2020 - IEEE Conference on Computer Communications Workshops, INFOCOM WKSHPS 2020"
      },
      "publication_date": "2020-07-01",
      "selected": null,
      "title": "When less is more: Core-restricted container provisioning for serverless computing",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85091538026&origin=inward"
      ]
    },
    {
      "abstract": "Machine Learning and Neural Networks in particular have become hot topics in Computer Science. The recent 2019 Turing award to the forefathers of Deep Learning and AI - Yoshua Bengio, Geoffrey Hinton, and Yann LeCun proves the importance of the technology and its effect on science and industry. However, we have realized that even nowadays, the state of the art methods require several manual steps for neural network hyperparameter optimization. Our approach automates the model tuning by refactoring the original Python code using open-source libraries for processing. We were able to identify hyperparameters by parsing the original source and analyzing it. Given these parameters, we refactor the model, add the state of the art optimization library calls, and run the updated code in the Serverless Cloud. Our approach has proven to eliminate manual steps for an arbitrary TensorFlow and Keras tuning. We have created a tool called OptPar which automatically refactors an arbitrary Deep Neural Network optimizing its hyperparameters. Such a transformation can save hours of time for Data Scientists, giving them an opportunity to concentrate on designing their Machine Learning algorithms. \u00c2\u00a9 2020 ACM.",
      "authors": [
        "Kaplunovich, A.",
        "Yesha, Y."
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1145/3387940.3392268",
      "keywords": [
        "Machine Learning",
        "Automation",
        "AWS",
        "Refactoring",
        "Neural Networks",
        "Serverless",
        "Tuning",
        "Hyperparameter",
        "Optimization",
        "Cloud"
      ],
      "number_of_pages": 4,
      "pages": "311-314",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450379632",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings - 2020 IEEE/ACM 42nd International Conference on Software Engineering Workshops, ICSEW 2020"
      },
      "publication_date": "2020-06-27",
      "selected": null,
      "title": "Refactoring of Neural Network Models for Hyperparameter Optimization in Serverless Cloud",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85093072109&origin=inward"
      ]
    },
    {
      "abstract": "The number and scale of disasters, being natural or human made, has influenced the creation of search and rescue missions and the use of modern technologies in them. Robots have become an attractive and more common tool in these operations. Even though there still are challenges to overcome with them. These challenges arise predominantly in the way they are controlled and monitored. Challenges like complex and costly infrastructure are the main obstacle to have a widespread use of these robots. This article presents an architecture for the control and monitoring of search and rescue robots based in serverless technologies to reduce infrastructure complexity, cost and setup. A custom methodology was used based on investigation, design, implementation and validation to develop this architecture. Design considerations, usefulness, limitations are analyzed and discussed. Overall effectiveness of the architecture in search and rescue missions was found a future work for improvement has been stablished. \u00c2\u00a9 2020 AISTI.",
      "authors": [
        "Alexander Mej\u00eda",
        "Diego Marcillo",
        "Miguel Gua\u00f1o",
        "Tatiana Gualotu\u00f1a"
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.23919/CISTI49556.2020.9140444",
      "keywords": [
        "Firebase",
        "search and rescue",
        "robots",
        "serverless technologies",
        "cloud services"
      ],
      "number_of_pages": 6,
      "pages": "1-6",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-7281-6724-4",
        "issn": "2166-0727",
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "2020 15th Iberian Conference on Information Systems and Technologies (CISTI)"
      },
      "publication_date": "2020-06-24",
      "selected": null,
      "title": "Serverless based control and monitoring for search and rescue robots",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85089034579&origin=inward",
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9140444"
      ]
    },
    {
      "abstract": "The softwarization of communication networks provides notable benefits, such as flexibility, improved resource efficiency, and commoditization. In exchange, softwarization requires an increased management overhead and the need to re-design network operation. While the mobile networking ecosystem is currently adapting this new paradigm with other network-related aspects (e.g., network slicing), cloud computing already addressed such problems with the introduction of serverless architectures, also known as Function as a Service (FaaS). With this approach, the software is decomposed into its minimum building blocks, i.e., functions, maximizing scalability, resource efficiency, and flexibility. In this paper, we analyze the potential adoption of the FaaS paradigm by the mobile networking ecosystem, discussing the implicit advantages, the challenges to address, and some solutions to overcome them. \u00c2\u00a9 2020 IFIP.",
      "authors": [
        "Marco Gramaglia",
        "Pablo Serrano",
        "Albert Banchs",
        "Gines Garcia-Aviles",
        "Andres Garcia-Saavedra",
        "Ramon Perez"
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": null,
      "keywords": [
        "Network Slicing",
        "Network Softwarization",
        "Serverless computing"
      ],
      "number_of_pages": 6,
      "pages": "779-784",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-7281-6710-7",
        "issn": null,
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "IFIP Networking 2020 Conference and Workshops, Networking 2020"
      },
      "publication_date": "2020-06-22",
      "selected": null,
      "title": "The case for serverless mobile networking",
      "urls": [
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9142747",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85090033540&origin=inward"
      ]
    },
    {
      "abstract": "Nonlinear dynamics methods are increasingly used in the process of information analysis of electrocardiogram (ECG) signals due to the fact that they enable the monitoring of heart rate dynamics. These methods complement the traditional analysis performed by applying the linear methods (Time- and Frequency-Domain). This article presents the results of the study of the nonlinear dynamic characteristics of the time intervals between heart intervals (RR time series), through the application of the following methods of the nonlinear dynamics: reconstructed phase space analysis, largest Lyapunov exponent and Poincar\u00c3\u00a9 plot. Two groups of people were studied: healthy and unhealthy subjects (patients with heart failure). The performed statistical analysis of the calculated characteristics describing the nonlinear dynamics of the RR time series show that it differ significantly between the two groups studied. Therefore, the application of these methods may be helpful in the diagnosis of cardiovascular disease. The introduction of nonlinear dynamics methods as well as linear ECG signal analysis methods requires information technology professionals to actively collaborate with cardiologists to integrate these new methods into clinical practice to support physician activity in diagnosis and early detection of cardiovascular diseases. The analysis of the investigated signals was performed by applying a web-based application using a serverless architecture, which is experimental and has no commercial purpose. \u00c2\u00a9 2020 ACM.",
      "authors": [
        "Gospodinova, E.",
        "Gospodinov, M.",
        "Negreva, M."
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1145/3407982.3408000",
      "keywords": [
        "largest Lyapunov exponent and Poincar\u00c3\u00a9 plot",
        "reconstructed phase space analysis",
        "RR time series"
      ],
      "number_of_pages": 7,
      "pages": "194-200",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450377683",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "ACM International Conference Proceeding Series"
      },
      "publication_date": "2020-06-19",
      "selected": null,
      "title": "Nonlinear Dynamics Methods for Analysis of ECG Signals",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85090579730&origin=inward"
      ]
    },
    {
      "abstract": "Getting the best performance from the ever-increasing number of hardware platforms has been a recurring challenge for data processing systems. In recent years, the advent of data science with its increasingly numerous and complex types of analytics has made this challenge even more difficult. In practice, system designers are overwhelmed by the number of combinations and typically implement a single analytics type on one platform, leading to repeated implementation effort-and a plethora of semi-compatible tools for data scientists. In this paper, we propose the \"Collection Virtual Machine\" (or CVM)-an extensible compiler framework designed to keep the specialization process of data analytics systems tractable. It can capture at the same time the essence of a large span of low-level, hardware-specific implementation techniques as well as high-level operations of different types of analyses. At its core lies a language for defining nested, collection-oriented intermediate representations (IRs). Frontends produce programs in their IR flavors defined in that language, which get optimized through a series of rewritings (possibly changing the IR flavor multiple times) until the program is finally expressed in an IR of platform-specific operators. While reducing the overall implementation effort, this also improves the interoperability of both analyses and hardware platforms. We have used CVM successfully to build specialized backends for platforms as diverse as multi-core CPUs, RDMA clusters, and serverless computing infrastructure in the cloud and expect similar results for many more frontends and hardware platforms in the near future. \u00c2\u00a9 2020 ACM.",
      "authors": [
        "M\u00c3\u00bcller, I.",
        "Marroqu\u00c3\u00adn, R.",
        "Koutsoukos, D.",
        "Wawrzoniak, M.",
        "Akhadov, S.",
        "Alonso, G."
      ],
      "categories": null,
      "citations": 1,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1145/3399666.3399911",
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450380249",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings of the 16th International Workshop on Data Management on New Hardware, DaMoN 2020"
      },
      "publication_date": "2020-06-15",
      "selected": null,
      "title": "The collection Virtual Machine: An abstraction for multi-frontend multi-backend data analysis",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85087648807&origin=inward"
      ]
    },
    {
      "abstract": "Serverless computing, also known as 'Function as a Service (FaaS)', is emerging as an event-driven paradigm of cloud computing. In the FaaS model, applications are programmed in the form of functions that are executed and managed separately. Functions are triggered by cloud users and are provisioned dynamically through containers or virtual machines (VMs). The startup delays of containers or VMs usually lead to rather high latency of response to cloud users. Moreover, the communication between different functions generally relies on virtual net devices or shared memory, and may cause extremely high performance overhead. In this paper, we propose Unikernel-as-a-Function (UaaF), a much more lightweight approach to serverless computing. Applications are abstracted as a combination of different functions, and each function are built as an unikernel in which the function is linked with a specified minimum-sized library operating system (LibOS). UaaF offers extremely low startup latency to execute functions, and an efficient communication model to speed up inter-functions interactions. We exploit an new hardware technique (namely VMFUNC) to invoke functions in other unikernels seamlessly (mostly like inter-process communications), without suffering performance penalty of VM Exits. We implement our proof-of-concept prototype based on KVM and deploy UaaF in three unikernels (MirageOS, IncludeOS, and Solo5). Experimental results show that U aaF can significantly reduce the startup latency and memory usage of serverless cloud applications. Moreover, the VMFUNC-based communication model can also significantly improve the performance of function invocations between different unikernels. \u00c2\u00a9 2020 IEEE.",
      "authors": [
        "Bo Tan",
        "Haikun Liu",
        "Jia Rao",
        "Xiaofei Liao",
        "Hai Jin",
        "Yu Zhang"
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/IWQoS49365.2020.9213020",
      "keywords": [],
      "number_of_pages": 10,
      "pages": "1-10",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-7281-6888-3",
        "issn": "1548-615X",
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "2020 IEEE/ACM 28th International Symposium on Quality of Service, IWQoS 2020"
      },
      "publication_date": "2020-06-15",
      "selected": null,
      "title": "Towards Lightweight Serverless Computing via Unikernel as a Function",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85094826305&origin=inward",
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9213020"
      ]
    },
    {
      "abstract": "Many enterprises run Network Function Virtualization (NFV) services on public clouds to relieve management burdens and reduce costs. However, NFV operators still face the burden of choosing the right types of virtual machines (VMs) for various network functions (NFs), as well as the cost of renting VMs at a granularity of months or years while many VMs remain idle during valley hours. A recent computing model named serverless computing automatically executes user-defined functions on requests arrival, and charges users based on the number of processed requests. For NFV operators, serverless computing has the potential of completely relieving NF management burden and significantly reducing costs. Nevertheless, naively exploring existing serverless platforms for NFV introduces significant performance overheads in three aspects, including high remote state access latency, long NF launching time, and high packet delivery latency between NFs. To address these problems, we propose Serpens, a high-performance serverless platform for NFV. Firstly, Serpens designs a novel state management mechanism to support local state access. Secondly, Serpens proposes an efficient NF execution model to provide fast NF launching and avoid extra packet delivery. We have implemented a prototype of Serpens. Evaluation results demonstrate that Serpens could significantly improve performance for NFs and service function chains (SFCs) comparing to existing serverless platforms. \u00c2\u00a9 2020 IEEE.",
      "authors": [
        "Junxian Shen",
        "Heng Yu",
        "Zhilong Zheng",
        "Chen Sun",
        "Mingwei Xu",
        "Jilong Wang"
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/IWQoS49365.2020.9213030",
      "keywords": [],
      "number_of_pages": 10,
      "pages": "1-10",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-7281-6888-3",
        "issn": "1548-615X",
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "2020 IEEE/ACM 28th International Symposium on Quality of Service, IWQoS 2020"
      },
      "publication_date": "2020-06-15",
      "selected": null,
      "title": "Serpens: A High-Performance Serverless Platform for NFV",
      "urls": [
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9213030",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85094854073&origin=inward"
      ]
    },
    {
      "abstract": "As more applications are being moved to the Cloud thanks to serverless computing, it is increasingly necessary to support native life cycle execution of those applications in the data center. But existing systems either focus on short-running workflows (like IBM Composer or Amazon Express Workflows) or impose considerable overheads for synchronizing massively parallel jobs (Azure Durable Functions, Amazon Step Functions, Google Cloud Composer). None of them are open systems enabling extensible interception and optimization of custom workflows. We present Triggerflow: an extensible Trigger-based Orchestration architecture for serverless workflows built on top of Knative Eventing and Kubernetes technologies. We demonstrate that Triggerflow is a novel serverless building block capable of constructing different reactive schedulers (State Machines, Directed Acyclic Graphs, Workflow as code). We also validate that it can support high-volume event processing workloads, auto-scale on demand and transparently optimize scientific workflows. \u00c2\u00a9 2020 ACM.",
      "authors": [
        "Pedro Garc\u00eda-L\u00f3pez",
        "Aitor Arjona",
        "Josep Sampe",
        "Aleksander Slominski",
        "Lionel Villard"
      ],
      "categories": null,
      "citations": 0,
      "comments": "The 14th ACM International Conference on Distributed and Event-based\n  Systems (DEBS 2020)",
      "databases": [
        "arXiv",
        "Scopus"
      ],
      "doi": "10.1145/3401025.3401731",
      "keywords": [
        "orchestration",
        "serverless",
        "event-based"
      ],
      "number_of_pages": 12,
      "pages": "3-14",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450380287",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "DEBS 2020 - Proceedings of the 14th ACM International Conference on Distributed and Event-Based Systems"
      },
      "publication_date": "2020-06-15",
      "selected": null,
      "title": "Triggerflow: Trigger-based Orchestration of Serverless Workflows",
      "urls": [
        "http://arxiv.org/abs/2006.08654v2",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85089273702&origin=inward",
        "http://dx.doi.org/10.1145/3401025.3401731",
        "http://arxiv.org/pdf/2006.08654v2"
      ]
    },
    {
      "abstract": "Akin to the natural evolution of programming in assembly language to high-level languages, serverless computing represents the next frontier in the evolution of cloud computing: bare metal -> virtual machines -> containers -> serverless. The genesis of serverless computing can be traced back to the fundamental need of enabling a programmer to singularly focus on writing application code in a high-level language and isolating all facets of system management (for example, but not limited to, instance selection, scaling, deployment, logging, monitoring, fault tolerance and so on). This is particularly critical in light of today's, increasingly tightening, time-to-market constraints. Currently, serverless computing is supported by leading public cloud vendors, such as AWS Lambda, Google Cloud Functions, Azure Cloud Functions and others. While this is an important step in the right direction, there are many challenges going forward. For instance, but not limited to, how to enable support for dynamic optimization, how to extend support for stateful computation, how to efficiently bin-pack applications, how to support hardware heterogeneity (this will be key especially in light of the emergence of hardware accelerators for deep learning workloads). Inspired by Picasso's Le Taureau, in the tutorial proposed herein, we shall deconstruct evolution of serverless - - the overarching intent being to facilitate better understanding of the serverless landscape. This, we hope, would help push the innovation frontier on both fronts, the paradigm itself and the applications built atop of it. \u00c2\u00a9 2020 Association for Computing Machinery.",
      "authors": [
        "Khandelwal, A.",
        "Kejariwal, A.",
        "Ramasamy, K."
      ],
      "categories": null,
      "citations": 1,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1145/3318464.3383130",
      "keywords": [
        "cloud computing",
        "ephemeral storage",
        "serverless computing",
        "distributed systems",
        "real-time streaming",
        "data analytics"
      ],
      "number_of_pages": 10,
      "pages": "2641-2650",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450367356",
        "issn": "07308078",
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings of the ACM SIGMOD International Conference on Management of Data"
      },
      "publication_date": "2020-06-14",
      "selected": null,
      "title": "Le Taureau: Deconstructing the Serverless Landscape &amp; A Look Forward",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85086278628&origin=inward"
      ]
    },
    {
      "abstract": "Much like on-premises systems, the natural choice for running database analytics workloads in the cloud is to provision a cluster of nodes to run a database instance. However, analytics workloads are often bursty or low volume, leaving clusters idle much of the time, meaning customers pay for compute resources even when underutilized. The ability of cloud function services, such as AWS Lambda or Azure Functions, to run small, fine granularity tasks make them appear to be a natural choice for query processing in such settings. But implementing an analytics system on cloud functions comes with its own set of challenges. These include managing hundreds of tiny stateless resource-constrained workers, handling stragglers, and shuffling data through opaque cloud services. In this paper we present Starling, a query execution engine built on cloud function services that employs a number of techniques to mitigate these challenges, providing interactive query latency at a lower total cost than provisioned systems with low-to-moderate utilization. In particular, on a 1TB TPC-H dataset in cloud storage, Starling is less expensive than the best provisioned systems for workloads when queries arrive 1 minute apart or more. Starling also has lower latency than competing systems reading from cloud object stores and can scale to larger datasets. \u00c2\u00a9 2020 Association for Computing Machinery.",
      "authors": [
        "Perron, M.",
        "Castro Fernandez, R.",
        "Dewitt, D.",
        "Madden, S."
      ],
      "categories": null,
      "citations": 6,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1145/3318464.3380609",
      "keywords": [
        "cloud",
        "FAAS",
        "OLAP",
        "serverless"
      ],
      "number_of_pages": 11,
      "pages": "131-141",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450367356",
        "issn": "07308078",
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings of the ACM SIGMOD International Conference on Management of Data"
      },
      "publication_date": "2020-06-14",
      "selected": null,
      "title": "Starling: A Scalable Query Engine on Cloud Functions",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85086265815&origin=inward"
      ]
    },
    {
      "abstract": "We consider the setting of serverless Function-as-a-Service (FaaS) platforms, where storage services are disaggregated from the machines that support function execution. FaaS applications consist of compositions of functions, each of which may run on a separate machine and access remote storage. The challenge we address is improving I/O latency in this setting while also providing application-wide consistency. Previous work has explored providing causal consistency for individual I/Os by carefully managing the versions stored in a client-side data cache. In our setting, a single application may execute multiple functions across different nodes, and therefore issue interrelated I/Os to multiple distinct caches. This raises the challenge of Multisite Transactional Causal Consistency (MTCC): the ability to provide causal consistency for all I/Os within a given transaction even if it runs across multiple physical sites. We present protocols for MTCC implemented in a system called HYDROCACHE. Our evaluation demonstrates orders-of-magnitude performance improvements due to caching, while also protecting against consistency anomalies that otherwise arise frequently. \u00c2\u00a9 2020 Association for Computing Machinery.",
      "authors": [
        "Wu, C.",
        "Sreekanti, V.",
        "Hellerstein, J.M."
      ],
      "categories": null,
      "citations": 1,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1145/3318464.3389710",
      "keywords": [
        "serverless computing",
        "low-latency",
        "causal consistency"
      ],
      "number_of_pages": 15,
      "pages": "83-97",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450367356",
        "issn": "07308078",
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings of the ACM SIGMOD International Conference on Management of Data"
      },
      "publication_date": "2020-06-14",
      "selected": null,
      "title": "Transactional Causal Consistency for Serverless Computing",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85086276757&origin=inward"
      ]
    },
    {
      "abstract": "The proceedings contain 230 papers. The topics discussed include: recommending deployment strategies for collaborative tasks; human-in-the-loop outlier detection; Marviq: quality-aware geospatial visualization of range-selection queries using materialization; transactional causal consistency for serverless computing; cost models for big data query processing: learning, retrofitting, and our findings; lambada: interactive data analytics on cold data using serverless cloud infrastructure; starling: a scalable query engine on cloud functions; learning a partitioning advisor for cloud databases; sample debiasing in the themis open world database system; stochastic package queries in probabilistic databases; fast and reliable missing data contingency analysis with predicate-constraints; mining approximate acyclic schemes from relations; and an ontology-based conversation system for knowledge bases.",
      "authors": [],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450367356",
        "issn": "07308078",
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings of the ACM SIGMOD International Conference on Management of Data"
      },
      "publication_date": "2020-06-14",
      "selected": null,
      "title": "Proceedings of the ACM SIGMOD International Conference on Management of Data",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85086263647&origin=inward"
      ]
    },
    {
      "abstract": "Relational query processing is an ideal candidate for serverless computation with its stateless, idempotent, and short-lived properties. However, current serverless offerings for query processing neither provide millisecond-based pricing nor allow users to optimize the cost of their queries. To have tradeoffs between the cost and performance of their queries, users are limited to using traditional serverful approaches, which we demonstrate to be 50% slower at approximately the same cost as serverless approaches. We propose a model that will allow service providers to dynamically provision clusters to achieve their users' desired time-cost tradeoffs. \u00c2\u00a9 2020 Association for Computing Machinery.",
      "authors": [
        "Ma, W."
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1145/3318464.3384410",
      "keywords": [
        "spark",
        "serverless",
        "query planning"
      ],
      "number_of_pages": 3,
      "pages": "2861-2863",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450367356",
        "issn": "07308078",
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings of the ACM SIGMOD International Conference on Management of Data"
      },
      "publication_date": "2020-06-14",
      "selected": null,
      "title": "Serverless Query Processing on a Budget",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85086223560&origin=inward"
      ]
    },
    {
      "abstract": "Knative is a popular Kubernetes-based platform for managing serverless workloads with two main components Eventing and Serving. The Serving primitive helps to deploy serverless apps as Knative services and automatically scale them, even down to zero. However, the serving module uses a moving average method to calculate the number of pods, that calculated based on past data and not good at accounting for future changes. In this paper, we use double exponential smoothing to optimize the calculation of the number of pods. Preliminary experiments show that the results are better than the moving average. \u00c2\u00a9 2020 IEEE.",
      "authors": [
        "Dayong Fan",
        "Dongzhi He"
      ],
      "categories": null,
      "citations": 1,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/ITOEC49072.2020.9141858",
      "keywords": [
        "Knative",
        "scheduling",
        "serverless"
      ],
      "number_of_pages": 4,
      "pages": "614-617",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-7281-4324-8",
        "issn": null,
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings of 2020 IEEE 5th Information Technology and Mechatronics Engineering Conference, ITOEC 2020"
      },
      "publication_date": "2020-06-12",
      "selected": null,
      "title": "Knative Autoscaler Optimize Based on Double Exponential Smoothing",
      "urls": [
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9141858",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85091117744&origin=inward"
      ]
    },
    {
      "abstract": "Serverless computing enables organisations to avail of the inherent and unlimited flexibility and scalability that serverless provides, without having to consider the underlying infrastructure. However, there are security considerations that are unique to serverless architectures, that if not included early in application design, can lead to vulnerabilities which could be exposed to common attack vectors. While cloud service providers manage the security of the underlying infrastructure, it is up to the consumer to ensure that serverless applications are fully protected. We go on to discuss common attack vectors, the risks associated with misconfiguration within security and application setup, how attackers target vulnerabilities within the workflow logic of serverless applications and their functions to focus their attacks, and how consumers can implement measures to protect their applications within a serverless architecture. \u00c2\u00a9 2020 IEEE.",
      "authors": [
        "Wesley O'Meara",
        "Ruth G. Lennon"
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/ISSC49989.2020.9180214",
      "keywords": [
        "cloud computing",
        "function as a service",
        "cybersecurity",
        "application security",
        "serverless"
      ],
      "number_of_pages": 5,
      "pages": "1-5",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-7281-9419-6",
        "issn": "2688-1446",
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "2020 31st Irish Signals and Systems Conference, ISSC 2020"
      },
      "publication_date": "2020-06-11",
      "selected": null,
      "title": "Serverless Computing Security: Protecting Application Logic",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85092720995&origin=inward",
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9180214"
      ]
    },
    {
      "abstract": "Telemedicine can be used by medical practitioners to connect with their patients during the recent Coronavirus outbreak, whilst attempting to reduce COVID-19 transmission among patients and clinicians. Amidst the pandemic, Telemedicine has the potential to help by permitting patients to receive supportive care without having to physically visit a hospital by using a conversational artificial intelligence-based application for their treatment. Thus, telehealth will rapidly and radically transform in-person care to remote consultation of patients. Because of this, it developed a Multilingual Conversational Bot based on Natural Language Processing (NLP) to provide free primary healthcare education, information, advice to chronic patients. The study introduces a novel computer application acting as a personal virtual doctor that has been opportunely designed and extensively trained to interact with patients like human beings. This application is based upon a serverless architecture and it aggregates the services of a doctor by providing preventive measures, homeremedies, interactive counseling sessions, healthcare tips, and symptoms covering the most prevalent diseases in rural India. The paper proposes a conversational bot \u201cAapka Chikitsak\u201d on Google Cloud Platform (GCP) for delivering telehealth in India to increase the patient's access to healthcare knowledge and leverage the potentials of artificial intelligence to bridge the gap of demand and supply of human healthcare providers. This conversational application has resulted in reducing the barriers for access to healthcare facilities and procures intelligent consultations remotely to allow timely care and quality treatment, there by effectively assisting the society.",
      "authors": [
        "Urmil Bharti",
        "Deepali Bajaj",
        "Hunar Batra",
        "Shreya Lalit",
        "Shweta Lalit",
        "Aayushi Gangwani"
      ],
      "categories": null,
      "citations": 3,
      "comments": null,
      "databases": [
        "IEEE"
      ],
      "doi": "10.1109/ICCES48766.2020.9137944",
      "keywords": [
        "voice user interface",
        "natural language processing",
        "conversational agent",
        "digital health",
        "chatbot",
        "natural language understanding",
        "conversational user interface",
        "conversational technology",
        "Telehealth",
        "human-computer interaction",
        "medbot"
      ],
      "number_of_pages": 6,
      "pages": "870-875",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-7281-5372-8",
        "issn": null,
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "2020 5th International Conference on Communication and Electronics Systems (ICCES)"
      },
      "publication_date": "2020-06-10",
      "selected": null,
      "title": "Medbot: Conversational Artificial Intelligence Powered Chatbot for Delivering Tele-Health after COVID-19",
      "urls": [
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9137944"
      ]
    },
    {
      "abstract": " Machine Learning (ML) plays a vital role in implementing digital health. The\nadvances in hardware and the democratization of software tools have\nrevolutionized machine learning. However, the deployment of ML models -- the\nmathematical representation of the task to be performed -- for effective and\nefficient clinical decision support at the point of care is still a challenge.\nML models undergo constant improvement of their accuracy and predictive power\nwith a high turnover rate. Updating models consumed by downstream health\ninformation systems is essential for patient safety. We introduce a functional\ntaxonomy and a four-tier architecture for cloud-based model deployment for\ndigital health. The four tiers are containerized microservices for\nmaintainability, serverless architecture for scalability, function as a service\nfor portability and FHIR schema for discoverability. We call this architecture\nServerless on FHIR and propose this as a standard to deploy digital health\napplications that can be consumed by downstream systems such as EMRs and\nvisualization tools.\n",
      "authors": [
        "Eapen, Bell Raj",
        "Sartipi, Kamran",
        "Archer, Norm"
      ],
      "categories": null,
      "citations": null,
      "comments": "10 pages, 1 figure",
      "databases": [
        "arXiv"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": null,
      "publication_date": "2020-06-08",
      "selected": null,
      "title": "Serverless on FHIR: Deploying machine learning models for healthcare on the cloud",
      "urls": [
        "https://arxiv.org/pdf/2006.04748",
        "http://arxiv.org/abs/2006.04748v1",
        "http://arxiv.org/pdf/2006.04748v1"
      ]
    },
    {
      "abstract": " We present a framework for scheduling multifunction serverless applications\nover a hybrid public-private cloud. A set of serverless jobs is input as a\nbatch, and the objective is to schedule function executions over the hybrid\nplatform to minimize the cost of public cloud use, while completing all jobs by\na specified deadline. As this scheduling problem is NP-Hard, we propose a\ngreedy algorithm that dynamically determines both the order and placement of\neach function execution using predictive models of function execution time and\nnetwork latencies. We present a prototype implementation of our framework that\nuses AWS Lambda and OpenFaaS, for the public and private cloud, respectively.\nWe evaluate our prototype in live experiments using a mixture of compute and\nI/O heavy serverless applications. Our results show that our framework can\nachieve a speedup in batch processing of up to 1.92 times that of an approach\nthat uses only the private cloud, at 40.5% the cost of an approach that uses\nonly the public cloud.\n",
      "authors": [
        "Das, Anirban",
        "Leaf, Andrew",
        "Varela, Carlos A.",
        "Patterson, Stacy"
      ],
      "categories": null,
      "citations": null,
      "comments": "10 pages, 5 figures, 2020 IEEE 13th International Conference on Cloud\n  Computing (CLOUD)",
      "databases": [
        "arXiv"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": null,
      "publication_date": "2020-06-05",
      "selected": null,
      "title": "Skedulix: Hybrid Cloud Scheduling for Cost-Efficient Execution of Serverless Applications",
      "urls": [
        "http://arxiv.org/abs/2006.03720v1",
        "https://arxiv.org/pdf/2006.03720",
        "http://arxiv.org/pdf/2006.03720v1"
      ]
    },
    {
      "abstract": "Serverless computing has become a major trend among cloud providers. With\nserverless computing, developers fully delegate the task of managing the\nservers, dynamically allocating the required resources, as well as handling\navailability and fault-tolerance matters to the cloud provider. In doing so,\ndevelopers can solely focus on the application logic of their software, which\nis then deployed and completely managed in the cloud. Despite its increasing\npopularity, not much is known regarding the actual system performance\nachievable on the currently available serverless platforms. Specifically, it is\ncumbersome to benchmark such systems in a language- or runtime-independent\nmanner. Instead, one must resort to a full application deployment, to later\ntake informed decisions on the most convenient solution along several\ndimensions, including performance and economic costs. FaaSdom is a modular\narchitecture and proof-of-concept implementation of a benchmark suite for\nserverless computing platforms. It currently supports the current mainstream\nserverless cloud providers (i.e., AWS, Azure, Google, IBM), a large set of\nbenchmark tests and a variety of implementation languages. The suite fully\nautomatizes the deployment, execution and clean-up of such tests, providing\ninsights (including historical) on the performance observed by serverless\napplications. FaaSdom also integrates a model to estimate budget costs for\ndeployments across the supported providers. FaaSdom is open-source and\navailable at https://github.com/bschitter/benchmark-suite-serverless-computing.",
      "authors": [
        "Pascal Maissen",
        "Pascal Felber",
        "Peter Kropf",
        "Valerio Schiavoni"
      ],
      "categories": null,
      "citations": 1,
      "comments": "ACM DEBS'20",
      "databases": [
        "arXiv",
        "Scopus"
      ],
      "doi": "10.1145/3401025.3401738",
      "keywords": [
        "open-source",
        "benchmark suite",
        "function as a service",
        "serverless"
      ],
      "number_of_pages": 12,
      "pages": "73-84",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450380287",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "DEBS 2020 - Proceedings of the 14th ACM International Conference on Distributed and Event-Based Systems"
      },
      "publication_date": "2020-06-05",
      "selected": null,
      "title": "FaaSdom: A Benchmark Suite for Serverless Computing",
      "urls": [
        "http://dx.doi.org/10.1145/3401025.3401738",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85089281872&origin=inward",
        "http://arxiv.org/pdf/2006.03271v1",
        "http://arxiv.org/abs/2006.03271v1"
      ]
    },
    {
      "abstract": "Trending form of cloud computing is Serverless computing, where developer just needs to focus on his code rather than worrying about server management. In serverless computing, application is nothing but collection of one or more functions, written for specific business functionality, which triggers on an event. There are various cloud service providers, i.e. Amazon, Microsoft, Google, IBM, etc. who provide serverless services, on pay as you use and auto scalable solution to execute the application code as a function. The developer just needs to upload the code for execution. The performance of the serverless computing may vary due to dynamic configuration of the solution, technologies and different technology used by the service provider.This paper reviews various past and recent work in the serverless computing to identify possible bottlenecks and the scope of measuring performance of serverless computing. It will also put some light to leverage machine learning in various possible ways to do performance engineering for future research. \u00c2\u00a9 2020 IEEE.",
      "authors": [
        "Deepak Khatri",
        "Sunil Kumar Khatri",
        "Deepti Mishra"
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/ICRITO48877.2020.9197837",
      "keywords": [
        "Performance Optimization",
        "Serverless Computing",
        "Performance Testing",
        "Machine Learning"
      ],
      "number_of_pages": 4,
      "pages": "161-164",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-7281-7017-6",
        "issn": null,
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "ICRITO 2020 - IEEE 8th International Conference on Reliability, Infocom Technologies and Optimization (Trends and Future Directions)"
      },
      "publication_date": "2020-06-04",
      "selected": null,
      "title": "Potential Bottleneck and Measuring Performance of Serverless Computing: A Literature Study",
      "urls": [
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9197837",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85093103522&origin=inward"
      ]
    },
    {
      "abstract": "SummaryMethods for quantifying the imbalance in CpG methylation between alleles genome-wide have been described but their algorithmic time complexity is quadratic and their practical use requires painstaking attention to infrastructure choice, implementation, and execution. To solve this problem, we developed CloudASM, a scalable, ultra-efficient, turn-key, portable pipeline on Google Cloud Computing (GCP) that uses a novel pipeline manager and GCPs serverless enterprise data warehouse.\n\nAvailability and ImplementationCloudASM is freely available in the GitHub repository https://github.com/TyckoLab/CloudASM and a sample dataset and its results are also freely available at https://console.cloud.google.com/storage/browser/cloudasm.\n\nContactemmanuel.dumont@hmh-cdi.org\n\nSupplementary informationNone.",
      "authors": [
        "Dumont, E.L.P.",
        "Tycko, B.",
        "Do, C."
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "bioRxiv",
        "Scopus"
      ],
      "doi": "10.1093/bioinformatics/btaa149",
      "keywords": [],
      "number_of_pages": 3,
      "pages": "3558-3560",
      "publication": {
        "category": "Journal",
        "cite_score": 9.9,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "13674803",
        "publisher": "Oxford University Press",
        "sjr": 3.599,
        "snip": 2.056,
        "subject_areas": [
          "Computer Science Applications",
          "Molecular Biology",
          "Biochemistry",
          "Statistics and Probability",
          "Computational Mathematics",
          "Computational Theory and Mathematics"
        ],
        "title": "Bioinformatics"
      },
      "publication_date": "2020-06-01",
      "selected": null,
      "title": "CloudASM: An ultra-efficient cloud-based pipeline for mapping allele-specific DNA methylation",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85085904996&origin=inward",
        "https://doi.org/10.1101/2020.01.28.887430"
      ]
    },
    {
      "abstract": "From close to scratch, the COVID-19 pandemic created the largest volunteer supercomputer on earth. Sadly, processing resources assigned to the corresponding Folding@home project cannot be shared with other volunteer computing projects efficiently. Consequently, the largest supercomputer had significant idle times. This perspective paper investigates how the resource sharing of future volunteer computing projects could be improved. Notably, efficient resource sharing has been optimized throughout the last ten years in cloud computing. Therefore, this perspective paper reviews the current state of volunteer and cloud computing to analyze what both domains could learn from each other. It turns out that the disclosed resource sharing shortcomings of volunteer computing could be addressed by technologies that have been invented, optimized, and adapted for entirely different purposes by cloud-native companies like Uber, Airbnb, Google, or Facebook. Promising technologies might be containers, serverless architectures, image registries, distributed service registries, and all have one thing in common: They already exist and are all tried and tested in large web-scale deployments.",
      "authors": [
        "Kratzke, Nane"
      ],
      "categories": null,
      "citations": 2,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.3390/fi12060098",
      "keywords": [
        "COVID-19",
        "Nanoservice",
        "Container",
        "Grid computing",
        "Volunteer computing",
        "Serverless",
        "Cloud computing",
        "Platform",
        "Lessons-learned",
        "Cloud-native",
        "Supercomputing",
        "HPC",
        "Microservice"
      ],
      "number_of_pages": null,
      "pages": null,
      "publication": {
        "category": "Journal",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": null,
        "publisher": "Multidisciplinary Digital Publishing Institute",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Future Internet"
      },
      "publication_date": "2020-06-01",
      "selected": null,
      "title": "Volunteer Down: How COVID-19 Created the Largest Idling Supercomputer on Earth",
      "urls": [
        "https://www.mdpi.com/1999-5903/12/6/98/pdf",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85088135204&origin=inward"
      ]
    },
    {
      "abstract": "The proceedings contain 366 papers. The topics discussed include: using machine learning for cognitive robotic process automation (RPA); acoustic monitoring system for teacher and student engagement evaluation; patient-centered healthcare monitoring in an outpatient scenario; serverless based control and monitoring for search and rescue robots; social engineering and the dangers of phishing; graphical semantic authentication; Moocs and other technological proposals in the transformation of education; performance evaluation of the virtualization environment of a microservices-based payroll system; enterprise architecture: critical factors and implementation; and processing UAV based RGB data to identify land cover with focus on small water body.",
      "authors": [],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9789895465903",
        "issn": "21660727",
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Iberian Conference on Information Systems and Technologies, CISTI"
      },
      "publication_date": "2020-06-01",
      "selected": null,
      "title": "Proceedings of CISTI 2020 - 15th Iberian Conference on Information Systems and Technologies",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85089026795&origin=inward"
      ]
    },
    {
      "abstract": "Telemedicine can be used by medical practitioners to connect with their patients during the recent Coronavirus outbreak, whilst attempting to reduce COVID-19 transmission among patients and clinicians. Amidst the pandemic, Telemedicine has the potential to help by permitting patients to receive supportive care without having to physically visit a hospital by using a conversational artificial intelligence-based application for their treatment. Thus, telehealth will rapidly and radically transform in-person care to remote consultation of patients. Because of this, it developed a Multilingual Conversational Bot based on Natural Language Processing (NLP) to provide free primary healthcare education, information, advice to chronic patients. The study introduces a novel computer application acting as a personal virtual doctor that has been opportunely designedand extensively trained to interact with patients like human beings. This application is based upon a serverless architecture and it aggregates the services of a doctor by providing preventive measures, home remedies, interactive counseling sessions, healthcare tips, and symptoms covering the most prevalent diseases in rural India. The paper proposes a conversational bot \u00e2\u0080\u009cAapka Chikitsak\u00e2\u0080\u009d on Google Cloud Platform (GCP) for delivering telehealth in India to increase the patient's access to healthcare knowledge and leverage the potentials of artificial intelligence to bridge the gap of demand and supply of human healthcare providers. This conversational application has resulted in reducing the barriers for access to healthcare facilities and procures intelligent consultations remotely to allowtimely care and quality treatment, thereby effectively assisting the society. \u00c2\u00a9 2020 IEEE.",
      "authors": [
        "Bharti, U.",
        "Bajaj, D.",
        "Batra, H.",
        "Lalit, S.",
        "Lalit, S.",
        "Gangwani, A."
      ],
      "categories": null,
      "citations": 8,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1109/ICCES48766.2020.09137944",
      "keywords": [
        "Conversational user interface",
        "Chatbot",
        "Human-computer interaction",
        "Medbot",
        "Natural language processing",
        "Conversational technology",
        "Telehealth",
        "Voice user interface",
        "Natural language understanding",
        "Conversational agent",
        "Digital health"
      ],
      "number_of_pages": 6,
      "pages": "870-875",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781728153711",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings of the 5th International Conference on Communication and Electronics Systems, ICCES 2020"
      },
      "publication_date": "2020-06-01",
      "selected": null,
      "title": "Medbot: Conversational artificial intelligence powered chatbot for delivering tele-health after covid-19",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85091338750&origin=inward"
      ]
    },
    {
      "abstract": "SUMMARY Methods for quantifying the imbalance in CpG methylation between alleles genome-wide have been described but their algorithmic time complexity is quadratic and their practical use requires painstaking attention to infrastructure choice, implementation and execution. To solve this problem, we developed CloudASM, a scalable, ultra-efficient, turn-key, portable pipeline on Google Cloud Platform (GCP) that uses a novel pipeline manager and GCP's serverless enterprise data warehouse.\nAVAILABILITY AND IMPLEMENTATION CloudASM is freely available in the GitHub repository https://github.com/TyckoLab/CloudASM and a sample dataset and its results are also freely available at https://console.cloud.google.com/storage/browser/cloudasm.\nCONTACT emmanuel.dumont@hmh-cdi.org.",
      "authors": [
        "Emmanuel L P Dumont",
        "Benjamin Tycko",
        "Catherine Do"
      ],
      "categories": null,
      "citations": null,
      "comments": null,
      "databases": [
        "PubMed"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": 3,
      "pages": "3558-3560",
      "publication": {
        "category": "Journal",
        "cite_score": 9.9,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "1367-4811",
        "publisher": "Oxford University Press",
        "sjr": 3.599,
        "snip": 2.056,
        "subject_areas": [
          "Computer Science Applications",
          "Molecular Biology",
          "Biochemistry",
          "Statistics and Probability",
          "Computational Mathematics",
          "Computational Theory and Mathematics"
        ],
        "title": "Bioinformatics (Oxford, England)"
      },
      "publication_date": "2020-06-01",
      "selected": null,
      "title": "CloudASM: an ultra-efficient cloud-based pipeline for mapping allele-specific DNA methylation.",
      "urls": []
    },
    {
      "abstract": " For many years, the distributed systems community has struggled to smooth the\ntransition from local to remote computing. Transparency means concealing the\ncomplexities of distributed programming like remote locations, failures or\nscaling. For us, full transparency implies that we can compile, debug and run\nunmodified single-machine code over effectively unlimited compute, storage, and\nmemory resources. We elaborate in this article why resource disaggregation in\nserverless computing is the definitive catalyst to enable full transparency in\nthe Cloud. We demonstrate with two experiments that we can achieve transparency\ntoday over disaggregated serverless resources and obtain comparable performance\nto local executions. We also show that locality cannot be neglected for many\nproblems and we present five open research challenges: granular middleware and\nlocality, memory disaggregation, virtualization, elastic programming models,\nand optimized deployment. If full transparency is possible, who needs explicit\nuse of middleware if you can treat remote entities as local ones? Can we close\nthe curtains of distributed systems complexity for the majority of users?\n",
      "authors": [
        "Garc\u00eda-L\u00f3pez, Pedro",
        "Slominski, Aleksander",
        "Shillaker, Simon",
        "Behrendt, Michael",
        "Metzler, Barnard"
      ],
      "categories": null,
      "citations": null,
      "comments": null,
      "databases": [
        "arXiv"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": null,
      "publication_date": "2020-06-01",
      "selected": null,
      "title": "Serverless End Game: Disaggregation enabling Transparency",
      "urls": [
        "http://arxiv.org/abs/2006.01251v1",
        "http://arxiv.org/pdf/2006.01251v1",
        "https://arxiv.org/pdf/2006.01251"
      ]
    },
    {
      "abstract": " Serverless computing has emerged as a compelling new paradigm of cloud\ncomputing models in recent years. It promises the user services at large scale\nand low cost while eliminating the need for infrastructure management. On cloud\nprovider side, flexible resource management is required to meet fluctuating\ndemand. It can be enabled through automated provisioning and deprovisioning of\nresources. A common approach among both commercial and open source serverless\ncomputing platforms is workload-based auto-scaling, where a designated\nalgorithm scales instances according to the number of incoming requests. In the\nrecently evolving serverless framework Knative a request-based policy is\nproposed, where the algorithm scales resources by a configured maximum number\nof requests that can be processed in parallel per instance, the so-called\nconcurrency. As we show in a baseline experiment, this predefined concurrency\nlevel can strongly influence the performance of a serverless application.\nHowever, identifying the concurrency configuration that yields the highest\npossible quality of service is a challenging task due to various factors, e.g.\nvarying workload and complex infrastructure characteristics, influencing\nthroughput and latency. While there has been considerable research into\nintelligent techniques for optimizing auto-scaling for virtual machine\nprovisioning, this topic has not yet been discussed in the area of serverless\ncomputing. For this reason, we investigate the applicability of a reinforcement\nlearning approach, which has been proven on dynamic virtual machine\nprovisioning, to request-based auto-scaling in a serverless framework. Our\nresults show that within a limited number of iterations our proposed model\nlearns an effective scaling policy per workload, improving the performance\ncompared to the default auto-scaling configuration.\n",
      "authors": [
        "Schuler, Lucia",
        "Jamil, Somaya",
        "K\u00fchl, Niklas"
      ],
      "categories": null,
      "citations": null,
      "comments": "8 pages, 7 figures",
      "databases": [
        "arXiv"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": null,
      "publication_date": "2020-05-29",
      "selected": null,
      "title": "AI-based Resource Allocation: Reinforcement Learning for Adaptive Auto-scaling in Serverless Environments",
      "urls": [
        "http://arxiv.org/pdf/2005.14410v1",
        "http://arxiv.org/abs/2005.14410v1",
        "https://arxiv.org/pdf/2005.14410"
      ]
    },
    {
      "abstract": "Operational Transformation (OT) has emerged as a viable theoretical principle for the implementation of real-time collaboration applications. In such systems, the collaboration consists of operations generated by members of a group who are performing concurrent actions on the same document or content. This powerful multi-user co-editing has been researched ever since the seminal works of the late 1980s. As the web evolved into a dominant platform for content consumption and creation, classes of algorithms like OT and Conflict-free Replicated Data Types (CRDT) have enabled flexible content synchronization for applications such as online word processors. Despite their long history in academia, OT and CRDT continue to have unsolved issues due to the centralized approach required for scalable and reliable web-based document editing. This paper proposes a Control Loop-based OT approach based on a serverless architecture and on Finite State Automata (FSA). A control loop principle is used to design a series of algorithms for distributed conflict resolution. The proposed architecture consists of a series of blocks which internally contain a number of multi-level Finite State Machines. The architecture of the new serverless approach for OT is introduced and the basic FSAs that model the co-editing processes are described. Cases encountered in the dynamics of the co-editing processes were modeled to prove that the essential OT properties of causality preservation, convergence, and intention preservation are all satisfied. Simulation results are given at the end of the paper. \u00c2\u00a9 2020 IEEE.",
      "authors": [
        "Cristian Gadea",
        "Bogdan Ionescu",
        "Dan Ionescu"
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/SACI49304.2020.9118822",
      "keywords": [
        "Real-Time Systems",
        "Finite State Automata",
        "Decision Making Automata",
        "Real-Time Automata",
        "Distributed Computing Systems",
        "Control Loop Architecture",
        "Collaborative Software Platforms",
        "Consistency and Concurrency"
      ],
      "number_of_pages": 8,
      "pages": "000247-000254",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-7281-7378-8",
        "issn": null,
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "SACI 2020 - IEEE 14th International Symposium on Applied Computational Intelligence and Informatics, Proceedings"
      },
      "publication_date": "2020-05-21",
      "selected": null,
      "title": "A Control Loop-based Algorithm for Operational Transformation",
      "urls": [
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9118822",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85087399512&origin=inward"
      ]
    },
    {
      "abstract": "While microservices that have stringent Quality-of-Service constraints are deployed in the Clouds, the long-term rented infrastructures that host the microservices are under-utilized except peak hours due to the diurnal load pattern. It is resource efficient for Cloud vendors and cost efficient for service maintainers to deploy the microservices in the long-term infrastructure at high load and in the serverless computing platform at low load. However, prior work fails to take advantage of the opportunity, because the contention between microservices on the serverless platform seriously affects their response latencies.Our investigation shows that the load of a microservice, the shared resource contentions on the serverless platform, and its sensitivities to the contention together affect the response latency of the microservice on the platform. To this end, we propose Amoeba, a runtime system that dynamically switches the deployment of a microservice. Amoeba is comprised of a contention-aware deployment controller, a hybrid execution engine, and a multi-resource contention monitor. The deployment controller predicts the tail latency of a microservice based on its load and the contention on the serverless platform, and determines the appropriate deployment of the microservice. The hybrid execution engine enables the quick switch of the two deploy modes. The contention monitor periodically quantifies the contention on multiple types of shared resources. Experimental results show that Amoeba is able to significantly reduce up to 72.9% of CPU usage and up to 84.9% of memory usage compared with the traditional pure IaaS-based deployment, while ensuring the required latency target. \u00c2\u00a9 2020 IEEE.",
      "authors": [
        "Zijun Li",
        "Quan Chen",
        "Shuai Xue",
        "Tao Ma",
        "Yong Yang",
        "Zhuo Song",
        "Minyi Guo"
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/IPDPS47924.2020.00049",
      "keywords": [
        "Microservices",
        "QoS",
        "Serverless computing"
      ],
      "number_of_pages": 10,
      "pages": "399-408",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-7281-6877-7",
        "issn": "1530-2075",
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings - 2020 IEEE 34th International Parallel and Distributed Processing Symposium, IPDPS 2020"
      },
      "publication_date": "2020-05-18",
      "selected": null,
      "title": "Amoeba: QoS-Awareness and Reduced Resource Usage of Microservices with Serverless Computing",
      "urls": [
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9139803",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85088900189&origin=inward"
      ]
    },
    {
      "abstract": "We present a framework for performance optimization in serverless edge-cloud platforms using dynamic task placement. We focus on applications for smart edge devices, for example, smart cameras or speakers, that need to perform processing tasks on input data in real to near-real time. Our framework allows the user to specify cost and latency requirements for each application task, and for each input, it determines whether to execute the task on the edge device or in the cloud. Further, for cloud executions, the framework identifies the container resource configuration needed to satisfy the performance goals. We have evaluated our framework in simulation using measurements collected from serverless applications in AWS Lambda and AWS Greengrass. In addition, we have implemented a prototype of our framework that runs in these same platforms. In experiments with our prototype, our models can predict average end-to-end latency with less than 6% error, and we obtain almost three orders of magnitude reduction in end-to-end latency compared to edge-only execution. \u00c2\u00a9 2020 IEEE.",
      "authors": [
        "Anirban Das",
        "Shigeru Imai",
        "Stacy Patterson",
        "Mike P. Wittie"
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/CCGrid49817.2020.00-89",
      "keywords": [],
      "number_of_pages": 10,
      "pages": "41-50",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-7281-6095-5",
        "issn": null,
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings - 20th IEEE/ACM International Symposium on Cluster, Cloud and Internet Computing, CCGRID 2020"
      },
      "publication_date": "2020-05-11",
      "selected": null,
      "title": "Performance Optimization for Edge-Cloud Serverless Platforms via Dynamic Task Placement",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85089066255&origin=inward",
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9139674"
      ]
    },
    {
      "abstract": "The current trends of cloud computing in general, and serverless computing in particular, affect multiple aspects of organizational activity. Organizations of all sizes are transitioning parts of their operations off-premise in order to reduce costs and scale their operations more efficiently. The field of network security is no exception, with many organizations taking advantage of the distributed and scalable cloud environment. Since the charging model for serverless computing is \"pay as you go\" (i.e., payment per action), a reduction in the number of required computations translates into significant cost savings. This understanding is also relevant to the field of malware detection, where organizations often deploy multiple types of detectors to increase detection accuracy. In this study, we utilize deep reinforcement learning to reduce computational costs in the cloud by selectively querying only a subset of available detectors. We demonstrate that our approach is not only effective both for on-premise and cloud-based computing architectures, but that applying it to serverless computing can reduce costs by an order of magnitude while maintaining near-optimal performance. \u00c2\u00a9 2020 IEEE.",
      "authors": [
        "Yoni Birman",
        "Shaked Hindi",
        "Gilad Katz",
        "Asaf Shabtai"
      ],
      "categories": null,
      "citations": 1,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/CCGrid49817.2020.00-51",
      "keywords": [],
      "number_of_pages": 10,
      "pages": "420-429",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-7281-6095-5",
        "issn": null,
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings - 20th IEEE/ACM International Symposium on Cluster, Cloud and Internet Computing, CCGRID 2020"
      },
      "publication_date": "2020-05-11",
      "selected": null,
      "title": "Cost-Effective Malware Detection as a Service Over Serverless Cloud Using Deep Reinforcement Learning",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85089078579&origin=inward",
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9139646"
      ]
    },
    {
      "abstract": "Edge computing is a promising solution to enable low-latency Internet of Things (IoT) applications, by shifting computation from remote data centers to local devices, less powerful but closer to the end user devices. However, this creates the challenge on how to best assign clients to edge nodes offering compute capabilities. So far, two antithetical architectures are proposed: centralized resource orchestration or distributed overlay. In this work we explore a third way, called uncoordinated access, which consists in letting every device exploring multiple opportunities, to opportunistically embrace the heterogeneity of network and load conditions towards diverse edge nodes. In particular, our contribution is intended for emerging serverless IoT applications, which do not have a state on the edge nodes executing tasks. We model the proposed system as a set of M/M/1 queues and show that it achieves a smaller delay than single edge node allocation. Furthermore, we compare uncoordinated access with state-of-the-art centralized and distributed alternatives in testbed experiments under more realistic conditions. Based on the results, our proposed approach, which requires a tiny fraction of the complexity of the alternatives in both the device and network components, is very effective in using the network resources, while incurring only a small penalty in terms of increased compute load and high percentiles of delay. \u00c2\u00a9 2020 Elsevier B.V.",
      "authors": [
        "Cicconetti, C.",
        "Conti, M.",
        "Passarella, A."
      ],
      "categories": null,
      "citations": 2,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1016/j.comnet.2020.107184",
      "keywords": [
        "Online job dispatching",
        "Performance evaluation",
        "Mobile Edge Computing",
        "Distributed cloud",
        "Internet of Things",
        "Serverless computing",
        "Computation offloading"
      ],
      "number_of_pages": null,
      "pages": null,
      "publication": {
        "category": "Journal",
        "cite_score": 8.1,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "13891286",
        "publisher": "Elsevier",
        "sjr": 0.798,
        "snip": 1.731,
        "subject_areas": [
          "Computer Networks and Communications"
        ],
        "title": "Computer Networks"
      },
      "publication_date": "2020-05-08",
      "selected": null,
      "title": "Uncoordinated access to serverless computing in MEC systems for IoT",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85081027665&origin=inward"
      ]
    },
    {
      "abstract": "Exploding data volumes and velocities, new computational methods and platforms, and ubiquitous connectivity demand new approaches to computation in the sciences. These new approaches must enable computation to be mobile, so that, for example, it can occur near data, be triggered by events (e.g., arrival of new data), be offloaded to specialized accelerators, or run remotely where resources are available. They also require new design approaches in which monolithic applications can be decomposed into smaller components, that may in turn be executed separately and on the most suitable resources. To address these needs we present funcX - -a distributed function as a service (FaaS) platform that enables flexible, scalable, and high performance remote function execution. funcX's endpoint software can transform existing clouds, clusters, and supercomputers into function serving systems, while funcX's cloud-hosted service provides transparent, secure, and reliable function execution across a federated ecosystem of endpoints. We motivate the need for funcX with several scientific case studies, present our prototype design and implementation, show optimizations that deliver throughput in excess of 1 million functions per second, and demonstrate, via experiments on two supercomputers, that funcX can scale to more than more than 130 000 concurrent workers. \u00c2\u00a9 2020 ACM.",
      "authors": [
        "Ryan Chard",
        "Yadu Babuji",
        "Zhuozhao Li",
        "Tyler Skluzacek",
        "Anna Woodard",
        "Ben Blaiszik",
        "Ian Foster",
        "Kyle Chard"
      ],
      "categories": null,
      "citations": 8,
      "comments": "Accepted to ACM Symposium on High-Performance Parallel and\n  Distributed Computing (HPDC 2020). arXiv admin note: substantial text overlap\n  with arXiv:1908.04907",
      "databases": [
        "arXiv",
        "Scopus"
      ],
      "doi": "10.1145/3369583.3392683",
      "keywords": [
        "function as a service",
        "federated function serving",
        "funcX"
      ],
      "number_of_pages": 12,
      "pages": "65-76",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450370523",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "HPDC 2020 - Proceedings of the 29th International Symposium on High-Performance Parallel and Distributed Computing"
      },
      "publication_date": "2020-05-07",
      "selected": null,
      "title": "funcX: A Federated Function Serving Fabric for Science",
      "urls": [
        "http://dx.doi.org/10.1145/3369583.3392683",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85088401102&origin=inward",
        "http://arxiv.org/pdf/2005.04215v1",
        "http://arxiv.org/abs/2005.04215v1"
      ]
    },
    {
      "abstract": "Federated learning (FL) is emerging as a new paradigm for training a machine learning model in cooperative networks. The model parameters are optimized collectively by large populations of interconnected devices, acting as cooperative learners that exchange local model updates with the server, rather than user data. The FL framework is however centralized, as it relies on the server for fusion of the model updates and as such it is limited by a single point of failure. In this paper we propose a distributed FL approach that performs a decentralized fusion of local model parameters by leveraging mutual cooperation between the devices and local (in-network) data operations via consensus-based methods. Communication with the server can be partially, or fully, replaced by in-network operations, scaling down the traffic load on the server as well as paving the way towards a fully serverless FL approach. This proposal also lays the groundwork for integration of FL methods within future (beyond 5G) wireless networks characterized by distributed and decentralized connectivity. The proposed algorithms are implemented and published as open source. They are also designed and verified by experimental data. \u00c2\u00a9 2020 IEEE.",
      "authors": [
        "Stefano Savazzi",
        "Monica Nicoli",
        "Vittorio Rampa",
        "Sanaz Kianoush"
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/ICASSP40776.2020.9054055",
      "keywords": [
        "cooperative networks",
        "Federated learning",
        "consensus",
        "machine learning",
        "distributed intelligence"
      ],
      "number_of_pages": 5,
      "pages": "3937-3941",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-5090-6632-2",
        "issn": "1520-6149",
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "ICASSP 2020 - 2020 IEEE International Conference on Acoustics, Speech and Signal Processing (ICASSP)"
      },
      "publication_date": "2020-05-04",
      "selected": null,
      "title": "Federated Learning with Mutually Cooperating Devices: A Consensus Approach Towards Server-Less Model Optimization",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85089246019&origin=inward",
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9054055"
      ]
    },
    {
      "abstract": "This paper introduces a platform to support serverless computing for scalable event-driven data processing that features a multi-level elasticity approach combined with virtualization of GPUs. The platform supports the execution of applications based on Docker containers in response to file uploads to a data storage in order to perform the data processing in parallel. This is managed by an elastic Kubernetes cluster whose size automatically grows and shrinks depending on the number of files to be processed. To accelerate the processing time of each file, several approaches involving virtualized access to GPUs, either locally or remote, have been evaluated. A use case that involves the inference based on deep learning techniques on transthoracic echocardiography imaging has been carried out to assess the benefits and limitations of the platform. The results indicate that the combination of serverless computing and GPU virtualization introduce an efficient and cost-effective event-driven accelerated computing approach that can be applied for a wide variety of scientific applications. \u00c2\u00a9 2020 Elsevier Inc.",
      "authors": [
        "Naranjo, D.M.",
        "Risco, S.",
        "de Alfonso, C.",
        "P\u00c3\u00a9rez, A.",
        "Blanquer, I.",
        "Molt\u00c3\u00b3, G."
      ],
      "categories": null,
      "citations": 2,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1016/j.jpdc.2020.01.004",
      "keywords": [
        "GPU virtualization",
        "Serverless computing",
        "GPUs"
      ],
      "number_of_pages": 11,
      "pages": "32-42",
      "publication": {
        "category": "Journal",
        "cite_score": 6.9,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "07437315",
        "publisher": "Academic Press Inc.",
        "sjr": 0.638,
        "snip": 1.44,
        "subject_areas": [
          "Computer Networks and Communications",
          "Hardware and Architecture",
          "Artificial Intelligence",
          "Software",
          "Theoretical Computer Science"
        ],
        "title": "Journal of Parallel and Distributed Computing"
      },
      "publication_date": "2020-05-01",
      "selected": null,
      "title": "Accelerated serverless computing based on GPU virtualization",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85079343382&origin=inward"
      ]
    },
    {
      "abstract": "Several real-world applications involve the aggregation of physical features corresponding to different geographic and topographic phenomena. This information plays a crucial role in analyzing and predicting several events. The application areas, which often require a real-time analysis, include traffic flow, forest cover, disease monitoring and so on. Thus, most of the existing systems portray some limitations at various levels of processing and implementation. Some of the most commonly observed factors involve lack of reliability, scalability and exceeding computational costs. In this paper, we address different well-known scalable serverless frameworks i.e., Amazon Web Services (AWS) Lambda, Google Cloud Functions and Microsoft Azure Functions for the management of geospatial big data. We discuss some of the existing approaches that are popularly used in analyzing geospatial big data and indicate their limitations. We report the applicability of our proposed framework in context of Cloud Geographic Information System (GIS) platform. An account of some state-of-the-art technologies and tools relevant to our problem domain are discussed. We also visualize performance of the proposed framework in terms of reliability, scalability, speed and security parameters. Furthermore, we present the map overlay analysis, point-cluster analysis, the generated heatmap and clustering analysis. Some relevant statistical plots are also visualized. In this paper, we consider two application case-studies. The first case study was explored using the Mineral Resources Data System (MRDS) dataset, which refers to worldwide density of mineral resources in a country-wise fashion. The second case study was performed using the Fairfax Forecast Households dataset, which signifies the parcel-level household prediction for 30 consecutive years. The proposed model integrates a serverless framework to reduce timing constraints and it also improves the performance associated to geospatial data processing for high-dimensional hyperspectral data.",
      "authors": [
        "Bebortta, Sujit",
        "Das, Saneev  Kumar",
        "Kandpal, Meenakshi",
        "Barik, Rabindra  Kumar",
        "Dubey, Harishchandra"
      ],
      "categories": null,
      "citations": 2,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.3390/ijgi9050311",
      "keywords": [
        "Geoportals",
        "Serverless framework",
        "Cloud GIS",
        "Cloud computing",
        "Latency",
        "Scalability"
      ],
      "number_of_pages": null,
      "pages": null,
      "publication": {
        "category": "Journal",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": null,
        "publisher": "Multidisciplinary Digital Publishing Institute",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "ISPRS International Journal of Geo-Information"
      },
      "publication_date": "2020-05-01",
      "selected": null,
      "title": "Geospatial Serverless Computing: Architectures, Tools and Future Directions",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85084419491&origin=inward",
        "https://www.mdpi.com/2220-9964/9/5/311/pdf"
      ]
    },
    {
      "abstract": "Edge computing is an emerging paradigm to enable low-latency applications, like mobile augmented reality, because it takes the computation on processing devices that are closer to the users. On the other hand, the need for highly scalable execution of stateless tasks for cloud systems is driving the definition of new technologies based on serverless computing. In this paper, we propose a novel architecture where the two converge to enable low-latency applications: This is achieved by offloading short-lived stateless tasks from the user terminals to edge nodes. Furthermore, we design a distributed algorithm that tackles the research challenge of selecting the best executor, based on real-time measurements and simple, yet effective, prediction algorithms. Finally, we describe a new performance evaluation framework specifically designed for an accurate assessment of algorithms and protocols in edge computing environments, where the nodes may have very heterogeneous networking and processing capabilities. The proposed framework relies on the use of real components on lightweight virtualization mixed with simulated computation and is well-suited to the analysis of several applications and network environments. Using our framework, we evaluate our proposed architecture and algorithms in small- and large-scale edge computing scenarios, showing that our solution achieves similar or better delay performance than a centralized solution, with far less network utilization. \u00c2\u00a9 2019 Elsevier B.V.",
      "authors": [
        "Cicconetti, C.",
        "Conti, M.",
        "Passarella, A."
      ],
      "categories": null,
      "citations": 4,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1016/j.simpat.2019.102007",
      "keywords": [
        "Online job dispatching",
        "Performance evaluation",
        "Serverless computing",
        "Edge computing",
        "Computation offloading"
      ],
      "number_of_pages": null,
      "pages": null,
      "publication": {
        "category": "Journal",
        "cite_score": 6.1,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "1569190X",
        "publisher": "Elsevier",
        "sjr": 0.554,
        "snip": 1.673,
        "subject_areas": [
          "Modeling and Simulation",
          "Hardware and Architecture",
          "Software"
        ],
        "title": "Simulation Modelling Practice and Theory"
      },
      "publication_date": "2020-05-01",
      "selected": null,
      "title": "Architecture and performance evaluation of distributed computation offloading in edge computing",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85073825877&origin=inward"
      ]
    },
    {
      "abstract": "SEnviro SEnviro Nowadays, the concept of \"Everything is connected to Everything\" has spread to reach increasingly diverse scenarios, due to the benefits of constantly being able to know, in real-time, the status of your factory, your city, your health or your smallholding. This wide variety of scenarios creates different challenges such as the heterogeneity of IoT devices, support for large numbers of connected devices, reliable and safe systems, energy efficiency and the possibility of using this system by third-parties in other scenarios. A transversal middleware in all IoT solutions is called an IoT platform. the IoT platform is a piece of software that works like a kind of \"glue\" to combine platforms and orchestrate capabilities that connect devices, users and applications/services in a \"cyber-physical\" world. In this way, the IoT platform can help solve the challenges listed above. This paper proposes an IoT agnostic architecture, highlighting the role of the IoT platform, within a broader ecosystem of interconnected tools, aiming at increasing scalability, stability, interoperability and reusability. For that purpose, different paradigms of computing will be used, such as microservices architecture and serverless computing. Additionally, a technological proposal of the architecture, called  Connect, is presented. This proposal is validated in the IoT scenario of smart farming, where five IoT devices ( nodes) have been deployed to improve wine production. A comprehensive performance evaluation is carried out to guarantee a scalable and stable platform.",
      "authors": [
        "Sergio Trilles",
        "Alberto Gonz\u00e1lez-P\u00e9rez",
        "Joaqu\u00edn Huerta"
      ],
      "categories": null,
      "citations": null,
      "comments": null,
      "databases": [
        "PubMed"
      ],
      "doi": null,
      "keywords": [
        "N serverless",
        "N IoT platform",
        "N smart farming",
        "N Internet of Things",
        "N vineyar diseases",
        "N microservices"
      ],
      "number_of_pages": null,
      "pages": null,
      "publication": {
        "category": "Journal",
        "cite_score": 5.8,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "1424-8220",
        "publisher": "Multidisciplinary Digital Publishing Institute (MDPI)",
        "sjr": 0.636,
        "snip": 1.555,
        "subject_areas": [
          "Information Systems",
          "Instrumentation",
          "Atomic and Molecular Physics, and Optics",
          "Electrical and Electronic Engineering",
          "Biochemistry",
          "Analytical Chemistry"
        ],
        "title": "Sensors (Basel, Switzerland)"
      },
      "publication_date": "2020-04-24",
      "selected": null,
      "title": "An IoT Platform Based on Microservices and Serverless Paradigms for Smart Farming Purposes.",
      "urls": []
    },
    {
      "abstract": "The Function-as-a-Service (FaaS) paradigm has a lot of potential as a computing model for fog environments comprising both cloud and edge nodes. When the request rate exceeds capacity limits at the edge, some functions need to be offloaded from the edge towards the cloud.In this position paper, we propose an auction-based approach in which application developers bid on resources. This allows fog nodes to make a local decision about which functions to offload while maximizing revenue. For a first evaluation of our approach, we use simulation. \u00c2\u00a9 2020 IEEE.",
      "authors": [
        "David Bermbach",
        "Setareh Maghsudi",
        "Jonathan Hasenburg",
        "Tobias Pfandzelter"
      ],
      "categories": null,
      "citations": 2,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/ICFC49376.2020.00012",
      "keywords": [
        "Serverless Computing",
        "Function-as-a-Service",
        "Fog Computing"
      ],
      "number_of_pages": 7,
      "pages": "25-31",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-7281-1087-5",
        "issn": null,
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings - 2020 IEEE International Conference on Fog Computing, ICFC 2020"
      },
      "publication_date": "2020-04-21",
      "selected": null,
      "title": "Towards Auction-Based Function Placement in Serverless Fog Platforms",
      "urls": [
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9103477",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85086469226&origin=inward"
      ]
    },
    {
      "abstract": "The Function-as-a-Service (FaaS) model is a great fit for data and event processing in the Internet of Things (IoT). Sending all data to a cloud-based FaaS platform, however, may cause performance and privacy issues. While these issues could be mitigated using edge computing, existing FaaS approaches, designed for the cloud, are too heavyweight to run on small, constrained edge nodes.In this paper, we propose tinyFaaS, a new FaaS system that is specifically designed for edge environments and their unique challenges. Our platform is lightweight enough to run on low-performance single machine edge nodes, provides a CoAP endpoint to support communication with low-power devices, and uses Docker containers to isolate tenants. We evaluate tinyFaaS through a proof-of-concept implementation that we benchmark and compare to state-of-the-art FaaS platforms. For IoT processing scenarios, we find that tinyFaaS outperforms existing systems by at least an order of magnitude. \u00c2\u00a9 2020 IEEE.",
      "authors": [
        "Tobias Pfandzelter",
        "David Bermbach"
      ],
      "categories": null,
      "citations": 6,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/ICFC49376.2020.00011",
      "keywords": [
        "IoT",
        "Edge Computing",
        "FaaS",
        "Serverless"
      ],
      "number_of_pages": 8,
      "pages": "17-24",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-7281-1087-5",
        "issn": null,
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings - 2020 IEEE International Conference on Fog Computing, ICFC 2020"
      },
      "publication_date": "2020-04-21",
      "selected": null,
      "title": "tinyFaaS: A Lightweight FaaS Platform for Edge Environments",
      "urls": [
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9103476",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85086479146&origin=inward"
      ]
    },
    {
      "abstract": "Serverless computing defines a pay-as-you-go cloud execution model, where the unit of computation is a function that a cloud provider executes and auto-scales on behalf of a cloud consumer. Serverless suggests not (or less) caring about servers but focusing (more) on business logic expressed in functions. Server'less' may be 'more' when getting developer expectations and platform propositions right and when engineering solutions that take specific behavior and constraints of (current) Function-as-a-Service platforms into account. To this end, in this invited paper, we present a summary of findings and lessons learned from a series of research experiments conducted over the past two years. We argue that careful attention must be placed on the promises associated with the serverless model, provide a reality-check for five common assumptions, and suggest ways to mitigate unwanted effects. Our findings focus on application workload distribution and computational processing complexity, the specific auto-scaling mechanisms in place, the behavior and strategies implemented with operational tasks, the constraints and limitations existing when composing functions, and the costs of executing functions. \u00c2\u00a9 2020 IEEE.",
      "authors": [
        "J\u00f6rn Kuhlenkamp",
        "Sebastian Werner",
        "Stefan Tai"
      ],
      "categories": null,
      "citations": 3,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/IC2E48712.2020.00023",
      "keywords": [
        "serverless computing",
        "FaaS experimentation",
        "function-as-a-service (FaaS)",
        "FaaS platforms"
      ],
      "number_of_pages": 8,
      "pages": "154-161",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-7281-1100-1",
        "issn": null,
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings - 2020 IEEE International Conference on Cloud Engineering, IC2E 2020"
      },
      "publication_date": "2020-04-21",
      "selected": null,
      "title": "The Ifs and Buts of Less is More: A Serverless Computing Reality Check",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85086010587&origin=inward",
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9096486"
      ]
    },
    {
      "abstract": "As serverless computing gains popularity among developers for its low costing and elasticity, it has emerged as a promising research field in computer science. Despite its popularity, the cold start remains an issue that needs more attention. In this paper, we address the cold start problem of the serverless platform. We propose WLEC, a container management architecture to minimize the cold start time. WLEC uses a modified S2LRU structure, called S2LRU ++ with an additional third queue. We implement WLEC in OpenLambda and evaluate it in both AWS and Local VM environment with six different metrics in addition to one real-time image resizing application. Among improvements in all metrics, 50% less memory consumption compared to the all-warm method and 31% average cold start duration reduction compared to the no-warm method are the most notable ones. \u00c2\u00a9 2020 IEEE.",
      "authors": [
        "Khondokar Solaiman",
        "Muhammad Abdullah Adnan"
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/IC2E48712.2020.00022",
      "keywords": [
        "container",
        "lambda functions",
        "cold start",
        "warm up queue"
      ],
      "number_of_pages": 10,
      "pages": "144-153",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-7281-1100-1",
        "issn": null,
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings - 2020 IEEE International Conference on Cloud Engineering, IC2E 2020"
      },
      "publication_date": "2020-04-21",
      "selected": null,
      "title": "WLEC: A Not So Cold Architecture to Mitigate Cold Start Problem in Serverless Computing",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85086010978&origin=inward",
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9096489"
      ]
    },
    {
      "abstract": " Communication is a crucial phase in the context of distributed training.\nBecause parameter server (PS) frequently experiences network congestion, recent\nstudies have found that training paradigms without a centralized server\noutperform the traditional server-based paradigms in terms of communication\nefficiency. However, with the increasing growth of model sizes, these\nserver-free paradigms are also confronted with substantial communication\noverhead that seriously deteriorates the performance of distributed training.\nIn this paper, we focus on communication efficiency of two serverless\nparadigms, i.e., Ring All-Reduce (RAR) and gossip, by proposing the Quantized\nParallel Restarted Stochastic Gradient Descent (QPRSGD), an algorithm that\nallows multiple local SGD updates before a global synchronization, in synergy\nwith the quantization to significantly reduce the communication overhead. We\nestablish the bound of accumulative errors according to the synchronization\nmode and the network topology, which is essential to ensure the convergence\nproperty. Under both aggregation paradigms, the algorithm achieves the linear\nspeedup property with respect to the number of local updates as well as the\nnumber of workers. Remarkably, the proposed algorithm achieves a convergence\nrate $O(1/\\sqrt{NK^2M})$ under the gossip paradigm and outperforms all existing\ncompression methods, where $N$ is the times of global synchronizations, and $K$\nis the number of local updates, while $M$ is the number of nodes. An empirical\nstudy on various machine learning models demonstrates that the communication\noverhead is reduced by 90\\%, and the convergence speed is boosted by up to 18.6\ntimes, in a low bandwidth network, in comparison with Parallel SGD.\n",
      "authors": [
        "Wu, Feijie",
        "He, Shiqi",
        "Yang, Yutong",
        "Wang, Haozhao",
        "Qu, Zhihao",
        "Guo, Song",
        "Zhuang, Weihua"
      ],
      "categories": null,
      "citations": null,
      "comments": null,
      "databases": [
        "arXiv"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": null,
      "publication_date": "2020-04-20",
      "selected": null,
      "title": "On the Convergence of Quantized Parallel Restarted SGD for Central Server Free Distributed Training",
      "urls": [
        "http://arxiv.org/abs/2004.09125v2",
        "https://arxiv.org/pdf/2004.09125",
        "http://arxiv.org/pdf/2004.09125v2"
      ]
    },
    {
      "abstract": "Serverless computing services, such as Function-as-a-Service (FaaS), hold the attractive promise of a high level of abstraction and high performance, combined with the minimization of operational logic. Several large ecosystems of serverless platforms, both open- and closed-source, aim to realize this promise. Consequently, a lucrative market has emerged. However, the performance trade-offs of these systems are not well-understood. Moreover, it is exactly the high level of abstraction and the opaqueness of the operational-side that make performance evaluation studies of serverless platforms challenging. Learning from the history of IT platforms, we argue that a benchmark for serverless platforms could help address this challenge. We envision a comprehensive serverless benchmark, which we contrast to the narrow focus of prior work in this area. We argue that a comprehensive benchmark will need to take into account more than just runtime overhead, and include notions of cost, realistic workloads, more (open-source) platforms, and cloud integrations. Finally, we show through preliminary real-world experiments how such a benchmark can help compare the performance overhead when running a serverless workload on state-of-the-art platforms. \u00c2\u00a9 2020 ACM.",
      "authors": [
        "Van Eyk, E.",
        "Scheuner, J.",
        "Eismann, S.",
        "Abad, C.L.",
        "Iosup, A."
      ],
      "categories": null,
      "citations": 3,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1145/3375555.3384381",
      "keywords": [
        "serverless computing",
        "performance",
        "function-as-a-service"
      ],
      "number_of_pages": 6,
      "pages": "26-31",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450371094",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "ICPE 2020 - Companion of the ACM/SPEC International Conference on Performance Engineering"
      },
      "publication_date": "2020-04-20",
      "selected": null,
      "title": "Beyond microbenchmarks: The SPEC-RG vision for a comprehensive serverless benchmark",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85086024894&origin=inward"
      ]
    },
    {
      "abstract": "Microservices and serverless functions are becoming integral parts of modern cloud-based applications. Tailored performance engineering is needed for assuring that the applications meet their requirements for quality attributes such as timeliness, resource efficiency, and elasticity. A novel DevOps-based framework for developing microservices and serverless applications is being developed in the RADON project. RADON contributes to performance engineering by including novel approaches for modeling, deployment optimization, testing, and runtime management. This paper summarizes the contents of our tutorial presented at the 11th ACM/SPEC International Conference on Performance Engineering (ICPE). \u00c2\u00a9 2020 Owner/Author.",
      "authors": [
        "Gias, A.U.",
        "Van Hoorn, A.",
        "Zhu, L.",
        "Casale, G.",
        "D\u00c3\u00bcllmann, T.F.",
        "Wurster, M."
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1145/3375555.3383120",
      "keywords": [
        "performance engineering",
        "microservices",
        "serverless"
      ],
      "number_of_pages": 4,
      "pages": "46-49",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450371094",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "ICPE 2020 - Companion of the ACM/SPEC International Conference on Performance Engineering"
      },
      "publication_date": "2020-04-20",
      "selected": null,
      "title": "Performance engineering for microservices and serverless applications: The RADON approach",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85086040628&origin=inward"
      ]
    },
    {
      "abstract": "Serverless Computing has quickly emerged as a dominant cloud computing paradigm, allowing developers to rapidly prototype event-driven applications using a composition of small functions that each perform a single logical task. However, many such application workflows are based in part on publicly-available functions developed by third-parties, creating the potential for functions to behave in unexpected, or even malicious, ways. At present, developers are not in total control of where and how their data is flowing, creating significant security and privacy risks in growth markets that have embraced serverless (e.g., IoT). As a practical means of addressing this problem, we present Valve, a serverless platform that enables developers to exert complete fine-grained control of information flows in their applications. Valve enables workflow developers to reason about function behaviors, and specify restrictions, through auditing of network-layer information flows. By proxying network requests and propagating taint labels across network flows, Valve is able to restrict function behavior without code modification. We demonstrate that Valve is able defend against known serverless attack behaviors including container reuse-based persistence and data exfiltration over cloud platform APIs with less than 2.8% runtime overhead, 6.25% deployment overhead and 2.35% teardown overhead. \u00c2\u00a9 2020 ACM.",
      "authors": [
        "Datta, P.",
        "Kumar, P.",
        "Morris, T.",
        "Grace, M.",
        "Rahmati, A.",
        "Bates, A."
      ],
      "categories": null,
      "citations": 1,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1145/3366423.3380173",
      "keywords": [
        "Security",
        "Serverless Computing",
        "Information Flow"
      ],
      "number_of_pages": 12,
      "pages": "939-950",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450370233",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "The Web Conference 2020 - Proceedings of the World Wide Web Conference, WWW 2020"
      },
      "publication_date": "2020-04-20",
      "selected": null,
      "title": "Valve: Securing Function Workflows on Serverless Computing Platforms",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85086575199&origin=inward"
      ]
    },
    {
      "abstract": "Serverless computing is steadily becoming the implementation paradigm of choice for a variety of applications, from data analytics to web applications, as it addresses the main problems with serverfull and monolithic architecture. In particular, it abstracts away resource provisioning and infrastructure management, enabling developers to focus on the logic of the program instead of worrying about resource management which will be handled by cloud providers. In this paper, we consider a document processing system used in FinTech as a case study and describe the migration journey from a monolithic architecture to a serverless architecture. Our evaluation results show that the serverless implementation significantly improves performance while resulting in only a marginal increase in cost. \u00c2\u00a9 2020 ACM.",
      "authors": [
        "Goli, A.",
        "Hajihassani, O.",
        "Khazaei, H.",
        "Ardakanian, O.",
        "Rashidi, M.",
        "Dauphinee, T."
      ],
      "categories": null,
      "citations": 2,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1145/3375555.3384380",
      "keywords": [
        "serverless computing",
        "monolith architecture",
        "performance evaluation",
        "FinTech"
      ],
      "number_of_pages": 6,
      "pages": "20-25",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450371094",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "ICPE 2020 - Companion of the ACM/SPEC International Conference on Performance Engineering"
      },
      "publication_date": "2020-04-20",
      "selected": null,
      "title": "Migrating from monolithic to serverless: A fintech case study",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85086021317&origin=inward"
      ]
    },
    {
      "abstract": "Function-as-a-Service (FaaS) platforms enable users to run arbitrary functions without being concerned about operational issues, while only paying for the consumed resources. Individual functions are often composed into workflows for complex tasks. However, the pay-per-use model and nontransparent reporting by cloud providers make it challenging to estimate the expected cost of a workflow, which prevents informed business decisions. Existing cost-estimation approaches assume a static response time for the serverless functions, without taking input parameters into account. In this paper, we propose a methodology for the cost prediction of serverless workflows consisting of input-parameter sensitive function models and a monte-carlo simulation of an abstract workflow model. Our approach enables workflow designers to predict, compare, and optimize the expected costs and performance of a planned workflow, which currently requires time-intensive experimentation. In our evaluation, we show that our approach can predict the response time and output parameters of a function based on its input parameters with an accuracy of 96.1%. In a case study with two audio-processing workflows, our approach predicts the costs of the two workflows with an accuracy of 96.2%. \u00c2\u00a9 2020 ACM.",
      "authors": [
        "Eismann, S.",
        "Grohmann, J.",
        "Van Eyk, E.",
        "Herbst, N.",
        "Kounev, S."
      ],
      "categories": null,
      "citations": 4,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1145/3358960.3379133",
      "keywords": [
        "Prediction",
        "Workflows",
        "Serverless",
        "Performance",
        "Cost"
      ],
      "number_of_pages": 12,
      "pages": "265-276",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450369916",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "ICPE 2020 - Proceedings of the ACM/SPEC International Conference on Performance Engineering"
      },
      "publication_date": "2020-04-20",
      "selected": null,
      "title": "Predicting the costs of serverless workflows",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85085918914&origin=inward"
      ]
    },
    {
      "abstract": "The organizers of the Third Workshop on Hot Topics in Cloud Computing Performance (HotCloudPerf 2020) are delighted to welcome you to the workshop proceedings as part of the ICPE conference companion. The HotCloudPerf 2020 workshop is a full-day workshop on Tuesday, April 21, taking place jointly with WOSP-C as part of the ICPE conference week in Edmonton, Canada. Each year, the workshop chooses a focus theme to explore; for 2020, the theme is \"Performance variability of cloud datacenters and the implications of such phenomena on application performance\" Cloud computing is emerging as one of the most profound changes in the way we build and use IT. The use of global services in public clouds is increasing, and the lucrative and rapidly. \u00c2\u00a9 2020 Owner/Author.",
      "authors": [
        "Uta, A.",
        "Duplyakin, D.",
        "Abad, C.",
        "Herbst, N.",
        "Iosup, A."
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1145/3358960.3383768",
      "keywords": [
        "Performance",
        "Serverless",
        "Cloud",
        "Performance variability"
      ],
      "number_of_pages": 2,
      "pages": "301-302",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450369916",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "ICPE 2020 - Proceedings of the ACM/SPEC International Conference on Performance Engineering"
      },
      "publication_date": "2020-04-20",
      "selected": null,
      "title": "3rd workshop on hot topics in cloud computing performance (HotCloudPerf'20): Performance variability",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85085917769&origin=inward"
      ]
    },
    {
      "abstract": "Existing container based serverless computing systems are limited by cold-start problems and complex architecture for stateful services, multi-tenancy, etc. This paper presents serverless functions to be placed as per data locality and executed as a web-assembly sandbox, which results better execution latency and reduced network usage as compared to the existing architectures. The designed serverless runtime features resource isolation in terms of CPU, Memory, and file-system isolation and falicitates multi-tenancy executions. The proposed architecture is evaluated using IoT workloads with different performance metrics. \u00c2\u00a9 2020 ACM.",
      "authors": [
        "Tiwary, M.",
        "Mishra, P.",
        "Jain, S.",
        "Puthal, D."
      ],
      "categories": null,
      "citations": 1,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1145/3366424.3382670",
      "keywords": [
        "Web-Assembly",
        "Multi-Tenancy",
        "Servelress",
        "Data Locality"
      ],
      "number_of_pages": 2,
      "pages": "4-5",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450370240",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "The Web Conference 2020 - Companion of the World Wide Web Conference, WWW 2020"
      },
      "publication_date": "2020-04-20",
      "selected": null,
      "title": "Data Aware Web-Assembly Function Placement",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85091700015&origin=inward"
      ]
    },
    {
      "abstract": "Developers are always on the lookout for simple solutions to manage their applications on cloud platforms. Major cloud providers have already been offering automatic elasticity management solutions (e.g., AWS Lambda, Azure durable function) to users. However, many cloud applications are stateful-while executing, functions need to share their state with others. Providing elasticity for such stateful functions is much more challenging, as a deployment/elasticity decision for a stateful entity can strongly affect others in ways which are hard to predict without any application knowledge. Existing solutions either only support stateless applications (e.g., AWS Lambda) or only provide limited elasticity management (e.g., Azure durable function) to stateful applications. PLASMA (<u>P</u>rogrammable E<u>la</u>sticity for <u>S</u>tateful Cloud Co<u>m</u>puting <u>A</u>pplications) is a programming framework for elastic stateful cloud applications. It includes (1) an elasticity programming language as a second \"level\" of programming (complementing the main application programming language) for describing elasticity behavior, and (2) a novel semantics-Aware elasticity management runtime that tracks program execution and acts upon application features as suggested by elasticity behavior. We have implemented 10+ applications with PLASMA. Extensive evaluation on Amazon AWS shows that PLASMA significantly improves their efficiency, e.g., achieving same performance as a vanilla setup with 25% fewer resources, or improving performance by 40% compared to the default setup. \u00c2\u00a9 2020 ACM.",
      "authors": [
        "Sang, B.",
        "Roman, P.-L.",
        "Eugster, P.",
        "Lu, H.",
        "Ravi, S.",
        "Petri, G."
      ],
      "categories": null,
      "citations": 1,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1145/3342195.3387553",
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450368827",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings of the 15th European Conference on Computer Systems, EuroSys 2020"
      },
      "publication_date": "2020-04-15",
      "selected": null,
      "title": "PLASMA: Programmable elasticity for stateful cloud computing applications",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85087105014&origin=inward"
      ]
    },
    {
      "abstract": "This paper presents a system-level method for achieving the rapid deployment and high-density caching of serverless functions in a FaaS environment. For reduced start times, functions are deployed from unikernel snapshots, bypassing expensive initialization steps. To reduce the memory footprint of snapshots we apply page-level sharing across the entire software stack that is required to run a function. We demonstrate the effects of our techniques by replacing Linux on the compute node of a FaaS platform architecture. With our prototype OS, the deployment time of a function drops from 100s of milliseconds to under 10 ms. Platform throughput improves by 51x on workload composed entirely of new functions. We are able to cache over 50,000 function instances in memory as opposed to 3,000 using standard OS techniques. In combination, these improvements give the FaaS platform a new ability to handle large-scale bursts of requests. \u00c2\u00a9 2020 ACM.",
      "authors": [
        "Cadden, J.",
        "Unger, T.",
        "Awad, Y.",
        "Dong, H.",
        "Krieger, O.",
        "Appavoo, J."
      ],
      "categories": null,
      "citations": 7,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1145/3342195.3392698",
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450368827",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings of the 15th European Conference on Computer Systems, EuroSys 2020"
      },
      "publication_date": "2020-04-15",
      "selected": null,
      "title": "SEUSS: Skip redundant paths to make serverless fast",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85087107959&origin=inward"
      ]
    },
    {
      "abstract": "Serverless computing has grown in popularity in recent years, with an increasing number of applications being built on Functions-As-A-Service (FaaS) platforms. By default, FaaS platforms support retry-based fault tolerance, but this is insufficient for programs that modify shared state, as they can unwittingly persist partial sets of updates in case of failures. To address this challenge, we would like atomic visibility of the updates made by a FaaS application. In this paper, we present aft, an atomic fault tolerance shim for serverless applications. aft interposes between a commodity FaaS platform and storage engine and ensures atomic visibility of updates by enforcing the read atomic isolation guarantee. aft supports new protocols to guarantee read atomic isolation in the serverless setting. We demonstrate that aft introduces minimal overhead relative to existing storage engines and scales smoothly to thousands of requests per second, while preventing a significant number of consistency anomalies. \u00c2\u00a9 2020 ACM.",
      "authors": [
        "Sreekanti, V.",
        "Wu, C.",
        "Chhatrapati, S.",
        "Gonzalez, J.E.",
        "Hellerstein, J.M.",
        "Faleiro, J.M."
      ],
      "categories": null,
      "citations": 4,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1145/3342195.3387535",
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450368827",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings of the 15th European Conference on Computer Systems, EuroSys 2020"
      },
      "publication_date": "2020-04-15",
      "selected": null,
      "title": "A fault-Tolerance shim for serverless computing",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85087109549&origin=inward"
      ]
    },
    {
      "abstract": "Function-as-a-Service (FaaS) is one form of the serverless cloud computing paradigm and is defined through FaaS platforms (e.g., AWS Lambda) executing event-triggered code snippets (i.e., functions). Many studies that empirically evaluate the performance of such FaaS platforms have started to appear but we are currently lacking a comprehensive understanding of the overall domain. To address this gap, we conducted a multivocal literature review (MLR) covering 112 studies from academic (51) and grey (61) literature. We find that existing work mainly studies the AWS Lambda platform and focuses on micro-benchmarks using simple functions to measure CPU speed and FaaS platform overhead (i.e., container cold starts). Further, we discover a mismatch between academic and industrial sources on tested platform configurations, find that function triggers remain insufficiently studied, and identify HTTP API gateways and cloud storages as the most used external service integrations. Following existing guidelines on experimentation in cloud systems, we discover many flaws threatening the reproducibility of experiments presented in the surveyed studies. We conclude with a discussion of gaps in literature and highlight methodological suggestions that may serve to improve future FaaS performance evaluation studies. \u00c2\u00a9 2020 The Authors",
      "authors": [
        "Joel Scheuner",
        "Philipp Leitner"
      ],
      "categories": null,
      "citations": 3,
      "comments": "improvements including postprint updates",
      "databases": [
        "arXiv",
        "Scopus"
      ],
      "doi": "10.1016/j.jss.2020.110708",
      "keywords": [
        "Benchmarking",
        "Multivocal literature review",
        "Serverless",
        "Cloud computing",
        "Performance",
        "Function-as-a-Service"
      ],
      "number_of_pages": null,
      "pages": null,
      "publication": {
        "category": "Journal",
        "cite_score": 8.4,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "01641212",
        "publisher": "Elsevier Inc.",
        "sjr": 0.642,
        "snip": 2.16,
        "subject_areas": [
          "Information Systems",
          "Hardware and Architecture",
          "Software"
        ],
        "title": "Journal of Systems and Software"
      },
      "publication_date": "2020-04-07",
      "selected": null,
      "title": "Function-as-a-Service Performance Evaluation: A Multivocal Literature Review",
      "urls": [
        "http://arxiv.org/abs/2004.03276v3",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85088384495&origin=inward",
        "http://dx.doi.org/10.1016/j.jss.2020.110708",
        "http://arxiv.org/pdf/2004.03276v3"
      ]
    },
    {
      "abstract": " Getting the best performance from the ever-increasing number of hardware\nplatforms has been a recurring challenge for data processing systems. In recent\nyears, the advent of data science with its increasingly numerous and complex\ntypes of analytics has made this challenge even more difficult. In practice,\nsystem designers are overwhelmed by the number of combinations and typically\nimplement only one analysis/platform combination, leading to repeated\nimplementation effort -- and a plethora of semi-compatible tools for data\nscientists. In this paper, we propose the \"Collection Virtual Machine\" (or CVM) -- an\nextensible compiler framework designed to keep the specialization process of\ndata analytics systems tractable. It can capture at the same time the essence\nof a large span of low-level, hardware-specific implementation techniques as\nwell as high-level operations of different types of analyses. At its core lies\na language for defining nested, collection-oriented intermediate\nrepresentations (IRs). Frontends produce programs in their IR flavors defined\nin that language, which get optimized through a series of rewritings (possibly\nchanging the IR flavor multiple times) until the program is finally expressed\nin an IR of platform-specific operators. While reducing the overall\nimplementation effort, this also improves the interoperability of both analyses\nand hardware platforms. We have used CVM successfully to build specialized\nbackends for platforms as diverse as multi-core CPUs, RDMA clusters, and\nserverless computing infrastructure in the cloud and expect similar results for\nmany more frontends and hardware platforms in the near future.\n",
      "authors": [
        "M\u00fcller, Ingo",
        "Marroqu\u00edn, Renato",
        "Koutsoukos, Dimitrios",
        "Wawrzoniak, Mike",
        "Akhadov, Sabir",
        "Alonso, Gustavo"
      ],
      "categories": null,
      "citations": null,
      "comments": "This paper is currently under review at DaMoN'20",
      "databases": [
        "arXiv"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": null,
      "publication_date": "2020-04-04",
      "selected": null,
      "title": "The Collection Virtual Machine: An Abstraction for Multi-Frontend Multi-Backend Data Analysis",
      "urls": [
        "http://arxiv.org/abs/2004.01908v2",
        "https://arxiv.org/pdf/2004.01908",
        "http://arxiv.org/pdf/2004.01908v2"
      ]
    },
    {
      "abstract": "Nowadays, the concept of &ldquo;Everything is connected to Everything&rdquo; has spread to reach increasingly diverse scenarios, due to the benefits of constantly being able to know, in real-time, the status of your factory, your city, your health or your smallholding. This wide variety of scenarios creates different challenges such as the heterogeneity of IoT devices, support for large numbers of connected devices, reliable and safe systems, energy efficiency and the possibility of using this system by third-parties in other scenarios. A transversal middleware in all IoT solutions is called an IoT platform. the IoT platform is a piece of software that works like a kind of &ldquo;glue&rdquo; to combine platforms and orchestrate capabilities that connect devices, users and applications/services in a &ldquo;cyber-physical&rdquo; world. In this way, the IoT platform can help solve the challenges listed above. This paper proposes an IoT agnostic architecture, highlighting the role of the IoT platform, within a broader ecosystem of interconnected tools, aiming at increasing scalability, stability, interoperability and reusability. For that purpose, different paradigms of computing will be used, such as microservices architecture and serverless computing. Additionally, a technological proposal of the architecture, called SEnviro Connect, is presented. This proposal is validated in the IoT scenario of smart farming, where five IoT devices (SEnviro nodes) have been deployed to improve wine production. A comprehensive performance evaluation is carried out to guarantee a scalable and stable platform.",
      "authors": [
        "Trilles, Sergio",
        "Gonz\u00e1lez-P\u00e9rez, Alberto",
        "Huerta, Joaqu\u00edn"
      ],
      "categories": null,
      "citations": 6,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.3390/s20082418",
      "keywords": [
        "Internet of things",
        "Serverless",
        "Smart farming",
        "Vineyar diseases",
        "Iot platform",
        "Microservices"
      ],
      "number_of_pages": null,
      "pages": null,
      "publication": {
        "category": "Journal",
        "cite_score": 5.8,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "14248220",
        "publisher": "Multidisciplinary Digital Publishing Institute (MDPI)",
        "sjr": 0.636,
        "snip": 1.555,
        "subject_areas": [
          "Information Systems",
          "Instrumentation",
          "Atomic and Molecular Physics, and Optics",
          "Electrical and Electronic Engineering",
          "Biochemistry",
          "Analytical Chemistry"
        ],
        "title": "Sensors (Switzerland)"
      },
      "publication_date": "2020-04-02",
      "selected": null,
      "title": "An IoT Platform Based on Microservices and Serverless Paradigms for Smart Farming Purposes",
      "urls": [
        "https://www.mdpi.com/1424-8220/20/8/2418/pdf",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85084170463&origin=inward"
      ]
    },
    {
      "abstract": "Simulation is becoming increasingly important in the safety analysis of nuclear reactors nowadays. The physical phenomena in a nuclear power plant happen on three classified scales: system scale (phenomenon over the whole plant is concerned), component scale (phenomenon in specific component is concerned), and mesoscale (phenomenon in a small part of a component is concerned). Owing to the particular emphases, various codes are developed to simulate particular problems. System codes intend to predict the behavior of the whole power plant during normal or accidental phases (system scale). Subchannel codes are for core behavior predictions (component scale). CFD codes can simulate the thermal-hydraulic in a fixed part of the plant (mesoscale). Those codes are coupled together to better predict the conditions in a nuclear reactor in last the two decades, which is the multiscale thermal-hydraulic simulation approach for nuclear power systems. Diverse coupling approaches are developed and various coupling codes are implemented. This paper first proposes a classification of those approaches. It tells that a multiscale coupling is composed of five items: coupling architecture, operation mode, domain coupling, field mapping, and temporal coupling. Numbers of options are available for each item. For coupling architecture, it can be internal coupling, via-IO coupling, server-client, or serverless coupling. For operation mode, it can be either parallel or serial. For domain coupling, it can be either domain-decomposition or domain-overlapping coupling. For field mapping, it can be manual-definition, processed by user-developing toolkit, or handled by third-party libraries. For temporal coupling, it can be explicit coupling, semi-implicit coupling, or implicit coupling. An evaluation of the approaches is performed based on new-proposed criterion. A general review of the multiscale thermal-hydraulic coupled codes is made based on the classification. Especially, a review of the domain-overlapping approach is present considering it is the most promising but challenging method for multiscale thermal-hydraulic simulation. \u00c2\u00a9 2020 The Author. International Journal of Energy Research published by John Wiley & Sons Ltd",
      "authors": [
        "Zhang, K."
      ],
      "categories": null,
      "citations": 8,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1002/er.5111",
      "keywords": [
        "multiscale thermal-hydraulic coupling",
        "classification of coupling approaches",
        "review of coupled codes",
        "review of domain-overlapping"
      ],
      "number_of_pages": 21,
      "pages": "3295-3315",
      "publication": {
        "category": "Journal",
        "cite_score": 5.0,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "0363907X",
        "publisher": "John Wiley and Sons Ltd",
        "sjr": 0.808,
        "snip": 1.239,
        "subject_areas": [
          "Fuel Technology",
          "Nuclear Energy and Engineering",
          "Energy Engineering and Power Technology",
          "Renewable Energy, Sustainability and the Environment"
        ],
        "title": "International Journal of Energy Research"
      },
      "publication_date": "2020-04-01",
      "selected": null,
      "title": "The multiscale thermal-hydraulic simulation for nuclear reactors: A classification of the coupling approaches and a review of the coupled codes",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85078029092&origin=inward"
      ]
    },
    {
      "abstract": "The serverless execution paradigm is becoming an increasingly popular option when workloads are to be deployed in an abstracted way, more specifically, without specifying any infrastructure requirements. Currently, such workloads are typically comprised of small programs or even a series of single functions used as event triggers or to process a data stream. Other applications that may also fit on a serverless scenario are stateless services that may need to seamlessly scale in terms of resources, such as a web server. Although several commercial serverless services are available (e.g., Amazon Lambda), their use cases are mostly limited to the execution of functions or scripts that can be adapted to predefined templates or specifications. However, current research efforts point out that it is interesting for the serverless paradigm to evolve from single functions and support more flexible infrastructure units such as operating-system-level virtualization in the form of containers. In this paper we present a novel platform to automatically scale container resources in real time, while they are running, and without any need for reboots. This platform is evaluated using Big Data workloads, both batch and streaming, as representative examples of applications that could be initially regarded as unsuitable for the serverless paradigm considering the currently available services. The results show how our serverless platform can improve the CPU utilization by up to 77% with an execution time overhead of only 6%, while remaining scalable when using a 32-container cluster. \u00c2\u00a9 2019 Elsevier B.V.",
      "authors": [
        "Enes, J.",
        "Exp\u00c3\u00b3sito, R.R.",
        "Touri\u00c3\u00b1o, J."
      ],
      "categories": null,
      "citations": 1,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1016/j.future.2019.11.037",
      "keywords": [
        "Big Data",
        "Serverless computing",
        "Operating-system-level virtualization",
        "Resource scaling",
        "Container cluster"
      ],
      "number_of_pages": 19,
      "pages": "361-379",
      "publication": {
        "category": "Journal",
        "cite_score": 13.3,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "0167739X",
        "publisher": "Elsevier",
        "sjr": 1.262,
        "snip": 2.72,
        "subject_areas": [
          "Hardware and Architecture",
          "Computer Networks and Communications",
          "Software"
        ],
        "title": "Future Generation Computer Systems"
      },
      "publication_date": "2020-04-01",
      "selected": null,
      "title": "Real-time resource scaling platform for Big Data workloads on serverless environments",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85076426621&origin=inward"
      ]
    },
    {
      "abstract": " Function-as-a-Service (FaaS) is a cloud service model enabling developers to\noffload event-driven executable snippets of code. The execution and management\nof such functions becomes a FaaS provider's responsibility, hereby included\ntheir on-demand provisioning and automatic scaling. Key enablers for this cloud\nservice model are FaaS platforms, e.g., AWS Lambda, Microsoft Azure Functions\nor OpenFaaS. At the same time, the choice of the most appropriate FaaS platform\nfor deploying and running a serverless application is not trivial, as various\norganizational and technical aspects have to be taken into account. In this\nwork, we present (i) a FaaS platform classification framework derived using a\nmixed method study and (ii) a systematic technology review of the ten most\nprominent FaaS platforms, based on the proposed classification framework.\nMoreover, we present (iii) a FaaS platform selection support system, called\n\\faastener, which helps researchers and practitioners to choose the FaaS\nplatform most suited for their requirements.\n",
      "authors": [
        "Yussupov, Vladimir",
        "Soldani, Jacopo",
        "Breitenb\u00fccher, Uwe",
        "Brogi, Antonio",
        "Leymann, Frank"
      ],
      "categories": null,
      "citations": null,
      "comments": null,
      "databases": [
        "arXiv"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": null,
      "publication_date": "2020-04-01",
      "selected": null,
      "title": "FaaSten Your Decisions: Classification Framework and Technology Review of Function-as-a-Service Platforms",
      "urls": [
        "http://arxiv.org/abs/2004.00969v1",
        "http://arxiv.org/pdf/2004.00969v1",
        "https://arxiv.org/pdf/2004.00969"
      ]
    },
    {
      "abstract": "In Function-as-a-Service platforms (FaaS), which have become very popular lately, code is deployed in the unit of single functions and the cloud provider handles resource management. There, a key problem is the so-called cold start problem: when a request comes in and no idle container can be found for the execution of the target function, then a new container needs to provisioned. In that case, the request incurs an extra latency - the cold start latency. Recent work has largely focused on reducing the duration of cold starts. In this paper, we present three approaches, complementary to related work, that reduce the number of cold starts while treating the FaaS service as a black box. In the approaches, implemented as part of a lightweight choreography middleware, we use knowledge on the composition of functions to trigger cold starts and, thus, the provisioning of new containers before the application process invokes the respective function. In experiments on AWS Lambda and OpenWhisk, we could show that our approaches remove an average of about 40% (in some cases up to 80%) of all cold starts while causing only a small cost overhead. \u00c2\u00a9 2020 ACM.",
      "authors": [
        "Bermbach, D.",
        "Karakaya, A.-S.",
        "Buchholz, S."
      ],
      "categories": null,
      "citations": 5,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1145/3341105.3373909",
      "keywords": [
        "Cold starts",
        "Function-as-a-service",
        "Serverless computing"
      ],
      "number_of_pages": 10,
      "pages": "134-143",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450368667",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings of the ACM Symposium on Applied Computing"
      },
      "publication_date": "2020-03-30",
      "selected": null,
      "title": "Using application knowledge to reduce cold starts in FaaS services",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85083036967&origin=inward"
      ]
    },
    {
      "abstract": "Application providers have to solve the trade-off between performance and deployment costs by selecting the \"right\" amount of provisioned computing resources for their application. The high value of changing this trade-off decision at runtime fueled a decade of combined efforts by industry and research to develop elastic applications. Despite these efforts, the development of elastic applications still demands significant time and expertise from application providers. To address this demand, FaaS platforms shift responsibilities associated with elasticity from the application developer to the cloud provider. While this shift is highly promising, FaaS platforms do not quantify elasticity; thus, application developers are unaware of how elastic FaaS platforms are. This lack of knowledge significantly impairs effective objective-driven design of serverless applications. In this paper, we present an experiment design and corresponding toolkit for quantifying elasticity and its associated trade-offs with latency, reliability, and execution costs. We present results for the evaluation of four popular FaaS platforms by AWS, Google, IBM, Microsoft, and show significant differences between the service offers. Based on our results, we assess the applicability of the individual FaaS platforms in three scenarios under different objectives: web serving, online data analysis, and offline batch processing. \u00c2\u00a9 2020 ACM.",
      "authors": [
        "Kuhlenkamp, J.",
        "Werner, S.",
        "Borges, M.C.",
        "Ernst, D.",
        "Wenzel, D."
      ],
      "categories": null,
      "citations": 6,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1145/3341105.3373948",
      "keywords": [
        "Experimentation",
        "Benchmarking",
        "Serverless",
        "Elasticity"
      ],
      "number_of_pages": 10,
      "pages": "1576-1585",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450368667",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings of the ACM Symposium on Applied Computing"
      },
      "publication_date": "2020-03-30",
      "selected": null,
      "title": "Benchmarking elasticity of FaaS platforms as a foundation for objective-driven design of serverless applications",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85083038831&origin=inward"
      ]
    },
    {
      "abstract": "Counterfeiting in e-commerce raises issues this paper addresses through a specialized large-scale reverse image search engine called e-CoS, with a serverless based architecture for high performance. The system is tested in the area of online counterfeiting with promising results. In order to generalize the solution unprecedented cooperation and information sharing are required between all stakeholders of e-commerce with a key part being reserved for the general public. The prospect of such mass adoption is made possible by the growing ethical concerns of modern-day consumers, fueled by the enormous negative social and economic impact of counterfeiting. \u00c2\u00a9 2020 ACM.",
      "authors": [
        "Onesim, R.-I.",
        "Alboaie, L.",
        "Pricop, A.",
        "Panu, A."
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1145/3341105.3373999",
      "keywords": [
        "Large scale systems",
        "Counterfeiting",
        "E-commerce",
        "Image similarities"
      ],
      "number_of_pages": 6,
      "pages": "1914-1919",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450368667",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings of the ACM Symposium on Applied Computing"
      },
      "publication_date": "2020-03-30",
      "selected": null,
      "title": "Counterfeiting scalable detection image based system for e-commerce",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85083035687&origin=inward"
      ]
    },
    {
      "abstract": " IBM Research Castor, a cloud-native system for managing and deploying large\nnumbers of AI time-series models in IoT applications, is described. Modelling\ncode templates, in Python and R, following a typical machine-learning workflow\nare supported. A knowledge-based approach to managing model and time-series\ndata allows the use of general semantic concepts for expressing feature\nengineering tasks. Model templates can be programmatically deployed against\nspecific instances of semantic concepts, thus supporting model reuse and\nautomated replication as the IoT application grows. Deployed models are\nautomatically executed in parallel leveraging a serverless cloud computing\nframework. The complete history of trained model versions and rolling-horizon\npredictions is persisted, thus enabling full model lineage and traceability.\nResults from deployments in real-world smart-grid live forecasting applications\nare reported. Scalability of executing up to tens of thousands of AI modelling\ntasks is also evaluated.\n",
      "authors": [
        "Eck, Bradley",
        "Fusco, Francesco",
        "Gormally, Robert",
        "Purcell, Mark",
        "Tirupathi, Seshu"
      ],
      "categories": null,
      "citations": null,
      "comments": null,
      "databases": [
        "arXiv"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": {
        "category": null,
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [
          "Distributed, Parallel, and Cluster Computing",
          "Computers and Society",
          "Artificial Intelligence"
        ],
        "title": "Workshop AI for Internet of Things, IJCAI 2019"
      },
      "publication_date": "2020-03-24",
      "selected": null,
      "title": "Scalable Deployment of AI Time-series Models for IoT",
      "urls": [
        "https://arxiv.org/pdf/2003.12141",
        "http://arxiv.org/abs/2003.12141v1",
        "http://arxiv.org/pdf/2003.12141v1"
      ]
    },
    {
      "abstract": " We revisit multi-tenant network virtualization in data centers, and make the\ncase for tenant-specific virtual switches. In particular, tenant-specific\nvirtual switches allow cloud providers to extend fine-grained billing (known,\ne.g., from serverless architectures) to the network, accounting not only for\nIO, but also CPU or energy. We sketch an architecture and present economical\nmotivation and recent technological enablers. We also find that virtual\nswitches today do not offer sufficient multi-tenancy and can introduce\nartificial performance bottlenecks, e.g., in load balancers. We conclude by\ndiscussing additional use cases for tentant-specific switches.\n",
      "authors": [
        "Thimmaraju, Kashyap",
        "Schmid, Stefan"
      ],
      "categories": null,
      "citations": null,
      "comments": "7 pages, 3 figures",
      "databases": [
        "arXiv"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": null,
      "publication_date": "2020-03-24",
      "selected": null,
      "title": "Towards Fine-Grained Billing For Cloud Networking",
      "urls": [
        "http://arxiv.org/pdf/2003.10745v1",
        "http://arxiv.org/abs/2003.10745v1",
        "https://arxiv.org/pdf/2003.10745"
      ]
    },
    {
      "abstract": "Due to its merit of elasticity and scalability, server-less computing has been accepted as a fundamental technology block when building the edge-cloud back end of IoT systems. Though existing edge computing frameworks such as AWS Greengrass and Azure IoT Edge have enabled the deployment of serverless computing functions to edge, users must manually start the deployment process in cloud. Such a user-driven push-model approach demands heavy user involvement, which makes it less efficient and sometimes slow to react to dynamic changes in IoT environments. Considering these limitations, we propose a novel scheme that enables device-driven on-demand deployment of serverless computing functions to edge. This solution can allow a large number of IoT devices to utilize edge computing resources in a more responsive and scalable manner. Extensive evaluations have been conducted in AWS, and the obtained performance results on both end-to-end and step-wise operation latency demonstrated that the proposed scheme could successfully and efficiently achieve the desired on-demand deployment with minimal overhead in various scenarios. \u00c2\u00a9 2020 IEEE.",
      "authors": [
        "Trang Quang",
        "Yang Peng"
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/PerComWorkshops48775.2020.9156140",
      "keywords": [],
      "number_of_pages": 6,
      "pages": "1-6",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-7281-4717-8",
        "issn": null,
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "2020 IEEE International Conference on Pervasive Computing and Communications Workshops, PerCom Workshops 2020"
      },
      "publication_date": "2020-03-23",
      "selected": null,
      "title": "Device-driven On-demand Deployment of Serverless Computing Functions",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85091972231&origin=inward",
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9156140"
      ]
    },
    {
      "abstract": "Serverless computing is a promising new event-driven programming model that was designed by cloud vendors to expedite the development and deployment of scalable web services on cloud computing systems. Using the model, developers write applications that consist of simple, independent, stateless functions that the cloud invokes on-demand (i.e. elastically), in response to system-wide events (data arrival, messages, web requests, etc.). In this work, we present STOIC (Serverless TeleOperable HybrId Cloud), an application scheduling and deployment system that extends the serverless model in two ways. First, it uses the model in a distributed setting and schedules application functions across multiple cloud systems. Second, STOIC supports serverless function execution using hardware acceleration (e.g. GPU resources) when available from the underlying cloud system. We overview the design and implementation of STOIC and empirically evaluate it using real-world machine learning applications and multi-tier (e.g. edge-cloud) deployments. We find that STOIC's combined use of edge and cloud resources is able to outperform using either cloud in isolation for the applications and datasets that we consider. \u00c2\u00a9 2020 IEEE.",
      "authors": [
        "Michael Zhang",
        "Chandra Krintz",
        "Rich Wolski"
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/PerComWorkshops48775.2020.9156239",
      "keywords": [
        "Image Processing",
        "Internet of Things",
        "Serverless computing",
        "Edge computing"
      ],
      "number_of_pages": 6,
      "pages": "1-6",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-7281-4717-8",
        "issn": null,
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "2020 IEEE International Conference on Pervasive Computing and Communications Workshops, PerCom Workshops 2020"
      },
      "publication_date": "2020-03-23",
      "selected": null,
      "title": "STOIC: Serverless Teleoperable Hybrid Cloud for Machine Learning Applications on Edge Device",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85091998548&origin=inward",
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9156239"
      ]
    },
    {
      "abstract": "With serverless computing, providers deploy application code and manage resource allocation dynamically, eliminating infrastructure management from application development. Serverless providers have a variety of virtualization platforms to choose from for isolating functions, ranging from native Linux processes to Linux containers to lightweight isolation platforms, such as Google gVisor [7] and AWS Firecracker [5]. These platforms form a spectrum as they move functionality out of the host kernel and into an isolated guest environment. For example, gVisor handles many system calls in a user-mode Sentry process while Firecracker runs a full guest operating system in each microVM. A common theme across these platforms are the twin goals of strong isolation and high performance. In this paper, we perform a comparative study of Linux containers (LXC), gVisor secure containers, and Firecracker microVMs to understand how they use Linux kernel services differently: how much does their use of host kernel functionality vary? We also evaluate the performance costs of the designs with a series of microbenchmarks targeting different kernel subsystems. Our results show that despite moving much functionality out of the kernel, both Firecracker and gVisor execute substantially more kernel code than native Linux. gVisor and Linux containers execute substantially the same code, although with different frequency. \u00c2\u00a9 2020 ACM.",
      "authors": [
        "Anjali",
        "Caraza-Harter, T.",
        "Swift, M.M."
      ],
      "categories": null,
      "citations": 4,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1145/3381052.3381315",
      "keywords": [
        "benchmarking",
        "code coverage",
        "serverless computing",
        "firecracker",
        "gVisor",
        "virtualization",
        "operating systems"
      ],
      "number_of_pages": 13,
      "pages": "101-113",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450375542",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "VEE 2020 - Proceedings of the 16th ACM SIGPLAN/SIGOPS International Conference on Virtual Execution Environments"
      },
      "publication_date": "2020-03-17",
      "selected": null,
      "title": "Blending containers and virtual machines: A study of firecracker and gVisor",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85082860766&origin=inward"
      ]
    },
    {
      "abstract": "Serverless, the new buzzword, has been gaining a lot of attention from the developers and industry. Cloud vendors such as AWS and Microsoft have hyped the architecture almost everywhere, from practitioners' conferences to local events, to blog posts. In this work, we introduce serverless functions (also known as Function-as-a-Service or FaaS), together with on bad practices experienced by practitioners, members of the Tampere Serverless Meetup group. \u00c2\u00a9 2020 IEEE.",
      "authors": [
        "Jussi Nupponen",
        "Davide Taibi"
      ],
      "categories": null,
      "citations": 9,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/ICSA-C50368.2020.00016",
      "keywords": [
        "Serverless",
        "Function-as-a-service",
        "FaaS"
      ],
      "number_of_pages": 2,
      "pages": "49-50",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-7281-7416-7",
        "issn": null,
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings - 2020 IEEE International Conference on Software Architecture Companion, ICSA-C 2020"
      },
      "publication_date": "2020-03-16",
      "selected": null,
      "title": "Serverless: What it Is, What to Do and What Not to Do",
      "urls": [
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9095731",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85085749334&origin=inward"
      ]
    },
    {
      "abstract": " Serverless computing has grown in popularity in recent years, with an\nincreasing number of applications being built on Functions-as-a-Service (FaaS)\nplatforms. By default, FaaS platforms support retry-based fault tolerance, but\nthis is insufficient for programs that modify shared state, as they can\nunwittingly persist partial sets of updates in case of failures. To address\nthis challenge, we would like atomic visibility of the updates made by a FaaS\napplication. In this paper, we present AFT, an atomic fault tolerance shim for serverless\napplications. AFT interposes between a commodity FaaS platform and storage\nengine and ensures atomic visibility of updates by enforcing the read atomic\nisolation guarantee. AFT supports new protocols to guarantee read atomic\nisolation in the serverless setting. We demonstrate that aft introduces minimal\noverhead relative to existing storage engines and scales smoothly to thousands\nof requests per second, while preventing a significant number of consistency\nanomalies.\n",
      "authors": [
        "Sreekanti, Vikram",
        "Wu, Chenggang",
        "Chhatrapati, Saurav",
        "Gonzalez, Joseph E.",
        "Hellerstein, Joseph M.",
        "Faleiro, Jose M."
      ],
      "categories": null,
      "citations": null,
      "comments": null,
      "databases": [
        "arXiv"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": null,
      "publication_date": "2020-03-12",
      "selected": null,
      "title": "A Fault-Tolerance Shim for Serverless Computing",
      "urls": [
        "https://arxiv.org/pdf/2003.06007",
        "http://arxiv.org/abs/2003.06007v1",
        "http://arxiv.org/pdf/2003.06007v1"
      ]
    },
    {
      "abstract": "As commuters want to be informed about the current status of public transport vehicles, availability of real time information to commuters will make public transport more trustworthy and reliable. Having more people use public transport has good implications - not only will it result to less traffic congestion, but a greener environment too. In this paper we present Irenbus, a novel dynamic real-time information system that keeps commuters informed about buses currently in transit and other relevant information such as vehicle arrival time. The system is composed of three subsystems that cater for commuters, bus drivers and bus managers respectively. These are all developed using the Firebase Backend-as-a-Service (BaaS) platform. Several sophisticated automated tests on the mobile application component of the system were carried out to evaluate its device resource consumption. The results of the tests show that the proposed system is very efficient and suitable for use on low end devices. \u00c2\u00a9 2020 IEEE.",
      "authors": [
        "Menzi Skhosana",
        "Absalom E ezugwu"
      ],
      "categories": null,
      "citations": 1,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/ICTAS47918.2020.234000",
      "keywords": [
        "Firebase",
        "mobile tracking",
        "bus location tracking",
        "Android location"
      ],
      "number_of_pages": 7,
      "pages": "1-7",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-7281-3771-1",
        "issn": null,
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "2020 Conference on Information Communications Technology and Society, ICTAS 2020 - Proceedings"
      },
      "publication_date": "2020-03-11",
      "selected": null,
      "title": "Irenbus: A Real-Time Public Transport Management System",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85084967719&origin=inward",
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9082458"
      ]
    },
    {
      "abstract": "Heterogeneous computing platforms are now a valuable solution to continue to meet Service Level Agreements (SLAs) for compute intensive cloud workloads. Field Programmable Gate Arrays (FPGAs) effectively accelerate cloud workloads, however, these workloads have a spiky behavior as well as long periods of underutilization. Sharing the FPGA with multiple tenants then helps to increase the board's time utilization. In this paper we present BlastFunction, a distributed FPGA sharing system for the acceleration of microservices and serverless applications in cloud environments. BlastFunction includes a Remote OpenCL Library to access the shared devices transparently; multiple Device Managers to time-share and monitor the FPGAs and a central Accelerators Registry to allocate the available devices. BlastFunction reaches higher utilization and throughput w.r.t. a native execution thanks to device sharing, with minimal differences in latency given by the concurrent accesses. \u00c2\u00a9 2020 EDAA.",
      "authors": [
        "Marco Bacis",
        "Rolando Brondolin",
        "Marco D. Santambrogio"
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.23919/DATE48585.2020.9116333",
      "keywords": [
        "OpenCL",
        "Serverless",
        "FPGA sharing"
      ],
      "number_of_pages": 6,
      "pages": "852-857",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-7281-4468-9",
        "issn": "1530-1591",
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings of the 2020 Design, Automation and Test in Europe Conference and Exhibition, DATE 2020"
      },
      "publication_date": "2020-03-09",
      "selected": null,
      "title": "BlastFunction: an FPGA-as-a-Service system for Accelerated Serverless Computing",
      "urls": [
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9116333",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85087403552&origin=inward"
      ]
    },
    {
      "abstract": "Serverless computing promises cost-efficiency and elasticity for high-productive software development. To achieve this, the serverless sandbox system must address two challenges: strong isolation between function instances, and low startup latency to ensure user experience. While strong isolation can be provided by virtualization-based sandboxes, the initialization of sandbox and application causes non-negligible startup overhead. Conventional sandbox systems fall short in low-latency startup due to their application-agnostic nature: they can only reduce the latency of sandbox initialization through hypervisor and guest kernel customization, which is inadequate and does not mitigate the majority of startup overhead. This paper proposes Catalyzer, a serverless sandbox system design providing both strong isolation and extremely fast function startup. Instead of booting from scratch, Catalyzer restores a virtualization-based function instance from a well-formed checkpoint image and thereby skips the initialization on the critical path (init-less). Catalyzer boosts the restore performance by on-demand recovering both user-level memory state and system state. We also propose a new OS primitive, sfork (sandbox fork), to further reduce the startup latency by directly reusing the state of a running sandbox instance. Fundamentally, Catalyzer removes the initialization cost by reusing state, which enables general optimizations for diverse serverless functions. The evaluation shows that Catalyzer reduces startup latency by orders of magnitude, achieves <1ms latency in the best case, and significantly reduces the end-to-end latency for real-world workloads. Catalyzer has been adopted by Ant Financial, and we also present lessons learned from industrial development. \u00c2\u00a9 2020 Copyright held by the owner/author(s). Publication rights licensed to ACM.",
      "authors": [
        "Du, D.",
        "Yu, T.",
        "Xia, Y.",
        "Zang, B.",
        "Yan, G.",
        "Qin, C.",
        "Wu, Q.",
        "Chen, H."
      ],
      "categories": null,
      "citations": 15,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1145/3373376.3378512",
      "keywords": [
        "Startup latency",
        "Operating system",
        "Serverless computing",
        "Checkpoint and restore"
      ],
      "number_of_pages": 15,
      "pages": "467-481",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450371025",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "International Conference on Architectural Support for Programming Languages and Operating Systems - ASPLOS"
      },
      "publication_date": "2020-03-09",
      "selected": null,
      "title": "Catalyzer: Sub-millisecond startup for serverless computing with initialization-less booting",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85082400852&origin=inward"
      ]
    },
    {
      "abstract": "Latency-sensitive serverless subfunctions are optimally deployed at edge and cloud according to telemetry-retrieved data from the 5G transport infrastructure. Once deployed, serverless functions provided extremely fast invocation time of less than 450ms. \u00c2\u00a9 OSA 2020 \u00c2\u00a9 2020 The Author(s)",
      "authors": [
        "Istv\u00e1n Pelle",
        "Francesco Paolucci",
        "Bal\u00e1zs Sonkoly",
        "Filippo Cugini"
      ],
      "categories": null,
      "citations": 2,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": 3,
      "pages": "1-3",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-7281-6762-6",
        "issn": null,
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "2020 Optical Fiber Communications Conference and Exhibition, OFC 2020 - Proceedings"
      },
      "publication_date": "2020-03-08",
      "selected": null,
      "title": "Telemetry-Driven Optical 5G Serverless Architecture for Latency-Sensitive Edge Computing",
      "urls": [
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9083228",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85089942258&origin=inward",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85085165115&origin=inward"
      ]
    },
    {
      "abstract": " Function as a Service (FaaS) has been gaining popularity as a way to deploy\ncomputations to serverless backends in the cloud. This paradigm shifts the\ncomplexity of allocating and provisioning resources to the cloud provider,\nwhich has to provide the illusion of always-available resources (i.e., fast\nfunction invocations without cold starts) at the lowest possible resource cost.\nDoing so requires the provider to deeply understand the characteristics of the\nFaaS workload. Unfortunately, there has been little to no public information on\nthese characteristics. Thus, in this paper, we first characterize the entire\nproduction FaaS workload of Azure Functions. We show for example that most\nfunctions are invoked very infrequently, but there is an 8-order-of-magnitude\nrange of invocation frequencies. Using observations from our characterization,\nwe then propose a practical resource management policy that significantly\nreduces the number of function coldstarts,while spending fewerresources than\nstate-of-the-practice policies.\n",
      "authors": [
        "Shahrad, Mohammad",
        "Fonseca, Rodrigo",
        "Goiri, \u00cd\u00f1igo",
        "Chaudhry, Gohar",
        "Batum, Paul",
        "Cooke, Jason",
        "Laureano, Eduardo",
        "Tresness, Colby",
        "Russinovich, Mark",
        "Bianchini, Ricardo"
      ],
      "categories": null,
      "citations": 13,
      "comments": "14 pages, 20 figures. Corrected and published in USENIX ATC, July\n  2020. For accompanying dataset, see\n  https://github.com/Azure/AzurePublicDataset",
      "databases": [
        "arXiv",
        "Scopus"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": 14,
      "pages": "205-218",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781939133144",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings of the 2020 USENIX Annual Technical Conference, ATC 2020"
      },
      "publication_date": "2020-03-06",
      "selected": null,
      "title": "Serverless in the Wild: Characterizing and Optimizing the Serverless Workload at a Large Cloud Provider",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85091934381&origin=inward",
        "https://arxiv.org/pdf/2003.03423",
        "http://arxiv.org/pdf/2003.03423v3",
        "http://arxiv.org/abs/2003.03423v3"
      ]
    },
    {
      "abstract": " We present a framework for performance optimization in serverless edge-cloud\nplatforms using dynamic task placement. We focus on applications for smart edge\ndevices, for example, smart cameras or speakers, that need to perform\nprocessing tasks on input data in real to near-real time. Our framework allows\nthe user to specify cost and latency requirements for each application task,\nand for each input, it determines whether to execute the task on the edge\ndevice or in the cloud. Further, for cloud executions, the framework identifies\nthe container resource configuration needed to satisfy the performance goals.\nWe have evaluated our framework in simulation using measurements collected from\nserverless applications in AWS Lambda and AWS Greengrass. In addition, we have\nimplemented a prototype of our framework that runs in these same platforms. In\nexperiments with our prototype, our models can predict average end-to-end\nlatency with less than 6% error, and we obtain almost three orders of magnitude\nreduction in end-to-end latency compared to edge-only execution.\n",
      "authors": [
        "Das, Anirban",
        "Imai, Shigeru",
        "Wittie, Mike P.",
        "Patterson, Stacy"
      ],
      "categories": null,
      "citations": null,
      "comments": "10 pages, 6 figures, 20th IEEE/ACM International Symposium on\n  Cluster, Cloud and Internet Computing",
      "databases": [
        "arXiv"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": null,
      "publication_date": "2020-03-03",
      "selected": null,
      "title": "Performance Optimization for Edge-Cloud Serverless Platforms via Dynamic Task Placement",
      "urls": [
        "https://arxiv.org/pdf/2003.01310",
        "http://arxiv.org/abs/2003.01310v2",
        "http://arxiv.org/pdf/2003.01310v2"
      ]
    },
    {
      "abstract": "With the development of cloud computing, serverless computing, that is, function as a service (FaaS) is considered to be the next stage of cloud computing development. Serverless computing can be seen as a logical extension of cloud computing, a disruptive approach to application development. It is based on the code written by the developer for accurate resource allocation, and the resources on the platform are started when a predefined event is triggered. By comparing with the traditional architecture, the advantages of serverless architecture are highlighted. Although serverless is a relatively new concept in the field of software architecture, it is also a technological innovation with great influence. \u00c2\u00a9 Published under licence by IOP Publishing Ltd.",
      "authors": [
        "Jiang, L.",
        "Pei, Y.",
        "Zhao, J."
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1088/1742-6596/1453/1/012119",
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": 0.7,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "17426588",
        "publisher": "IOP Publishing Ltd.",
        "sjr": 0.21,
        "snip": 0.464,
        "subject_areas": [
          "Physics and Astronomy (all)"
        ],
        "title": "Journal of Physics: Conference Series"
      },
      "publication_date": "2020-03-03",
      "selected": null,
      "title": "Overview of Serverless Architecture Research",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85081156175&origin=inward"
      ]
    },
    {
      "abstract": "This work proposes ARS (FaaS) serverless framework scheduling and provisioning resources for streaming applications autonomously, which ensures real-time response on unpredictable and fluctuating streaming data. A HPC cloud platform is used as a de facto platform, on which serverless computing for stream analytic is explored. This work enables application developers to build and run steaming applications without worrying about servers, which means that the developers are able to focus on application features instead of scheduling and provisioning resources of the infrastructure. The serverless computing framework, ARS(FaaS), provides function-as-a-service to make the developers write code in discrete event-driven functions. ARS(FaaS) is capable of running and scaling the developer's code automatically, according to the throughput of streaming events. The major contribution of this serverless framework is effective and efficient autonomous resource scheduling for real-time streaming analytic, which enables the developers to build applications faster with autonomous resource scheduling. ARS(FaaS) framework is appropriate for real-time and stream analytic on event-driven data with spiky and variable compute requirements. Copyright \u00c2\u00a9 by HIGH TECHNOLOGY LETTERS PRESS.",
      "authors": [
        "Cheng, Y.",
        "Hao, Z.",
        "Cai, R."
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.3772/j.issn.1006-6748.2020.01.003",
      "keywords": [
        "HPC cloud",
        "Serverless",
        "Steam processing",
        "Auto-scaling",
        "Function-as-a-service(FaaS)"
      ],
      "number_of_pages": 8,
      "pages": "17-24",
      "publication": {
        "category": "Journal",
        "cite_score": 0.4,
        "is_potentially_predatory": true,
        "isbn": null,
        "issn": "10066748",
        "publisher": "Institute of Scientific and Technical Information of China",
        "sjr": 0.131,
        "snip": 0.236,
        "subject_areas": [
          "Information Systems",
          "Biotechnology",
          "Energy (all)",
          "Materials Science (all)",
          "Control and Systems Engineering"
        ],
        "title": "High Technology Letters"
      },
      "publication_date": "2020-03-01",
      "selected": null,
      "title": "Exploring serverless computing for stream analytic",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85083205760&origin=inward"
      ]
    },
    {
      "abstract": "The research community has made significant advances towards realizing self-tuning cloud caches; notwithstanding, existing products still require manual expert tuning to maximize performance. Cloud (software) caches are built to swiftly serve requests; thus, avoiding costly functionality additions not directly related to the request-serving control path is critical. We show that serverless computing cloud services can be leveraged to solve the complex optimization problems that arise during self-tuning loops and can be used to optimize cloud caches for free. To illustrate that our approach is feasible and useful, we implement SPREDS (Self-Partitioning REDiS), a modified version of Redis that optimizes memory management in the multi-instance Redis scenario. A cost analysis shows that the serverless computing approach can lead to significant cost savings: The cost of running the controller as a serverless microservice is 0.85% of the cost of the always-on alternative. Through this case study, we make a strong case for implementing the controller of autonomic systems using a serverless computing approach.",
      "authors": [
        "Boza, Edwin  F.",
        "Andrade, Xavier",
        "Cedeno, Jorge",
        "Murillo, Jorge",
        "Aragon, Harold",
        "Abad, Cristina  L.",
        "Abad, Andres  G."
      ],
      "categories": null,
      "citations": 1,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.3390/computers9010014",
      "keywords": [
        "Self-tuning",
        "Serverless computing",
        "Cloud computing",
        "Autonomic controller"
      ],
      "number_of_pages": null,
      "pages": null,
      "publication": {
        "category": "Journal",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": null,
        "publisher": "Multidisciplinary Digital Publishing Institute",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Computers"
      },
      "publication_date": "2020-03-01",
      "selected": null,
      "title": "On Implementing Autonomic Systems with a Serverless Computing Approach: The Case of Self-Partitioning Cloud Caches",
      "urls": [
        "https://www.mdpi.com/2073-431X/9/1/14/pdf",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85082706073&origin=inward"
      ]
    },
    {
      "abstract": " Serverless computing is an excellent fit for big data processing because it\ncan scale quickly and cheaply to thousands of parallel functions. Existing\nserverless platforms isolate functions in ephemeral, stateless containers,\npreventing them from directly sharing memory. This forces users to duplicate\nand serialise data repeatedly, adding unnecessary performance and resource\ncosts. We believe that a new lightweight isolation approach is needed, which\nsupports sharing memory directly between functions and reduces resource\noverheads. We introduce Faaslets, a new isolation abstraction for high-performance\nserverless computing. Faaslets isolate the memory of executed functions using\nsoftware-fault isolation (SFI), as provided by WebAssembly, while allowing\nmemory regions to be shared between functions in the same address space.\nFaaslets can thus avoid expensive data movement when functions are co-located\non the same machine. Our runtime for Faaslets, Faasm, isolates other resources,\ne.g. CPU and network, using standard Linux cgroups, and provides a low-level\nPOSIX host interface for networking, file system access and dynamic loading. To\nreduce initialisation times, Faasm restores Faaslets from already-initialised\nsnapshots. We compare Faasm to a standard container-based platform and show\nthat, when training a machine learning model, it achieves a 2x speed-up with\n10x less memory; for serving machine learning inference, Faasm doubles the\nthroughput and reduces tail latency by 90%.\n",
      "authors": [
        "Shillaker, Simon",
        "Pietzuch, Peter"
      ],
      "categories": null,
      "citations": 7,
      "comments": null,
      "databases": [
        "arXiv",
        "Scopus"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": 15,
      "pages": "419-433",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781939133144",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings of the 2020 USENIX Annual Technical Conference, ATC 2020"
      },
      "publication_date": "2020-02-21",
      "selected": null,
      "title": "Faasm: Lightweight Isolation for Efficient Stateful Serverless Computing",
      "urls": [
        "https://arxiv.org/pdf/2002.09344",
        "http://arxiv.org/pdf/2002.09344v2",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85091895916&origin=inward",
        "http://arxiv.org/abs/2002.09344v2"
      ]
    },
    {
      "abstract": " We consider distributed optimization problems where forming the Hessian is\ncomputationally challenging and communication is a significant bottleneck. We\ndevelop unbiased parameter averaging methods for randomized second order\noptimization that employ sampling and sketching of the Hessian. Existing works\ndo not take the bias of the estimators into consideration, which limits their\napplication to massively parallel computation. We provide closed-form formulas\nfor regularization parameters and step sizes that provably minimize the bias\nfor sketched Newton directions. We also extend the framework of second order\naveraging methods to introduce an unbiased distributed optimization framework\nfor heterogeneous computing systems with varying worker resources.\nAdditionally, we demonstrate the implications of our theoretical findings via\nlarge scale experiments performed on a serverless computing platform.\n",
      "authors": [
        "Bartan, Burak",
        "Pilanci, Mert"
      ],
      "categories": null,
      "citations": null,
      "comments": null,
      "databases": [
        "arXiv"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": null,
      "publication_date": "2020-02-16",
      "selected": null,
      "title": "Distributed Averaging Methods for Randomized Second Order Optimization",
      "urls": [
        "http://arxiv.org/pdf/2002.06540v1",
        "http://arxiv.org/abs/2002.06540v1",
        "https://arxiv.org/pdf/2002.06540"
      ]
    },
    {
      "abstract": " In this work, we study distributed sketching methods for large scale\nregression problems. We leverage multiple randomized sketches for reducing the\nproblem dimensions as well as preserving privacy and improving straggler\nresilience in asynchronous distributed systems. We derive novel approximation\nguarantees for classical sketching methods and analyze the accuracy of\nparameter averaging for distributed sketches. We consider random matrices\nincluding Gaussian, randomized Hadamard, uniform sampling and leverage score\nsampling in the distributed setting. Moreover, we propose a hybrid approach\ncombining sampling and fast random projections for better computational\nefficiency. We illustrate the performance of distributed sketches in a\nserverless computing platform with large scale experiments.\n",
      "authors": [
        "Bartan, Burak",
        "Pilanci, Mert"
      ],
      "categories": null,
      "citations": null,
      "comments": null,
      "databases": [
        "arXiv"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": null,
      "publication_date": "2020-02-16",
      "selected": null,
      "title": "Distributed Sketching Methods for Privacy Preserving Regression",
      "urls": [
        "http://arxiv.org/pdf/2002.06538v2",
        "http://arxiv.org/abs/2002.06538v2",
        "https://arxiv.org/pdf/2002.06538"
      ]
    },
    {
      "abstract": "Data-driven applications are essential to handle the ever-increasing volume, velocity, and veracity of data generated by sources such as the Web and Internet of Things (IoT) devices. Simultaneously, an event-driven computational paradigm is emerging as the core of modern systems designed for database queries, data analytics, and on-demand applications. Modern big data processing runtimes and asynchronous many task (AMT) systems from high performance computing (HPC) community have adopted dataflow event-driven model. The services are increasingly moving to an event-driven model in the form of Function as a Service (FaaS) to compose services. An event-driven runtime designed for data processing consists of well-understood components such as communication, scheduling, and fault tolerance. Different design choices adopted by these components determine the type of applications a system can support efficiently. We find that modern systems are limited to specific sets of applications because they have been designed with fixed choices that cannot be changed easily. In this paper, we present a loosely coupled component-based design of a big data toolkit where each component can have different implementations to support various applications. Such a polymorphic design would allow services and data analytics to be integrated seamlessly and expand from edge to cloud to HPC environments. \u00c2\u00a9 2019 John Wiley & Sons, Ltd.",
      "authors": [
        "Kamburugamuve, S.",
        "Govindarajan, K.",
        "Wickramasinghe, P.",
        "Abeykoon, V.",
        "Fox, G."
      ],
      "categories": null,
      "citations": 6,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1002/cpe.5189",
      "keywords": [
        "big data",
        "event-driven computing",
        "high performance computing",
        "dataflow"
      ],
      "number_of_pages": null,
      "pages": null,
      "publication": {
        "category": "Journal",
        "cite_score": 3.8,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "15320626",
        "publisher": "John Wiley and Sons Ltd",
        "sjr": 0.309,
        "snip": 0.828,
        "subject_areas": [
          "Computer Networks and Communications",
          "Computational Theory and Mathematics",
          "Software",
          "Theoretical Computer Science",
          "Computer Science Applications"
        ],
        "title": "Concurrency Computation"
      },
      "publication_date": "2020-02-10",
      "selected": null,
      "title": "Twister2: Design of a big data toolkit",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85062487034&origin=inward"
      ]
    },
    {
      "abstract": " This paper describes a working prototype that adapts Lucene, the world's most\npopular and most widely deployed open-source search library, to operate within\na serverless environment in the cloud. Although the serverless search concept\nis not new, this work represents a substantial improvement over a previous\nimplementation in eliminating most custom code and in enabling interactive\nsearch. While there remain limitations to the design, it nevertheless\nchallenges conventional thinking about search architectures for particular\noperating points.\n",
      "authors": [
        "Lin, Jimmy"
      ],
      "categories": null,
      "citations": null,
      "comments": null,
      "databases": [
        "arXiv"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": null,
      "publication_date": "2020-02-04",
      "selected": null,
      "title": "A Prototype of Serverless Lucene",
      "urls": [
        "http://arxiv.org/pdf/2002.01447v1",
        "http://arxiv.org/abs/2002.01447v1",
        "https://arxiv.org/pdf/2002.01447"
      ]
    },
    {
      "abstract": " Swarms of autonomous devices are increasing in ubiquity and size. There are\ntwo main trains of thought for controlling devices in such swarms; centralized\nand distributed control. Centralized platforms achieve higher output quality\nbut result in high network traffic and limited scalability, while decentralized\nsystems are more scalable, but less sophisticated. In this work we present HiveMind, a centralized coordination control platform\nfor IoT swarms that is both scalable and performant. HiveMind leverages a\ncentralized cluster for all resource-intensive computation, deferring\nlightweight and time-critical operations, such as obstacle avoidance to the\nedge devices to reduce network traffic. HiveMind employs an event-driven\nserverless framework to run tasks on the cluster, guarantees fault tolerance\nboth in the edge devices and serverless functions, and handles straggler tasks\nand underperforming devices. We evaluate HiveMind on a swarm of 16 programmable\ndrones on two scenarios; searching for given items, and counting unique people\nin an area. We show that HiveMind achieves better performance and battery\nefficiency compared to fully centralized and fully decentralized platforms,\nwhile also handling load imbalances and failures gracefully, and allowing edge\ndevices to leverage the cluster to collectively improve their output quality.\n",
      "authors": [
        "Hu, Justin",
        "Bruno, Ariana",
        "Ritchken, Brian",
        "Jackson, Brendon",
        "Espinosa, Mateo",
        "Shah, Aditya",
        "Delimitrou, Christina"
      ],
      "categories": null,
      "citations": null,
      "comments": null,
      "databases": [
        "arXiv"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": null,
      "publication_date": "2020-02-04",
      "selected": null,
      "title": "HiveMind: A Scalable and Serverless Coordination Control Platform for UAV Swarms",
      "urls": [
        "https://arxiv.org/pdf/2002.01419",
        "http://arxiv.org/abs/2002.01419v1",
        "http://arxiv.org/pdf/2002.01419v1"
      ]
    },
    {
      "abstract": "In this paper, we propose a framework for the management of the Internet of Things (IoT) devices in a smart building to model services based on the serverless computing paradigm. The deployment of an IoT compatible serverless paradigm consists of a hierarchical structural design across the edge, fog, and cloud computing layers. The fog/edge nodes collect the data generated from various sensors, process the data in the intermediate nodes, and then forward certain data to a cloud for future analysis. The framework consists of a heterogeneous IoT network. We proposed a data distribution algorithm in the framework to make sure management, maintenance and availability of heterogeneous IoT network in the serverless computing paradigm are effective and efficient. The experiments conducted are validated at the developed fog and edge gateways using API mechanism. The response times for an application doing the computation at fog level and at the cloud level are compared. The experimentation shows that latency is less for the fog model as compared to the data sent to the cloud model. \u00c2\u00a9 2001-2012 IEEE.",
      "authors": [
        "Suvajit Sarkar",
        "Rajeev Wankar",
        "Satish Narayana Srirama",
        "Nagender Kumar Suryadevara"
      ],
      "categories": null,
      "citations": 6,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/JSEN.2019.2939182",
      "keywords": [
        "smart building",
        "fog computing",
        "Wireless sensor network",
        "sensing systems",
        "serverless computing"
      ],
      "number_of_pages": 9,
      "pages": "1564-1572",
      "publication": {
        "category": "Journal",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "2379-9153",
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "IEEE Sensors Journal"
      },
      "publication_date": "2020-02-01",
      "selected": null,
      "title": "Serverless Management of Sensing Systems for Fog Computing Framework",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85078546286&origin=inward",
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=8822951"
      ]
    },
    {
      "abstract": " Emergence of cloud computing as the inevitable IT computing paradigm, the perception of the compute reference model and building of services has evolved into new dimensions. Serverless computing is an execution model in which the cloud service provider dynamically manages the allocation of compute resources of the server. The consumer is billed for the actual volume of resources consumed by them, instead paying for the pre-purchased units of compute capacity. This model evolved as a way to achieve optimum cost, minimum configuration overheads, and increases the application's ability to scale in the cloud. The prospective of the serverless compute model is well conceived by the major cloud service providers and reflected in the adoption of serverless computing paradigm. This review paper presents a comprehensive study on serverless computing architecture and also extends an experimentation of the working principle of serverless computing reference model adapted by AWS Lambda. The various research avenues in serverless computing are identified and presented. ",
      "authors": [
        "Arokia Paul Rajan"
      ],
      "categories": null,
      "citations": 3,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.12928/telkomnika.v18i1.12169",
      "keywords": [
        "AWS lambda",
        "cloud computing",
        "Google cloud function",
        "Microsoft Azure function",
        "serverless computing",
        "FaaS"
      ],
      "number_of_pages": 8,
      "pages": "530-537",
      "publication": {
        "category": "Journal",
        "cite_score": 2.2,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "16936930",
        "publisher": "Universitas Ahmad Dahlan",
        "sjr": 0.258,
        "snip": 0.746,
        "subject_areas": [
          "Electrical and Electronic Engineering"
        ],
        "title": "Telkomnika (Telecommunication Computing Electronics and Control)"
      },
      "publication_date": "2020-02-01",
      "selected": null,
      "title": "A review on serverless architectures - function as a service (FaaS) in cloud computing",
      "urls": [
        "http://journal.uad.ac.id/index.php/TELKOMNIKA/article/download/12169/7565",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85079289066&origin=inward"
      ]
    },
    {
      "abstract": "This article introduces an integrated photoplethysmographic (PPG) based cardiovascular monitoring system that consists of an individually portable PPG device for recording photoplethysmographic signals and a software system with a serverless architecture for processing, storing, and analyzing the obtained signals. The portable device uses the optical plethysmography technique for measuring blood volume in blood vessels. The device was tested and validated by a comparative analysis of three photoplethysmographic signals and one Electrocardiographic signal registered simultaneously in the target subject. The comparative analysis of these signals shows insignificant deviations in the obtained results, with the mean squared error between the studied signals being less than 21 ms. This deviation cannot affect the results that were obtained from the analysis of the interval series tested. Based on this result, we assume that the detected signals with the proposed device are realistic. The designed software system processes the registered data, performs preprocessing, determines the pulse rate variability, and performs mathematical analysis of PP intervals. Two groups of subjects were studied: 42 patients with arrhythmia and 40 healthy controls. Mathematical methods for data analysis in time and frequency domain and nonlinear methods (Poincar&eacute; plots, Rescaled Range Plot, Detrended Fluctuation Analysis, and MultiFractal Detrended Fluctuation Analysis) are applied. The obtained results are presented in tabular form and some of them in graphical form. The parameters studied in the time and frequency domain, as well as with the nonlinear methods, have statistical significance (p &lt; 0.05) and they can distinguish between the two studied groups. Visual analysis of PP intervals, based on Poincare&rsquo;s nonlinear method, provides important information on the physiological status of patients, allowing for one to see at a glance the entire PP interval series and quickly detect cardiovascular disorders, if any. The photoplethysmographic data of healthy individuals and patients diagnosed with arrhythmia were recorded, processed, and examined through the system under the guidance of a cardiologist. The results were analyzed and it was concluded that this system could serve to monitor patients with cardiovascular diseases and, when the condition worsens, a signal could be generated and sent to the hospital for undertaking immediate measures to stabilize patient&rsquo;s health.",
      "authors": [
        "Georgieva-Tsaneva, Galya",
        "Gospodinova, Evgeniya",
        "Gospodinov, Mitko",
        "Cheshmedzhiev, Krasimir"
      ],
      "categories": null,
      "citations": 4,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.3390/app10031051",
      "keywords": [
        "Pulse rate variability",
        "Cardiovascular diseases",
        "Serverless architecture",
        "Health monitoring system",
        "PPG device",
        "Photoplethysmography"
      ],
      "number_of_pages": null,
      "pages": null,
      "publication": {
        "category": "Journal",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": null,
        "publisher": "Multidisciplinary Digital Publishing Institute",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Applied Sciences (Switzerland)"
      },
      "publication_date": "2020-02-01",
      "selected": null,
      "title": "Portable Sensor System for Registration, Processing and Mathematical Analysis of PPG Signals",
      "urls": [
        "https://www.mdpi.com/2076-3417/10/3/1051/pdf",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85081611933&origin=inward"
      ]
    },
    {
      "abstract": "Energy consumption is a relevant matter in the design of IoT applications. Edge units&mdash;sensors and actuators&mdash;save energy by operating intermittently. When idle, they suspend their operation, losing the content of the onboard memory. Their internal state, needed to resume their work, is recorded on external storage: in the end, their internal operation is stateless. The backend infrastructure does not follow the same design principle: concentrators, routers, and servers are always-on devices that frustrate the energy-saving operation of edge devices. In this paper, we show how serverless functions, asynchronously invoked by the stateless edge devices, are an energy-saving option. We introduce a basic model for system operation and energy footprint evaluation. To demonstrate its soundness, we study a simple use case, from the design to a prototype.",
      "authors": [
        "Ciuffoletti, Augusto"
      ],
      "categories": null,
      "citations": 1,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.3390/info11020085",
      "keywords": [
        "Asynchronous computation",
        "Internet of things",
        "Serverless application",
        "Power consumption"
      ],
      "number_of_pages": null,
      "pages": null,
      "publication": {
        "category": "Journal",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": null,
        "publisher": "Multidisciplinary Digital Publishing Institute",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Information (Switzerland)"
      },
      "publication_date": "2020-02-01",
      "selected": null,
      "title": "Stateless IoT",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85081138569&origin=inward",
        "https://www.mdpi.com/2078-2489/11/2/85/pdf"
      ]
    },
    {
      "abstract": " Internet-scale web applications are becoming increasingly storage-intensive\nand rely heavily on in-memory object caching to attain required I/O\nperformance. We argue that the emerging serverless computing paradigm provides\na well-suited, cost-effective platform for object caching. We present\nInfiniCache, a first-of-its-kind in-memory object caching system that is\ncompletely built and deployed atop ephemeral serverless functions. InfiniCache\nexploits and orchestrates serverless functions' memory resources to enable\nelastic pay-per-use caching. InfiniCache's design combines erasure coding,\nintelligent billed duration control, and an efficient data backup mechanism to\nmaximize data availability and cost-effectiveness while balancing the risk of\nlosing cached state and performance. We implement InfiniCache on AWS Lambda and\nshow that it: (1) achieves 31 -- 96X tenant-side cost savings compared to AWS\nElastiCache for a large-object-only production workload, (2) can effectively\nprovide 95.4% data availability for each one hour window, and (3) enables\ncomparative performance seen in a typical in-memory cache.\n",
      "authors": [
        "Wang, Ao",
        "Zhang, Jingyuan",
        "Ma, Xiaolong",
        "Anwar, Ali",
        "Rupprecht, Lukas",
        "Skourtis, Dimitrios",
        "Tarasov, Vasily",
        "Yan, Feng",
        "Cheng, Yue"
      ],
      "categories": null,
      "citations": 3,
      "comments": "This is the preprint version of a paper published in USENIX FAST 2020",
      "databases": [
        "arXiv",
        "Scopus"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": 15,
      "pages": "267-281",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781939133120",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings of the 18th USENIX Conference on File and Storage Technologies, FAST 2020"
      },
      "publication_date": "2020-01-28",
      "selected": null,
      "title": "InfiniCache: Exploiting Ephemeral Serverless Functions to Build a Cost-Effective Memory Cache",
      "urls": [
        "http://arxiv.org/pdf/2001.10483v1",
        "http://arxiv.org/abs/2001.10483v1",
        "https://arxiv.org/pdf/2001.10483",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85091838822&origin=inward"
      ]
    },
    {
      "abstract": " Inexpensive cloud services, such as serverless computing, are often\nvulnerable to straggling nodes that increase end-to-end latency for distributed\ncomputation. We propose and implement simple yet principled approaches for\nstraggler mitigation in serverless systems for matrix multiplication and\nevaluate them on several common applications from machine learning and\nhigh-performance computing. The proposed schemes are inspired by\nerror-correcting codes and employ parallel encoding and decoding over the data\nstored in the cloud using serverless workers. This creates a fully distributed\ncomputing framework without using a master node to conduct encoding or\ndecoding, which removes the computation, communication and storage bottleneck\nat the master. On the theory side, we establish that our proposed scheme is\nasymptotically optimal in terms of decoding time and provide a lower bound on\nthe number of stragglers it can tolerate with high probability. Through\nextensive experiments, we show that our scheme outperforms existing schemes\nsuch as speculative execution and other coding theoretic methods by at least\n25%.\n",
      "authors": [
        "Gupta, Vipul",
        "Carrano, Dominic",
        "Yang, Yaoqing",
        "Shankar, Vaishaal",
        "Courtade, Thomas",
        "Ramchandran, Kannan"
      ],
      "categories": null,
      "citations": null,
      "comments": null,
      "databases": [
        "arXiv"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": null,
      "publication_date": "2020-01-21",
      "selected": null,
      "title": "Serverless Straggler Mitigation using Local Error-Correcting Codes",
      "urls": [
        "http://arxiv.org/abs/2001.07490v1",
        "http://arxiv.org/pdf/2001.07490v1",
        "https://arxiv.org/pdf/2001.07490"
      ]
    },
    {
      "abstract": " The pivotal key to the success of manufacturing enterprises is a sustainable\nand innovative product design and development. In collaborative design,\nstakeholders are heterogeneously distributed chain-like. Due to the growing\nvolume of data and knowledge, effective management of the knowledge acquired in\nthe product design and development is one of the key challenges facing most\nmanufacturing enterprises. Opportunities for improving efficiency and\nperformance of IT-based product design applications through centralization of\nresources such as knowledge and computation have increased in the last few\nyears with the maturation of technologies such as SOA, virtualization, grid\ncomputing, and/or cloud computing. The main focus of this paper is the concept\nof ongoing research in providing the knowledge integration service for\ncollaborative product design and development using cloud computing\ninfrastructure. Potentials of the cloud computing to support the Knowledge\nintegration functionalities as a Service by providing functionalities such as\nknowledge mapping, merging, searching, and transferring in product design\nprocedure are described in this paper. Proposed knowledge integration services\nsupport users by giving real-time access to knowledge resources. The framework\nhas the advantage of availability, efficiency, cost reduction, less time to\nresult, and scalability.\n",
      "authors": [
        "Bohlouli, Mahdi",
        "Holland, Alexander",
        "Fathi, Madjid"
      ],
      "categories": null,
      "citations": null,
      "comments": null,
      "databases": [
        "arXiv"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": null,
      "publication_date": "2020-01-16",
      "selected": null,
      "title": "Knowledge Integration of Collaborative Product Design Using Cloud Computing Infrastructure",
      "urls": [
        "http://arxiv.org/abs/2001.09796v1",
        "https://arxiv.org/pdf/2001.09796",
        "http://arxiv.org/pdf/2001.09796v1"
      ]
    },
    {
      "abstract": "Function-as-a-Service (FaaS) platforms and \"serverless\" cloud computing are becoming increasingly popular due to ease-of-use and operational simplicity. Current FaaS oerings are targeted at stateless functions that do minimal I/O and communication. We argue that the benets of serverless computing can be extended to a broader range of applications and algorithms while maintaining the key benets of existing FaaS oerings. We present the design and implementation of Cloudburst, a stateful FaaS platform that provides familiar Python programming with low-latency mutable state and communication, while maintaining the autoscaling benets of serverless computing. Cloudburst accomplishes this by leveraging Anna, an autoscaling key-value store, for state sharing and overlay routing combined with mutable caches co-located with function executors for data locality. Performant cache consistency emerges as a key challenge in this architecture. To this end, Cloudburst provides a combination of lattice-encapsulated state and new denitions and protocols for distributed session consistency. Empirical results on benchmarks and diverse applications show that Cloudburst makes stateful functions practical, reducing the state-management overheads of current FaaS platforms by orders of magnitude while also improving the state of the art in serverless consistency. \u00c2\u00a9 2020, VLDB Endowment.",
      "authors": [
        "Vikram Sreekanti",
        "Chenggang Wu",
        "Xiayue Charles Lin",
        "Johann Schleier-Smith",
        "Jose M. Faleiro",
        "Joseph E. Gonzalez",
        "Joseph M. Hellerstein",
        "Alexey Tumanov"
      ],
      "categories": null,
      "citations": 7,
      "comments": null,
      "databases": [
        "arXiv",
        "Scopus"
      ],
      "doi": "10.14778/3407790.3407836",
      "keywords": [],
      "number_of_pages": 15,
      "pages": "2438-2452",
      "publication": {
        "category": "Journal",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [
          "Distributed, Parallel, and Cluster Computing"
        ],
        "title": "Proceedings of the VLDB Endowment"
      },
      "publication_date": "2020-01-14",
      "selected": null,
      "title": "Cloudburst: Stateful Functions-as-a-Service",
      "urls": [
        "http://dx.doi.org/10.14778/3407790.3407836",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85091067090&origin=inward",
        "http://arxiv.org/abs/2001.04592v3",
        "http://arxiv.org/pdf/2001.04592v3"
      ]
    },
    {
      "abstract": "Serverless computing has gained a significant traction in recent times because of its simplicity of development, deployment and fine-grained billing. However, while implementing complex services comprising databases, file stores, or more than one serverless function, the performance in terms of latency of serving requests often degrades severely. In this work, we analyze different serverless architectures with AWS Lambda services and compare their performance in terms of latency with a traditional virtual machine (VM) based approach. We observe that database access latency in serverless architecture is almost 14 times than that in VM based setup. Further, we introduce some caching strategies which can improve the response time significantly, and compare their performance. \u00c2\u00a9 2020 IEEE.",
      "authors": [
        "Bishakh Chandra Ghosh",
        "Sourav Kanti Addya",
        "Nishant Baranwal Somy",
        "Shubha Brata Nath",
        "Sandip Chakraborty",
        "Soumya K Ghosh"
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/COMSNETS48256.2020.9027427",
      "keywords": [
        "Serverless Computing",
        "FaaS",
        "Response Time",
        "Cloud Computing"
      ],
      "number_of_pages": 4,
      "pages": "666-669",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-7281-3188-7",
        "issn": "2155-2487",
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "2019 11th International Conference on Communication Systems and Networks, COMSNETS 2019"
      },
      "publication_date": "2020-01-07",
      "selected": null,
      "title": "Caching Techniques to Improve Latency in Serverless Architectures",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85082168832&origin=inward",
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9027427"
      ]
    },
    {
      "abstract": "Serverless computing manifests as the FaaS offering where clients submit code to be managed and run by the service provider in the place of hiring and managing VMs for this purpose. Multiple Cloud Service providers have come up with their own implementations of FaaS infrastructure providing end-users with a multitude of choices. Each such platform provides a non-overlapping set of features which satisfies a subset of users. Further the design of the platform dictates the performance overheads of triggering the function. A tool that automates capturing how a function behaves under different configurations of a platform and across platforms will, therefore, be useful for end-users intending to deploy applications as a collection of FaaS units. In spite of the presence of a few benchmarking tools for FaaS offerings, they lack the comprehensive breadth required to understand the performance aspects of the design choices made by the end-users. Most tools focus on tuning resource parameters like memory, CPU requirements and measure metrics like execution time. They lack the option to measure the effects of features such as function chaining and choice of function triggers. We present PanOpticon - a tool that automates the deployment of FaaS applications on different platforms under a set of tunable configuration choices and presents the users with performance measurements for each configuration and platform. \u00c2\u00a9 2020 IEEE.",
      "authors": [
        "Nikhila Somu",
        "Nilanjan Daw",
        "Umesh Bellur",
        "Purushottam Kulkarni"
      ],
      "categories": null,
      "citations": 2,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/COMSNETS48256.2020.9027346",
      "keywords": [
        "serverless computing",
        "automation",
        "cross-platform",
        "benchmarking"
      ],
      "number_of_pages": 8,
      "pages": "144-151",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-7281-3188-7",
        "issn": "2155-2487",
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "2019 11th International Conference on Communication Systems and Networks, COMSNETS 2019"
      },
      "publication_date": "2020-01-07",
      "selected": null,
      "title": "PanOpticon: A Comprehensive Benchmarking Tool for Serverless Applications",
      "urls": [
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9027346",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85082167495&origin=inward"
      ]
    },
    {
      "abstract": "Big Data analytics is a crucial part of today's internet world and specifically analyzing the data for the multi-tenant systems connected over the internet which produces a huge amount of multi-structured data. This paper describes the multi-tenant data analytics over the serverless cloud platform mainly Amazon Web Service (AWS). We perform big data analytics on the two different types of applications. One produces static data and the other produces real-time dynamic data. Then we analyze the performance of the big data under the constraints of time, data traffic and size of the data. \u00c2\u00a9 2020 IEEE.",
      "authors": [
        "Vinay Khedekar",
        "Yun Tian"
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/CCWC47524.2020.9031133",
      "keywords": [
        "Bigdata",
        "Amazon Web Services (AWS)",
        "Serverless cloud computing",
        "Multitenancy"
      ],
      "number_of_pages": 7,
      "pages": "0647-0653",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-7281-3784-1",
        "issn": null,
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "2020 10th Annual Computing and Communication Workshop and Conference, CCWC 2020"
      },
      "publication_date": "2020-01-06",
      "selected": null,
      "title": "Multi-Tenant Big Data Analytics on AWS Cloud Platform",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85083077422&origin=inward",
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9031133"
      ]
    },
    {
      "abstract": "Smart doorbells have been playing an important role in protecting our modern homes. Existing approaches of sending video streams to a centralized server (or Cloud) for video analytics have been facing many challenges such as latency, bandwidth cost and more importantly users' privacy concerns. To address these challenges, this paper showcases the ability of an intelligent smart doorbell based on Federated Deep Learning, which can deploy and manage video analytics applications such as a smart doorbell across Edge and Cloud resources. This platform can scale, work with multiple devices, seamlessly manage online orchestration of the application components. The proposed framework is implemented using state-of-the-art technology. We implement the Federated Server using the Flask framework, containerized using Nginx and Gunicorn, which is deployed on AWS EC2 and AWS Serverless architecture. \u00c2\u00a9 2021 Owner/Author.",
      "authors": [
        "Patel, V.",
        "Kanani, S.",
        "Pathak, T.",
        "Patel, P.",
        "Ali, M.I.",
        "Breslin, J."
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1145/3430984.3430988",
      "keywords": [
        "Machine Learning",
        "Federated Learning",
        "Video Analytics",
        "Deep Learning",
        "Internet of Things",
        "Privacy",
        "Artificial Intelligence",
        "Security"
      ],
      "number_of_pages": 5,
      "pages": "380-384",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450388177",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "ACM International Conference Proceeding Series"
      },
      "publication_date": "2020-01-02",
      "selected": null,
      "title": "An Intelligent Doorbell Design Using Federated Deep Learning",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85098878656&origin=inward"
      ]
    },
    {
      "abstract": "In recent years, agriculture has faced many challenges, from a growing global population to be fed, the work power evasion in the sector, to sustainability requirements and environmental constraints. To satisfy the increasingly demanding stakeholders, the agricultural sector has looked for new ways to tackle these issues. In this context, Information and Communications Technologies (ICTs) have been applied to help the agricultural sector overcome these challenges. This article investigates how two ICTs - connectivity and cloud computing - can leverage and traverse other ICTs, such as Internet of Things and artificial intelligence, enabling the entire productive sector to be supported by decision-making systems, which in turn are based on data-driven models. Moreover, a successful case study on how cloud computing has helped one of SiDi\u00e2\u0080\u0099s biggest customers - a global company - improve its operational performance by obtaining insights from its data is presented. \u00c2\u00a9 2020. All rights reserved.",
      "authors": [
        "Simionato, R.",
        "Neto, J.R.T.",
        "dos Santos, C.J.",
        "Ribeiro, B.S.",
        "de Ara\u00c3\u00bajo, F.C.B.",
        "de Paula, A.R.",
        "de Lima Oliveira, P.A.",
        "Fernandes, P.S.",
        "Yi, J.H."
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.5935/1806-6690.20200085",
      "keywords": [
        "Data analysis",
        "Serverless",
        "Telecommunication",
        "Data lake",
        "Internet of Things"
      ],
      "number_of_pages": 19,
      "pages": "1-19",
      "publication": {
        "category": "Journal",
        "cite_score": 1.9,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "00456888",
        "publisher": "Universidade Federal do Ceara",
        "sjr": 0.424,
        "snip": 1.078,
        "subject_areas": [
          "Soil Science",
          "Horticulture",
          "Agronomy and Crop Science"
        ],
        "title": "Revista Ciencia Agronomica"
      },
      "publication_date": "2020-01-01",
      "selected": null,
      "title": "Survey on connectivity and cloud computing technologies: State-ofthe-art applied to Agriculture 4.0",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85100710954&origin=inward"
      ]
    },
    {
      "abstract": "Analytical performance models have been leveraged extensively to analyze and improve the performance and cost of various cloud computing services. However, in the case of serverless computing, which is projected to be the dominant form of cloud computing, we have not seen analytical performance models to help with the analysis and optimization of such platforms. In this work, we propose an analytical performance model that captures the unique details of serverless platforms. The model can be leveraged to improve the quality of service and resource utilization and reduce the operational cost of serverless platforms. Also, the proposed performance model provides a framework that enables serverless platforms to become workload-aware and operate differently for different workloads to provide a better trade-off between the cost and performance depending on the user's preferences. We validate the applicability and accuracy of the proposed model by extensive experimentation on AWS Lambda. We show that the proposed model can calculate essential performance metrics like average response time, probability of cold start, and the average number of function instances in steady-state. Also, the performance model can be used to tune the platform for each workload resulting in better performance or lower cost without scarifying the other.",
      "authors": [
        "Nima Mahmoudi",
        "Hamzeh Khazaei"
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "IEEE"
      ],
      "doi": "10.1109/TCC.2020.3033373",
      "keywords": [
        "Stochastic Processes",
        "Serverless Computing",
        "Performance Modeling",
        "Queuing Theory",
        "Optimization"
      ],
      "number_of_pages": 1,
      "pages": "1-1",
      "publication": {
        "category": "Journal",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "2372-0018",
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "IEEE Transactions on Cloud Computing"
      },
      "publication_date": "2020-01-01",
      "selected": null,
      "title": "Performance Modeling of Serverless Computing Platforms",
      "urls": [
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9238484"
      ]
    },
    {
      "abstract": "Function as a Service is a popular trend in the area of cloud computing and also for IoT use cases. Thus, in addition to cloud services, installable open source platforms for FaaS have recently...",
      "authors": [
        "Mike Prechtl",
        "Robin Lichtenth\u00e4ler",
        "Guido Wirtz"
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1007/978-3-030-64846-6_7",
      "keywords": [
        "Function as a Service",
        "Security",
        "FaaS platform",
        "Comparison"
      ],
      "number_of_pages": 20,
      "pages": "107-126",
      "publication": {
        "category": "Book",
        "cite_score": 0.8,
        "is_potentially_predatory": false,
        "isbn": "9783030719050",
        "issn": "18650929",
        "publisher": "Springer Verlag",
        "sjr": 0.16,
        "snip": 0.32,
        "subject_areas": [
          "Mathematics (all)",
          "Computer Science (all)"
        ],
        "title": "International Conference on Software Process Improvement and Capability Determination"
      },
      "publication_date": "2020-01-01",
      "selected": null,
      "title": "Investigating Possibilites for Protecting and Hardening Installable FaaS Platforms",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85097821763&origin=inward",
        "https://link.springer.com/content/pdf/10.1007%2F978-3-030-64846-6_7.pdf"
      ]
    },
    {
      "abstract": "The post-pandemic future will offer tremendous opportunity and challenge from transformation of the human experience linking physical, digital and biological worlds: 6G should be based on a new architecture to fully realize the vision to connect the worlds. We explore several novel architecture concepts for the 6G era driven by a decomposition of the architecture into platform, functions, orchestration and specialization aspects. With 6G, we associate an open, scalable, elastic, and platform agnostic het-cloud, with converged applications and services decomposed into micro-services and serverless functions, specialized architecture for extreme attributes, as well as open service orchestration architecture. Key attributes and characteristics of the associated architectural scenarios are described. At the air-interface level, 6G is expected to encompass use of sub-Terahertz spectrum and new spectrum sharing technologies, air-interface design optimized by AI/ML techniques, integration of radio sensing with communication, and meeting extreme requirements on latency, reliability and synchronization. Fully realizing the benefits of these advances in radio technology will also call for innovations in 6G network architecture as described. \u00c2\u00a9 2020 Institute of Electrical and Electronics Engineers Inc.. All rights reserved.",
      "authors": [
        "Volker Ziegler",
        "Harish Viswanathan",
        "Hannu Flinck",
        "Marco Hoffmann",
        "Vilho R\u00e4is\u00e4nen",
        "Kimmo H\u00e4t\u00f6nen"
      ],
      "categories": null,
      "citations": 3,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/ACCESS.2020.3025032",
      "keywords": [
        "architecture",
        "convergence",
        "wireless networks",
        "orchestration",
        "6G",
        "sub-networks",
        "B5G",
        "cellular communication"
      ],
      "number_of_pages": 13,
      "pages": "173508-173520",
      "publication": {
        "category": "Journal",
        "cite_score": 4.8,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "2169-3536",
        "publisher": "Institute of Electrical and Electronics Engineers Inc.",
        "sjr": 0.587,
        "snip": 1.421,
        "subject_areas": [
          "Engineering (all)",
          "Computer Science (all)",
          "Materials Science (all)"
        ],
        "title": "IEEE Access"
      },
      "publication_date": "2020-01-01",
      "selected": null,
      "title": "6G Architecture to Connect the Worlds",
      "urls": [
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9200631",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85100365210&origin=inward"
      ]
    },
    {
      "abstract": "IoT-enabled applications, such as cloud manufacturing, guided water quality or air quality analysis, energy-conscious societal applications, and smart agricultural economics, are designed using a blend of high-end computing technologies, such as cloud, edge, and fog. Smart cities and governmental authorities keep a keen eye out for implementing IoT applications in an automated/decentralized approach with enhanced security measures so that tens of thousands of users, including entrepreneurs, are benefited. Existing IoT architectures are prone to energy inefficiency or resource underutilization problems due to the avoidance of apt technologies, such as serverless computing. This article proposes to set forth a serverless blockchain-enabled IoT architecture for societal applications. It explores the existing IoT architectures and pinpoints the advantages of applying serverless blockchains on IoT architectures. In addition, the proposed IoT architecture is illustrated with a specific use case of IoT societal applications namely air quality monitoring for smart cities (AQMS). This article discloses how air quality sensor data from defective industries were securely transacted to blockchain networks surpassing from the three levels of computing namely edge, fog, and cloud while utilizing serverless and server-oriented functions. In addition, this article exposes a list of the most potent serverless functions that assist AQMS IoT societal applications in detail. The IoT architecture, discussed in this article, will enable innovations and research works for IoT developers and researchers. \u00c2\u00a9 2014 IEEE.",
      "authors": [
        "Shajulin Benedict"
      ],
      "categories": null,
      "citations": 2,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/TCSS.2020.3008995",
      "keywords": [
        "IoT",
        "decentralized services",
        "cloud computing",
        "Blockchain",
        "societal applications"
      ],
      "number_of_pages": 13,
      "pages": "1146-1158",
      "publication": {
        "category": "Journal",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "2373-7476",
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "IEEE Transactions on Computational Social Systems"
      },
      "publication_date": "2020-01-01",
      "selected": null,
      "title": "Serverless Blockchain-Enabled Architecture for IoT Societal Applications",
      "urls": [
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9149700",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85089287117&origin=inward"
      ]
    },
    {
      "abstract": "Federated learning (FL) is emerging as a new paradigm to train machine learning (ML) models in distributed systems. Rather than sharing and disclosing the training data set with the server, the model parameters (e.g., neural networks' weights and biases) are optimized collectively by large populations of interconnected devices, acting as local learners. FL can be applied to power-constrained Internet of Things (IoT) devices with slow and sporadic connections. In addition, it does not need data to be exported to third parties, preserving privacy. Despite these benefits, a main limit of existing approaches is the centralized optimization which relies on a server for aggregation and fusion of local parameters; this has the drawback of a single point of failure and scaling issues for increasing network size. This article proposes a fully distributed (or serverless) learning approach: the proposed FL algorithms leverage the cooperation of devices that perform data operations inside the network by iterating local computations and mutual interactions via consensus-based methods. The approach lays the groundwork for integration of FL within 5G and beyond networks characterized by decentralized connectivity and computing, with intelligence distributed over the end devices. The proposed methodology is verified by the experimental data sets collected inside an Industrial IoT (IIoT) environment. \u00c2\u00a9 2014 IEEE.",
      "authors": [
        "Stefano Savazzi",
        "Monica Nicoli",
        "Vittorio Rampa"
      ],
      "categories": null,
      "citations": 26,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/JIOT.2020.2964162",
      "keywords": [
        "federated learning",
        "5G and beyond networks",
        "distributed signal processing",
        "internet of Things"
      ],
      "number_of_pages": 14,
      "pages": "4641-4654",
      "publication": {
        "category": "Journal",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "2372-2541",
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "IEEE Internet of Things Journal"
      },
      "publication_date": "2020-01-01",
      "selected": null,
      "title": "Federated Learning With Cooperating Devices: A Consensus Approach for Massive IoT Networks",
      "urls": [
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=8950073",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85084918144&origin=inward"
      ]
    },
    {
      "abstract": "The proceedings contain 22 papers. The topics discussed include: a cloud gaming framework for dynamic graphical rendering towards achieving distributed game engines; towards supporting millions of users in modifiable virtual environments by redesigning minecraft-like games as serverless systems; AI4DL: mining behaviors of deep learning workloads for resource management; Spotnik: designing distributed machine learning for transient cloud resources; model-switching: dealing with fluctuating workloads in machine-learning-as-a-service systems; towards GPU utilization prediction for cloud deep learning; serverless boom or bust? an analysis of economic incentives; no reservations: a first look at Amazon\u00e2\u0080\u0099s reserved instance marketplace; and auto-sizing for stream processing applications at LinkedIn.",
      "authors": [],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "HotCloud 2020 - 12th USENIX Workshop on Hot Topics in Cloud Computing, co-located with USENIX ATC 2020"
      },
      "publication_date": "2020-01-01",
      "selected": null,
      "title": "HotCloud 2020 - 12th USENIX Workshop on Hot Topics in Cloud Computing, co-located with USENIX ATC 2020",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85091942680&origin=inward"
      ]
    },
    {
      "abstract": "The proceedings contain 107 papers. The special focus in this conference is on Computer Science and its Applications. The topics include: QoE Unfairness in Dynamic Adaptive Streaming over HTTP; Interference-Aware Routing for Multi-hop Energy-Constrained Wireless Network with SWIPT; Developing Interactive Planning Methodology for EPC Projects; movie Recommendation System Using Social Network Analysis and k-Nearest Neighbor; a Framework for Learning the Pricing Model of Sensing Tasks in Crowdphotographing; tensor Decomposition Based Electrical Data Recovery; compressing Deep Neural Network; dynamic Projection Mapping Using Kinect-Based Skeleton Tracking; Parallel Bidirectional Shortest Path Computation in Graphs Using Relational Database Management Systems (RDBMSs); authoring Tool for Generating Multiple Experiences of 360\u00c2\u00b0 Virtual Reality; a Study of Open Big-Data Platform Architecture for Housing Market Analysis; resource-Aware Migration Scheme for QoS in Cloud Datacenter; A Dynamic FPGA Reconfiguration for Accelerating Machine Learning Framework with Image Service in OpenStack; Switchless Interconnect Network with PCIe Non-Transparent Bridge Interface; a Proposal of IoT Message-Oriented Service Framework for Serverless Software Architecture; deep Learning Based Gesture Recognition System for Immersive Broadcasting Production; mid-Level Feature Extractor for Transfer Learning to Small-Scale Dataset of Medical Images; design and Implementation of an Efficient Web Crawling Using Neural Network; An Intuitive VR Interaction Method for Immersive Virtual Reality; design and Implementation of a Partial Denoising Boundary Matching System Using Indexing Techniques; singing Lip Sync Animation System Using Audio Spectrum; a Tamper-Proof Digital Archiving Scheme Based on Blockchain; differential Data Processing for Energy Efficiency of Wireless Sensor Networks; implementation of Automatic Adjustment of Font Size System on Smartphone.",
      "authors": [],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": {
        "category": "Book",
        "cite_score": 0.5,
        "is_potentially_predatory": false,
        "isbn": "9789813369764",
        "issn": "18761100",
        "publisher": "Springer Verlag",
        "sjr": 0.134,
        "snip": 0.204,
        "subject_areas": [
          "Industrial and Manufacturing Engineering"
        ],
        "title": "Lecture Notes in Electrical Engineering"
      },
      "publication_date": "2020-01-01",
      "selected": null,
      "title": "10th International Conference on Computer Science and its Applications, CSA 2018 and the 13th KIPS International Conference on Ubiquitous Information Technologies and Applications, CUTE 2018",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85076839075&origin=inward"
      ]
    },
    {
      "abstract": "The proceedings contain 32 papers. The special focus in this conference is on Agile Software Development. The topics include: Evaluation of agile team work quality; a systematic approach to agile development in highly regulated environments; diminuendo! tactics in support of faas migrations; predictable performance for qos-sensitive, scalable, multi-tenant function-as-a-service deployments; on the use of web assembly in a serverless context; agile transformation: How employees experience and cope with transformative change; strategy-focused agile transformation: A case study; shifting conceptualization of control in agile transformations; it\u00e2\u0080\u0099s not easy being agile: Unpacking paradoxes in agile environments; towards specific software engineering practices for early-stage startups; improving agility by managing shared libraries in microservices; certification as a service; dependencies of agile teams \u00e2\u0080\u0093 an analysis of the scaled agile framework; understanding work practices of autonomous agile teams: A social-psychological review; spotify tailoring for architectural governance; enabling team autonomy in a large public organization; defining testops: Collaborative behaviors and technology-driven workflows seen as enablers of effective software testing in devops; investigating agile adoption in saudi arabian mobile application development; crowd agile model for effective software development; continuous information monitoring in software startups; api utilization and monetization in finnish industries; is it possible to apply agile methods to contribute to the linux kernel?; forming and assessing student teams in software engineering courses; covid-19\u00e2\u0080\u0099s influence on the future of agile; ico crowdfunding: Incentives, pricing strategy, token strategy and crowd involvement; what key aspects do icos reveal about their businesses?; operationalizing agile methods: Examining coherence in large-scale agile transformations.",
      "authors": [],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": {
        "category": "Book",
        "cite_score": 1.5,
        "is_potentially_predatory": false,
        "isbn": "9783030588571",
        "issn": "18651348",
        "publisher": "Springer Verlag",
        "sjr": 0.214,
        "snip": 0.493,
        "subject_areas": [
          "Information Systems and Management",
          "Information Systems",
          "Business and International Management",
          "Management Information Systems",
          "Modeling and Simulation",
          "Control and Systems Engineering"
        ],
        "title": "International Conference on Business Information Systems"
      },
      "publication_date": "2020-01-01",
      "selected": null,
      "title": "21st International Conference on Agile Software Development,XP 2020",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85092199916&origin=inward"
      ]
    },
    {
      "abstract": "The proceedings contain 63 papers. The special focus in this conference is on Parallel and Distributed Computing. The topics include: mF2C: The Evolution of Cloud Computing Towards an Open and Coordinated Ecosystem of Fogs and Clouds; academic Achievement Recognition and Verification Using Blockchain; crypto-Trading. Rechargeable Token-Based Smart Energy Market Enabled by Blockchain and IoT Technology; ethereum Transaction Performance Evaluation Using Test-Nets; blockchain-Based Trusted Cross-organizational Deliveries of Sensor-Equipped Parcels; towards a Trusted Support Platform for the Job Placement Task; blockchain Materialization as a General Purpose Technology: A Research Framework; on Refining Design Patterns for Smart Contracts; dataRaceOnAccelerator \u00e2\u0080\u0093 A Micro-benchmark Suite for Evaluating Correctness Tools Targeting Accelerators; Adaptive Crown Scheduling for Streaming Tasks on Many-Core Systems with Discrete DVFS; application Topology Definition and Tasks Mapping for Efficient Use of Heterogeneous Resources; Toward Heterogeneous MPI+MPI Programming: Comparison of OpenMP and MPI Shared Memory Models; multicore Performance Prediction \u00e2\u0080\u0093 Comparing Three Recent Approaches in a Case Study; exploiting Historical Data: Pruning Autotuning Spaces and Estimating the Number of Tuning Steps; advancing Automatic Code Generation for Agent-Based Simulations on Heterogeneous Hardware; Optimization of Data-Parallel Applications on Heterogeneous HPC Platforms for Dynamic Energy Through Workload Distribution; search-Based Scheduling for Parallel Tasks on Heterogeneous Platforms; adaptation of Workflow Application Scheduling Algorithm to Serverless Infrastructure; CCAMP: OpenMP and OpenACC Interoperable Framework; HPC Requirements of High-Fidelity Flow Simulations for Aerodynamic Applications; minimizing Self-adaptation Overhead in Parallel Stream Processing for Multi-cores; data-Adapted Parallel Merge Sort; In Situ Visualization of Performance-Related Data in Parallel CFD Applications; time-Based Consensus.",
      "authors": [],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": {
        "category": "Book",
        "cite_score": 1.8,
        "is_potentially_predatory": false,
        "isbn": "9783030715922",
        "issn": "03029743",
        "publisher": "Springer Verlag",
        "sjr": 0.249,
        "snip": 0.628,
        "subject_areas": [
          "Databases",
          "Cryptography and Security",
          "Distributed, Parallel, and Cluster Computing",
          "Theoretical Computer Science",
          "Computer Science (all)"
        ],
        "title": "IFIP International Conference on Distributed Applications and\n  Interoperable Systems, DAIS 2017: Distributed Applications and Interoperable\n  Systems pp 83-98"
      },
      "publication_date": "2020-01-01",
      "selected": null,
      "title": "25th International European Conference on Parallel and Distributed Computing, EuroPar 2019",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85086267273&origin=inward"
      ]
    },
    {
      "abstract": "We present new operational semantics for serverless computing that model the event-driven relationships between serverless functions, as well as their interaction with platform services such as...",
      "authors": [
        "Matthew Obetz",
        "Anirban Das",
        "Timothy Castiglia",
        "Stacy Patterson",
        "Ana Milanova"
      ],
      "categories": null,
      "citations": 2,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1007/978-3-030-44769-4_2",
      "keywords": [
        "Call graph",
        "Formal semantics",
        "Serverless computing"
      ],
      "number_of_pages": 11,
      "pages": "19-29",
      "publication": {
        "category": "Book",
        "cite_score": 1.8,
        "is_potentially_predatory": false,
        "isbn": "9783030715922",
        "issn": "03029743",
        "publisher": "Springer Verlag",
        "sjr": 0.249,
        "snip": 0.628,
        "subject_areas": [
          "Databases",
          "Cryptography and Security",
          "Distributed, Parallel, and Cluster Computing",
          "Theoretical Computer Science",
          "Computer Science (all)"
        ],
        "title": "IFIP International Conference on Distributed Applications and\n  Interoperable Systems, DAIS 2017: Distributed Applications and Interoperable\n  Systems pp 83-98"
      },
      "publication_date": "2020-01-01",
      "selected": null,
      "title": "Formalizing Event-Driven Behavior of Serverless Applications",
      "urls": [
        "https://link.springer.com/content/pdf/10.1007%2F978-3-030-44769-4_2.pdf",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85085730864&origin=inward"
      ]
    },
    {
      "abstract": "Cloud-computing technology has far exceeded what business ever thought of, from significant cost saving to reducing deployment time. It has invaded into almost all types of businesses, and in the...",
      "authors": [
        "Khaled Elbehiery",
        "Hussam Elbehiery"
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1007/978-981-15-3075-3_4",
      "keywords": [
        "LSP",
        "CSPO",
        "Moon Cloud",
        "Space Cloud",
        "SSA",
        "Serverless computing",
        "SCC"
      ],
      "number_of_pages": 20,
      "pages": "53-72",
      "publication": {
        "category": "Book",
        "cite_score": 0.6,
        "is_potentially_predatory": false,
        "isbn": "9783030750770",
        "issn": "23673370",
        "publisher": "Springer International Publishing AG",
        "sjr": 0.17,
        "snip": 0.797,
        "subject_areas": [
          "Control and Systems Engineering",
          "Computer Networks and Communications",
          "Signal Processing"
        ],
        "title": "Conference on Integrated Computer Technologies in Mechanical Engineering\u2013Synergetic Engineering"
      },
      "publication_date": "2020-01-01",
      "selected": null,
      "title": "Cloud Technology: Conquest of Commercial Space Business",
      "urls": [
        "https://link.springer.com/content/pdf/10.1007%2F978-981-15-3075-3_4.pdf",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85085218729&origin=inward"
      ]
    },
    {
      "abstract": "The proceedings contain 14 papers. The topics discussed include: unsupervised subsequence anomaly detection in large sequences; complex event processing on real-time video streams; extended provenance management for data science applications; (artificial) mind over matter: humans in and humans out in matching; efficient and scalable aggregate computation on temporal graphs; elastic query processing on function as a service platforms; resilient and scalable architecture for permissioned blockchain fabrics; and reliable clustering with applications to data integration.",
      "authors": [],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": 0.8,
        "is_potentially_predatory": false,
        "isbn": "9788670314764",
        "issn": "16130073",
        "publisher": "CEUR-WS",
        "sjr": 0.177,
        "snip": 0.345,
        "subject_areas": [
          "Computer Science (all)"
        ],
        "title": "CEUR Workshop Proceedings"
      },
      "publication_date": "2020-01-01",
      "selected": null,
      "title": "VLDB-PhD 2020 - Proceedings of the VLDB 2020 PhD Workshop, co-located with the 46th International Conference on Very Large Databases, VLDB 2020",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85090502291&origin=inward"
      ]
    },
    {
      "abstract": "The proceedings contain 184 papers. The special focus in this conference is on Computational Methods in Systems and Software. The topics include: 3D Face Capture for Rehabilitation Progress Assessment After Brain Surgery; an Ontological Approach to the Text Sample Size Adaptation for the False Pseudonyms Detection; it Was Never About the Language: Paradigm Impact on Software Design Decisions; deep Neural Network Acoustic Model Baseline for Character-Level Transcription of Naturally Spoken Czech Language; problems of Software Developing for the Automation of Scientific Activities; e- Learning Readiness Frameworks and Models; arabic Question Answering System Using Graph Ontology; Stability Study of a Protection Structure by Stacking GSC Geosynthetics: Application to the Port of Corisco (Equatorial Guinea); comparative Analysis of Products for Testing Software; institutionalization of Intelligent Digital Customs; a Novel Adaptive Web-Based Environment to Help Deafblind Individuals in Accessing the Web and Lifelong Learning; impact of Agile Methodology Use on Project Success in Organizations - A Systematic Literature Review; fingerprint Alteration Classification Using Convolutional Neural Network; numerical Modeling of the Wave-Structure Interaction Using the Boundary Element Method; transition from Serverfull to Serverless Architecture in Cloud-Based Software Applications; comparison of Document Generation Algorithms Using the Docs-as-Code Approach and Using a Text Editor; a Proactive University Library Book Recommender System; conflict Resolution in Process Models Merging; medical Chatbot Techniques: A Review; a Model for Effectively Teaching Information Technology; Implementation of the Internet of Things Application Based on Spring Boot Microservices and REST Architecture; identifying Wood Types Using Convolutional Neural Network.",
      "authors": [],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": {
        "category": "Book",
        "cite_score": 0.9,
        "is_potentially_predatory": false,
        "isbn": "9783030577957",
        "issn": "21945357",
        "publisher": "Springer Verlag",
        "sjr": 0.184,
        "snip": 0.428,
        "subject_areas": [
          "Control and Systems Engineering",
          "Computer Science (all)"
        ],
        "title": "Workshops of  the International Conference on Advanced Information Networking and Applications"
      },
      "publication_date": "2020-01-01",
      "selected": null,
      "title": "4th Computational Methods in Systems and Software, CoMeSySo 2020",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85098197699&origin=inward",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85098132127&origin=inward"
      ]
    },
    {
      "abstract": "A multitude of agent-oriented software engineering frameworks exist, most of which are developed by the academic multi-agent systems community. However, these frameworks often impose programming...",
      "authors": [
        "Timotheus Kampik",
        "Juan Carlos Nieves"
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1007/978-3-030-51417-4_11",
      "keywords": [
        "Multi-agent systems",
        "Agent programming",
        "Reasoning-loop agents"
      ],
      "number_of_pages": 20,
      "pages": "215-234",
      "publication": {
        "category": "Book",
        "cite_score": 1.8,
        "is_potentially_predatory": false,
        "isbn": "9783030715922",
        "issn": "03029743",
        "publisher": "Springer Verlag",
        "sjr": 0.249,
        "snip": 0.628,
        "subject_areas": [
          "Databases",
          "Cryptography and Security",
          "Distributed, Parallel, and Cluster Computing",
          "Theoretical Computer Science",
          "Computer Science (all)"
        ],
        "title": "IFIP International Conference on Distributed Applications and\n  Interoperable Systems, DAIS 2017: Distributed Applications and Interoperable\n  Systems pp 83-98"
      },
      "publication_date": "2020-01-01",
      "selected": null,
      "title": "JS-son - A Lean, Extensible JavaScript Agent Programming Library",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85088754420&origin=inward",
        "https://link.springer.com/content/pdf/10.1007%2F978-3-030-51417-4_11.pdf"
      ]
    },
    {
      "abstract": "Multi-population methods can combine multiple algorithms, with different parameters, interacting with each other at the same time. For instance, a genetic algorithm could find a promising global...",
      "authors": [
        "Erick Minguela",
        "J. Mario Garc\u00eda-Valdez",
        "Juan Juli\u00e1n Merelo Guerv\u00f3s"
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1007/978-3-030-43722-0_44",
      "keywords": [
        "Cross-breed multi-population",
        "Serverless",
        "Distributed",
        "Asynchronous",
        "Multi-population",
        "Sub-population"
      ],
      "number_of_pages": 16,
      "pages": "686-701",
      "publication": {
        "category": "Book",
        "cite_score": 1.8,
        "is_potentially_predatory": false,
        "isbn": "9783030715922",
        "issn": "03029743",
        "publisher": "Springer Verlag",
        "sjr": 0.249,
        "snip": 0.628,
        "subject_areas": [
          "Databases",
          "Cryptography and Security",
          "Distributed, Parallel, and Cluster Computing",
          "Theoretical Computer Science",
          "Computer Science (all)"
        ],
        "title": "IFIP International Conference on Distributed Applications and\n  Interoperable Systems, DAIS 2017: Distributed Applications and Interoperable\n  Systems pp 83-98"
      },
      "publication_date": "2020-01-01",
      "selected": null,
      "title": "An Event-Based Architecture for\u00a0Cross-Breed Multi-population Bio-inspired Optimization Algorithms",
      "urls": [
        "https://link.springer.com/content/pdf/10.1007%2F978-3-030-43722-0_44.pdf",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85084756270&origin=inward"
      ]
    },
    {
      "abstract": "The proceedings contain 14 papers. The special focus in this conference is on Service-Oriented and Cloud Computing. The topics include: Towards Real-Time Monitoring of Data Centers Using Edge Computing; modeling Users\u00e2\u0080\u0099 Performance: Predictive Analytics in an IoT Cloud Monitoring System; Multi-source Distributed System Data for\u00c2 AI-Powered Analytics; Blockchain- and IPFS-Based Data Distribution for the Internet of Things; formalizing Event-Driven Behavior of Serverless Applications; Probabilistic Verification of Outsourced Computation Based on Novel Reversible PUFs; multiplayer Game Backends: A Comparison of Commodity Cloud-Based Approaches; are Cloud Platforms Ready for Multi-cloud?; identification of Comparison Key Elements and Their Relationships for Cloud Service Selection; deployable Self-contained Workflow Models; technology-Agnostic Declarative Deployment Automation of Cloud Applications; blockchain-Based Healthcare Workflows in Federated Hospital Clouds.",
      "authors": [],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": {
        "category": "Book",
        "cite_score": 1.8,
        "is_potentially_predatory": false,
        "isbn": "9783030715922",
        "issn": "03029743",
        "publisher": "Springer Verlag",
        "sjr": 0.249,
        "snip": 0.628,
        "subject_areas": [
          "Databases",
          "Cryptography and Security",
          "Distributed, Parallel, and Cluster Computing",
          "Theoretical Computer Science",
          "Computer Science (all)"
        ],
        "title": "IFIP International Conference on Distributed Applications and\n  Interoperable Systems, DAIS 2017: Distributed Applications and Interoperable\n  Systems pp 83-98"
      },
      "publication_date": "2020-01-01",
      "selected": null,
      "title": "8th IFIP WG 2.14 European Conference on Service-Oriented and Cloud Computing, ESOCC 2020",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85085763567&origin=inward"
      ]
    },
    {
      "abstract": "How can Minecraft-like games become scalable cloud services? Hundreds of Minecraft-like games, that is, games acting as modifiable virtual environments (MVEs), are currently played by over 100 million players, but surprisingly they do not scale and are frequently not published as cloud services. We envision a new architecture for large-scale MVEs, supporting much larger numbers of concurrent users by scaling up and out using serverless technology. In our vision, developers focus on the game (business) logic, while cloud providers manage resource management and scheduling (RMS) and guarantee non-functional properties. We provide a definition for MVEs, model their services and deployments, present a vision for large-scale MVEs architected as serverless systems, and suggest concrete steps towards realizing this vision. \u00c2\u00a9 HotCloud 2020 - 12th USENIX Workshop on Hot Topics in Cloud Computing, co-located with USENIX ATC 2020. All rights reserved.",
      "authors": [
        "Donkervliet, J.",
        "Trivedi, A.",
        "Iosup, A."
      ],
      "categories": null,
      "citations": 1,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "HotCloud 2020 - 12th USENIX Workshop on Hot Topics in Cloud Computing, co-located with USENIX ATC 2020"
      },
      "publication_date": "2020-01-01",
      "selected": null,
      "title": "Towards supporting millions of users in modifiable virtual environments by redesigning minecraft-like games as serverless systems",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85091894748&origin=inward"
      ]
    },
    {
      "abstract": " Serverless computing has emerged as a promising alternative to\ninfrastructure- (IaaS) and platform-as-a-service (PaaS)cloud platforms for\napplications with ample parallelism and intermittent activity. Serverless\npromises greater resource elasticity, significant cost savings, and simplified\napplication deployment. All major cloud providers, including Amazon, Google,\nand Microsoft, have introduced serverless to their public cloud offerings. For\nserverless to reach its potential, there is a pressing need for programming\nframeworks that abstract the deployment complexity away from the user. This\nincludes simplifying the process of writing applications for serverless\nenvironments, automating task and data partitioning, and handling scheduling\nand fault tolerance. We present Ripple, a programming framework designed to specifically take\napplications written for single-machine execution and allow them to take\nadvantage of the task parallelism of serverless. Ripple exposes a simple\ninterface that users can leverage to express the high-level dataflow of a wide\nspectrum of applications, including machine learning (ML) analytics, genomics,\nand proteomics. Ripple also automates resource provisioning, meeting\nuser-defined QoS targets, and handles fault tolerance by eagerly detecting\nstraggler tasks. We port Ripple over AWS Lambda and show that, across a set of\ndiverse applications, it provides an expressive and generalizable programming\nframework that simplifies running data-parallel applications on serverless, and\ncan improve performance by up to 80x compared to IaaS/PaaS clouds for similar\ncosts.\n",
      "authors": [
        "Joyner, Shannon",
        "MacCoss, Michael",
        "Delimitrou, Christina",
        "Weatherspoon, Hakim"
      ],
      "categories": null,
      "citations": null,
      "comments": null,
      "databases": [
        "arXiv"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": null,
      "publication_date": "2020-01-01",
      "selected": null,
      "title": "Ripple: A Practical Declarative Programming Framework for Serverless Compute",
      "urls": [
        "http://arxiv.org/abs/2001.00222v1",
        "https://arxiv.org/pdf/2001.00222",
        "http://arxiv.org/pdf/2001.00222v1"
      ]
    },
    {
      "abstract": "\ucd5c\uadfc \ud574\uc678\uc5d0\uc11c \ubbfc\uac04 \ub2e4\uc911\uc774\uc6a9\uc2dc\uc124\uc744 \ubaa9\ud45c\ub85c \ub2e4\ubc1c\ud558\uace0 \uc788\ub294 \ud14c\ub7ec\ub85c\ubd80\ud130 \uc548\uc804\uc744 \ud655\ubcf4\ud558\ub294 \uacfc\uc81c\uac00 \uc8fc\ubaa9\ubc1b\uace0 \uc788\ub2e4. \uc774\uc5d0 \ubcf8 \ub17c\ubb38\uc5d0\uc11c\ub294 \uc5f0\uac04 38\uc5b5\uba85\uc758 \uc5ec\uac1d, 3700\ub9cc\ud1a4\uc758 \ud654\ubb3c\uc744 \uc218\uc1a1\ud558\ub294 \ucca0\ub3c4 \uc2dc\uc2a4\ud15c\uc758 \uc911\uc694 \uc7a5\ube44, \uc2dc\uc124\ub4e4\uc744 \ubcf4\ud638\ud558\ub294 \uc2e4\uc2dc\uac04 \uce68\uc785\uc790 \ubaa8\ub2c8\ud130\ub9c1 \uc2dc\uc2a4\ud15c\uc744 \uc81c\uc548\ud55c\ub2e4. \uc2dc\uc2a4\ud15c\uc744 \uad6c\ud604 \ubc0f \uc2dc\ud5d8\ud558\ub294 \ub370 \uc788\uc5b4\uc11c Raspberry Pi\ub97c \uc0ac\uc6a9\ud55c \ub514\ubc14\uc774\uc2a4 \ub2e8\uc5d0\ub294 TensorFlow\uc640 OpenCV \ubc0f Amazon Web Service(AWS) IoT SDK\uac00 \uc138\ud2b8 \ub418\uc5c8\uace0 \uc11c\ubc84 \ub2e8\uc5d0\ub294 AWS \ud074\ub77c\uc6b0\ub529 \uc11c\ubc84\uc5d0 AWS IoT\uc640 AWS Lambda\ub97c \ubc14\ud0d5\uc73c\ub85c Twilio API\uac00 \uc124\uce58\ub418\uc5c8\ub2e4. TensorFlow\uc5d0\ub294 COCO Dataset\uc73c\ub85c \ud559\uc2b5\ud55c SSD+MobileNetV1\uac00 \uc801\uc6a9\ub418\uc5b4 \ubcf4\uc548 \uad6c\uc5ed\uc758 \uac10\uc2dc \uce74\uba54\ub77c \uc2dc\uc57c\ub85c\ubd80\ud130 \uce68\uc785\uc790\uc758 \uc720\ubb34\ub97c \uac10\uc9c0\ud55c\ub2e4. \uce68\uc785\uc790\uac00 \ubc1c\uc0dd\ud55c \uacbd\uc6b0 SMS\ub97c \ud1b5\ud574 \ud574\ub2f9 \uad6c\uc5ed\uc758 \uc548\uc804, \ubcf4\uc548\uad00\ub9ac\uc790\uc5d0\uac8c \uce68\uc785\uc790 \ubc1c\uc0dd \uc0ac\uc2e4\uc744 \ud1b5\uc9c0\ud558\uace0 \uc801\uc808\ud55c \ud6c4\uc18d \uc870\uce58\uac00 \uc774\ub8e8\uc5b4\uc9c8 \uc218 \uc788\uac8c\ub054 \uc548\uc804, \ubcf4\uc548\uad00\ub9ac\uc790\ub97c \ubcf4\uc870, \uce68\uc785\uc790\uc5d0 \uc758\ud55c \ubcf4\uc548 \uc704\ud611\uc744 \uc608\ubc29\ud558\uace0 \uc720\uc0ac\uc2dc \ud53c\ud574\ub97c \ucd5c\uc18c\ud654\ud560 \uc218 \uc788\ub3c4\ub85d \ud55c\ub2e4. \ud50c\ub77c\uc2a4\ud2f1 \uc778\uccb4\ubaa8\ud615\uc744 \uc0ac\uc6a9\ud55c \uc2dc\ud5d8\uc5d0\uc11c \ubcf8 \uc2dc\uc2a4\ud15c\uc740 \uce68\uc785\uc790\ub97c \uc778\uc2dd\ud558\ub294 \ub370 \uc788\uc5b4\uc11c 1.05\ucd08\uc758 \ubc18\uc751\uc18d\ub3c4, 50% \ubbf8\ub9cc\uc758 \uc815\ud655\ub3c4\ub97c \ubcf4\uc600\uc73c\ub098 \uc2e4\uc81c \uc0ac\ub78c\uc744 \ubc14\ud0d5\uc73c\ub85c \ud55c \uc2e4\ud5d8\uc5d0\uc11c\ub294 \uce74\uba54\ub77c\ub85c\ubd80\ud130 \uc57d 10m \uc774\ub0b4\uc758 \ubc94\uc704\uc5d0\uc11c 80% \uc774\uc0c1\uc758 \uc6b0\uc218\ud55c \uc778\uc2dd \uc815\ud655\ub3c4\uac00 \ub098\ud0c0\ub0ac\ub2e4.",
      "authors": [
        "\ubc15\uae30\uc900",
        "\ubc18\ub2e4\ub9ac \ube44\ub098\uc57d"
      ],
      "categories": null,
      "citations": 1,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.7782/JKSR.2020.23.1.35",
      "keywords": [
        ": Intruder control",
        "Railway security",
        "Real-time monitoring",
        "Computer vision",
        "Deep learning"
      ],
      "number_of_pages": 10,
      "pages": "35-44",
      "publication": {
        "category": "Journal",
        "cite_score": 0.4,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "17386225",
        "publisher": "Korean Society for Railway",
        "sjr": 0.201,
        "snip": 0.688,
        "subject_areas": [
          "Automotive Engineering",
          "Transportation",
          "Energy Engineering and Power Technology",
          "Civil and Structural Engineering",
          "Geography, Planning and Development",
          "Strategy and Management"
        ],
        "title": "Journal of the Korean Society for Railway"
      },
      "publication_date": "2020-01-01",
      "selected": null,
      "title": "\ucef4\ud4e8\ud130 \ube44\uc804\uacfc \ub525\ub7ec\ub2dd\uc744 \uc774\uc6a9\ud55c \ucca0\ub3c4 \uc2dc\uc124 \uc811\uadfc\uc790 \uc2e4\uc2dc\uac04 \ubaa8\ub2c8\ud130\ub9c1 \uc2dc\uc2a4\ud15c ",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85086396678&origin=inward"
      ]
    },
    {
      "abstract": "Distributed Ledger Technology, has been gaining enormous attention in areas beyond cryptocurrency. Industries such as energy, transportation, and healthcare are already integrating DLTs into their operations. On the other hand, recent advances and the increasing popularity of the Internet of Things (IoT) technologies are also enabling new and exciting ways of interaction and sensing for mobile device users. Mobile gaming is another prominent industry that can be benefited from these technological developments and has the potential to create business opportunities. In this paper, we explore the uses of Distributed Ledger Technology in Mobile Gaming and for this purpose, we have taken a location-based IoT mobile gaming use case and propose new gaming features for the players by the addition of the DLT. We propose a platform for creating and playing scavenger hunt games using low-power BLE beacons. It allows smartphones to interact with the predetermined real-world locations and players can observe the surrounding environment looking for \"clues\" in the game. At the end of a hunt, the player receives rewards that are stored on a distributed ledger as Non-Fungible Tokens (NFT) and can bring in-game advantages for the next hunts. The proposed system is implemented using off-the-shelf devices and IoT beacons. We implemented our hybrid architecture by using AWS Lambda, Hyperledger Fabric managed blockchain and DynamoDB. We performed multiple experiments measuring the time taken for the end-toend process, IoT beacon response times and the throughput of the Fabric network. Using the performance results, we estimated the maximum number of active players that can be supported by the game. Finally, we discuss business opportunities and limitations of the proposed proof of concept. \u00c2\u00a9 2020 Institute of Electrical and Electronics Engineers Inc.. All rights reserved.",
      "authors": [
        "Ahsan Manzoor",
        "Max Samarin",
        "David Mason",
        "Mika Ylianttila"
      ],
      "categories": null,
      "citations": 1,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/ACCESS.2020.3037182",
      "keywords": [
        "IoT",
        "SOFIE",
        "hyperledger fabric",
        "Blockchain",
        "context-aware",
        "mobile-game"
      ],
      "number_of_pages": 17,
      "pages": "204863-204879",
      "publication": {
        "category": "Journal",
        "cite_score": 4.8,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "2169-3536",
        "publisher": "Institute of Electrical and Electronics Engineers Inc.",
        "sjr": 0.587,
        "snip": 1.421,
        "subject_areas": [
          "Engineering (all)",
          "Computer Science (all)",
          "Materials Science (all)"
        ],
        "title": "IEEE Access"
      },
      "publication_date": "2020-01-01",
      "selected": null,
      "title": "Scavenger Hunt: Utilization of Blockchain and IoT for a Location-Based Game",
      "urls": [
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9253568",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85099877578&origin=inward"
      ]
    },
    {
      "abstract": "We propose a set of optimization techniques for transforming a generic AI codebase so that it can be successfully deployed to a restricted serverless environment, without compromising capability or performance. These involve (1) slimming the libraries and frameworks (e.g., pytorch) used, down to pieces pertaining to the solution; (2) dynamically loading pre-trained AI/ML models into local temporary storage, during serverless function invocation; (3) using separate frameworks for training and inference, with ONNX model formatting; and, (4) performance-oriented tuning for data storage and lookup. The techniques are illustrated via worked examples that have been deployed live on geospatial data from the transportation domain. This draws upon a real-world case study in intelligent transportation looking at on-demand, real-time predictions of flows of train movements across the UK rail network. Evaluation of the proposed techniques shows the response time, for varying volumes of queries involving prediction, to remain almost constant (at 50 ms), even as the database scales up to the 250M entries. The query response time is important in this context as the target is predicting train delays. It is even more important in a serverless environment due to the stringent constraints on serverless functions' runtime before timeout. The similarities of a serverless environment to other resource constrained environments (e.g., IoT, telecoms) means the techniques can be applied to a range of use cases. \u00c2\u00a9 2020 IEEE.",
      "authors": [
        "Angelos Christidis",
        "Sotiris Moschoyiannis",
        "Ching-Hsien Hsu",
        "Roy Davies"
      ],
      "categories": null,
      "citations": 2,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/ACCESS.2020.2985282",
      "keywords": [
        "rail traffic big data",
        "AWS",
        "Intelligent transportation",
        "resource-constrained",
        "predicting train delays",
        "serverless codebase optimization",
        "NoSQL",
        "functions as-a-service",
        "Lambda",
        "serverless"
      ],
      "number_of_pages": 12,
      "pages": "70150-70161",
      "publication": {
        "category": "Journal",
        "cite_score": 4.8,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "2169-3536",
        "publisher": "Institute of Electrical and Electronics Engineers Inc.",
        "sjr": 0.587,
        "snip": 1.421,
        "subject_areas": [
          "Engineering (all)",
          "Computer Science (all)",
          "Materials Science (all)"
        ],
        "title": "IEEE Access"
      },
      "publication_date": "2020-01-01",
      "selected": null,
      "title": "Enabling Serverless Deployment of Large-Scale AI Workloads",
      "urls": [
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9055400",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85084157100&origin=inward"
      ]
    },
    {
      "abstract": "The aim of the article is to build a process model of Continuous Improvement for design support systems, the Internet of Things (IoT) and manufactured scalable systems. The developed model was based...",
      "authors": [
        "Cezary Or\u0142owski",
        "Dawid Cygert",
        "Przemys\u0142aw Nowak"
      ],
      "categories": null,
      "citations": 1,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1007/978-981-15-3380-8_37",
      "keywords": [
        "MQTT",
        "Containers",
        "Code generation",
        "Process manager",
        "Subdomains",
        "Information systems",
        "SQL",
        "Microservices",
        "Cloud",
        "Load balancing",
        "Serverless",
        "Internet of Things",
        "Patterns",
        "Queues",
        "Replication",
        "Reverse proxy",
        "Architecture",
        "Connection pooling",
        "Scaling",
        "API gateway",
        "Docker",
        "NoSQL",
        "High availability",
        "Access token"
      ],
      "number_of_pages": 12,
      "pages": "424-435",
      "publication": {
        "category": "Book",
        "cite_score": 0.8,
        "is_potentially_predatory": false,
        "isbn": "9783030719050",
        "issn": "18650929",
        "publisher": "Springer Verlag",
        "sjr": 0.16,
        "snip": 0.32,
        "subject_areas": [
          "Mathematics (all)",
          "Computer Science (all)"
        ],
        "title": "International Conference on Software Process Improvement and Capability Determination"
      },
      "publication_date": "2020-01-01",
      "selected": null,
      "title": "Continuous Improvement Process Model for Supporting the Construction of Internet of Things System Design Environments",
      "urls": [
        "https://link.springer.com/content/pdf/10.1007%2F978-981-15-3380-8_37.pdf",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85082110304&origin=inward"
      ]
    },
    {
      "abstract": "Edge clusters consisting of small and affordable single-board devices are used in a range of different applications such as microcontrollers regulating an industrial process or controllers monitoring and managing traffic roadside. We call this wider context of computational infrastructure between the sensor and Internet-of-Things world and centralised cloud data centres the edge or edge computing. Despite the growing hardware capabilities of edge devices, resources are often still limited and need to be used intelligently. This can achieved by providing a self-adaptive scaling component in these clusters that is capable of scaling individual parts of the application running in the cluster. We propose an auto-scalable container-based cluster architecture for lightweight edge devices. A serverless architecture is at the core of the management solution. Our auto-scaler as the key component of this architecture is based on fuzzy logic in order to address challenges arising from an uncertain environment. In this context, it is crucial to evaluate the capabilities and limitations of the application in a real-world context. Our results show that the proposed platform architecture, the implemented application and the scaling functionality meet the set requirements and offer a basis for lightweight edge computing. \u00c2\u00a9 Copyright 2020 by SCITEPRESS - Science and Technology Publications, Lda. All rights reserved.",
      "authors": [
        "Gand, F.",
        "Fronza, I.",
        "El Ioini, N.",
        "Barzega, H.R.",
        "Azimi, S.",
        "Pahl, C."
      ],
      "categories": null,
      "citations": 5,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": null,
      "keywords": [
        "Container",
        "Self-adaptive",
        "Cluster",
        "Performance Engineering",
        "Fuzzy Logic",
        "Auto-scaling",
        "Edge Cloud"
      ],
      "number_of_pages": 12,
      "pages": "79-90",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9789897584244",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "CLOSER 2020 - Proceedings of the 10th International Conference on Cloud Computing and Services Science"
      },
      "publication_date": "2020-01-01",
      "selected": null,
      "title": "A fuzzy controller for self-adaptive lightweight edge container orchestration",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85088403391&origin=inward"
      ]
    },
    {
      "abstract": "The proliferation of edge devices and the rapid growth of edge data challenged the traditional cloud computing. The high costs of cloud services and the network latency caused by data transportation outweigh the high performance cloud can provide [4]. Edge computing emerged to solve the problem. In edge computing, edge devices and edge servers are considered as important resources that can help with computation and data storage [2]; data generated on edge devices is processed locally to avoid network latency. This can greatly reduce application response time which is especially important for time-sensitive edge applications. Also, many edge devices generate data concerning user privacy. The data is more secure to be stored on local devices than on a shared cloud. A proper abstraction is key to enabling computing across the heterogeneous resources on the edge and across the multiple tiers of resources from the edge to the cloud. In this paper, we argue that Function-as-a-Service (FaaS), an emerging cloud computing model can provide the much needed abstraction for edge computing. In FaaS, the unit of computation is a function. When a request is received, the platform starts an ephemeral execution sandbox for the function. When load increases, it quickly and dynamically increases the number of execution units. As soon as the function finishes, the sandboxes are terminated. FaaS has many benefits compared to the traditional application-based models. Sandboxing functions enhances the security and reliability by isolating misbehaved ones. Functions have faster initialization due to the smaller image sizes and function reuse. In-time reclaiming of functions improves the resource utilization. Finally, the development towards function implementation is simpler. There are many potential benefits in delivering edge computing as FaaS. First, the fine-grained functions can accelerate the run time of applications by effectively scheduling functions across all tiers from the edge to the cloud. Also, the functions can better exploit the heterogeneous re-sources available at the edge to deliver faster responses. Moreover, functions can be reused for different applications to save function initialization time. Second, it provides additional privacy and reliability since functions are isolated to its own address space and the impact of a function is normally smaller than an application. Privacy and reliability are more of a concern on the edge due to its close relationship with the physical world. Third, FaaS helps reduce the cost of the cloud services by increasing the utilization of edge resources. Last, FaaS platform provides a nice abstraction for developers to improve the productivity. Despite the many benefits, FaaS-based edge computing also faces several important challenges. First, how to quickly recompose the outputs of decomposed applications. The function chaining overhead may not be significant for functions deployed within an edge device. However, considering the distributed fashion of edge computing across edge devices, edge servers, and cloud, the overhead can be significant [1, 3]. Second, how to balance the performance and isolation that sandbox mechanisms provide, lightweight sandboxes such as containers have small performance overhead but cannot isolate well. Heavy weight sandboxes such as VMs provide strong isolation but bring notable performance overhead. The balance point of the two aspects needs to be figured out. Third, how to leverage the flexibility of distributed scheduling brought by smaller scheduling units and other factors including data locality, network latency and device heterogeneity. Failing to solve any of the above challenges may largely turn the benefits of applying FaaS down. \u00c2\u00a9 HotEdge 2020 - 3rd USENIX Workshop on Hot Topics in Edge Computing. All rights reserved.",
      "authors": [
        "Jin, R.",
        "Yang, Q.",
        "Zhao, M."
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "HotEdge 2020 - 3rd USENIX Workshop on Hot Topics in Edge Computing"
      },
      "publication_date": "2020-01-01",
      "selected": null,
      "title": "Is FaaS suitable for edge computing?",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85092251231&origin=inward"
      ]
    },
    {
      "abstract": "Serverless computing has emerged as a new cloud computing paradigm, where an application consists of individual functions that can be separately managed and executed. However, existing serverless platforms normally isolate and execute functions in separate containers, and do not exploit the interactions among functions for performance. These practices lead to high startup delays for function executions and inefficient resource usage. This paper presents SAND, a new serverless computing system that provides lower latency, better resource efficiency and more elasticity than existing serverless platforms. To achieve these properties, SAND introduces two key techniques: 1) application-level sandboxing, and 2) a hierarchical message bus. We have implemented and deployed a complete SAND system. Our results show that SAND outperforms the state-of-the-art serverless platforms significantly. For example, in a commonly-used image processing application, SAND achieves a 43% speedup compared to Apache OpenWhisk. \u00c2\u00a9 Proceedings of the 2018 USENIX Annual Technical Conference, USENIX ATC 2018. All rights reserved.",
      "authors": [
        "Akkus, I.E.",
        "Chen, R.",
        "Rimac, I.",
        "Satzke, M.S.K.",
        "Beck, A.",
        "Aditya, P.",
        "Hilt, V."
      ],
      "categories": null,
      "citations": 65,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": 13,
      "pages": "923-935",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781939133021",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings of the 2018 USENIX Annual Technical Conference, USENIX ATC 2018"
      },
      "publication_date": "2020-01-01",
      "selected": null,
      "title": "SAND: Towards high-performance serverless computing",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85077465955&origin=inward"
      ]
    },
    {
      "abstract": "For robots using motion planning algorithms such as RRT and RRT\u00e2\u0088\u0097, the computational load can vary by orders of magnitude as the complexity of the local environment changes. To adaptively provide such computation, we propose Fog Robotics algorithms in which cloud-based serverless lambda computing provides parallel computation on demand. To use this parallelism, we propose novel motion planning algorithms that scale effectively with an increasing number of serverless computers. However, given that the allocation of computing is typically bounded by both monetary and time constraints, we show how prior learning can be used to efficiently allocate resources at runtime. We demonstrate the algorithms and application of learned parallel allocation in both simulation and with the Fetch commercial mobile manipulator using Amazon Lambda to complete a sequence of sporadically computationally intensive motion planning tasks. \u00c2\u00a9 2020 IEEE.",
      "authors": [
        "Jeffrey Ichnowski",
        "William Lee",
        "Victor Murta",
        "Samuel Paradis",
        "Ron Alterovitz",
        "Joseph E Gonzalez",
        "Ion Stoica",
        "Ken Goldberg"
      ],
      "categories": null,
      "citations": 1,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/ICRA40945.2020.9196651",
      "keywords": [],
      "number_of_pages": 7,
      "pages": "4232-4238",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": 6.4,
        "is_potentially_predatory": false,
        "isbn": "978-1-7281-7396-2",
        "issn": "1050-4729",
        "publisher": "Institute of Electrical and Electronics Engineers Inc.",
        "sjr": 0.915,
        "snip": 1.704,
        "subject_areas": [
          "Control and Systems Engineering",
          "Software",
          "Electrical and Electronic Engineering",
          "Artificial Intelligence"
        ],
        "title": "Proceedings - IEEE International Conference on Robotics and Automation"
      },
      "publication_date": "2020-01-01",
      "selected": null,
      "title": "Fog Robotics Algorithms for Distributed Motion Planning Using Lambda Serverless Computing",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85092689813&origin=inward",
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9196651"
      ]
    },
    {
      "abstract": "Due to the rapid increase in the total amount of data generated in the world, the need for more computational resources is also increasing dramatically. This trend results in huge data centers and massive server farms being built around the world, which have a negative impact on global carbon emissions. On the other hand, there are many underutilized personal computers around the world that can be used towards distributed computing. To better understand the capacity of personal computers, we have conducted a survey that aims to find their unused computational power. The results indicate that the typical CPU utilization of a personal computer is only 24.5% and, on average, a personal computer is only used 4.5 hours per day. This shows a significant computational potential that can be used towards distributed computing. In this paper, we introduce ChainFaaS with the motivation to use the computational capacity of personal computers as well as to improve developers' experience of internet-based computing services by reducing their costs, enabling transparency, and providing reliability. ChainFaaS is an open, public, blockchain-based serverless platform that takes advantage of personal computers' computational capacity to run serverless tasks. If a substantial number of personal computers were connected to this platform, some tasks could be offloaded from data centers. As a result, the need for building new data centers would be reduced with a positive impact on the environment. We have proposed the design of ChainFaaS, and then implemented and evaluated a prototype of this platform to show its feasibility. \u00c2\u00a9 2013 IEEE.",
      "authors": [
        "Sara Ghaemi",
        "Hamzeh Khazaei",
        "Petr Musilek"
      ],
      "categories": null,
      "citations": 1,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/ACCESS.2020.3010119",
      "keywords": [
        "green computing",
        "Blockchain",
        "distributed computing",
        "serverless computing",
        "distributed ledger technology"
      ],
      "number_of_pages": 19,
      "pages": "131760-131778",
      "publication": {
        "category": "Journal",
        "cite_score": 4.8,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "2169-3536",
        "publisher": "Institute of Electrical and Electronics Engineers Inc.",
        "sjr": 0.587,
        "snip": 1.421,
        "subject_areas": [
          "Engineering (all)",
          "Computer Science (all)",
          "Materials Science (all)"
        ],
        "title": "IEEE Access"
      },
      "publication_date": "2020-01-01",
      "selected": null,
      "title": "ChainFaaS: An Open Blockchain-Based Serverless Platform",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85089496659&origin=inward",
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9143110"
      ]
    },
    {
      "abstract": "The cloud computing paradigm has emerged as the backbone of modern price-aware scalable computing systems. Many cloud service models are competing to become the leading doorway to access the computational power of cloud providers. Recently, a novel service model, called function-as-a-service (FaaS), has been proposed, which enables users to exploit the cloud computational scalability, left out the configuration and management of huge computing infrastructures. This article discloses Fly, a domain-specific language, which aims at reconciling cloud and high-performance computing paradigms adopting a multicloud strategy by providing a powerful, effective, and pricing-efficient tool for developing scalable workflow-based scientific applications by exploiting different and at the same time FaaS cloud providers as computational backends in a transparent fashion. We present several improvements of the Fly language, as well as a new enhanced version of a source-to-source compiler, which currently supports Symmetric Multiprocessing, Amazon AWS, and Microsoft Azure backends and translation of functions in Java, JavaScript, and Python programming languages. Furthermore, we discuss a performance evaluation of Fly on a popular benchmark for distributed computing frameworks, along with a collection of case studies with an analysis of their performance results and costs. \u00c2\u00a9 2020 John Wiley & Sons, Ltd.",
      "authors": [
        "Cordasco, G.",
        "D'Auria, M.",
        "Negro, A.",
        "Scarano, V.",
        "Spagnuolo, C."
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1002/cpe.5802",
      "keywords": [
        "workflow-based application",
        "distributed computing",
        "serverless computing",
        "domain-specific languages",
        "parallel computing",
        "scientific computing",
        "functions as a service"
      ],
      "number_of_pages": null,
      "pages": null,
      "publication": {
        "category": "Journal",
        "cite_score": 3.8,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "15320626",
        "publisher": "John Wiley and Sons Ltd",
        "sjr": 0.309,
        "snip": 0.828,
        "subject_areas": [
          "Computer Networks and Communications",
          "Computational Theory and Mathematics",
          "Software",
          "Theoretical Computer Science",
          "Computer Science Applications"
        ],
        "title": "Concurrency Computation"
      },
      "publication_date": "2020-01-01",
      "selected": null,
      "title": "Toward a domain-specific language for scientific workflow-based applications on multicloud system",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85084203343&origin=inward"
      ]
    },
    {
      "abstract": "APIs provided by the Docker is executed through the container engine. Thus, it is a reality that the speed of creation and deletion of containers or requests for information is very slow. The load...",
      "authors": [
        "Sangwook Han",
        "Minsu Chae",
        "HwaMin Lee"
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1007/978-981-13-9341-9_32",
      "keywords": [
        "Serverless framework",
        "Resource management",
        "Docker"
      ],
      "number_of_pages": 6,
      "pages": "189-194",
      "publication": {
        "category": "Book",
        "cite_score": 0.5,
        "is_potentially_predatory": false,
        "isbn": "9789813369764",
        "issn": "18761100",
        "publisher": "Springer Verlag",
        "sjr": 0.134,
        "snip": 0.204,
        "subject_areas": [
          "Industrial and Manufacturing Engineering"
        ],
        "title": "Lecture Notes in Electrical Engineering"
      },
      "publication_date": "2020-01-01",
      "selected": null,
      "title": "Serverless Framework for Efficient Resource Management in Docker Environment",
      "urls": [
        "https://link.springer.com/content/pdf/10.1007%2F978-981-13-9341-9_32.pdf",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85076854629&origin=inward"
      ]
    },
    {
      "abstract": "Containerization technology utilizes operating system level virtualization to package applications to run with required libraries and are isolated from oth",
      "authors": [
        "Ron C. Chiang"
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1007/s10586-020-03210-2",
      "keywords": [
        "Serverless Computing",
        "Container",
        "Cloud computing",
        "Microservices",
        "Virtualization"
      ],
      "number_of_pages": null,
      "pages": null,
      "publication": {
        "category": "Journal",
        "cite_score": 3.1,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "13867857",
        "publisher": "Kluwer Academic Publishers",
        "sjr": 0.335,
        "snip": 0.744,
        "subject_areas": [
          "Computer Networks and Communications",
          "Software"
        ],
        "title": "Cluster Computing"
      },
      "publication_date": "2020-01-01",
      "selected": null,
      "title": "Contention-aware container placement strategy for docker swarm with machine learning based clustering algorithms",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85096453529&origin=inward",
        "https://link.springer.com/content/pdf/10.1007/s10586-020-03210-2.pdf"
      ]
    },
    {
      "abstract": "Multiaccess edge computing (MEC) will strengthen forthcoming 5G networks by improving the Quality of Service (QoS), in particular, reducing latency, increasing data processing rates, and providing real-time information to develop high-value Internet-of-Things (IoT) services. To enable data-intensive network services and support advanced analytics, many network operators have proposed to integrate MEC systems with network function virtualization (NFV) consolidating virtual network functions (VNFs) and edge capabilities on a shared infrastructure. As of yet, this integration is not fully established, with various architectural issues currently open, even at standardization level. For instance, any update to VNFs deployed in a MEC system requires a time-consuming manual effort, which affects the overall infrastructure operations. To address these pitfalls, VNFs can be decomposed into microservices, which maintain their own states and exhibit different resource consumption requirements. This article presents an approach to integration that leverages serverless computing to merge MEC and NFV at the system level and to deploy VNFs on demand, by combining MEC functional blocks with an NFV orchestrator using a Kubernetes cluster. We further investigate whether the resource utilization of a MEC system can be improved by leveraging networked FPGA-enabled MEC servers, through an extension of the edge layer that takes advantage of available programmable hardware. We quantitatively evaluate and demonstrate the improvement of 75% end-to-end latency, 99.96% VNF execution time, 26.9% resource utilization, and 15.8% energy consumption in comparison with traditional baselines of cloud, edge, and serverless-edge test cases for a high-definition real-time video streaming application. \u00c2\u00a9 2014 IEEE.",
      "authors": [
        "Saqib Rasool Chaudhry",
        "Andrei Palade",
        "Aqeel Kazmi",
        "Siobh\u00e1n Clarke"
      ],
      "categories": null,
      "citations": 2,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/JIOT.2020.3011057",
      "keywords": [
        "virtual network functions (VNFs) and data security",
        "Edge computing",
        "serverless computing",
        "networked FPGA"
      ],
      "number_of_pages": 11,
      "pages": "10673-10683",
      "publication": {
        "category": "Journal",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "2372-2541",
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "IEEE Internet of Things Journal"
      },
      "publication_date": "2020-01-01",
      "selected": null,
      "title": "Improved QoS at the Edge Using Serverless Computing to Deploy Virtual Network Functions",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85092745086&origin=inward",
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9145582"
      ]
    },
    {
      "abstract": "In our country, most of the people were unaware of the criminal laws and penalties under IPC (Indian Penal Code) sections correspondingly. So it is necessary to make themselves aware of all kind of laws put forth by our constitution against crime. Once the people come forward to know the law, then they can be aware of laws, IPC act and penalty. There is an existing system for user to know about the crime details or to manage the crime records of the criminals in our country based on the web app and mobile app but they won't provide any laws, IPC act and penalty. The proposed system is a web app with chatbot based software which contain all the laws of IPC act. So, that people can get to know the laws for respective crime by chatting. Since this is easy to user because now-a-days chatting is emerging up. Based on the voice chat to the user can chat and get the IPC act and penalty for the respective laws with the response of voice. This system is developed based on AWS platform with LEX and LAMBDA function using Python and Nodejs. All the laws,IPC act and penalty is also listed on the webpage for efficient access for the user. For this XAMPP server has been used to store those data in the database using PHP. \u00c2\u00a9 2020 Innovare Academics Sciences Pvt. Ltd. All rights reserved.",
      "authors": [
        "Kamatchi, C.",
        "Sripriya, V.",
        "Pavithra, S.",
        "Vaishali, D."
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.31838/jcr.07.16.20",
      "keywords": [
        "Voice chat",
        "AWS",
        "XAMPP and PHP",
        "Penalty",
        "Laws",
        "IPC act",
        "AWS LEX",
        "Chat Bot",
        "AWS LAMBDA",
        "General Public",
        "Nodejs",
        "Python",
        "Web app"
      ],
      "number_of_pages": 6,
      "pages": "146-151",
      "publication": {
        "category": "Journal",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Journal of Critical Reviews"
      },
      "publication_date": "2020-01-01",
      "selected": null,
      "title": "Indian penal code act detecting system using chatbot",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85087823647&origin=inward"
      ]
    },
    {
      "abstract": "The proceedings contain 39 papers. The special focus in this conference is on Software Architecture. The topics include: Mining gender bias: A preliminary study on implicit biases and gender identity in the department of computer science at the technical university of munich; state of the practice survey: Predicting the influence of ai adoption on system software architecture in traditional embedded systems; composition algorithm adaptation in service oriented systems; a statistical approach for context-awareness of mobile applications; a reference architecture for personalized and self-adaptive e-health apps; collecting service-based maintainability metrics from restful api descriptions: Static analysis and threshold derivation; optimizing parametric dependencies for incremental performance model extraction; data pipeline architecture for serverless platform; examination and comparison of tosca orchestration tools; big data and machine intelligence in software platforms for smart cities; auto-scaling using tosca infrastructure as code; towards coordinated autoscaling and application brownout at the orchestrator level; measurement-based timing analysis on heterogeneous mpsocs: A practical approach; awas: Aadl information flow and error propagation analysis framework; formal verification of run-to-completion style statecharts using event-b; a simulator coupling architecture for the creation of digital twins; integrating runtime verification into an automated uas traffic management system; dependability of model-driven executable dsls: Critical review and solutions; defining a formal semantic for parallel patterns in the palladio component model using hierarchical queuing petri nets; model-based simulation at runtime with abstract state machines; decentralized self-adaptation in large-scaled systems of systems; merging railway standard notations in a formal dsl-based framework; continuous formal verification of microservice-based process flows.",
      "authors": [],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": {
        "category": "Book",
        "cite_score": 0.8,
        "is_potentially_predatory": false,
        "isbn": "9783030719050",
        "issn": "18650929",
        "publisher": "Springer Verlag",
        "sjr": 0.16,
        "snip": 0.32,
        "subject_areas": [
          "Mathematics (all)",
          "Computer Science (all)"
        ],
        "title": "International Conference on Software Process Improvement and Capability Determination"
      },
      "publication_date": "2020-01-01",
      "selected": null,
      "title": "14th European Conference on Software Architecture,ECSA 2020",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85091484200&origin=inward"
      ]
    },
    {
      "abstract": "Software development paradigm is transitioning from monolithic architecture to microservices and serverless architecture. Keeping monolithic application as a single large unit of scale is a threat...",
      "authors": [
        "Deepali Bajaj",
        "Urmil Bharti",
        "Anita Goel",
        "S. C. Gupta"
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1007/978-981-15-9671-1_9",
      "keywords": [
        "Decomposition",
        "Microservices architecture",
        "Refactoring",
        "Serverless",
        "FaaS",
        "Microservices",
        "Web access log mining",
        "K-means clustering algorithm"
      ],
      "number_of_pages": 14,
      "pages": "111-124",
      "publication": {
        "category": "Book",
        "cite_score": 0.8,
        "is_potentially_predatory": false,
        "isbn": "9783030719050",
        "issn": "18650929",
        "publisher": "Springer Verlag",
        "sjr": 0.16,
        "snip": 0.32,
        "subject_areas": [
          "Mathematics (all)",
          "Computer Science (all)"
        ],
        "title": "International Conference on Software Process Improvement and Capability Determination"
      },
      "publication_date": "2020-01-01",
      "selected": null,
      "title": "Partial Migration for Re-architecting a Cloud Native Monolithic Application into Microservices and FaaS",
      "urls": [
        "https://link.springer.com/content/pdf/10.1007%2F978-981-15-9671-1_9.pdf",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85097419375&origin=inward"
      ]
    },
    {
      "abstract": "The proceedings contain 23 papers. The topics discussed include: lock-free collaboration support for cloud storage services with operation inference and transformation; carver: finding important parameters for storage system tuning; uncovering access, reuse, and sharing characteristics of I/O-intensive files on large-scale production HPC systems; scalable parallel flash firmware for many-core architectures; an empirical guide to the behavior and use of scalable persistent memory; DC-store: eliminating noisy neighbor containers using deterministic I/O performance and resource isolation; and InfiniCache: exploiting ephemeral serverless functions to build a cost-effective memory cache.",
      "authors": [],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781939133120",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings of the 18th USENIX Conference on File and Storage Technologies, FAST 2020"
      },
      "publication_date": "2020-01-01",
      "selected": null,
      "title": "Proceedings of the 18th USENIX Conference on File and Storage Technologies, FAST 2020",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85091890014&origin=inward"
      ]
    },
    {
      "abstract": "Autoscaling cloud infrastructures still remains a challenging endeavour during orchestration, given the many possible risks, options, and connected costs. In this paper we discuss the options for...",
      "authors": [
        "Matija Cankar",
        "An\u017ee Luzar",
        "Damian A. Tamburri"
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1007/978-3-030-59155-7_20",
      "keywords": [
        "Scaling infrastructures",
        "TOSCA",
        "Autoscaling",
        "Cloud computing",
        "Orchestration",
        "FaaS",
        "Function-as-a-Service"
      ],
      "number_of_pages": 9,
      "pages": "260-268",
      "publication": {
        "category": "Book",
        "cite_score": 0.8,
        "is_potentially_predatory": false,
        "isbn": "9783030719050",
        "issn": "18650929",
        "publisher": "Springer Verlag",
        "sjr": 0.16,
        "snip": 0.32,
        "subject_areas": [
          "Mathematics (all)",
          "Computer Science (all)"
        ],
        "title": "International Conference on Software Process Improvement and Capability Determination"
      },
      "publication_date": "2020-01-01",
      "selected": null,
      "title": "Auto-scaling Using TOSCA Infrastructure as Code",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85091525219&origin=inward",
        "https://link.springer.com/content/pdf/10.1007%2F978-3-030-59155-7_20.pdf"
      ]
    },
    {
      "abstract": "Computation offloading through stateless applications is gaining momentum thanks to the emergence of serverless frameworks with inherent scalability properties. However, adoption of a serverless framework in an edge computing system requires careful consideration to keep its advantages unscathed. In the cloud, micro-services are scaled automatically according to demands, but in edge computing this would incur a significantly higher cost than in a data center and cannot be as fluid. This is especially relevant in scenarios where edge nodes are spread across large areas and have relatively small computation capabilities. In this article we propose to overcome this issue by adapting the allocation of demands to the currently allocated micro-services at short timescales, with two alternative mechanisms designed for different target scenarios, both aimed at enabling distributed computing environments. The proposed solution can be integrated within the ETSI MEC standard, which specifies a reference architecture and open service interfaces. Our contribution is validated in a proof-of-concept scenario with a prototype implementation released as open source. \u00c2\u00a9 2020 IEEE.",
      "authors": [
        "Claudio Cicconetti",
        "Marco Conti",
        "Andrea Passarella",
        "Dario Sabella"
      ],
      "categories": null,
      "citations": 8,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/MCOM.001.1900498",
      "keywords": [],
      "number_of_pages": 7,
      "pages": "40-46",
      "publication": {
        "category": "Journal",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "1558-1896",
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "IEEE Communications Magazine"
      },
      "publication_date": "2020-01-01",
      "selected": null,
      "title": "Toward Distributed Computing Environments with Serverless Solutions in Edge Systems",
      "urls": [
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9040261",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85082391201&origin=inward"
      ]
    },
    {
      "abstract": "We present a solution for cloud infrastructure automation for scientific workflows. Unlike existing approaches, our solution is based on widely adopted tools, such as Terraform, and achieves a strict...",
      "authors": [
        "Bartosz Balis",
        "Michal Orzechowski",
        "Krystian Pawlik",
        "Maciej Pawlik",
        "Maciej Malawski"
      ],
      "categories": null,
      "citations": 2,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1007/978-3-030-43229-4_25",
      "keywords": [
        "Autoscaling",
        "Scientific workflows",
        "Infrastructure automation"
      ],
      "number_of_pages": 11,
      "pages": "287-297",
      "publication": {
        "category": "Book",
        "cite_score": 1.8,
        "is_potentially_predatory": false,
        "isbn": "9783030715922",
        "issn": "03029743",
        "publisher": "Springer Verlag",
        "sjr": 0.249,
        "snip": 0.628,
        "subject_areas": [
          "Databases",
          "Cryptography and Security",
          "Distributed, Parallel, and Cluster Computing",
          "Theoretical Computer Science",
          "Computer Science (all)"
        ],
        "title": "IFIP International Conference on Distributed Applications and\n  Interoperable Systems, DAIS 2017: Distributed Applications and Interoperable\n  Systems pp 83-98"
      },
      "publication_date": "2020-01-01",
      "selected": null,
      "title": "Cloud Infrastructure Automation for Scientific Workflows",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85083985955&origin=inward",
        "https://link.springer.com/content/pdf/10.1007%2F978-3-030-43229-4_25.pdf"
      ]
    },
    {
      "abstract": "Datacenters are witnessing an increasing trend in adopting microservice-based architecture for application design, which consists of a combination of different microservices. Typically these applications are short-lived and are administered with strict Service Level Objective (SLO) requirements. Traditional virtual machine (VM) based provisioning for such applications not only suffers from long latency when provisioning resources (as VMs tend to take a few minutes to start up), but also places an additional overhead of server management and provisioning on the users. This led to the adoption of serverless functions, where applications are composed as functions and hosted in containers. However, state-of-the-art schedulers employed in serverless platforms tend to look at microservice-based applications similar to conventional monolithic black-box applications. To detect all the inefficiencies, we characterize the end-to-end life cycle of these microservice-based applications in this work. Our findings show that the applications suffer from poor scheduling of microservices due to reactive container provisioning during workload fluctuations, thereby resulting in either in SLO violations or colossal container over-provisioning, in turn leading to poor resource utilization. We also find that there is an ample amount of slack available at each stage of application execution, which can potentially be leveraged to improve the overall application performance. \u00c2\u00a9 2020 IEEE.",
      "authors": [
        "Jashwant Raj Gunasekaran",
        "Prashanth Thinakaran",
        "Nachiappan Chidamabaram Nachiappan",
        "Ram Srivatsa Kannan",
        "Mahmut Taylan Kandemir",
        "Chita R. Das"
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/ICDCS47774.2020.00195",
      "keywords": [
        "serverless-functions",
        "resource-management",
        "containers",
        "scheduling"
      ],
      "number_of_pages": 2,
      "pages": "1197-1198",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": 5.3,
        "is_potentially_predatory": false,
        "isbn": "978-1-5386-1793-9",
        "issn": "1063-6927",
        "publisher": "Institute of Electrical and Electronics Engineers Inc.",
        "sjr": 0.602,
        "snip": 1.084,
        "subject_areas": [
          "Hardware and Architecture",
          "Computer Networks and Communications",
          "Software"
        ],
        "title": "Proceedings. 18th International Conference on Distributed Computing Systems (Cat. No.98CB36183)"
      },
      "publication_date": "2020-01-01",
      "selected": null,
      "title": "Characterizing Bottlenecks in Scheduling Microservices on Serverless Platforms",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85102011479&origin=inward",
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9355819"
      ]
    },
    {
      "abstract": "We build a visual interface for recommending articles to editors at The Browser, a curation service for interesting writing. From a large list of candidates, editors decide which articles are selected and shared with subscribers. To aid the editors in this decision-making task, we build a visual interface for a recommendation model, RANKFROMSETS (RFS) [2], that classifies articles based on their words. Control of the recommendation model is built into the visual interface. For example, an editor can use a topic slider to receive a new list of recommendations according to topical words in articles. These topic sliders might be used to increase or decrease the ranking of articles with words related to crime, business, or technology. The visual interface is also designed to be explanation-aware: words that contribute positively or negatively to an article's ranking are displayed. For the backend of the visual interface, RFS is trained on historical data. In an offline empirical study, we find that RFS outperforms BERT [4], a competitive classification model, in terms of recall. Further, we measure RFS to be 10 times faster to train and to return predictions 2000 times faster than BERT. This speed is a beneficial property for the visual interface, and we demonstrate that RFS can be deployed on the free tier of AWS Lambda using a short python script and numpy dependency. For reproducibility, transparency, and trust of the visual interface, we open source and release a public demonstration,1 data collection, training and deployment scripts, and model parameters. Copyright \u00c2\u00a9 2020 for this paper by its authors. Use permitted under Creative Commons License Attribution 4.0 International (CC BY 4.0).",
      "authors": [
        "Bansal, R.",
        "Olmstead, J.",
        "Bram, U.",
        "Cottrell, R.",
        "Reder, G.",
        "Altosaar, J."
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": null,
      "keywords": [
        "Visual interface",
        "Content-based recommendation",
        "Open source"
      ],
      "number_of_pages": 4,
      "pages": "77-80",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": 0.8,
        "is_potentially_predatory": false,
        "isbn": "9788670314764",
        "issn": "16130073",
        "publisher": "CEUR-WS",
        "sjr": 0.177,
        "snip": 0.345,
        "subject_areas": [
          "Computer Science (all)"
        ],
        "title": "CEUR Workshop Proceedings"
      },
      "publication_date": "2020-01-01",
      "selected": null,
      "title": "Recommending interesting writing using a controllable, explanation-aware visual interface",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85093365719&origin=inward"
      ]
    },
    {
      "abstract": "Modern analytics workloads are not predictable anymore and require database systems to be able to adapt to their performance demands and cost constraints in an instant. Existing database architectures, however, are incapable of meeting this degree of elastic scalability. For this reason, we propose a novel architecture based on function as a service platforms. This architecture and the concepts surrounding it are being implemented in our research prototype Skyrise. Copyright \u00c2\u00a9 2020 for this paper by its authors. Copying permitted for private and academic purposes.",
      "authors": [
        "Bodner, T.",
        "Plattner, H."
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": 0.8,
        "is_potentially_predatory": false,
        "isbn": "9788670314764",
        "issn": "16130073",
        "publisher": "CEUR-WS",
        "sjr": 0.177,
        "snip": 0.345,
        "subject_areas": [
          "Computer Science (all)"
        ],
        "title": "CEUR Workshop Proceedings"
      },
      "publication_date": "2020-01-01",
      "selected": null,
      "title": "Elastic query processing on function as a service platforms",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85090507758&origin=inward"
      ]
    },
    {
      "abstract": "Containerization has become an essential approach in modern software engineering. Docker is a widely-used solution for separate services (like database, backend, etc.) and run them as a standalone, isolated process instance on the same host kernel. Kubernetes is distributed approach over Docker, it supports multiple hosts for the deployment. Kubeless is a new approach that aims at the functionwise deployment, so every subprogram can be deployed, scaled, operated separately, thererfore a functional programming approach can be realized in a modern, highly distributed realm. In this paper, we present our framework that provides a programming framework over Kubeless. However, many programming development tools are not available in this realm. Stack trace is a well-known construct in programming languages to follow the function calls. We propose a mechanism to retrieve the stack trace for realizing program errors easily. Copyright \u00c2\u00a9 2020 for this paper by its authors. Use permitted under Creative Commons License Attribution 4.0 International (CC BY 4.0).",
      "authors": [
        "R\u00c3\u00a9v\u00c3\u00a9sz, \u00c3\u0081.",
        "Pataki, N."
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": null,
      "keywords": [
        "Stack trace",
        "Serverless programming",
        "Kubeless",
        "Cloud"
      ],
      "number_of_pages": 8,
      "pages": "280-287",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": 0.8,
        "is_potentially_predatory": false,
        "isbn": "9788670314764",
        "issn": "16130073",
        "publisher": "CEUR-WS",
        "sjr": 0.177,
        "snip": 0.345,
        "subject_areas": [
          "Computer Science (all)"
        ],
        "title": "CEUR Workshop Proceedings"
      },
      "publication_date": "2020-01-01",
      "selected": null,
      "title": "Stack traces in function as a service framework",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85090823582&origin=inward"
      ]
    },
    {
      "abstract": "During the past few years, serverless computing has changed the paradigm of application development and deployment in the cloud and edge due to its unique advantages, including easy administration, automatic scaling, built-in fault tolerance, etc. Nevertheless, serverless computing is also facing challenges such as long latency due to the container cold start. In this paper, we propose HotC, a container-based runtime management framework which leverages the lightweight containers to mitigate the cold start and improve network performance of serverless applications. Our evaluation results show that HotC introduces negligible overhead and can efficiently improve the performance of various applications in both cloud servers and edge devices. \u00c2\u00a9 HotEdge 2020 - 3rd USENIX Workshop on Hot Topics in Edge Computing. All rights reserved.",
      "authors": [
        "Suo, K.",
        "Shi, Y.",
        "Xu, X.",
        "Cheng, D.",
        "Chen, W."
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "HotEdge 2020 - 3rd USENIX Workshop on Hot Topics in Edge Computing"
      },
      "publication_date": "2020-01-01",
      "selected": null,
      "title": "HotC: Mitigating startup latency of serverless applications via reusing container runtimes",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85092225273&origin=inward"
      ]
    },
    {
      "abstract": "There is a growing interest in serverless compute, a cloud computing model that automates infrastructure resource-allocation and management while billing customers only for the resources they use. Workloads like stream processing benefit from high elasticity and fine-grain pricing of these serverless frameworks. However, so far, limited concurrency and high latency of server CPUs prohibit many interactive workloads (e.g., web servers and database clients) from taking advantage of serverless compute to achieve high performance. In this paper, we argue that server CPUs are ill-suited to run serverless workloads (i.e., lambdas) and present ?-NIC, an open-source framework, that runs interactive workloads directly on a SmartNIC; more specifically an ASIC-based NIC that consists of a dense grid of Network Processing Unit (NPU) cores. ?NIC leverages SmartNIC\u00e2\u0080\u0099s proximity to the network and a vast array of NPU cores to simultaneously run thousands of lambdas on a single NIC with strict tail-latency guarantees. To ease the development and deployment of lambdas, ?-NIC exposes an event-based programming abstraction, Match+Lambda, and a machine model that allows developers to compose and execute lambdas on SmartNICs easily. Our evaluation shows that ?NIC achieves up to 880x and 736x improvements in workloads\u00e2\u0080\u0099 response latency and throughput, respectively, while significantly reducing host CPU and memory usage. \u00c2\u00a9 2020 IEEE.",
      "authors": [
        "Sean Choi",
        "Muhammad Shahbaz",
        "Balaji Prabhakar",
        "Mendel Rosenblum"
      ],
      "categories": null,
      "citations": 1,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/ICDCS47774.2020.00029",
      "keywords": [
        "Low Latency Compute",
        "Programmable Network",
        "SmartNIC",
        "Serverless Compute",
        "Cloud Computing"
      ],
      "number_of_pages": 11,
      "pages": "67-77",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": 5.3,
        "is_potentially_predatory": false,
        "isbn": "978-1-5386-1793-9",
        "issn": "1063-6927",
        "publisher": "Institute of Electrical and Electronics Engineers Inc.",
        "sjr": 0.602,
        "snip": 1.084,
        "subject_areas": [
          "Hardware and Architecture",
          "Computer Networks and Communications",
          "Software"
        ],
        "title": "Proceedings. 18th International Conference on Distributed Computing Systems (Cat. No.98CB36183)"
      },
      "publication_date": "2020-01-01",
      "selected": null,
      "title": "\u03bb-NIC: Interactive Serverless Compute on Programmable SmartNICs",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85097094674&origin=inward",
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9355790"
      ]
    },
    {
      "abstract": "Cloud computing has begun a transformation from using virtual machines to containers. Containers are attractive because multiple of them can share a single kernel, and add minimal performance overhead. Cloud providers leverage the lean nature of containers to run hundreds of them on a few cores. Furthermore, containers enable the serverless paradigm, which leads to the creation of short-lived processes. In this work, we identify that containerized environments create page translations that are extensively replicated across containers in the TLB and in page tables. The result is high TLB pressure and redundant kernel work during page table management. To remedy this situation, this paper proposes BabelFish, a novel architecture to share page translations across containers in the TLB and in page tables. We evaluate BabelFish with simulations of an 8-core processor running a set of Docker containers in an environment with conservative container co-location. On average, under BabelFish, 53% of the translations in containerized workloads and 93% of the translations in serverless workloads are shared. As a result, BabelFish reduces the mean and tail latency of containerized data-serving workloads by 11% and 18%, respectively. It also lowers the execution time of containerized compute workloads by 11%. Finally, it reduces serverless function bring-up time by 8% and execution time by 10%-55%. \u00c2\u00a9 2020 IEEE.",
      "authors": [
        "Dimitrios Skarlatos",
        "Umur Darbaz",
        "Bhargava Gopireddy",
        "Nam Sung Kim",
        "Josep Torrellas"
      ],
      "categories": null,
      "citations": 3,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/ISCA45697.2020.00049",
      "keywords": [
        "Containers",
        "Page Tables",
        "Virtual Memory",
        "Address Translation",
        "TLB"
      ],
      "number_of_pages": 14,
      "pages": "501-514",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-7281-4662-1",
        "issn": "10636897",
        "publisher": "Institute of Electrical and Electronics Engineers Inc.",
        "sjr": 1.7,
        "snip": 8.005,
        "subject_areas": [
          "Hardware and Architecture"
        ],
        "title": "2020 ACM/IEEE 47th Annual International Symposium on Computer Architecture (ISCA)"
      },
      "publication_date": "2020-01-01",
      "selected": null,
      "title": "BabelFish: Fusing Address Translations for Containers",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85091974590&origin=inward",
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9138923"
      ]
    },
    {
      "abstract": "More often than not, commuters are left stranded at pick-up spots \u2013 clueless about the availability and proximity of public transport vehicles hence the stigma of public transport being unreliable,...",
      "authors": [
        "Menzi Skhosana",
        "Absalom E. Ezugwu",
        "Nadim Rana",
        "Shafi\u2019i M. Abdulhamid"
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1007/978-3-030-58817-5_47",
      "keywords": [
        "Bus location tracking",
        "Smart Irenbus",
        "Long-term forecasting",
        "Mobile tracking",
        "Short-term forecasting"
      ],
      "number_of_pages": 17,
      "pages": "649-665",
      "publication": {
        "category": "Book",
        "cite_score": 1.8,
        "is_potentially_predatory": false,
        "isbn": "9783030715922",
        "issn": "03029743",
        "publisher": "Springer Verlag",
        "sjr": 0.249,
        "snip": 0.628,
        "subject_areas": [
          "Databases",
          "Cryptography and Security",
          "Distributed, Parallel, and Cluster Computing",
          "Theoretical Computer Science",
          "Computer Science (all)"
        ],
        "title": "IFIP International Conference on Distributed Applications and\n  Interoperable Systems, DAIS 2017: Distributed Applications and Interoperable\n  Systems pp 83-98"
      },
      "publication_date": "2020-01-01",
      "selected": null,
      "title": "An Intelligent Machine Learning-Based Real-Time Public Transport System",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85092668191&origin=inward",
        "https://link.springer.com/content/pdf/10.1007%2F978-3-030-58817-5_47.pdf"
      ]
    },
    {
      "abstract": "With the proliferation of new mobile devices, mobile cloud computing technology has emerged to provide rich computing and storage functions for mobile users. The explosive growth of mobile data has led to an increased demand for solutions that conserve storage resources. Data deduplication is a promising technique that eliminates data redundancy for storage. For mobile cloud storage services, enabling the deduplication of encrypted data is of vital importance to reduce costs and preserve data confidentiality. However, recently proposed solutions for encrypted deduplication lack the desired level of security and efficiency. In this paper, we propose a novel scheme for serverless efficient encrypted deduplication (SEED) in mobile cloud computing environments. Without the aid of additional servers, SEED ensures confidentiality, data integrity, and collusion resistance for outsourced data. The absence of dedicated servers increases the effectiveness of SEED for mobile cloud storage services, in which user mobility is essential. In addition, noninteractive file encryption with the support of lazy encryption greatly reduces latency in the file-upload process. The proposed indexing structure (D-tree) supports the deduplication algorithm and thus makes SEED much more efficient and scalable. Security and performance analyses prove the efficiency and effectiveness of SEED for mobile cloud storage services.",
      "authors": [
        "Shin, Youngjoo",
        "Hur, Junbeom",
        "Koo, Dongyoung",
        "Yun, Joobeom"
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "https://doi.org/10.1155/2020/3046595",
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": {
        "category": "Journal",
        "cite_score": 4.2,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "19390114",
        "publisher": "Hindawi Limited",
        "sjr": 0.446,
        "snip": 1.155,
        "subject_areas": [
          "Information Systems",
          "Computer Networks and Communications"
        ],
        "title": "Security and Communication Networks"
      },
      "publication_date": "2020-01-01",
      "selected": null,
      "title": "Toward Serverless and Efficient Encrypted Deduplication in Mobile Cloud Computing Environments",
      "urls": [
        "https://downloads.hindawi.com/journals/scn/2020/3046595.pdf",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85091985586&origin=inward"
      ]
    },
    {
      "abstract": "Modern cloud computing environments strive to provide users with fine-grained scheduling and accounting, as well as seamless scalability. The most recent face to this trend is the \u00e2\u0080\u009cserverless\u00e2\u0080\u009d model, in which individual functions, or microservices, are executed on demand. Popular implementations of this model, however, operate at a relatively coarse granularity, occupying resources for minutes at a time and requiring hundreds of milliseconds for a cold launch. In this paper, we describe a novel design for providing \u00e2\u0080\u009cfunctions as a service\u00e2\u0080\u009d (FaaS) that attempts to be truly micro: cold launch times in microseconds that enable even finer-grained resource accounting and support latency-critical applications. Our proposal is to eschew much of the traditional serverless infrastructure in favor of language-based isolation. The result is microsecond-granularity launch latency, and microsecond-scale preemptive scheduling using high-precision timers. \u00c2\u00a9 Proceedings of the 2018 USENIX Annual Technical Conference, USENIX ATC 2018. All rights reserved.",
      "authors": [
        "Boucher, S.",
        "Kalia, A.",
        "Andersen, D.G.",
        "Kaminsky, M."
      ],
      "categories": null,
      "citations": 21,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": 6,
      "pages": "645-650",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781939133021",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings of the 2018 USENIX Annual Technical Conference, USENIX ATC 2018"
      },
      "publication_date": "2020-01-01",
      "selected": null,
      "title": "Putting the \u201cmicro\u201d back in microservice",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85060929156&origin=inward"
      ]
    },
    {
      "abstract": "Cloud computing has seen a large rise in popularity in recent years and is becoming a cost effective alternative to on-premise computing, with theoretically unlimited scalability. However, so far little progress has been made in adapting the cloud for high performance computing (HPC) tasks, such as seismic imaging and inversion. As the cloud does not provide the same type of fast and reliable connections as conventional HPC clusters, porting legacy codes developed for HPC environments to the cloud is ineffective and misses out on an opportunity to take advantage of new technologies presented by it. We present a novel approach of bringing seismic imaging and inversion workflows to the cloud, which does not rely on a traditional HPC environment, but is based on serverless and event-driven computations. Computational resources are assigned dynamically in response to events, thus minimizing idle time and providing resilience to hardware failures. We test our workflow on two large-scale imaging examples and demonstrate that cost-effective HPC in the cloud is possible, but requires careful reconsiderations of how to bring software to the cloud. \u00c2\u00a9 2019 SEG",
      "authors": [
        "Witte, P.A.",
        "Louboutin, M.",
        "Modzelewski, H.",
        "Jones, C.",
        "Selvage, J.",
        "Herrmann, F.J."
      ],
      "categories": null,
      "citations": 2,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1190/segam2019-3215069.1",
      "keywords": [],
      "number_of_pages": 5,
      "pages": "3984-3988",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "SEG International Exposition and Annual Meeting 2019"
      },
      "publication_date": "2020-01-01",
      "selected": null,
      "title": "Event-driven workflows for large-scale seismic imaging in the cloud",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85079504745&origin=inward"
      ]
    },
    {
      "abstract": "Data lakes have evolved over the last decade from highly complex IT infrastructures on-premise to simpler serverless cloud environments. This change makes data lakes much less difficult to maintain and operate, which provides an opportunity to democratise them beyond operational business intelligence teams to a wider audience, namely marketing analytics practitioners. At the same time, the availability of marketing data has also evolved over the last decade. Marketing technology platforms have proliferated the variety, velocity and volume of data for marketers to process. This paper considers how a data lake architecture could be adapted for marketers to help them go further with their data. \u00c2\u00a9 Henry Stewart Publications.",
      "authors": [
        "Kamena, R."
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": null,
      "keywords": [
        "Big Data analytics",
        "Data architecture",
        "Data management systems",
        "Marketing data",
        "Cloud analytics",
        "Data lake"
      ],
      "number_of_pages": 8,
      "pages": "65-72",
      "publication": {
        "category": "Journal",
        "cite_score": 0.3,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "20547544",
        "publisher": "Henry Stewart Publications",
        "sjr": 0.211,
        "snip": 0.141,
        "subject_areas": [
          "Marketing",
          "Statistics, Probability and Uncertainty",
          "Strategy and Management"
        ],
        "title": "Applied Marketing Analytics"
      },
      "publication_date": "2020-01-01",
      "selected": null,
      "title": "Adapting the enterprise data lake architecture for marketing analytics",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85099688590&origin=inward"
      ]
    },
    {
      "abstract": "This paper considers how WASM can be run in different serverless contexts. A comparison of different serverside WASM runtime options is considered, specifically focused on wasmer, wasmtime and lucet....",
      "authors": [
        "Se\u00e1n Murphy",
        "Leonardas Persaud",
        "William Martini",
        "Bill Bosshard"
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1007/978-3-030-58858-8_15",
      "keywords": [
        "WASM",
        "Serverless",
        "Runtimes",
        "Web Assembly"
      ],
      "number_of_pages": 5,
      "pages": "141-145",
      "publication": {
        "category": "Book",
        "cite_score": 1.5,
        "is_potentially_predatory": false,
        "isbn": "9783030588571",
        "issn": "18651348",
        "publisher": "Springer Verlag",
        "sjr": 0.214,
        "snip": 0.493,
        "subject_areas": [
          "Information Systems and Management",
          "Information Systems",
          "Business and International Management",
          "Management Information Systems",
          "Modeling and Simulation",
          "Control and Systems Engineering"
        ],
        "title": "International Conference on Business Information Systems"
      },
      "publication_date": "2020-01-01",
      "selected": null,
      "title": "On the Use of Web Assembly in a Serverless Context",
      "urls": [
        "https://link.springer.com/content/pdf/10.1007%2F978-3-030-58858-8_15.pdf",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85092331856&origin=inward"
      ]
    },
    {
      "abstract": "The term serverless is often used to describe cloud applications that comprise components managed by third parties. Like any other cloud application, serverless applications are often tightly-coupled with providers, their features, models, and APIs. As a result, when their portability to another provider has to be assessed, application owners must deal with identification of heterogeneous lock-in issues and provider-specific technical details. Unfortunately, this process is tedious, error-prone, and requires significant technical expertise in the domains of serverless and cloud computing. In this work, we introduce SEAPORT, a method for automatically assessing the portability of serverless applications with respect to a chosen target provider or platform. The method introduces (i) a canonical serverless application model, and (ii) the concepts for portability assessment involving classification and components similarity calculation together with the static code analysis. The method aims to be compatible with existing migration concepts to allow using it as a complementary part for serverless use cases. We present an architecture of a decision support system supporting automated assessment of the given application model with respect to the target provider. To validate the technical feasibility of the method, we implement the system prototypically. \u00c2\u00a9 Copyright 2020 by SCITEPRESS - Science and Technology Publications, Lda. All rights reserved.",
      "authors": [
        "Yussupov, V.",
        "Breitenbucher, U.",
        "Kaplan, A.",
        "Leymann, F."
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": null,
      "keywords": [
        "Serverless",
        "Decision Support System",
        "FaaS",
        "Portability",
        "Function-as-a-Service"
      ],
      "number_of_pages": 12,
      "pages": "456-467",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9789897584244",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "CLOSER 2020 - Proceedings of the 10th International Conference on Cloud Computing and Services Science"
      },
      "publication_date": "2020-01-01",
      "selected": null,
      "title": "SEAPORT: Assessing the portability of serverless applications",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85088377793&origin=inward"
      ]
    },
    {
      "abstract": "The cloudlets can be deployed over mobile devices or even fixed state powerful servers that can provide services to its users in physical proximity. Executing workloads on cloudlets involves challenges centering on limited computing resources. Executing Virtual Machine (VM) based workloads for cloudlets does not scale due to the high computational demands of a VM. Another approach is to execute container-based workloads on cloudlets. However, container-based methods suffer from the cold-start problem, making it unfit for mobile edge computing scenarios. In this work, we introduce executing serverless functions on Web-assembly as workloads for both mobile and fixed state cloudlets. To execute the serverless workload on mobile cloudlets, we built a lightweight Web-assembly runtime. The orchestration of workloads and management of cloudlets or serverless runtime is done by introducing software-defined Cyber Foraging (SDCF) framework, which is a hybrid controller including a control plane for local networks and cloudlets. The SDCF framework integrates the management of cloudlets by utilizing the control plane traffic of the underlying network and thus avoids the extra overhead of cloudlet control plane traffic management. We evaluate SDCF using three use cases: (1) Price aware resource allocation (2) Energy aware resource scheduling for mobile cloudlets (3) Mobility pattern aware resource scheduling in mobile cloudlets. Through the virtualization of cloudlet resources, SDCF preserves minimal maintenance property by providing a centralized approach for configuring and management of cloudlets. \u00c2\u00a9 2004-2012 IEEE.",
      "authors": [
        "S. Nithya",
        "M. Sangeetha",
        "K. N. Apinaya Prethi",
        "Kshira Sagar Sahoo",
        "Sanjaya Kumar Panda",
        "Amir H. Gandomi"
      ],
      "categories": null,
      "citations": 5,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/TNSM.2020.3015657",
      "keywords": [
        "cloudlets",
        "Cyber foraging",
        "network virtualizations",
        "software-defined network"
      ],
      "number_of_pages": 13,
      "pages": "2423-2435",
      "publication": {
        "category": "Journal",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "2373-7379",
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "IEEE Transactions on Network and Service Management"
      },
      "publication_date": "2020-01-01",
      "selected": null,
      "title": "SDCF: A Software-Defined Cyber Foraging Framework for Cloudlet Environment",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85097769024&origin=inward",
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9163409"
      ]
    },
    {
      "abstract": "In this paper, we provide a multivocal literature review of Function as a Service (FaaS) infrastructures. FaaS is an important, emerging category of cloud computing, which requires that software...",
      "authors": [
        "Jake Grogan",
        "Connor Mulready",
        "James McDermott",
        "Martynas Urbanavicius",
        "Murat Yilmaz",
        "Yalemisew Abgaz",
        "Andrew McCarren",
        "Silvana Togneri MacMahon",
        "Vahid Garousi",
        "Peter Elger",
        "Paul Clarke"
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1007/978-3-030-56441-4_5",
      "keywords": [
        "Google Cloud Functions",
        "AWS Lambda",
        "Microsoft Azure",
        "Serverless",
        "Cloud computing",
        "Constraints",
        "Functions-as-a-Service",
        "Scalability",
        "Infrastructures"
      ],
      "number_of_pages": 18,
      "pages": "58-75",
      "publication": {
        "category": "Book",
        "cite_score": 0.8,
        "is_potentially_predatory": false,
        "isbn": "9783030719050",
        "issn": "18650929",
        "publisher": "Springer Verlag",
        "sjr": 0.16,
        "snip": 0.32,
        "subject_areas": [
          "Mathematics (all)",
          "Computer Science (all)"
        ],
        "title": "International Conference on Software Process Improvement and Capability Determination"
      },
      "publication_date": "2020-01-01",
      "selected": null,
      "title": "A Multivocal Literature Review of Function-as-a-Service (FaaS) Infrastructures and Implications for Software Developers",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85089719307&origin=inward",
        "https://link.springer.com/content/pdf/10.1007%2F978-3-030-56441-4_5.pdf"
      ]
    },
    {
      "abstract": "In this paper we present the results of our studies focused on enabling predictable performance for functions executing in scalable, multi-tenant Function-as-a-Service environments. We start by...",
      "authors": [
        "Andrzej Kuriata",
        "Ramesh G. Illikkal"
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1007/978-3-030-58858-8_14",
      "keywords": [
        "Scheduling",
        "Telemetry",
        "Performance"
      ],
      "number_of_pages": 8,
      "pages": "133-140",
      "publication": {
        "category": "Book",
        "cite_score": 1.5,
        "is_potentially_predatory": false,
        "isbn": "9783030588571",
        "issn": "18651348",
        "publisher": "Springer Verlag",
        "sjr": 0.214,
        "snip": 0.493,
        "subject_areas": [
          "Information Systems and Management",
          "Information Systems",
          "Business and International Management",
          "Management Information Systems",
          "Modeling and Simulation",
          "Control and Systems Engineering"
        ],
        "title": "International Conference on Business Information Systems"
      },
      "publication_date": "2020-01-01",
      "selected": null,
      "title": "Predictable Performance for QoS-Sensitive, Scalable, Multi-tenant Function-as-a-Service Deployments",
      "urls": [
        "https://link.springer.com/content/pdf/10.1007%2F978-3-030-58858-8_14.pdf",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85092198450&origin=inward"
      ]
    },
    {
      "abstract": "Serverless computing promises to provide applications with cost savings and extreme elasticity. Unfortunately, slow application and container initialization can hurt common-case latency on serverless platforms. In this work, we analyze Linux container primitives, identifying scalability bottlenecks related to storage and network isolation. We also analyze Python applications from GitHub and show that importing many popular libraries adds about 100 ms to startup. Based on these findings, we implement SOCK, a container system optimized for serverless workloads. Careful avoidance of kernel scalability bottlenecks gives SOCK an 18\u00c3\u0097 speedup over Docker. A generalized-Zygote provisioning strategy yields an additional 3\u00c3\u0097 speedup. A more sophisticated three-tier caching strategy based on Zygotes provides a 45\u00c3\u0097 speedup over SOCK without Zygotes. Relative to AWS Lambda and OpenWhisk, OpenLambda with SOCK reduces platform overheads by 2.8\u00c3\u0097 and 5.3\u00c3\u0097 respectively in an image processing case study. \u00c2\u00a9 Proceedings of the 2018 USENIX Annual Technical Conference, USENIX ATC 2018. All rights reserved.",
      "authors": [
        "Oakes, E.",
        "Yang, L.",
        "Zhou, D.",
        "Houck, K.",
        "Harter, T.",
        "Arpaci-Dusseau, A.C.",
        "Arpaci-Dusseau, R.H."
      ],
      "categories": null,
      "citations": 69,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": 13,
      "pages": "57-69",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781939133021",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings of the 2018 USENIX Annual Technical Conference, USENIX ATC 2018"
      },
      "publication_date": "2020-01-01",
      "selected": null,
      "title": "SOCK: Rapid task provisioning with serverless-optimized containers",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85077468687&origin=inward"
      ]
    },
    {
      "abstract": "Many scientific processes and applications can be represented in the standardized form of workflows. One of the key challenges related to managing and executing workflows is scheduling. As an...",
      "authors": [
        "Dawid Tomasiewicz",
        "Maciej Pawlik",
        "Maciej Malawski",
        "Katarzyna Rycerz"
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1007/978-3-030-50433-5_40",
      "keywords": [
        "Serverless",
        "Workflow scheduling",
        "QUBO",
        "D-Wave"
      ],
      "number_of_pages": 15,
      "pages": "516-530",
      "publication": {
        "category": "Book",
        "cite_score": 1.8,
        "is_potentially_predatory": false,
        "isbn": "9783030715922",
        "issn": "03029743",
        "publisher": "Springer Verlag",
        "sjr": 0.249,
        "snip": 0.628,
        "subject_areas": [
          "Databases",
          "Cryptography and Security",
          "Distributed, Parallel, and Cluster Computing",
          "Theoretical Computer Science",
          "Computer Science (all)"
        ],
        "title": "IFIP International Conference on Distributed Applications and\n  Interoperable Systems, DAIS 2017: Distributed Applications and Interoperable\n  Systems pp 83-98"
      },
      "publication_date": "2020-01-01",
      "selected": null,
      "title": "Foundations for Workflow Application Scheduling on D-Wave System",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85087277395&origin=inward",
        "https://link.springer.com/content/pdf/10.1007%2F978-3-030-50433-5_40.pdf"
      ]
    },
    {
      "abstract": "This paper makes a practical comparison between serverfull and serverless architectures for the same specific cloud application used for face recognition. It turns out that both approaches have...",
      "authors": [
        "Oliviu Matei",
        "Pawel Skrzypek",
        "Robert Heb",
        "Alexandru Moga"
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1007/978-3-030-63322-6_24",
      "keywords": [
        "Software architecture",
        "Cloud",
        "Serverless computing"
      ],
      "number_of_pages": 11,
      "pages": "304-314",
      "publication": {
        "category": "Book",
        "cite_score": 0.9,
        "is_potentially_predatory": false,
        "isbn": "9783030577957",
        "issn": "21945357",
        "publisher": "Springer Verlag",
        "sjr": 0.184,
        "snip": 0.428,
        "subject_areas": [
          "Control and Systems Engineering",
          "Computer Science (all)"
        ],
        "title": "Workshops of  the International Conference on Advanced Information Networking and Applications"
      },
      "publication_date": "2020-01-01",
      "selected": null,
      "title": "Transition from Serverfull to Serverless Architecture in Cloud-Based Software Applications",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85098192313&origin=inward",
        "https://link.springer.com/content/pdf/10.1007%2F978-3-030-63322-6_24.pdf"
      ]
    },
    {
      "abstract": "This paper introduces Beldi, a library and runtime system for writing and composing fault-tolerant and transactional stateful serverless functions. Beldi runs on existing providers and lets developers write complex stateful applications that require fault tolerance and transactional semantics without the need to deal with tasks such as load balancing or maintaining virtual machines. Beldi's contributions include extending the log-based fault-tolerant approach in Olive (OSDI 2016) with new data structures, transaction protocols, function invocations, and garbage collection. They also include adapting the resulting framework to work over a federated environment where each serverless function has sovereignty over its own data. We implement three applications on Beldi, including a movie review service, a travel reservation system, and a social media site. Our evaluation on 1,000 AWS Lambdas shows that Beldi's approach is effective and affordable. \u00c2\u00a9 2020 Proceedings of the 14th USENIX Symposium on Operating Systems Design and Implementation, OSDI 2020. All rights reserved.",
      "authors": [
        "Zhang, H.",
        "Cardoza, A.",
        "Chen, P.B.",
        "Angel, S.",
        "Liu, V."
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": 18,
      "pages": "1187-1204",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781939133199",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings of the 14th USENIX Symposium on Operating Systems Design and Implementation, OSDI 2020"
      },
      "publication_date": "2020-01-01",
      "selected": null,
      "title": "Fault-tolerant and transactional stateful serverless workflows",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85096802786&origin=inward"
      ]
    },
    {
      "abstract": "Cloud computing offerings evolve continuously. A recent trend is the Function as a Service paradigm which confronts developers with the decision whether adopting this new paradigm can be beneficial for parts of their application. However, many factors influence this decision or even prevent the usage of FaaS. Therefore, this paper provides a structured overview of relevant technical factors to guide the decision process. \u00c2\u00a9 2020 for this paper by its authors.",
      "authors": [
        "Lichtenth\u00c3\u00a4ler, R.",
        "Winzinger, S.",
        "Manner, J.",
        "Wirtz, G."
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": null,
      "keywords": [
        "Serverless function",
        "Serverless",
        "Cloud computing",
        "Decision",
        "FaaS"
      ],
      "number_of_pages": 9,
      "pages": "39-47",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": 0.8,
        "is_potentially_predatory": false,
        "isbn": "9788670314764",
        "issn": "16130073",
        "publisher": "CEUR-WS",
        "sjr": 0.177,
        "snip": 0.345,
        "subject_areas": [
          "Computer Science (all)"
        ],
        "title": "CEUR Workshop Proceedings"
      },
      "publication_date": "2020-01-01",
      "selected": null,
      "title": "When to use FaaS? - Influencing technical factors for and against using serverless functions",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85083773843&origin=inward"
      ]
    },
    {
      "abstract": "As more open source educational software applications become available, higher educational institutions have the opportunity to utilize these cost efficient tools to deliver the instruction traditionally taught off line with heavy associated costs. Here we introduce a machine learning course that uses a simple, cloud computing approach to creating course materials. We see this type of serverless, cloud-based, literate programming to be the future of computer science education in non-traditional higher educational institutions in particular serving students who will need the basic literacy for computing and computation but will not pursue the traditional computer scientist path. \u00c2\u00a9 2020, Association for the Advancement of Artificial Intelligence.",
      "authors": [
        "Hwang, M.",
        "Williamson, C."
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": 2,
      "pages": "13502-13503",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781577358350",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "AAAI 2020 - 34th AAAI Conference on Artificial Intelligence"
      },
      "publication_date": "2020-01-01",
      "selected": null,
      "title": "Using cloud tools for literate programming to redesign an ai course for non-traditional college students",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85106493044&origin=inward"
      ]
    },
    {
      "abstract": "Cloud computing has evolved into a scenario where multiple providers make up the list of services that process client workloads, resulting in Functions as a Service. Because of this, this work proposes an approach of using RPC based FaaS. Using the Node2FaaS framework as a NodeJS application converter and integrated with Terraform as a cloud orchestrator. So, CPU, memory and I/O overhead tests were performed on a local environment and on the three main FaaS services: AWS Lambda, Google Functions and Azure Functions. The results showed significant runtime gains between the local environment and FaaS services, reaching up to a 99% reduction in runtime when the tests were run on cloud providers. \u00c2\u00a9 Copyright 2020 by SCITEPRESS - Science and Technology Publications, Lda. All rights reserved.",
      "authors": [
        "De Carvalho, L.R.",
        "De Araujo, A.P.F."
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": null,
      "keywords": [
        "Terraform",
        "AWS Lambda",
        "Node2FaaS",
        "Azure Functions",
        "Function as a Service",
        "Orchestrators",
        "Google Functions",
        "Multicloud",
        "Cloud Computing"
      ],
      "number_of_pages": 8,
      "pages": "312-319",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9789897584244",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "CLOSER 2020 - Proceedings of the 10th International Conference on Cloud Computing and Services Science"
      },
      "publication_date": "2020-01-01",
      "selected": null,
      "title": "Remote procedure call approach using the node2faas framework with terraform for function as a service",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85088369136&origin=inward"
      ]
    },
    {
      "abstract": "Resource allocation for serverless query processing is a challenge. Unfortunately, prior approaches have treated queries as black boxes, thereby missing significant resource optimization opportunities. In this paper, we propose a plan-aware resource allocation approach where the resources are adaptively allocated based on the runtime characteristics of the query plan. We show the savings opportunity from such an allocation scheme over production SCOPE workloads at Microsoft. We present our current implementation of a greedy version that periodically estimates the peak resource for the remaining of the query as the query execution progresses. Our experimental evaluation shows that such an implementation could already save more than 8% resource usage over one of our production virtual clusters. We conclude by opening the discussion on various strategies for plan-aware resource allocation and their implications on the cloud computing stack. \u00c2\u00a9 HotCloud 2020 - 12th USENIX Workshop on Hot Topics in Cloud Computing, co-located with USENIX ATC 2020. All rights reserved.",
      "authors": [
        "Bag, M.",
        "Jindal, A.",
        "Patel, H."
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "HotCloud 2020 - 12th USENIX Workshop on Hot Topics in Cloud Computing, co-located with USENIX ATC 2020"
      },
      "publication_date": "2020-01-01",
      "selected": null,
      "title": "Towards plan-aware resource allocation in serverless query processing",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85091926041&origin=inward"
      ]
    },
    {
      "abstract": "Serverless computing is an emerging paradigm in which an application's resource provisioning and scaling are managed by third-party services. Examples include AWS Lambda, Azure Functions, and Google Cloud Functions. Behind these services' easy-to-use APIs are opaque, complex infrastructure and management ecosystems. Taking on the viewpoint of a serverless customer, we conduct the largest measurement study to date, launching more than 50,000 function instances across these three services, in order to characterize their architectures, performance, and resource management efficiency. We explain how the platforms isolate the functions of different accounts, using either virtual machines or containers, which has important security implications. We characterize performance in terms of scalability, coldstart latency, and resource efficiency, with highlights including that AWS Lambda adopts a bin-packing-like strategy to maximize VM memory utilization, that severe contention between functions can arise in AWS and Azure, and that Google had bugs that allow customers to use resources for free. \u00c2\u00a9 Proceedings of the 2018 USENIX Annual Technical Conference, USENIX ATC 2018. All rights reserved.",
      "authors": [
        "Wang, L.",
        "Li, M.",
        "Zhang, Y.",
        "Ristenpart, T.",
        "Swift, M."
      ],
      "categories": null,
      "citations": 103,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": 13,
      "pages": "133-145",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781939133021",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings of the 2018 USENIX Annual Technical Conference, USENIX ATC 2018"
      },
      "publication_date": "2020-01-01",
      "selected": null,
      "title": "Peeking behind the curtains of serverless platforms",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85077448177&origin=inward"
      ]
    },
    {
      "abstract": "Over the last several years, cloud computing has imposed as a major paradigm in software development by providing computer resources over the Internet. Among various cloud service models, Backend as a Service (BaaS) stands out as a model that targets the specific needs of web and mobile developers. By providing the backend for applications, it facilitates and expedites the software development process. In order to prevent major problems with the use of third-party BaaS providers, this paper advocates building your own BaaS platform, as well as several works ahead of it. However, the development of a BaaS platform carries various challenges regarding architecture and design. This paper strives to define the core service offerings of a BaaS platform and propose a method for providing an architectural design of a BaaS platform based on a microservice architecture. Microservice architecture is the preferred architectural style for cloud solutions since it promotes loose coupling, ease of scaling and integration with third-party services, which are fundamental stipulations of BaaS platforms. The methodology adopted in designing a microservice-based BaaS platform was formed in accordance with an Application Programming Interface (API)-first approach, which strives to design a suitable, representative API of the platform. To the best of authors\u2019 knowledge, this paper proposes the lowest-level design of a BaaS platform so far, describing the entity relations, integration patterns, and communication styles. Ultimately, the proposed design was implemented and tested for its functional requirements. In that regard, specific test cases that mirror the actual workflow of the BaaS platform were constructed.",
      "authors": [
        "Mario Dudjak",
        "Goran Martinovi\u0107"
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.5755/j01.itc.49.2.23757",
      "keywords": [
        "Backend as a Service (BaaS)",
        "API-first approach",
        "Cloud computing",
        "API testing",
        "Microservice ar chitecture"
      ],
      "number_of_pages": 18,
      "pages": "206-223",
      "publication": {
        "category": "Journal",
        "cite_score": 2.2,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "1392124X",
        "publisher": "Kauno Technologijos Universitetas",
        "sjr": 0.286,
        "snip": 0.613,
        "subject_areas": [
          "Control and Systems Engineering",
          "Electrical and Electronic Engineering",
          "Computer Science Applications"
        ],
        "title": "Information Technology and Control "
      },
      "publication_date": "2020-01-01",
      "selected": null,
      "title": "An API-first methodology for designing a microservice-based Backend as a Service platform",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85090739899&origin=inward",
        "https://itc.ktu.lt/index.php/ITC/article/download/23757/13824"
      ]
    },
    {
      "abstract": "[Context] Serverless is a recent technology that enables companies to reduce the overhead for provisioning, scaling and in general managing the infrastructure. Companies are increasingly adopting Serverless, by migrating existing applications to this new paradigm. Different practitioners proposed patterns for composing and managing serverless functions. However, some of these patterns offer different solutions to solve the same problem, which makes it hard to select the most suitable solution for each problem. [Goal] In this work, we aim at supporting practitioners in understanding the different patterns, by classifying them and reporting possible benefits and issues. [Method]We adopted a multivocal literature review process, surveying peer-reviewed and grey literature and classifying patterns (common solutions to solve common problems), together with benefits and issues. [Results] Among 24 selected works, we identified 32 patterns that we classified as orchestration, aggregation, event-management, availability, communication, and authorization. [Conclusion] Practitioners proposed a list of fairly consistent patterns, even if a small number of patterns proposed different solutions to similar problems. Some patterns emerged to circumvent some serverless limitations, while others for some classical technical problems (e.g. publisher/subscriber). \u00c2\u00a9 Copyright 2020 by SCITEPRESS - Science and Technology Publications, Lda. All rights reserved.",
      "authors": [
        "Taibi, D.",
        "El Ioini, N.",
        "Pahl, C.",
        "Niederkofler, J.R.S."
      ],
      "categories": null,
      "citations": 10,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": null,
      "keywords": [
        "Function as a Service",
        "Serverless",
        "Cloud",
        "Serverless Functions"
      ],
      "number_of_pages": 12,
      "pages": "181-192",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9789897584244",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "CLOSER 2020 - Proceedings of the 10th International Conference on Cloud Computing and Services Science"
      },
      "publication_date": "2020-01-01",
      "selected": null,
      "title": "Patterns for serverless functions (Function-as-a-Service): A multivocal literature review",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85088373702&origin=inward"
      ]
    },
    {
      "abstract": "Serverless applications create an opportunity for more granular scheduling across machines in cloud platforms that can improve efficiency, especially if functions can be run within storage services to eliminate data movement. However, embedding code within storage services creates code isolation overheads that offset some of those savings. We argue for a new approach to serverless function scheduling that can look within serverless applications' functions, profile their data movement and networking costs, and model the impact of different code placement and isolation schemes for those costs. Beyond improvements in efficiency, such an approach would fuel innovation in cloud isolation schemes and programming abstractions, since a scheduler with a modular cost modeling approach could incorporate new schemes and automatically use them to improve efficiency for pre-existing applications. \u00c2\u00a9 HotCloud 2020 - 12th USENIX Workshop on Hot Topics in Cloud Computing, co-located with USENIX ATC 2020. All rights reserved.",
      "authors": [
        "Bhardwaj, A.",
        "Gupta, M.",
        "Stutsman, R."
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "HotCloud 2020 - 12th USENIX Workshop on Hot Topics in Cloud Computing, co-located with USENIX ATC 2020"
      },
      "publication_date": "2020-01-01",
      "selected": null,
      "title": "On the impact of isolation costs on locality-aware cloud scheduling",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85091948986&origin=inward"
      ]
    },
    {
      "abstract": "Cloud technology is transforming IT architecture. Serverless is a new paradigm driven by cloud technology that offers chances for scalable and reliable IT services. All bigger cloud service...",
      "authors": [
        "Alexander Poth",
        "Niklas Schubert",
        "Andreas Riel"
      ],
      "categories": null,
      "citations": 2,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1007/978-3-030-56441-4_21",
      "keywords": [
        "Energy footprint",
        "Serverless architecture",
        "Sustainable service model",
        "Function as a Service (FaaS)",
        "Efficiency evaluation"
      ],
      "number_of_pages": 13,
      "pages": "289-301",
      "publication": {
        "category": "Book",
        "cite_score": 0.8,
        "is_potentially_predatory": false,
        "isbn": "9783030719050",
        "issn": "18650929",
        "publisher": "Springer Verlag",
        "sjr": 0.16,
        "snip": 0.32,
        "subject_areas": [
          "Mathematics (all)",
          "Computer Science (all)"
        ],
        "title": "International Conference on Software Process Improvement and Capability Determination"
      },
      "publication_date": "2020-01-01",
      "selected": null,
      "title": "Sustainability Efficiency Challenges of Modern IT Architectures \u2013 A Quality Model for Serverless Energy Footprint",
      "urls": [
        "https://link.springer.com/content/pdf/10.1007%2F978-3-030-56441-4_21.pdf",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85089718839&origin=inward"
      ]
    },
    {
      "abstract": "Serverless computing frameworks allow users to launch thousands of concurrent tasks with high elasticity and fine-grain resource billing without explicitly managing computing resources. While already successful for IoT and web microservices, there is increasing interest in leveraging serverless computing to run data-intensive jobs, such as interactive analytics. A key challenge in running analytics workloads on serverless platforms is enabling tasks in different execution stages to efficiently communicate data between each other via a shared data store. In this paper, we explore the suitability of different cloud storage services (e.g., object stores and distributed caches) as remote storage for serverless analytics. Our analysis leads to key insights to guide the design of an ephemeral cloud storage system, including the performance and cost efficiency of Flash storage for serverless application requirements and the need for a pay-what-you-use storage service that can support the high throughput demands of highly parallel applications. \u00c2\u00a9 Proceedings of the 2018 USENIX Annual Technical Conference, USENIX ATC 2018. All rights reserved.",
      "authors": [
        "Klimovic, A.",
        "Wang, Y.",
        "Kozyrakis, C.",
        "Stuedi, P.",
        "Pfefferle, J.",
        "Trivedi, A."
      ],
      "categories": null,
      "citations": 22,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": 6,
      "pages": "789-794",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781939133021",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings of the 2018 USENIX Annual Technical Conference, USENIX ATC 2018"
      },
      "publication_date": "2020-01-01",
      "selected": null,
      "title": "Understanding ephemeral storage for serverless analytics",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85077459554&origin=inward"
      ]
    },
    {
      "abstract": "This paper discusses web-system design and development techniques. For examples would be taken existing methods, approaches and products for the development and design of web systems, such as: monolithic and multi-layer architecture, microservice architecture, serverless architecture, BaaS (Backend as a service) approach. Based on the analysis of these approaches, a new approach will be developed, called DADO (direct approach to data obtaining), on the basis of which the backendless architecture will be created, which is designed to save architects and developers of web systems from many problems and additional costs that lead to other approaches. \u00c2\u00a9 2020 for this paper by its authors.",
      "authors": [
        "Morozov, K.",
        "Sidenko, I.",
        "Kondratenko, G.",
        "Kondratenko, Y."
      ],
      "categories": null,
      "citations": 6,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": null,
      "keywords": [
        "Microservice architecture",
        "Client-server",
        "Monolithic architecture",
        "Serverless architecture",
        "DADO",
        "Backendless",
        "Web-system",
        "BaaS",
        "Multi-layer architecture"
      ],
      "number_of_pages": 12,
      "pages": "894-905",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": 0.8,
        "is_potentially_predatory": false,
        "isbn": "9788670314764",
        "issn": "16130073",
        "publisher": "CEUR-WS",
        "sjr": 0.177,
        "snip": 0.345,
        "subject_areas": [
          "Computer Science (all)"
        ],
        "title": "CEUR Workshop Proceedings"
      },
      "publication_date": "2020-01-01",
      "selected": null,
      "title": "Increasing web-design effectiveness based on backendless architecture",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85085163312&origin=inward"
      ]
    },
    {
      "abstract": "The function-as-a-service (FaaS) service model has been gaining adoption at a fast pace. In this service model, cloud applications are structured as self-contained code modules called functions that...",
      "authors": [
        "Diogo Bortolini",
        "Rafael R. Obelheiro"
      ],
      "categories": null,
      "citations": 4,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1007/978-3-030-33509-0_16",
      "keywords": [],
      "number_of_pages": 12,
      "pages": "174-185",
      "publication": {
        "category": "Book",
        "cite_score": 0.6,
        "is_potentially_predatory": false,
        "isbn": "9783030750770",
        "issn": "23673370",
        "publisher": "Springer International Publishing AG",
        "sjr": 0.17,
        "snip": 0.797,
        "subject_areas": [
          "Control and Systems Engineering",
          "Computer Networks and Communications",
          "Signal Processing"
        ],
        "title": "Conference on Integrated Computer Technologies in Mechanical Engineering\u2013Synergetic Engineering"
      },
      "publication_date": "2020-01-01",
      "selected": null,
      "title": "Investigating Performance and Cost in Function-as-a-Service Platforms",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85074734348&origin=inward",
        "https://link.springer.com/content/pdf/10.1007%2F978-3-030-33509-0_16.pdf"
      ]
    },
    {
      "abstract": "A microservices architecture has gained higher popularity among enterprises due to its agility, scalability, and resiliency. However, serverless computing has become a new trendy topic when designing cloud-native applications. Compared to the monolithic and microservices, serverless architecture offloads management and server configuration from the user to the cloud provider and let the user focus only on the product development. Hence, there are debates regarding which deployment strategy to use. This research provides a performance comparison of a cloud-native web application in terms of scalability, reliability, cost, and latency when deployed using microservices and serverless deployment strategy. This research shows that neither the microservices nor serverless deployment strategy fits all the scenarios. The experimental results demonstrate that each type of deployment strategy has its advantages under different scenarios. The microservice deployment strategy has a cost advantage for long-lasting services over serverless. On the other hand, a request accompanied by the large size of the response is more suitably handled by serverless because of its scaling-agility. \u00c2\u00a9 Copyright 2020 by SCITEPRESS - Science and Technology Publications, Lda. All rights reserved.",
      "authors": [
        "Fan, C.-F.",
        "Jindal, A.",
        "Gerndt, M."
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": null,
      "keywords": [
        "Serverless",
        "Cloud-native Applications",
        "Microservices",
        "Performance Comparison",
        "Cloud Computing"
      ],
      "number_of_pages": 12,
      "pages": "204-215",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9789897584244",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "CLOSER 2020 - Proceedings of the 10th International Conference on Cloud Computing and Services Science"
      },
      "publication_date": "2020-01-01",
      "selected": null,
      "title": "Microservices vs serverless: A performance comparison on a cloud-native web application",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85088374146&origin=inward"
      ]
    },
    {
      "abstract": "Function-as-a-Service (FaaS) receives close attention due to highly desirable characteristics, including pay-as-you-go pricing, high elasticity, and its fully managed nature. To leverage these...",
      "authors": [
        "Sebastian Werner",
        "J\u00f6rn Kuhlenkamp",
        "Frank Pallas",
        "Niklas Anders",
        "Nebi Mucaj",
        "Olesia Tsaplina",
        "Christian Schmidt",
        "Kann Yildirim"
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1007/978-3-030-58858-8_13",
      "keywords": [
        "FaaSification",
        "Serverless",
        "FaaS",
        "Migration"
      ],
      "number_of_pages": 8,
      "pages": "125-132",
      "publication": {
        "category": "Book",
        "cite_score": 1.5,
        "is_potentially_predatory": false,
        "isbn": "9783030588571",
        "issn": "18651348",
        "publisher": "Springer Verlag",
        "sjr": 0.214,
        "snip": 0.493,
        "subject_areas": [
          "Information Systems and Management",
          "Information Systems",
          "Business and International Management",
          "Management Information Systems",
          "Modeling and Simulation",
          "Control and Systems Engineering"
        ],
        "title": "International Conference on Business Information Systems"
      },
      "publication_date": "2020-01-01",
      "selected": null,
      "title": "Diminuendo! Tactics in Support of FaaS Migrations",
      "urls": [
        "https://link.springer.com/content/pdf/10.1007%2F978-3-030-58858-8_13.pdf",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85092181081&origin=inward"
      ]
    },
    {
      "abstract": "Clusters consisting of lightweight single-board devices are used in a variety of use cases: from microcontrollers regulating the production process of an assembly line to roadside controllers monitoring and managing traffic. Often, data that is accumulated on the devices has to be sent to remote cloud data centers for processing. However, with hardware capabilities of controllers continuously increasing and the need for better performance and security through local processing, directly processing data on a remote cluster, known as Edge Computing, is a favourable solution. Recent trends such as microservices, containerization and serverless technology provide solutions for interconnecting the nodes and deploying software across the created cluster. This paper aims at proposing a serverless architecture for clustered container applications. The architecture relies on the MQTT protocol for communication, Prometheus for monitoring and Docker swarm in conjunction with openFaas for deploying services across a cluster. Using the proposed architecture as a foundation, a concrete traffic management application is implemented as a proof-of-concept. Results show that the proposed architecture meets performance requirements. However, the network set-up as well as the network capabilities of the used devices were identified as potential bottlenecks. \u00c2\u00a9 Copyright 2020 by SCITEPRESS - Science and Technology Publications, Lda. All rights reserved.",
      "authors": [
        "Gand, F.",
        "Fronza, I.",
        "El Ioini, N.",
        "Barzegar, H.R.",
        "Pahl, C."
      ],
      "categories": null,
      "citations": 8,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": null,
      "keywords": [
        "Function-as-a-Service",
        "Data Streaming",
        "Container",
        "Cluster Architecture",
        "Serverless",
        "Single-board Devices",
        "Big Data",
        "Raspberry Pi",
        "FaaS",
        "Performance Engineering",
        "Edge Cloud",
        "Docker Swarm"
      ],
      "number_of_pages": 10,
      "pages": "302-311",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9789897584244",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "CLOSER 2020 - Proceedings of the 10th International Conference on Cloud Computing and Services Science"
      },
      "publication_date": "2020-01-01",
      "selected": null,
      "title": "Serverless container cluster management for lightweight edge clouds",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85088398471&origin=inward"
      ]
    },
    {
      "abstract": "The proceedings contain 658 papers. The topics discussed include: telemetry-driven optical 5G serverless architecture for latency-sensitive edge computing; 64Gbps PAM4 modulation for a low energy Si-Ge waveguide APD with distributed Bragg reflectors; flexible optical network enabled hybrid recovery for edge network with reinforcement learning; deep reinforced energy efficient traffic grooming in fog-cloud elastic optical networks; multi-stage aggregation and lightpath provisioning of geo-distributed data over EON assisted by MEC; remote human-to-machine distance emulation through AI-enhanced servers for tactile internet applications; demonstration of geo-distributed data processing and aggregation in MEC-empowered metro optical networks; hybrid learning assisted abstraction for service performance assessment over multi-domain optical networks; and zero-bias high-speed evanescently coupled waveguide type-II UTC photodiode.",
      "authors": [],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781943580712",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "2020 Optical Fiber Communications Conference and Exhibition, OFC 2020 - Proceedings"
      },
      "publication_date": "2020-01-01",
      "selected": null,
      "title": "Optics InfoBase Conference Papers",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85089936457&origin=inward"
      ]
    },
    {
      "abstract": "Function-as-a-Service is a novel type of cloud service used for creating distributed applications and utilizing computing resources. Application developer supplies source code of cloud functions,...",
      "authors": [
        "Maciej Pawlik",
        "Pawel Banach",
        "Maciej Malawski"
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1007/978-3-030-48340-1_27",
      "keywords": [
        "Workflow scheduling",
        "Infrastructure testing",
        "Serverless",
        "Cloud functions"
      ],
      "number_of_pages": 12,
      "pages": "345-356",
      "publication": {
        "category": "Book",
        "cite_score": 1.8,
        "is_potentially_predatory": false,
        "isbn": "9783030715922",
        "issn": "03029743",
        "publisher": "Springer Verlag",
        "sjr": 0.249,
        "snip": 0.628,
        "subject_areas": [
          "Databases",
          "Cryptography and Security",
          "Distributed, Parallel, and Cluster Computing",
          "Theoretical Computer Science",
          "Computer Science (all)"
        ],
        "title": "IFIP International Conference on Distributed Applications and\n  Interoperable Systems, DAIS 2017: Distributed Applications and Interoperable\n  Systems pp 83-98"
      },
      "publication_date": "2020-01-01",
      "selected": null,
      "title": "Adaptation of Workflow Application Scheduling Algorithm to Serverless Infrastructure",
      "urls": [
        "https://link.springer.com/content/pdf/10.1007%2F978-3-030-48340-1_27.pdf",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85086229991&origin=inward"
      ]
    },
    {
      "abstract": "The proceedings contain 9 papers. The topics discussed include: towards the discovery of object-aware processes; towards a framework for context-aware resource behavior analysis; incorporating organizational aspects into fragment-based case management; managing consent in workflows under GDPR; BPMN in the wild: BPMN on github.com; auto-scaling policies to adapt the application deployment in kubernetes; when to use FaaS? - influencing technical factors for and against using serverless functions; managing social challenges in cross-organizational event-based systems; and the ultimate comparison framework",
      "authors": [],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": 0.8,
        "is_potentially_predatory": false,
        "isbn": "9788670314764",
        "issn": "16130073",
        "publisher": "CEUR-WS",
        "sjr": 0.177,
        "snip": 0.345,
        "subject_areas": [
          "Computer Science (all)"
        ],
        "title": "CEUR Workshop Proceedings"
      },
      "publication_date": "2020-01-01",
      "selected": null,
      "title": "ZEUS 2020 - Proceedings of the 12th ZEUS Workshop on Services and their Composition",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85083808159&origin=inward"
      ]
    },
    {
      "abstract": "Cloud Computing is growing exponentially and provides various server hosting services like Virtual Machines, Docker contain-ers and Serverless Architectures. The traditional Virtual Machines (VMs) have long-running power with computation power that appears on request and vanishes after use, right away. Containers are created on top of an operating system using docker; which also automates the deployment of applications on them. Serverless applications are event-driven cloud-based systems where de-velopment of application depends completely on combining the client side's logic, 3rd parties' services and cloud-hosted remote procedure calls. The Serverless Container integrates docker containers with serverless applications. Amazon Web Services(AWS) offers ECS with Fargate which hosts docker containers as serverless applications. Serverless Container-aware ARchitecture(SCAR) framework[1] provides the same functionality of hosting docker containers over AWS Lambda. Our work focuses on the perfor-mance analysis of various compute services mentioned above. Based on the results we have also offered recommendations on picking from various server hosting techniques. \u00c2\u00a9 2020 The Authors. Published by Elsevier B.V.",
      "authors": [
        "Jain, P.",
        "Munjal, Y.",
        "Gera, J.",
        "Gupta, P."
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1016/j.procs.2020.06.010",
      "keywords": [
        "Docker",
        "Container",
        "Serverless",
        "Amazon Web Services(AWS)",
        "Cloud Computing"
      ],
      "number_of_pages": 8,
      "pages": "70-77",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Procedia Computer Science"
      },
      "publication_date": "2020-01-01",
      "selected": null,
      "title": "Performance Analysis of Various Server Hosting Techniques",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85089994261&origin=inward"
      ]
    },
    {
      "abstract": "Serverless computing is a Cloud development paradigm where developers write and compose stateless functions, abstracting from their deployment and scaling. In this paper, we address the problem of ...",
      "authors": [
        "Giuseppe De Palma",
        "Saverio Giallorenzo",
        "Jacopo Mauro",
        "Gianluigi Zavattaro"
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1007/978-3-030-65310-1_29",
      "keywords": [
        "Optimisation",
        "Serverless",
        "Function-execution scheduling"
      ],
      "number_of_pages": 15,
      "pages": "416-430",
      "publication": {
        "category": "Book",
        "cite_score": 1.8,
        "is_potentially_predatory": false,
        "isbn": "9783030715922",
        "issn": "03029743",
        "publisher": "Springer Verlag",
        "sjr": 0.249,
        "snip": 0.628,
        "subject_areas": [
          "Databases",
          "Cryptography and Security",
          "Distributed, Parallel, and Cluster Computing",
          "Theoretical Computer Science",
          "Computer Science (all)"
        ],
        "title": "IFIP International Conference on Distributed Applications and\n  Interoperable Systems, DAIS 2017: Distributed Applications and Interoperable\n  Systems pp 83-98"
      },
      "publication_date": "2020-01-01",
      "selected": null,
      "title": "Allocation Priority Policies for Serverless Function-Execution Scheduling Optimisation",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85098245019&origin=inward",
        "https://link.springer.com/content/pdf/10.1007%2F978-3-030-65310-1_29.pdf"
      ]
    },
    {
      "abstract": "Cloud Computing is widely recognized as distributed computing paradigm for the next generation of dynamically scalable applications. Recently a novel service model, called Function-as-a-Service...",
      "authors": [
        "Gennaro Cordasco",
        "Matteo D\u2019Auria",
        "Alberto Negro",
        "Vittorio Scarano",
        "Carmine Spagnuolo"
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1007/978-3-030-48340-1_41",
      "keywords": [
        "Functions as a Service (FaaS)",
        "Parallel computing",
        "Distributed computing",
        "Serverless computing",
        "Scientific computing",
        "Domain-Specific Languages"
      ],
      "number_of_pages": 14,
      "pages": "531-544",
      "publication": {
        "category": "Book",
        "cite_score": 1.8,
        "is_potentially_predatory": false,
        "isbn": "9783030715922",
        "issn": "03029743",
        "publisher": "Springer Verlag",
        "sjr": 0.249,
        "snip": 0.628,
        "subject_areas": [
          "Databases",
          "Cryptography and Security",
          "Distributed, Parallel, and Cluster Computing",
          "Theoretical Computer Science",
          "Computer Science (all)"
        ],
        "title": "IFIP International Conference on Distributed Applications and\n  Interoperable Systems, DAIS 2017: Distributed Applications and Interoperable\n  Systems pp 83-98"
      },
      "publication_date": "2020-01-01",
      "selected": null,
      "title": "FLY: A Domain-Specific Language for Scientific Computing on FaaS",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85086221836&origin=inward",
        "https://link.springer.com/content/pdf/10.1007%2F978-3-030-48340-1_41.pdf"
      ]
    },
    {
      "abstract": "With the advancement of semiconductor and information and communication technologies, our computing environments are evolving into complex, large-scale, and high-performance platforms. Especially,...",
      "authors": [
        "Cheong Ghil Kim"
      ],
      "categories": null,
      "citations": 2,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1007/978-3-030-25213-7_15",
      "keywords": [
        "Open source",
        "Backend as a service",
        "Cloud computing",
        "Parser server",
        "Internet of thing"
      ],
      "number_of_pages": 12,
      "pages": "225-236",
      "publication": {
        "category": "Book",
        "cite_score": 1.5,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "1860949X",
        "publisher": "Springer Verlag",
        "sjr": 0.185,
        "snip": 0.363,
        "subject_areas": [
          "Artificial Intelligence"
        ],
        "title": "International Conference on Intelligence Science"
      },
      "publication_date": "2020-01-01",
      "selected": null,
      "title": "A Study of Utilizing Backend as a Service (BaaS) Space for Mobile Applications",
      "urls": [
        "https://link.springer.com/content/pdf/10.1007%2F978-3-030-25213-7_15.pdf",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85070520075&origin=inward"
      ]
    },
    {
      "abstract": "The expansion of the cloud has led to the development of serverless applications in which there is no need to be concerned about infrastructure, that can be considered as a service provider in the form of functions, which is known as FaaS (Function as a Service). The development of these applications consists of implementing independent functions that will communicate with each other. This work aims to explore how to combine FaaS and the continuous integration philosophy of DevOps so that applications operators can continuously re-deploy different implementations of functions in order to meet some quality of service requirements, such as latency or energy consumption. \u00c2\u00a9 Ibero-American WWW / Internet Conference 2020.",
      "authors": [
        "Serrano-Gutierrez, P."
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": null,
      "keywords": [
        "Continuous Integration",
        "Quality of Service",
        "DevOps",
        "Serverless",
        "Function as a Service",
        "FaaS"
      ],
      "number_of_pages": 4,
      "pages": "179-182",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9789898704238",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Ibero-American WWW / Internet Conference 2020"
      },
      "publication_date": "2020-01-01",
      "selected": null,
      "title": "Continuous integration of faas driven by quality attributes",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85099546446&origin=inward"
      ]
    },
    {
      "abstract": "Serverless computing is a new paradigm that promises to free cloud users from the burden of having to provision and manage resources. However, the degree to which serverless computing will replace provisioned servers remains an open question. To address this, we develop an economic model that aims to quantify the value of serverless to providers and customers. A simple model of incentives for rational providers and customers allows us to see, in broad strokes, when and why serverless technologies are worth pursuing. By characterizing the conditions under which mutually beneficial economic incentives exist, our model suggests that many classes of customers can already benefit from switching to a serverless model and taking advantage of autoscaling at today's price points. Our model also helps characterize technical research directions that would be likely to have impact in the market. \u00c2\u00a9 HotCloud 2020 - 12th USENIX Workshop on Hot Topics in Cloud Computing, co-located with USENIX ATC 2020. All rights reserved.",
      "authors": [
        "Lin, X.C.",
        "Gonzalez, J.E.",
        "Hellerstein, J.M."
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "HotCloud 2020 - 12th USENIX Workshop on Hot Topics in Cloud Computing, co-located with USENIX ATC 2020"
      },
      "publication_date": "2020-01-01",
      "selected": null,
      "title": "Serverless boom or bust? An analysis of economic incentives",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85091923349&origin=inward"
      ]
    },
    {
      "abstract": "In this paper we propose a distributed architecture to provide machine learning practitioners with a set of tools and cloud services that cover the whole machine learning development cycle: ranging from the models creation, training, validation and testing to the models serving as a service, sharing and publication. In such respect, the DEEP-Hybrid-DataCloud framework allows transparent access to existing e-Infrastructures, effectively exploiting distributed resources for the most compute-intensive tasks coming from the machine learning development cycle. Moreover, it provides scientists with a set of Cloud-oriented services to make their models publicly available, by adopting a serverless architecture and a DevOps approach, allowing an easy share, publish and deploy of the developed models. \u00c2\u00a9 2013 IEEE.",
      "authors": [
        "\u00c1lvaro L\u00f3pez Garc\u00eda",
        "Jes\u00fas Marco De Lucas",
        "Marica Antonacci",
        "Wolfgang Zu Castell",
        "Mario David",
        "Marcus Hardt",
        "Lara Lloret Iglesias",
        "Germ\u00e1n Molt\u00f3",
        "Marcin Plociennik",
        "Viet Tran",
        "Andy S. Alic",
        "Miguel Caballer",
        "Isabel Campos Plasencia",
        "Alessandro Costantini",
        "Stefan Dlugolinsky",
        "Doina Cristina Duma",
        "Giacinto Donvito",
        "Jorge Gomes",
        "Ignacio Heredia Cacha",
        "Keiichi Ito",
        "Valentin Y. Kozlov",
        "Giang Nguyen",
        "Pablo Orviz Fern\u00e1ndez",
        "Zd\u011bnek \u0160ustr",
        "Pawel Wolniewicz"
      ],
      "categories": null,
      "citations": 6,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/ACCESS.2020.2964386",
      "keywords": [
        "serverless architectures",
        "distributed computing",
        "Cloud computing",
        "computers and information processing",
        "deep learning",
        "machine learning"
      ],
      "number_of_pages": 12,
      "pages": "18681-18692",
      "publication": {
        "category": "Journal",
        "cite_score": 4.8,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "2169-3536",
        "publisher": "Institute of Electrical and Electronics Engineers Inc.",
        "sjr": 0.587,
        "snip": 1.421,
        "subject_areas": [
          "Engineering (all)",
          "Computer Science (all)",
          "Materials Science (all)"
        ],
        "title": "IEEE Access"
      },
      "publication_date": "2020-01-01",
      "selected": null,
      "title": "A Cloud-Based Framework for Machine Learning Workloads and Applications",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85079817562&origin=inward",
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=8950411"
      ]
    },
    {
      "abstract": "Cloud computing provided computing resources which were not imagined before by any business as solutions for their operations. Since the last five years, a new paradigm of service model has emerged...",
      "authors": [
        "Alpana Kakkar",
        "Armaan Farshori"
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1007/978-981-15-2043-3_18",
      "keywords": [
        "Function as a Service (FaaS)",
        "Amazon Web Services (AWS)",
        "Cloud computing",
        "Server-less Computing"
      ],
      "number_of_pages": 10,
      "pages": "145-154",
      "publication": {
        "category": "Book",
        "cite_score": 0.6,
        "is_potentially_predatory": false,
        "isbn": "9783030750770",
        "issn": "23673370",
        "publisher": "Springer International Publishing AG",
        "sjr": 0.17,
        "snip": 0.797,
        "subject_areas": [
          "Control and Systems Engineering",
          "Computer Networks and Communications",
          "Signal Processing"
        ],
        "title": "Conference on Integrated Computer Technologies in Mechanical Engineering\u2013Synergetic Engineering"
      },
      "publication_date": "2020-01-01",
      "selected": null,
      "title": "Server-Less Cloud Computing\u2014An Economical Solution for Business Operations",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85081536373&origin=inward",
        "https://link.springer.com/content/pdf/10.1007%2F978-981-15-2043-3_18.pdf"
      ]
    },
    {
      "abstract": "The ability to know when to cross the road at an intersection has always been a problem for the Visually Impaired or Blind person (VIB). In this paper, we present DetectSignal, a cloud-based Internet of Things (IoT) edge computing solution that provides a highly available, highly scalable, high-speed, and low latency traffic signal notification for the VIB. DetectSignal provides an interconnected traffic signal by reusing existing infrastructure and attaching a low-cost IoT device that connects with a traffic light and the public cloud. Our experimental results involve testing a notification system using a regular compute virtual machine and IoT edge-based serverless compute. The experimental results show that DetectSignal provides a more reliable solution that alleviates the current issues facing the VIB. \u00c2\u00a9 2020 IEEE.",
      "authors": [
        "Chikadibia Ihejimba",
        "Rym Z. Wenkstern"
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/ISC251055.2020.9239004",
      "keywords": [
        "IoT",
        "Edge Computing",
        "Assistive Technologies",
        "Traffic Lights",
        "Cloud Computing"
      ],
      "number_of_pages": 6,
      "pages": "1-6",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-7281-8295-7",
        "issn": "2687-8852",
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "2020 IEEE International Smart Cities Conference, ISC2 2020"
      },
      "publication_date": "2020-01-01",
      "selected": null,
      "title": "DetectSignal: A Cloud-Based Traffic Signal Notification System for the Blind and Visually Impaired",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85097188495&origin=inward",
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9239004"
      ]
    },
    {
      "abstract": "The main concept behind serverless computing is to build and run applications without the need for server management. It refers to a fine-grained deployment model where applications, comprising of one or more functions, are uploaded to a platform and then executed, scaled, and billed in response to the exact demand needed at the moment. While elite cloud vendors such as Amazon, Google, Microsoft, and IBM are now providing serverless computing, their approach for the placement of functions, i.e. associated container or sandbox, on servers is oblivious to the workload which may lead to poor performance and/or higher operational cost for software owners. In this paper, using statistical machine learning, we design and evaluate an adaptive function placement algorithm which can be used by serverless computing platforms to optimize the performance of running functions while minimizing the operational cost. Given a fixed amount of resources, our smart spread function placement algorithm results in higher performance compared to existing approaches; this will be achieved by maintaining the users' desired quality of service for a longer time which prevents premature scaling of the cloud resources. Extensive experimental studies revealed that the proposed adaptive function placement algorithm can be easily adopted by serverless computing providers and integrated to container orchestration platforms without introducing any limiting side effects. \u00c2\u00a9 2019 Copyright held by the owner/author(s).",
      "authors": [
        "Mahmoudi, N.",
        "Khazaei, H.",
        "Lin, C.",
        "Litoiu, M."
      ],
      "categories": null,
      "citations": 4,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": null,
      "keywords": [
        "Serverless Computing",
        "Machine Learning",
        "Container Placement Algorithms",
        "Predictive Performance Modeling",
        "Optimization"
      ],
      "number_of_pages": 11,
      "pages": "203-213",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "CASCON 2019 Proceedings - Conference of the Centre for Advanced Studies on Collaborative Research - Proceedings of the 29th Annual International Conference on Computer Science and Software Engineering"
      },
      "publication_date": "2020-01-01",
      "selected": null,
      "title": "Optimizing serverless computing: Introducing an adaptive function placement algorithm",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85086023455&origin=inward"
      ]
    },
    {
      "abstract": "Recently, edge computing is getting attention as a new computing paradigm that is expected to achieve short-delay and high-throughput task offloading for large scale Internet-of-Things (IoT) applications. In edge computing, workload distribution is one of the most critical issues that largely influences the delay and throughput performance of edge clouds, especially in distributed Function-as-a-Service (FaaS) over networked edge nodes. In this paper, we propose the Resource Allocation Control Engine with Reinforcement learning (RACER), which provides an efficient workload distribution strategy to reduce the task response slowdown with per-task response time Quality-of-Service (QoS). First, we present a novel problem formulation with the per-task QoS constraint derived from the well-known token bucket mechanism. Second, we employ a problem relaxation to reduce the overall computation complexity by compromising just a bit of optimality. Lastly, we take the deep reinforcement learning approach as an alternative solution to the workload distribution problem to cope with the uncertainty and dynamicity of underlying environments. Evaluation results show that RACER achieves a significant improvement in terms of per-task QoS violation ratio, average slowdown, and control efficiency, compared to AREA, a state-of-the-art workload distribution method. \u00c2\u00a9 2013 IEEE.",
      "authors": [
        "Chunglae Cho",
        "Seungjae Shin",
        "Hongseok Jeon",
        "Seunghyun Yoon"
      ],
      "categories": null,
      "citations": 1,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/ACCESS.2020.3033421",
      "keywords": [
        "Deep reinforcement learning",
        "workload distribution",
        "resource allocation",
        "edge computing"
      ],
      "number_of_pages": 17,
      "pages": "193297-193313",
      "publication": {
        "category": "Journal",
        "cite_score": 4.8,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "2169-3536",
        "publisher": "Institute of Electrical and Electronics Engineers Inc.",
        "sjr": 0.587,
        "snip": 1.421,
        "subject_areas": [
          "Engineering (all)",
          "Computer Science (all)",
          "Materials Science (all)"
        ],
        "title": "IEEE Access"
      },
      "publication_date": "2020-01-01",
      "selected": null,
      "title": "QoS-Aware Workload Distribution in Hierarchical Edge Clouds: A Reinforcement Learning Approach",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85096039816&origin=inward",
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9237967"
      ]
    },
    {
      "abstract": "The development of resource-intensive complex distributed systems such as the backend side of Massively Multiplayer Online Games (MMOGs) has shifted towards cloud-based approaches in recent years....",
      "authors": [
        "Nicos Kasenides",
        "Nearchos Paspallis"
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1007/978-3-030-44769-4_4",
      "keywords": [
        "Backend",
        "Cloud computing",
        "Distributed systems",
        "MMOG",
        "Commodity clouds",
        "Software engineering"
      ],
      "number_of_pages": 15,
      "pages": "41-55",
      "publication": {
        "category": "Book",
        "cite_score": 1.8,
        "is_potentially_predatory": false,
        "isbn": "9783030715922",
        "issn": "03029743",
        "publisher": "Springer Verlag",
        "sjr": 0.249,
        "snip": 0.628,
        "subject_areas": [
          "Databases",
          "Cryptography and Security",
          "Distributed, Parallel, and Cluster Computing",
          "Theoretical Computer Science",
          "Computer Science (all)"
        ],
        "title": "IFIP International Conference on Distributed Applications and\n  Interoperable Systems, DAIS 2017: Distributed Applications and Interoperable\n  Systems pp 83-98"
      },
      "publication_date": "2020-01-01",
      "selected": null,
      "title": "Multiplayer Game Backends: A Comparison of Commodity Cloud-Based Approaches",
      "urls": [
        "https://link.springer.com/content/pdf/10.1007%2F978-3-030-44769-4_4.pdf",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85085734987&origin=inward"
      ]
    },
    {
      "abstract": "In August 2019, we organized the second Vienna Software Seminar (VSS) with the topic \"DevOps and Microservice APIs.\"<sup>1</sup> Embracing the positive reception of its first iteration in 2017,<sup>2</sup> VSS is an opportunity for attendees to discuss recent software technologies, practices, and related research. The seminar's 34 participants included a mix of practitioners and academics, who were invited based on their roles and experiences. The explicit intention of the seminar was to provide ample opportunities for exchange and communication: six themed sessions consisted of one invited keynote and two lightning talks, giving different perspectives on the session?s topic and (ideally) sparking ideas for follow-up discussions. After the talks, all participants decided on subtopics for two to three breakout sessions (i.e., informal, self-organized discussions among interested participants). Breakout session topics included microservice security, tooling for application programming interface (API) evolution, serverless programming models, and identification of microservices using domaindriven design. The sessions provided opportunities for detailed discussions and identifying challenges to address in future collaborations. Toward the end of each session, all participants gathered once more to summarize the breakout discussions. Additional opportunities for communication were provided during shared lunch breaks and social events in the evenings.",
      "authors": [
        "Uwe Zdun",
        "Erik Wittern",
        "Philipp Leitner"
      ],
      "categories": null,
      "citations": 3,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/MS.2019.2947982",
      "keywords": [],
      "number_of_pages": 5,
      "pages": "87-91",
      "publication": {
        "category": "Journal",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "1937-4194",
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "IEEE Software"
      },
      "publication_date": "2020-01-01",
      "selected": null,
      "title": "Emerging Trends, Challenges, and Experiences in DevOps and Microservice APIs",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85077234782&origin=inward",
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=8938118"
      ]
    },
    {
      "abstract": "Function-as-a-Service promises a new era in which functionalities are implemented, executed and managed on a cloud platform with the aim of developing and launching applications. This paper puts forward an algebraic and hierarchical model that has ability to construct composite services for cloud applications. Our model brings many advantages, which are also presented in this paper. \u00c2\u00a9 2020 Knowledge Systems Institute Graduate School. All rights reserved.",
      "authors": [
        "Qian, C.",
        "Zhu, W."
      ],
      "categories": null,
      "citations": 1,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.18293/SEKE2020-024",
      "keywords": [
        "Service model",
        "Algebraic composition",
        "Function-as-a-Service"
      ],
      "number_of_pages": 6,
      "pages": "210-215",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "1891706500",
        "issn": "23259000",
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings of the International Conference on Software Engineering and Knowledge Engineering, SEKE"
      },
      "publication_date": "2020-01-01",
      "selected": null,
      "title": "F(X)-MAN: An algebraic and hierarchical composition model for function-as-a-service",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85090508071&origin=inward"
      ]
    },
    {
      "abstract": "Cloud computing has been exploited in managing large-scale IoT systems. IoT cloud servers usually handle a large number of requests from various IoT devices. Due to the fluctuant and heavy workload, the servers require the cloud to provide high scalability, stable performance, low price and necessary functionalities. However, traditional clouds usually offer computing service with the abstraction of virtual machine (VM), which can hardly meet these requirements. Meanwhile, different cloud vendors provide different performance stabilities and price models, which fluctuate according to the dynamic workload. A single cloud cannot satisfy all the requirements of the IoT scenario well. The JointCloud computing model empowers the cooperation among multiple public clouds. However, it is still difficult to dynamically schedule the workload on different clouds based on the VM abstraction. This paper introduces HCloud, a trusted JointCloud platform for IoT systems using serverless computing model. HCloud allows an IoT server to be implemented with multiple serverless functions and schedules these functions on different clouds based on a schedule policy. The policy is specified by the client and includes the required functionalities, execution resources, latency, price and so on. HCloud collects the status of each cloud and dispatches serverless functions to the most suitable cloud based on the schedule policy. By leveraging the blockchain technology, we further enforce that our system can neither fake the cloud status nor wrongly dispatch the target functions. We have implemented a prototype of HCloud and evaluated it by simulating multiple cloud providers. The evaluation results show that HCloud can greatly improve the performance of serverless workloads with negligible costs. \u00c2\u00a9 2013 China Institute of Communications.",
      "authors": [
        "Zheng Huang",
        "Zeyu Mi",
        "Zhichao Hua"
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.23919/JCC.2020.09.001",
      "keywords": [
        "IoT",
        "blockchain",
        "serverless",
        "joint-cloud"
      ],
      "number_of_pages": 10,
      "pages": "1-10",
      "publication": {
        "category": "Journal",
        "cite_score": 4.7,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "1673-5447",
        "publisher": "China Institute of Communication",
        "sjr": 0.508,
        "snip": 1.121,
        "subject_areas": [
          "Computer Networks and Communications",
          "Electrical and Electronic Engineering"
        ],
        "title": "China Communications"
      },
      "publication_date": "2020-01-01",
      "selected": null,
      "title": "HCloud: A trusted JointCloud serverless platform for IoT systems with blockchain",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85094890694&origin=inward",
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9205972"
      ]
    },
    {
      "abstract": "The emerging next generation of cloud services like Granular and Serverless computing are pushing the boundaries of the current cloud infrastructure. In order to meet the performance objectives, researchers are now leveraging low-level microarchitectural resources in clouds. At the same time these resources are also a major source of security problems that can compromise the confidentiality and integrity of sensitive data in multi-tenant shared cloud infrastructures. The core of the problem is the lack of isolation due to the unsupervised sharing of microarchitectural resources across different performance and security boundaries. In this paper, we introduce Stratus clouds that treat the isolation on microarchitectural elements as the key design principle when allocating cloud resources. This isolation improves both performance and security, but at the cost of reducing resource utilization. Stratus captures this trade-off using a novel abstraction that we call isolation credit, and show how it can help both providers and tenants when allocating microarchitectural resources using Stratus's declarative interface. We conclude by discussing the challenges of realizing Stratus clouds today. \u00c2\u00a9 HotCloud 2020 - 12th USENIX Workshop on Hot Topics in Cloud Computing, co-located with USENIX ATC 2020. All rights reserved.",
      "authors": [
        "Razavi, K.",
        "Trivedi, A."
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "HotCloud 2020 - 12th USENIX Workshop on Hot Topics in Cloud Computing, co-located with USENIX ATC 2020"
      },
      "publication_date": "2020-01-01",
      "selected": null,
      "title": "Stratus: Clouds with microarchitectural resource management",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85091892505&origin=inward"
      ]
    },
    {
      "abstract": "Serverless Computing is the latest cloud computing model, which facilitates application development. By adopting and leveraging the modern paradigm of Serverless Computing, developers do not need to manage the servers. In this computational model, the executables are independent functions that are individually deployed on a Serverless platform offering instant per-request elasticity. Such elasticity typically comes at the cost of the 'Cold Starts' problem. This phenomenon is associated with a delay occurring due to provision a runtime container to execute the functions. Shortly after Amazon introduced this computing model with the AWS Lambda platform in 2014, several open source and commercial platforms also started embracing and offering this technology. Each platform has its own solution to deal with Cold Starts. The evaluation of the performance of each platform under the load and factors influencing the cold start problem has received much attention over the past few years. This paper provides a comprehensive overview on the recent advancements and state-of-The-Art works in mitigating the cold start delay. Moreover, several sets of experiments have been performed to study the behavior of the AWS Lambda as the base platform with respect to the cold start delay. \u00c2\u00a9 2020 IEEE.",
      "authors": [
        "Parichehr Vahidinia",
        "Bahar Farahani",
        "Fereidoon Shams Aliee"
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/COINS49042.2020.9191377",
      "keywords": [
        "Serverless Computing Platforms",
        "Serverless Computing",
        "Cold Start Delay",
        "Function as a Service",
        "Cloud Computing"
      ],
      "number_of_pages": 7,
      "pages": "1-7",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-7281-6372-7",
        "issn": null,
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "2020 International Conference on Omni-Layer Intelligent Systems, COINS 2020"
      },
      "publication_date": "2020-01-01",
      "selected": null,
      "title": "Cold Start in Serverless Computing: Current Trends and Mitigation Strategies",
      "urls": [
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9191377",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85092254708&origin=inward"
      ]
    },
    {
      "abstract": "The role of remote resources, such as the ones provided by Cloud infrastructures, is of paramount importance for the implementation of cost effective, yet reliable software systems to provide...",
      "authors": [
        "Lelio Campanile",
        "Mauro Iacono",
        "Fabio Martinelli",
        "Fiammetta Marulli",
        "Michele Mastroianni",
        "Francesco Mercaldo",
        "Antonella Santone"
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1007/978-3-030-44038-1_81",
      "keywords": [
        "Service degradation",
        "Energy attacks",
        "Serverless",
        "Deep learning",
        "Generative Adversarial Networks",
        "Microservices",
        "Security",
        "Cloud",
        "Software services"
      ],
      "number_of_pages": 12,
      "pages": "890-901",
      "publication": {
        "category": "Book",
        "cite_score": 0.9,
        "is_potentially_predatory": false,
        "isbn": "9783030577957",
        "issn": "21945357",
        "publisher": "Springer Verlag",
        "sjr": 0.184,
        "snip": 0.428,
        "subject_areas": [
          "Control and Systems Engineering",
          "Computer Science (all)"
        ],
        "title": "Workshops of  the International Conference on Advanced Information Networking and Applications"
      },
      "publication_date": "2020-01-01",
      "selected": null,
      "title": "Towards the Use of Generative Adversarial Neural Networks to Attack Online Resources",
      "urls": [
        "https://link.springer.com/content/pdf/10.1007%2F978-3-030-44038-1_81.pdf",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85083965494&origin=inward"
      ]
    },
    {
      "abstract": "Cyber foraging has been shown to be especially effective for augmenting low-power Internet-of-Thing (IoT) devices by offloading video processing tasks to nearby edge/cloud computing servers. Factors such as dynamic network conditions, concurrent user access, and limited resource availability, cause offloading decisions that negatively impact overall processing throughput and end-user delays. Moreover, edge/cloud platforms currently offer both Virtual Machine (VM) and serverless computing pricing models, but many existing edge offloading approaches only investigate single VM-based offloading performance. In this paper, we propose a predictive (NP-complete) scheduling-based offloading framework and a heuristic-based counterpart that use machine learning to dynamically decide what combinations of functions or single VM needs to be deployed so that tasks can be efficiently scheduled. We collected over 10,000 network and device traces in a series of realistic experiments relating to a protest crowds incident management application. We then evaluated the practicality of our predictive cyber foraging approach using trace-driven simulations for up to 1000 devices. Our results indicate that predicting single VM offloading costs: (a) leads to near-optimal scheduling in 70% of the cases for service function chaining, and (b) offers a 40% gain in performance over traditional baseline estimation techniques that rely on simple statistics for estimations in the case of single VM-offloading. Considering a series of visual computing offloading scenarios, we also validate our approach benefits of using online versus offline machine learning models for predicting offloading delays. \u00c2\u00a9 2004-2012 IEEE.",
      "authors": [
        "Jon Patman",
        "Dmitrii Chemodanov",
        "Prasad Calyam",
        "Kannappan Palaniappan",
        "Claudio Sterle",
        "Maurizio Boccia"
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/TNSM.2020.3010497",
      "keywords": [
        "online job scheduling",
        "edge/cloud computing",
        "machine learning",
        "cyber foraging",
        "Computation offloading"
      ],
      "number_of_pages": 16,
      "pages": "2380-2395",
      "publication": {
        "category": "Journal",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "2373-7379",
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "IEEE Transactions on Network and Service Management"
      },
      "publication_date": "2020-01-01",
      "selected": null,
      "title": "Predictive Cyber Foraging for Visual Cloud Computing in Large-Scale IoT Systems",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85089296493&origin=inward",
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9144518"
      ]
    },
    {
      "abstract": "The serverless software architecture is a hot topic in software architecture world. The architecture is suitable for many applications, such as data validation and real-time data analysis for...",
      "authors": [
        "Sunggeun Yoo",
        "Minjeong Song",
        "Sangil Park"
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1007/978-981-13-9341-9_18",
      "keywords": [
        "AMQP",
        "Serverless",
        "Cloud computing",
        "Message queue",
        "Event-driven"
      ],
      "number_of_pages": 5,
      "pages": "103-107",
      "publication": {
        "category": "Book",
        "cite_score": 0.5,
        "is_potentially_predatory": false,
        "isbn": "9789813369764",
        "issn": "18761100",
        "publisher": "Springer Verlag",
        "sjr": 0.134,
        "snip": 0.204,
        "subject_areas": [
          "Industrial and Manufacturing Engineering"
        ],
        "title": "Lecture Notes in Electrical Engineering"
      },
      "publication_date": "2020-01-01",
      "selected": null,
      "title": "A Proposal of IoT Message-Oriented Service Framework for Serverless Software Architecture",
      "urls": [
        "https://link.springer.com/content/pdf/10.1007%2F978-981-13-9341-9_18.pdf",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85076866873&origin=inward"
      ]
    },
    {
      "abstract": "The remarkable advances of Machine Learning (ML) have spurred an increasing demand for ML-as-a-Service on publiccloud: developers train and publish ML models as online services to provide low-latency inference for dynamic queries. The primarychallenge of ML model serving is to meet the response-time Service-Level Objectives (SLOs) of inference workloads while minimizingserving cost. In this paper, we proposes MArk (Model Ark), a general-purpose inference serving system, to tackle the dual challenge ofSLO compliance and cost effectiveness. MArk employs three design choices tailored to inference workload. First, MArk dynamicallybatches requests and opportunistically serves them using expensive hardware accelerators (e.g., GPU) for improved performance-costratio. Second, instead of relying on feedback control scaling or over-provisioning to serve dynamic workload, which can be too slow ortoo expensive, MArk employs predictive autoscaling to hide the provisioning latency at low cost. Third, given the stateless nature ofinference serving, MArk exploits the flexible, yet costly serverless instances to cover occasional load spikes that are hard to predict. Weevaluated the performance of MArk using several state-of-the-art ML models trained in TensorFlow, MXNet, and Keras. Compared withthe premier industrial ML serving platform SageMaker, MArk reduces the serving cost up to 7.8while achieving even better latencyperformance. IEEE",
      "authors": [
        "Chengliang Zhang",
        "Minchen Yu",
        "wei wang",
        "Feng Yan"
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/TCC.2020.3006751",
      "keywords": [
        "cost minimization",
        "SLO awareness",
        "cloud computing",
        "inference serving",
        "Machine-Learning-as-a-Service"
      ],
      "number_of_pages": 1,
      "pages": "1-1",
      "publication": {
        "category": "Journal",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "2372-0018",
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "IEEE Transactions on Cloud Computing"
      },
      "publication_date": "2020-01-01",
      "selected": null,
      "title": "Enabling Cost-Effective, SLO-Aware Machine Learning Inference Serving on Public Cloud",
      "urls": [
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9132666",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85087501229&origin=inward"
      ]
    },
    {
      "abstract": "Serverless containers and functions are widely used for deploying and managing software in the cloud. Their popularity is due to reduced cost of operations, improved utilization of hardware, and faster scaling than traditional deployment methods. The economics and scale of serverless applications demand that workloads from multiple customers run on the same hardware with minimal overhead, while preserving strong security and performance isolation. The traditional view is that there is a choice between virtualization with strong security and high overhead, and container technologies with weaker security and minimal overhead. This tradeoff is unacceptable to public infrastructure providers, who need both strong security and minimal overhead. To meet this need, we developed Firecracker, a new open source Virtual Machine Monitor (VMM) specialized for serverless workloads, but generally useful for containers, functions and other compute workloads within a reasonable set of constraints. We have deployed Firecracker in two publically-available serverless compute services at Amazon Web Services (Lambda and Fargate), where it supports millions of production workloads, and trillions of requests per month. We describe how specializing for serverless informed the design of Firecracker, and what we learned from seamlessly migrating Lambda customers to Firecracker. \u00c2\u00a9 Proc. of the 17th USENIX Symposium on Networked Systems Design and Impl., NSDI 2020. All rights reserved.",
      "authors": [
        "Agache, A.",
        "Brooker, M.",
        "Florescu, A.",
        "Iordache, A.",
        "Liguori, A.",
        "Neugebauer, R.",
        "Piwonka, P.",
        "Popa, D.-M."
      ],
      "categories": null,
      "citations": 31,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": 16,
      "pages": "419-434",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781939133137",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings of the 17th USENIX Symposium on Networked Systems Design and Implementation, NSDI 2020"
      },
      "publication_date": "2020-01-01",
      "selected": null,
      "title": "Firecracker: Lightweight virtualization for serverless applications",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85086179991&origin=inward"
      ]
    },
    {
      "abstract": "Serverless computing is an emerging event-driven programming model that accelerates the development and deployment of scalable web services on cloud computing systems. Though widely integrated with the public cloud, serverless computing use is nascent for edge-based, Internet of Things (IoT) deployments. In this work, we present STOIC (serverless teleoperable hybrid cloud), an IoT application deployment and offloading system that extends the serverless model in three ways. First, STOIC adopts a dynamic feedback control mechanism to precisely predict latency and dispatch workloads uniformly across edge and cloud systems using a distributed serverless framework. Second, STOIC leverages hardware acceleration (e.g., GPU resources) for serverless function execution when available from the underlying cloud system. Third, STOIC can be configured in multiple ways to overcome deployment variability associated with public cloud use. We overview the design and implementation of STOIC and empirically evaluate it using real-world machine learning applications and multitier IoT deployments (edge and cloud). Specifically, we show that STOIC can be used for training image processing workloads (for object recognition)\u00e2\u0080\u0094once thought too resource-intensive for edge deployments. We find that STOIC reduces overall execution time (response latency) and achieves placement accuracy that ranges from 92% to 97%. \u00c2\u00a9 2020 John Wiley & Sons, Ltd.",
      "authors": [
        "Zhang, M.",
        "Krintz, C.",
        "Wolski, R."
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1002/spe.2944",
      "keywords": [
        "IoT",
        "Serverless",
        "Scheduling",
        "Cloud functions",
        "GPU"
      ],
      "number_of_pages": null,
      "pages": null,
      "publication": {
        "category": "Journal",
        "cite_score": 5.0,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "00380644",
        "publisher": "John Wiley and Sons Ltd",
        "sjr": 0.437,
        "snip": 1.168,
        "subject_areas": [
          "Software"
        ],
        "title": "Software - Practice and Experience"
      },
      "publication_date": "2020-01-01",
      "selected": null,
      "title": "Edge-adaptable serverless acceleration for machine learning Internet of Things applications",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85097623662&origin=inward"
      ]
    },
    {
      "abstract": "To provide cost effective cloud resources with high QoS, serverless platform is introduced that allows to pay for the exact amount of resource usage. On the other hand, a number of data management...",
      "authors": [
        "Chinmaya Dehury",
        "Pelle Jakovits",
        "Satish Narayana Srirama",
        "Vasilis Tountopoulos",
        "Giorgos Giotis"
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1007/978-3-030-59155-7_18",
      "keywords": [
        "DevOps",
        "Data pipelines",
        "Serverless computing",
        "TOSCA"
      ],
      "number_of_pages": 6,
      "pages": "241-246",
      "publication": {
        "category": "Book",
        "cite_score": 0.8,
        "is_potentially_predatory": false,
        "isbn": "9783030719050",
        "issn": "18650929",
        "publisher": "Springer Verlag",
        "sjr": 0.16,
        "snip": 0.32,
        "subject_areas": [
          "Mathematics (all)",
          "Computer Science (all)"
        ],
        "title": "International Conference on Software Process Improvement and Capability Determination"
      },
      "publication_date": "2020-01-01",
      "selected": null,
      "title": "Data Pipeline Architecture for Serverless Platform",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85091486048&origin=inward",
        "https://link.springer.com/content/pdf/10.1007%2F978-3-030-59155-7_18.pdf"
      ]
    },
    {
      "abstract": "The releases of Intel SGX and AMD SEV mark the transition of hardware-based enclaves from research prototypes to mainstream products. These two paradigms of secure enclaves are attractive to both the cloud providers and tenants, since security is one of the key pillars of cloud computing. However, it is found that current hardware-defined enclaves are not flexible and efficient enough for the cloud. For example, although SGX can provide strong memory protection with both confidentiality and integrity, the size of secure memory is tightly restricted. On the contrary, SEV enables enclaves to use more memory but has critical security flaws due to no memory integrity protection. Meanwhile, both types of enclaves have relatively long booting latency, which makes them not suitable for short-term tasks like serverless workloads. After an in-depth analysis, we find that there are some intrinsic tradeoffs between security and performance due to the limitation of architectural designs. In this paper, we investigate a novel hardware-software co-design of enclaves to meet the requirements of cloud by placing a part of the logic of the enclave mechanism into a lightweight software layer, named Enclavisor, to achieve a balance between security, performance, and flexibility. Specifically, our implementation is based on AMD's SEV and, Enclavisor is placed in the guest kernel mode of SEV's secure virtual machines. Enclavisor inherently supports memory encryption with no memory limitation and also achieves efficient booting, multiple enclave granularities, and post-launch remote attestation. Meanwhile, we also propose hardware/software solutions to mitigate the security flaws caused by the lack of memory integrity. We implement a prototype of Enclavisor on an AMD SEV server. The experiments on both micro-benchmarks and application benchmarks show that enclaves on Enclavisor can have close-to-native performance. \u00c2\u00a9 2020 IEEE Computer Society. All rights reserved.",
      "authors": [
        "Jinyu Gu",
        "Xinyu Wu",
        "Bojun Zhu",
        "Yubin Xia",
        "Binyu Zang",
        "Haibing Guan",
        "Haibo Chen"
      ],
      "categories": null,
      "citations": 1,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/TC.2020.3019704",
      "keywords": [
        "Virtulization",
        "Enclave",
        "AMD SEV"
      ],
      "number_of_pages": 1,
      "pages": "1-1",
      "publication": {
        "category": "Journal",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "2326-3814",
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "IEEE Transactions on Computers"
      },
      "publication_date": "2020-01-01",
      "selected": null,
      "title": "Enclavisor: A Hardware-software Co-design for Enclaves on Untrusted Cloud",
      "urls": [
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9178442",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85099775948&origin=inward"
      ]
    },
    {
      "abstract": "The proceedings contain 52 papers. The topics discussed include: secure cloud storage with client-side encryption using a trusted execution environment; comparative evaluation of kernel bypass mechanisms for high-performance inter-container communications; a fuzzy controller for self-adaptive lightweight edge container orchestration; live migration timing optimization for VMware environments using machine learning techniques; bootstrapping and plug-and-play operations on software defined networks: a case study on self-configuration using the sonar architecture; fast analysis and prediction in large scale virtual machines resource utilization; enabling container cluster interoperability using a TOSCA orchestration framework; performance analysis of continuous binary data processing using distributed databases within stream processing environments; adaptive fog service placement for real-time topology changes in kubernetes clusters; and patterns for serverless functions (function-as-a-service): a multivocal literature review.",
      "authors": [],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9789897584244",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "CLOSER 2020 - Proceedings of the 10th International Conference on Cloud Computing and Services Science"
      },
      "publication_date": "2020-01-01",
      "selected": null,
      "title": "CLOSER 2020 - Proceedings of the 10th International Conference on Cloud Computing and Services Science",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85088374005&origin=inward"
      ]
    },
    {
      "abstract": "With the emerging Internet of Things (IoT), distributed systems enter a new era. While pervasive and ubiquitous computing already became reality with the use of the cloud, IoT networks present new...",
      "authors": [
        "Hamid Mohammadi Fard",
        "Radu Prodan",
        "Felix Wolf"
      ],
      "categories": null,
      "citations": 1,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1007/978-3-030-58628-7_5",
      "keywords": [
        "Resource provisioning",
        "Fog computing",
        "Cloud computing",
        "Scheduling",
        "Containerization",
        "Orchestration",
        "Edge computing",
        "Microservice"
      ],
      "number_of_pages": 18,
      "pages": "59-76",
      "publication": {
        "category": "Book",
        "cite_score": 1.8,
        "is_potentially_predatory": false,
        "isbn": "9783030715922",
        "issn": "03029743",
        "publisher": "Springer Verlag",
        "sjr": 0.249,
        "snip": 0.628,
        "subject_areas": [
          "Databases",
          "Cryptography and Security",
          "Distributed, Parallel, and Cluster Computing",
          "Theoretical Computer Science",
          "Computer Science (all)"
        ],
        "title": "IFIP International Conference on Distributed Applications and\n  Interoperable Systems, DAIS 2017: Distributed Applications and Interoperable\n  Systems pp 83-98"
      },
      "publication_date": "2020-01-01",
      "selected": null,
      "title": "A Container-Driven Approach for Resource Provisioning in Edge-Fog Cloud",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85091295856&origin=inward",
        "https://link.springer.com/content/pdf/10.1007%2F978-3-030-58628-7_5.pdf"
      ]
    },
    {
      "abstract": "A dynamically expanding area of cloud computing is Function as a Service (FaaS). FaaS allows customers to develop, run, and manage application functionalities on cloud infrastructure without the...",
      "authors": [
        "David Balla",
        "Markosz Maliosz",
        "Csaba Simon",
        "Daniel Gehberger"
      ],
      "categories": null,
      "citations": 2,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1007/978-3-030-38651-1_21",
      "keywords": [
        "Language runtimes",
        "Latency measurements",
        "Function as a Service"
      ],
      "number_of_pages": 17,
      "pages": "250-266",
      "publication": {
        "category": "Book",
        "cite_score": 1.8,
        "is_potentially_predatory": false,
        "isbn": "9783030715922",
        "issn": "03029743",
        "publisher": "Springer Verlag",
        "sjr": 0.249,
        "snip": 0.628,
        "subject_areas": [
          "Databases",
          "Cryptography and Security",
          "Distributed, Parallel, and Cluster Computing",
          "Theoretical Computer Science",
          "Computer Science (all)"
        ],
        "title": "IFIP International Conference on Distributed Applications and\n  Interoperable Systems, DAIS 2017: Distributed Applications and Interoperable\n  Systems pp 83-98"
      },
      "publication_date": "2020-01-01",
      "selected": null,
      "title": "Tuning Runtimes in Open Source FaaS",
      "urls": [
        "https://link.springer.com/content/pdf/10.1007%2F978-3-030-38651-1_21.pdf",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85079096166&origin=inward"
      ]
    },
    {
      "abstract": "Serverless computing is becoming widely adopted among cloud providers, thus making increasingly popular the Function-as-a-Service (FaaS) programming model, where the developers realize services by packaging sequences of stateless function calls. The current technologies are very well suited to data centers, but cannot provide equally good performance in decentralized environments, such as edge computing systems, which are expected to be typical for Internet of Things (IoT) applications. In this paper, we fill this gap by proposing a framework for efficient dispatching of stateless tasks to in-network executors so as to minimize the response times while exhibiting short-and long-term fairness, also leveraging information from a virtualized network infrastructure when available. Our solution is shown to be simple enough to be installed on devices with limited computational capabilities, such as IoT gateways, especially when using a hierarchical forwarding extension. We evaluate the proposed platform by means of extensive emulation experiments with a prototype implementation in realistic conditions. The results show that it is able to smoothly adapt to the mobility of clients and to the variations of their service request patterns, while coping promptly with network congestion.",
      "authors": [
        "Claudio Cicconetti",
        "Marco Conti",
        "Andrea Passarella"
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "IEEE"
      ],
      "doi": "10.1109/TNSM.2020.3023305",
      "keywords": [
        "Computer simulation experiments.",
        "Overlay networks",
        "Software-defined networking",
        "Internet of Things services"
      ],
      "number_of_pages": 1,
      "pages": "1-1",
      "publication": {
        "category": "Journal",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "2373-7379",
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "IEEE Transactions on Network and Service Management"
      },
      "publication_date": "2020-01-01",
      "selected": null,
      "title": "A Decentralized Framework for Serverless Edge Computing in the Internet of Things",
      "urls": [
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9193994"
      ]
    },
    {
      "abstract": "Terraform helps in building an Infrastructure for the Cloud Environment as a code. Management of the cloud infrastructure is an important and difficult task as the environment has a huge number of...",
      "authors": [
        "Simeen Sheikh",
        "G. Suganya",
        "M. Premalatha"
      ],
      "categories": null,
      "citations": 1,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1007/978-981-32-9889-7_11",
      "keywords": [],
      "number_of_pages": 15,
      "pages": "133-147",
      "publication": {
        "category": "Book",
        "cite_score": 0.4,
        "is_potentially_predatory": false,
        "isbn": "9789813298880",
        "issn": "21903018",
        "publisher": "Springer Nature",
        "sjr": 0.128,
        "snip": 0.438,
        "subject_areas": [
          "Decision Sciences (all)",
          "Computer Science (all)"
        ],
        "title": "Smart Innovation, Systems and Technologies"
      },
      "publication_date": "2020-01-01",
      "selected": null,
      "title": "Automated Resource Management on AWS Cloud Platform",
      "urls": [
        "https://link.springer.com/content/pdf/10.1007%2F978-981-32-9889-7_11.pdf",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85075574052&origin=inward"
      ]
    },
    {
      "abstract": "Pregnant ladies often become anxious and get curious about many questions and concerns. Mobile Health services such as chatbots can be used to address these concerns, helping them with authentic healthcare advice; accessible from remote locations irrespective of time and space. The paper describes a pregnancy companion chatbot to help pregnant women during pregnancy. A questionnaire was designed for the expectant mothers and healthcare professionals who treat them, to design the chatbot. The inputs were captured to verify the feasibility, relevance, and technology acceptance for the use case. Chatbot designs are slowly changing from text-based interaction to voice-based interaction. The pregnancy companion chatbot was tested on Amazon Echo dot, a smart speaker device supported by Amazon voice assistant Alexa. Designing a chatbot on top of a custom Alexa skill allows developers to use multiple Amazon Web Services. The design has used AWS Lambda as a triggering function, Simple Notification Service for sending message notifications, Simple Email Service for sending emails and DynamoDB as a database. 'Internet of Things', the concept of connecting smart devices, makes the chatbot solution accessible at any time and from anywhere. \u00c2\u00a9 2019 IEEE.",
      "authors": [
        "Sanket Sanjay Sadavarte",
        "Eliane Bodanese"
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/PuneCon46936.2019.9105762",
      "keywords": [
        "Alexa",
        "chatbot",
        "Internet of Things",
        "Amazon Web Services",
        "pregnancy companion"
      ],
      "number_of_pages": 5,
      "pages": "1-5",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-7281-1925-0",
        "issn": null,
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "2019 IEEE Pune Section International Conference, PuneCon 2019"
      },
      "publication_date": "2019-12-18",
      "selected": null,
      "title": "Pregnancy Companion Chatbot Using Alexa and Amazon Web Services",
      "urls": [
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9105762",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85086733479&origin=inward"
      ]
    },
    {
      "abstract": "The emerging serverless cloud paradigm, also known as Function as a Service (FaaS), enables auto-scalable cloud services on-demand, but requires complete trust in the surrounding infrastructure. Workloads hosting sensitive data, such as medical records or financial transactions, may not be able to use such cloud services due to these trust assumptions. This paper introduces Diggi, a native secure FaaS runtime for scalable function deployment requiring minimal trust in the underlying hardware/software stack. We demonstrate that Diggi is practical and that it holds comparable performance to conventional FaaS software. \u00c2\u00a9 2019 IEEE.",
      "authors": [
        "Anders Tungeland Gjerdrum",
        "H\u00e5vard Dagenborg Johansen",
        "Lars Brenna",
        "Dag Johansen"
      ],
      "categories": null,
      "citations": 1,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/TPS-ISA48467.2019.00012",
      "keywords": [
        "security",
        "privacy",
        "trusted execution environments",
        "cloud",
        "serverless"
      ],
      "number_of_pages": 10,
      "pages": "18-27",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-7281-6742-8",
        "issn": null,
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings - 1st IEEE International Conference on Trust, Privacy and Security in Intelligent Systems and Applications, TPS-ISA 2019"
      },
      "publication_date": "2019-12-12",
      "selected": null,
      "title": "Diggi: A Secure Framework for Hosting Native Cloud Functions with Minimal Trust",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85082240101&origin=inward",
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9014360"
      ]
    },
    {
      "abstract": " The Function-as-a-Service (FaaS) paradigm has a lot of potential as a\ncomputing model for fog environments comprising both cloud and edge nodes. When\nthe request rate exceeds capacity limits at the edge, some functions need to be\noffloaded from the edge towards the cloud. In this position paper, we propose an auction-based approach in which\napplication developers bid on resources. This allows fog nodes to make a local\ndecision about which functions to offload while maximizing revenue. For a first\nevaluation of our approach, we use simulation.\n",
      "authors": [
        "Bermbach, David",
        "Maghsudi, Setareh",
        "Hasenburg, Jonathan",
        "Pfandzelter, Tobias"
      ],
      "categories": null,
      "citations": null,
      "comments": "preprint, authors' camera-ready version of a conference paper\n  accepted in the 2020 IEEE International Conference on Fog Computing (ICFC\n  2020)",
      "databases": [
        "arXiv"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": null,
      "publication_date": "2019-12-12",
      "selected": null,
      "title": "Towards Auction-Based Function Placement in Serverless Fog Platforms",
      "urls": [
        "https://arxiv.org/pdf/1912.06096",
        "http://arxiv.org/abs/1912.06096v2",
        "http://arxiv.org/pdf/1912.06096v2"
      ]
    },
    {
      "abstract": "The shift to cloud computing has affected the future of software engineering in several ways i.e., multilateral software development, scalability, and new technology stack such as an open-source software, plus infrastructure as code such as container, serverless architecture and software defined network (SDN). In order to support the cloud project delivery for government organizations, requirements engineering (RE) is a crucial step in software engineering that determines whether a project will be successful or result in a failure. RE steps include requirement elicitation, requirement analysis, requirement specification and requirement validation. Data is collected by semi-structured interview from the providers and the users of cloud services in 11 Thai government organizations, and from cloud service provider for meeting enterprise requirements and user requirements. The results reveal nine key issues that affect cloud project delivery: (1) lack of trust with external cloud service provider by generation X and baby boomer (2) lack of transparency as regards the legal agreement about the cloud user's personal data protection responsibility by cloud service provider, (3) the issues of reliability, security and service level agreements (4) lack of knowledge and lack of understanding of cloud technology (5) required training and a learning by doing (6) the policy to use government cloud services instead of developing their own cloud, (7) older people at top-level tend to resist cloud technology, (8) people in general lack of knowledge and understanding of cloud technology (9) problems about pricing model, it's impact on 23 cloud requirements (functional and non-functional) as well as factors that involved in RE phases. Based on these results this paper presents a Conceptual Model of Requirement Engineering for Cloud Project Delivery in Thai Government Organizations. \u00c2\u00a9 2019 IEEE.",
      "authors": [
        "Ajchareeya Chaipunyathat",
        "Nalinpat Porrawatpreyakorn",
        "Siranee Nuchitprasitchai",
        "Kanchana Viriyapant"
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/RI2C48728.2019.8999923",
      "keywords": [
        "Cloud Project",
        "Software Engineering",
        "Requirements Engineering",
        "Thai Government Organization"
      ],
      "number_of_pages": 7,
      "pages": "1-7",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-7281-4101-5",
        "issn": null,
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "RI2C 2019 - 2019 Research, Invention, and Innovation Congress"
      },
      "publication_date": "2019-12-11",
      "selected": null,
      "title": "A Conceptual Model of Requirement Engineering in Cloud Project Delivery for Thai Government Organizations",
      "urls": [
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=8999923",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85093680660&origin=inward"
      ]
    },
    {
      "abstract": "In recent years, the rapid adoption of the serverless computing paradigm has led to the proliferation of Function-as-a-Service computing frameworks. The majority of these frameworks utilize containers, a lightweight operating system virtualization technique, to ensure isolated function execution. Unikernels, which package applications within a single-address space library operating system, have been proposed as an alternative function isolation mechanism, which offers stronger isolation guarantees without suffering the performance penalties of full hardware virtualization. However, due to different storage semantics between containers and unikernels, the state-of-the-art approaches for using unikernels in place of containers result in decreased performance, inefficient resource utilization and limited functionality. In this paper we bridge the storage gap between containers and unikernels in the context of serverless computing. First, we examine and categorize the storage requirements for building and running functions based on unikernels. Based on these requirements, we design and prototype a framework, which extends the Docker storage layer to support unikernel images. Our framework enables the sharing of common read-only unikernel image layers between functions and moves the unikernel image building overhead away from the critical path of function execution. We show that our framework improves function instantiation times while reducing storage space overhead. \u00c2\u00a9 2019 Association for Computing Machinery.",
      "authors": [
        "Nikolos, O.L.",
        "Papazafeiropoulos, K.",
        "Psomadakis, S.",
        "Nanos, A.",
        "Koziris, N."
      ],
      "categories": null,
      "citations": 1,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1145/3366623.3368138",
      "keywords": [
        "Unikernels",
        "Containers",
        "Cloud computing",
        "Container storage",
        "Virtualization"
      ],
      "number_of_pages": 6,
      "pages": "31-36",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450370387",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [
          "Performance",
          "Distributed, Parallel, and Cluster Computing"
        ],
        "title": "WOSC 2019 - Proceedings of the 2019 5th International Workshop on Serverless Computing, Part of Middleware 2019"
      },
      "publication_date": "2019-12-09",
      "selected": null,
      "title": "Extending storage support for unikernel containers",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85078887217&origin=inward"
      ]
    },
    {
      "abstract": "Real-time video processing in the home, with the benefits of low latency and strong privacy guarantees, enables virtual reality (VR) applications, augmented reality (AR) applications and other next-gen interactive applications. However, processing video feeds with computationally expensive machine learning algorithms may be impractical on a single device due to resource limitations. Fortunately, there are ubiquitous underutilized heterogeneous edge devices in the home. In this paper, we propose VideoPipe, a system that bridges the gap and runs flexible video processing pipelines on multiple devices. Towards this end, with inspirations from Function-as-a-Service (FaaS) architecture, we have unified the runtime environments of the edge devices. We do this by introducing modules, which are the basic units of a video processing pipeline and can be executed on any device. With the uniform design of input and output interfaces, we can easily connect any of the edge devices to form a video processing pipeline. Moreover, as some devices support containers, we further design and implement stateless services for more computationally expensive tasks such as object detection, pose detection and image classification. As they are stateless, they can be shared across pipelines and can be scaled easily if necessary. To evaluate the performance of our system, we design and implement a fitness application on three devices connected through Wi-Fi. We also implement a gesture-based Internet of Things (IoT) control application. Experimental results show the the promises of VideoPipe for efficient video analytics on the edge. \u00c2\u00a9 2019 Association for Computing Machinery.",
      "authors": [
        "Salehe, M.",
        "Hu, Z.",
        "Mortazavi, S.H.",
        "Capes, T.",
        "Mohomed, I."
      ],
      "categories": null,
      "citations": 1,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1145/3366626.3368131",
      "keywords": [
        "Video streaming",
        "Pipelining",
        "Edge computing"
      ],
      "number_of_pages": 7,
      "pages": "43-49",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450370417",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Middleware Industry 2019 - Proceedings of the 2019 20th International Middleware Conference Industrial Track, Part of Middleware 2019"
      },
      "publication_date": "2019-12-09",
      "selected": null,
      "title": "VideoPipe: Building video stream processing pipelines at the edge",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85078932541&origin=inward"
      ]
    },
    {
      "abstract": "The use and reuse of scientific data is ultimately dependent on the ability to understand what those data represent, how they were captured, and how they can be used. In many ways, data are only as useful as the metadata available to describe them. Unfortunately, due to growing data volumes, large and distributed collaborations, and a desire to store data for long periods of time, scientific \u00e2\u0080\u009cdata lakes\u00e2\u0080\u009d quickly become disorganized and lack the metadata necessary to be useful to researchers. New automated approaches are needed to derive metadata from scientific files and to use these metadata for organization and discovery. Here we describe one such system, Xtract, a service capable of processing vast collections of scientific files and automatically extracting metadata from diverse file types. Xtract relies on function as a service models to enable scalable metadata extraction by orchestrating the execution of many, short-running extractor functions. To reduce data transfer costs, Xtract can be configured to deploy extractors centrally or near to the data (i.e., at the edge). We present a prototype implementation of Xtract and demonstrate that it can derive metadata from a 7 TB scientific data repository. \u00c2\u00a9 2019 Association for Computing Machinery.",
      "authors": [
        "Skluzacek, T.J.",
        "Chard, R.",
        "Wong, R.",
        "Li, Z.",
        "Babuji, Y.N.",
        "Ward, L.",
        "Blaiszik, B.",
        "Chard, K.",
        "Foster, I."
      ],
      "categories": null,
      "citations": 6,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1145/3366623.3368140",
      "keywords": [
        "Metadata extraction",
        "Materials science",
        "Serverless",
        "Data lakes",
        "File systems"
      ],
      "number_of_pages": 6,
      "pages": "43-48",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450370387",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [
          "Performance",
          "Distributed, Parallel, and Cluster Computing"
        ],
        "title": "WOSC 2019 - Proceedings of the 2019 5th International Workshop on Serverless Computing, Part of Middleware 2019"
      },
      "publication_date": "2019-12-09",
      "selected": null,
      "title": "Serverless workflows for indexing large scientific data",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85078230642&origin=inward"
      ]
    },
    {
      "abstract": "While adopting Blockchain technologies to automate their enterprise functionality, organizations are recognizing the challenges of scalability and manual configuration that the state of art present. Scalability of Hyperledger Fabric is an open challenge recognized by the research community. We have automated many of the configuration steps of installing Hyperledger Fabric Blockchain on AWS infrastructure and have benchmarked the scalability of that system. We have used the UCR (University of California Riverside) Time Series Archive with 128 timeseries datasets containing over 191,177 rows of data totaling 76,453,742 numbers. Using an automated Serverless approach, we have loaded this dataset, by chunks, into different AWS instances, triggering the load by SQS messaging. In this paper, we present the results of this benchmarking study and describe the approach we took to automate the Hyperledger Fabric processes using serverless Lambda functions and SQS triggering. We will also discuss what is needed to make the Blockchain technology more robust and scalable. \u00c2\u00a9 2019 IEEE.",
      "authors": [
        "Alex Kaplunovich",
        "Karuna P. Joshi",
        "Yelena Yesha"
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/BigData47090.2019.9005529",
      "keywords": [
        "benchmark",
        "messaging",
        "blockchain",
        "automation",
        "Lambda",
        "AWS Cloud",
        "serverless"
      ],
      "number_of_pages": 9,
      "pages": "4214-4222",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-7281-0859-9",
        "issn": null,
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings - 2019 IEEE International Conference on Big Data, Big Data 2019"
      },
      "publication_date": "2019-12-09",
      "selected": null,
      "title": "Scalability Analysis of Blockchain on a Serverless Cloud",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85081412790&origin=inward",
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9005529"
      ]
    },
    {
      "abstract": "Serverless computing is an attractive cloud services paradigm, simultaneously promising reduced cost and greater flexibility for customers and increased revenues and higher resource utilization for cloud providers. In this paper, we present an analysis of the potential cost benefits of serverless computing for end customers and cloud providers. Using realistic cost models, queueing theoretic performance models, and a game theoretic formulation, we explore the tradeoffs between serverless computing (SC) and traditional cloud computing (virtual machine, VM). In the proposed framework, customers distribute their workload between SC and VM to minimize their cost while maintaining a particular performance constraint, while the cloud provider sets SC and VM prices to maximize its profit. We explore the impact of relative prices, customer workload, service capacity, and provider costs. Our main result is the identification and characterization of three optimal operational regimes for both customers and the provider that leverage either SC or VM only, or both, in a hybrid configuration. The various insights provided in this paper can help both cloud providers and customers better understand the tradeoffs and implications of a hybrid system that combines serverless and VM rental with corresponding pricing models. \u00c2\u00a9 2019 IEEE.",
      "authors": [
        "Kunal Mahajan",
        "Daniel Figueiredo",
        "Vishal Misra",
        "Dan Rubenstein"
      ],
      "categories": null,
      "citations": 5,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/GLOBECOM38437.2019.9013156",
      "keywords": [],
      "number_of_pages": 6,
      "pages": "1-6",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-7281-0963-3",
        "issn": "1930-529X",
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "2019 IEEE Global Communications Conference, GLOBECOM 2019 - Proceedings"
      },
      "publication_date": "2019-12-09",
      "selected": null,
      "title": "Optimal Pricing for Serverless Computing",
      "urls": [
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9013156",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85077969030&origin=inward"
      ]
    },
    {
      "abstract": "Recent cloud technologies enable a diverse set of novel applications with capabilities never seen before. Cloud native programming, microservices, serverless architectures are novel paradigms reducing the burden on both software developers and operators while enabling cloud-grade service deployments. Several types of applications fit in well with the new concepts, however, latency sensitive applications with strict delay constraints pose additional challenges on the platforms. Can we run these applications on today's public cloud platforms making use of the brand new tools and techniques? In this paper, we try to answer this question by addressing one of the most widely used and versatile public cloud platforms, namely Amazon's AWS, and we propose a novel mechanism to optimize the software \"layout\" based on dynamic performance measurements. Our contribution is threefold. First, we define a combined performance and cost model on CaaS/FaaS (Container/Function as a Service) platforms, specifically for AWS, based on a comprehensive performance analysis, and we also provide an application model capturing the performance requirements. Second, we formulate an optimization problem which minimizes the deployment costs on AWS while meeting the latency constraints. A polynomial algorithm finding the optimal solution is also given. Third, we evaluate the model and the algorithm for different scenarios and investigate the performance on today's system. \u00c2\u00a9 2019 IEEE.",
      "authors": [
        "Janos Czentye",
        "Istvan Pelle",
        "Andras Kern",
        "Balazs Peter Gero",
        "Laszlo Toka",
        "Balazs Sonkoly"
      ],
      "categories": null,
      "citations": 1,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/GLOBECOM38437.2019.9013988",
      "keywords": [],
      "number_of_pages": 7,
      "pages": "1-7",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-7281-0963-3",
        "issn": "1930-529X",
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "2019 IEEE Global Communications Conference, GLOBECOM 2019 - Proceedings"
      },
      "publication_date": "2019-12-09",
      "selected": null,
      "title": "Optimizing Latency Sensitive Applications for Amazon's Public Cloud Platform",
      "urls": [
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9013988",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85081975221&origin=inward"
      ]
    },
    {
      "abstract": "Industrial and scientific streaming applications require support for different types of processing and the management of heterogeneous infrastructure over a dynamic range of scales: from the edge to the cloud and HPC, and intermediate resources. Serverless is an emerging service that combines high-level middleware services, such as distributed execution engines for managing tasks, with low-level infrastructure. It offers the potential of usability and scalability but adds to the complexity of managing heterogeneous and dynamic resources. In response, we extend Pilot-Streaming to support serverless platforms. Pilot-Streaming provides a unified abstraction for resource management for HPC, cloud, and serverless, and allocates resource containers independent of the application workload removing the need to write resource-specific code. Understanding the performance and scaling characteristics of streaming applications and infrastructure presents another challenge. StreamInsight provides insight into the performance of streaming applications and infrastructure, their selection, configuration, and scaling behavior. Underlying StreamInsight is the universal scalability law, which permits the accurate quantification of scalability properties of streaming applications. Using experiments on HPC and AWS Lambda, we demonstrate that StreamInsight provides an accurate model for a variety of application characteristics, e. g., machine learning model sizes and resource configurations. \u00c2\u00a9 2019 IEEE.",
      "authors": [
        "Andre Luckow",
        "Shantenu Jha"
      ],
      "categories": null,
      "citations": 3,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/BigData47090.2019.9006530",
      "keywords": [
        "Performance",
        "Serverless",
        "Streaming",
        "HPC"
      ],
      "number_of_pages": 9,
      "pages": "5688-5696",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-7281-0859-9",
        "issn": null,
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings - 2019 IEEE International Conference on Big Data, Big Data 2019"
      },
      "publication_date": "2019-12-09",
      "selected": null,
      "title": "Performance Characterization and Modeling of Serverless and HPC Streaming Applications",
      "urls": [
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9006530",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85081381731&origin=inward"
      ]
    },
    {
      "abstract": "In this paper, a flexible resource sharing paradigm is introduced, to enable the allocation of users' computing tasks in a social cloud computing system offering both Virtual Machines (VMs) and Serverless Computing (SC) functions. VMs are treated as a safe computing resource, while SC due to the uncertainty introduced by its shared nature, is treated as a common pool resource, being susceptible to potential over-exploitation. These computing options are differentiated based on the potential satisfaction perceived by the user, as well as their corresponding pricing, while taking into account the social interactions among the users. Considering the inherent uncertainty of the considered computing environment, Prospect Theory and the theory of the Tragedy of the Commons are adopted to properly reflect the users' behavioral characteristics, i.e., gain-seeking or loss-averse behavior, as well as to formulate appropriate prospect- theoretic utility functions, embodying the social- aware and risk-aware user's perceived satisfaction. A distributed maximization problem of each user's expected prospect-theoretic utility is formulated as a non-cooperative game among the users and the corresponding Pure Nash Equilibrium (PNE), i.e., optimal computing jobs offloading to the VMs and the SC, is determined, while a distributed low-complexity algorithm that converges to the PNE is introduced. The performance and key principles of the proposed framework are demonstrated through modeling and simulation. \u00c2\u00a9 2019 IEEE.",
      "authors": [
        "Pavlos Athanasios Apostolopoulos",
        "Eirini Eleni Tsiropoulou",
        "Symeon Papavassiliou"
      ],
      "categories": null,
      "citations": 1,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/GLOBECOM38437.2019.9013182",
      "keywords": [
        "Virtual Machines",
        "Serverless Computing",
        "Prospect Theory",
        "Risk-aware Behavior",
        "Social Computing"
      ],
      "number_of_pages": 6,
      "pages": "1-6",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-7281-0963-3",
        "issn": "1930-529X",
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "2019 IEEE Global Communications Conference, GLOBECOM 2019 - Proceedings"
      },
      "publication_date": "2019-12-09",
      "selected": null,
      "title": "Risk-Aware Social Cloud Computing Based on Serverless Computing Model",
      "urls": [
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9013182",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85081946834&origin=inward"
      ]
    },
    {
      "abstract": "Current edge computing frameworks require tight coupling between mobile clients and surrogates, i.e., the offloaded code has been preconfigured with its required execution environment. In many cases, this includes prior transfers of code blocks or execution environments from mobile devices to the offloading infrastructure. This approach incurs additional latency and is detrimental for the energy consumption of the mobile devices. In this paper, we propose the concept of a microservice store. Using the microservice abstraction common in software development and following the serverless paradigm, we envision a repository through which said services are made accessible to developers and can be re-used across applications. We implement a proof-of-concept edge computing system based on a microservice repository and demonstrate its benefits with real-world applications on mobile devices. Our results show that we were able to reduce latencies by up to 14x and save up to 94% of battery life. \u00c2\u00a9 2019 IEEE.",
      "authors": [
        "Julien Gedeon",
        "Martin Wagner",
        "Jens Heuschkel",
        "Lin Wang",
        "Max Muhlhauser"
      ],
      "categories": null,
      "citations": 2,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/GLOBECOM38437.2019.9014114",
      "keywords": [
        "Fog computing",
        "Serverless",
        "Edge computing",
        "Microservices",
        "Cyber foraging",
        "Computation offloading"
      ],
      "number_of_pages": 6,
      "pages": "1-6",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-7281-0963-3",
        "issn": "1930-529X",
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "2019 IEEE Global Communications Conference, GLOBECOM 2019 - Proceedings"
      },
      "publication_date": "2019-12-09",
      "selected": null,
      "title": "A Microservice Store for Efficient Edge Offloading",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85078267072&origin=inward",
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9014114"
      ]
    },
    {
      "abstract": "As the edge cloud technology evolves, research is underway to provide customers with a serverless architecture-based FaaS (Function as a Service) on the edge nodes. However, serverless architecture-based FaaS on the edge nodes has a problem with resource management due to edge nodes with relatively lower computing power than the cloud datacenters. And also it has a late service provision problem due to time to prepare cloud instances for customer API call requests. In this paper, we propose the method of dynamic container layer replacement considering a resource-limited environment on the edge nodes while mitigating cold start and then shows the performance. \u00c2\u00a9 2019 IEEE.",
      "authors": [
        "Jaeho Park",
        "Yunkon Kim",
        "A-Young Son",
        "YeonSoo Lim",
        "Eui-Nam Huh"
      ],
      "categories": null,
      "citations": 1,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/ICECE48499.2019.9058586",
      "keywords": [
        "serverless edge computing",
        "cold start in FaaS",
        "dynamic container layer replacement"
      ],
      "number_of_pages": 4,
      "pages": "434-437",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-7281-4785-7",
        "issn": null,
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "2019 IEEE 2nd International Conference on Electronics and Communication Engineering, ICECE 2019"
      },
      "publication_date": "2019-12-09",
      "selected": null,
      "title": "A Method of Dynamic Container Layer Replacement for Faster Service Providing on Resource-Limited Edge Nodes",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85084049390&origin=inward",
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9058586"
      ]
    },
    {
      "abstract": "Today, software operation engineers rely on application key performance indicators (KPIs) for sizing and orchestrating cloud resources dynamically. KPIs are monitored to assess the achievable performance and to configure various cloud-specific parameters such as flavors of instances and autoscaling rules, among others. Usually, keeping KPIs within acceptable levels requires application expertise which is expensive and can slow down the continuous delivery of software. Expertise is required because KPIs are normally based on application-specific quality-of-service metrics, like service response time and processing rate, instead of generic platform metrics, like those typical across various environments (e.g., CPU and memory utilization, I/O rate, etc.) In this paper, we investigate the feasibility of outsourcing the management of application performance from developers to cloud operators. In the same way that the serverless paradigm allows the execution environment to be fully managed by a third party, we discuss a monitorless model to streamline application deployment by delegating performance management. We show that training a machine learning model with platform-level data, collected from the execution of representative containerized services, allows inferring application KPI degradation. This is an opportunity to simplify operations as engineers can rely solely on platform metrics \u00e2\u0080\u0093 while still fulfilling application KPIs \u00e2\u0080\u0093 to configure portable and application agnostic rules and other cloud-specific parameters to automatically trigger actions such as autoscaling, instance migration, network slicing, etc. Results show that monitorless infers KPI degradation with an accuracy of 97% and, notably, it performs similarly to typical autoscaling solutions, even when autoscaling rules are optimally tuned with knowledge of the expected workload. \u00c2\u00a9 2019 Association for Computing Machinery.",
      "authors": [
        "Grohmann, J.",
        "Nicholson, P.K.",
        "Iglesias, J.O.",
        "Kounev, S.",
        "Lugones, D."
      ],
      "categories": null,
      "citations": 6,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1145/3361525.3361543",
      "keywords": [
        "DevOps",
        "Machine learning",
        "Monitoring",
        "Cloud computing"
      ],
      "number_of_pages": 14,
      "pages": "149-162",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450370097",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Middleware 2019 - Proceedings of the 2019 20th International Middleware Conference"
      },
      "publication_date": "2019-12-09",
      "selected": null,
      "title": "Monitorless: Predicting performance degradation in cloud applications with machine learning",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85078008396&origin=inward"
      ]
    },
    {
      "abstract": "[No abstract available]",
      "authors": [],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450370387",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [
          "Performance",
          "Distributed, Parallel, and Cluster Computing"
        ],
        "title": "WOSC 2019 - Proceedings of the 2019 5th International Workshop on Serverless Computing, Part of Middleware 2019"
      },
      "publication_date": "2019-12-09",
      "selected": null,
      "title": "WOSC 2019 - Proceedings of the 2019 5th International Workshop on Serverless Computing, Part of Middleware 2019",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85084163658&origin=inward"
      ]
    },
    {
      "abstract": "Reduction of CO2 emissions has become a significant challenge faced by humanity today. Energy management systems try to contribute to addressing this challenge by enabling an intelligent use and combination of different energy sources by capturing and visualizing energy usage and production data to enable energy efficiency improvement measures. In this paper, we present Selena, a prototypical energy management system that is implemented using the serverless computing paradigm. Essential design goals for Selena are both extensibility, so that many different data sources and providers (e.g., measurement systems) can be integrated easily, as well as efficient scalability, so that the system can be used from small (e.g., one building) to large installations (potentially entire neighborhoods) with deployment cost commensurate with the installation size. Our initial experiences with Selena indicate that the serverless paradigm is very well suited to capture and process energy-related data reliably and has excellent scaling properties due to the elastic compute platform that it is built upon. Copyright \u00c2\u00a9 2019 ACM",
      "authors": [
        "Huber, F.",
        "K\u00c3\u00b6rber, N.",
        "Mock, M."
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1145/3366623.3368134",
      "keywords": [
        "IoT",
        "Energy management systems",
        "FaaS",
        "Serverless computing",
        "Microservices",
        "AWS Lambda"
      ],
      "number_of_pages": 6,
      "pages": "7-12",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450370387",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [
          "Performance",
          "Distributed, Parallel, and Cluster Computing"
        ],
        "title": "WOSC 2019 - Proceedings of the 2019 5th International Workshop on Serverless Computing, Part of Middleware 2019"
      },
      "publication_date": "2019-12-09",
      "selected": null,
      "title": "Selena: A serverless energy management system",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85078915912&origin=inward"
      ]
    },
    {
      "abstract": "Today\u00e2\u0080\u0099s serverless provides \u00e2\u0080\u009cfunction-as-a-service\u00e2\u0080\u009d with dynamic scaling and fine-grained resource charging, enabling new cloud applications. Serverless functions are invoked as a best-effort service. We propose an extension to serverless, called real-time serverless that provides an invocation rate guarantee, a service-level objective (SLO) specified by the application, and delivered by the underlying implementation. Real-time serverless allows applications to guarantee real-time performance. We study real-time serverless behavior analytically and empirically to characterize its ability to support bursty, realtime cloud and edge applications efficiently. Finally, we use a case study, traffic monitoring, to illustrate the use and benefits of real-time serverless, on our prototype implementation. \u00c2\u00a9 2019 Copyright held by the owner/author(s). Publication rights licensed to ACM.",
      "authors": [
        "Nguyen, H.D.",
        "Zhang, C.",
        "Xiao, Z.",
        "Chien, A.A."
      ],
      "categories": null,
      "citations": 6,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1145/3366623.3368133",
      "keywords": [
        "Bursty",
        "Interface",
        "Serverless",
        "Real-time"
      ],
      "number_of_pages": 6,
      "pages": "1-6",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450370387",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [
          "Performance",
          "Distributed, Parallel, and Cluster Computing"
        ],
        "title": "WOSC 2019 - Proceedings of the 2019 5th International Workshop on Serverless Computing, Part of Middleware 2019"
      },
      "publication_date": "2019-12-09",
      "selected": null,
      "title": "Real-time Serverless: Enabling application performance guarantees",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85078892114&origin=inward"
      ]
    },
    {
      "abstract": "An imminent challenge in the serverless computing landscape is the escalating cost of infrastructure needed to handle the growing traffic at scale. This work presents FnSched, a function-level scheduler designed to minimize provider resource costs while meeting customer performance requirements. FnSched works by carefully regulating the resource usage of colocated functions on each invoker, and autoscaling capacity by concentrating load on few invokers in response to varying traffic. We implement a prototype of FnSched and show that, compared to existing baselines, FnSched significantly improves resource efficiency, by as much as 36%\u00e2\u0080\u009355%, while providing acceptable application latency. \u00c2\u00a9 2019 Copyright held by the owner/author(s). Publication rights licensed to ACM.",
      "authors": [
        "Suresh, A.",
        "Gandhi, A."
      ],
      "categories": null,
      "citations": 5,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1145/3366623.3368136",
      "keywords": [],
      "number_of_pages": 6,
      "pages": "19-24",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450370387",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [
          "Performance",
          "Distributed, Parallel, and Cluster Computing"
        ],
        "title": "WOSC 2019 - Proceedings of the 2019 5th International Workshop on Serverless Computing, Part of Middleware 2019"
      },
      "publication_date": "2019-12-09",
      "selected": null,
      "title": "FNSched: An efficient scheduler for serverless functions",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85078922442&origin=inward"
      ]
    },
    {
      "abstract": "Function as a Service (FaaS) is based on a reactive programming model where functions are activated by triggers in response to cloud events (e.g., objects added to an object store). The inherent elasticity and the pay-per-use model of serverless functions make them very appropriate for embarrassingly parallel tasks like data preprocessing, or even the execution of MapReduce jobs in the cloud. But current Serverless orchestration systems are not designed for managing parallel fork-join workflows in a scalable and efficient way. We demonstrate in this paper that existing services like AWS Step Functions or Azure Durable Functions incur in considerable overheads, and only Composer at IBM Cloud provides suitable performance. Successively, we analyze the architecture of OpenWhisk as an open-source FaaS systems and its orchestration features (Composer). We outline its architecture problems and propose guidelines for orchestrating massively parallel workloads using serverless functions. \u00c2\u00a9 2019 Association for Computing Machinery.",
      "authors": [
        "Barcelona-Pons, D.",
        "Garc\u00c3\u00ada-L\u00c3\u00b3pez, P.",
        "Ruiz, \u00c3\u0081.",
        "G\u00c3\u00b3mez-G\u00c3\u00b3mez, A.",
        "Par\u00c3\u00ads, G.",
        "S\u00c3\u00a1nchez-Artigas, M."
      ],
      "categories": null,
      "citations": 3,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1145/3366623.3368137",
      "keywords": [
        "Serverless",
        "Event-based",
        "Orchestration",
        "FaaS"
      ],
      "number_of_pages": 6,
      "pages": "25-30",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450370387",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [
          "Performance",
          "Distributed, Parallel, and Cluster Computing"
        ],
        "title": "WOSC 2019 - Proceedings of the 2019 5th International Workshop on Serverless Computing, Part of Middleware 2019"
      },
      "publication_date": "2019-12-09",
      "selected": null,
      "title": "FaAS orchestration of parallel workloads",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85078887296&origin=inward"
      ]
    },
    {
      "abstract": "Serverless computing is an emerging Cloud paradigm that allows users to claim and pay for resources only when their jobs are executing. While this paradigm offers several advantages, the phenomenon of \"cold start\" reduces its inherent efficiency with respect to the utilization of compute, storage and network resources that support its existing virtualization deployment systems. We analyze current modes of deployment and identify data similarities across applications. Based on these observations, we propose a new deployment system that is built atop a peer-to-peer network, virtual file-system and content-addressable storage, which will increase compute availability, reduce storage requirement, and prevent network bottlenecks. \u00c2\u00a9 2019 held by the owner/author(s).",
      "authors": [
        "Mahajan, K.",
        "Misra, V.",
        "Mahajan, S.",
        "Rubenstein, D."
      ],
      "categories": null,
      "citations": 1,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1145/3360468.3366781",
      "keywords": [],
      "number_of_pages": 3,
      "pages": "37-39",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450370066",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "CoNEXT 2019 Companion - Proceedings of the 15th International Conference on Emerging Networking EXperiments and Technologies, Part of CoNEXT 2019"
      },
      "publication_date": "2019-12-09",
      "selected": null,
      "title": "Exploiting content similarity to address cold start in container deployments",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85077963840&origin=inward"
      ]
    },
    {
      "abstract": "Serverless computing promises to evolve cloud computing architecture from VMs and containers-as-a-service (CaaS) to function-as-a-service (FaaS). This takes away complexities of managing and scaling underlying infrastructure and can result in simpler code, cheaper realization of services, and higher availability. Nonetheless, one of the primary drawbacks customers face when making decision to move their software to a serverless platform is the potential for getting locked-in with a particular provider. This used to be a concern with Platform-as-a-Service (PaaS) offerings too. However with Kubernetes emerging as the industry standard PaaS layer, PaaS is closer to becoming commodity with the Kubernetes API as its common interface. The question is if a similar unification for the API interface layer and runtime contracts can be achieved for serverless. If achieved, this would free up serverless users from their fears of platform lock-in. Our goal in this paper is to extract a minimal common denominator model of execution that can move us closer to a unified serverless platform. As contributors to Knative [13] with in-depth understanding of its internal design, we use Knative as the baseline for this comparison and contrast its API interface and runtime contracts against other prominent serverless platforms to identify commonalities and differences. Influenced by the work in Knative, we also discuss challenges as well as the necessary evolution we expect to see as serverless platforms themselves reach commodity status. \u00c2\u00a9 2019 Association for Computing Machinery.",
      "authors": [
        "Kaviani, N.",
        "Kalinin, D.",
        "Maximilien, M."
      ],
      "categories": null,
      "citations": 3,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1145/3366623.3368135",
      "keywords": [
        "Performance",
        "Serverless",
        "Cloud",
        "Scalability"
      ],
      "number_of_pages": 6,
      "pages": "13-18",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450370387",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [
          "Performance",
          "Distributed, Parallel, and Cluster Computing"
        ],
        "title": "WOSC 2019 - Proceedings of the 2019 5th International Workshop on Serverless Computing, Part of Middleware 2019"
      },
      "publication_date": "2019-12-09",
      "selected": null,
      "title": "Towards serverless as commodity: A case of Knative",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85078952724&origin=inward"
      ]
    },
    {
      "abstract": "Remote computation has numerous use cases such as cloud computing, client-side web applications or volunteer computing. Typically, these computations are executed inside a sandboxed environment for two reasons: first, to isolate the execution in order to protect the host environment from unauthorised access, and second to control and restrict resource usage. Often, there is mutual distrust between entities providing the code and the ones executing it, owing to concerns over three potential problems: (i) loss of control over code and data by the providing entity, (ii) uncertainty of the integrity of the execution environment for customers, and (iii) a missing mutually trusted accounting of resource usage. In this paper we present AccTEE, a two-way sandbox that offers remote computation with resource accounting trusted by consumers and providers. AccTEE leverages two recent technologies: hardware-protected trusted execution environments, and WebAssembly, a novel platform independent byte-code format. We show how AccTEE uses automated code instrumentation for fine-grained resource accounting while maintaining confidentiality and integrity of code and data. Our evaluation of AccTEE in three scenarios \u00e2\u0080\u0093 volunteer computing, serverless computing, and pay-by-computation for the web \u00e2\u0080\u0093 shows a maximum accounting overhead of 10%. \u00c2\u00a9 2019 Association for Computing Machinery.",
      "authors": [
        "Goltzsche, D.",
        "Nieke, M.",
        "Knauth, T.",
        "Kapitza, R."
      ],
      "categories": null,
      "citations": 5,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1145/3361525.3361541",
      "keywords": [
        "Sandbox",
        "Trusted Computing",
        "Intel SGX",
        "Resource Accounting",
        "WebAssembly"
      ],
      "number_of_pages": 13,
      "pages": "123-135",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450370097",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Middleware 2019 - Proceedings of the 2019 20th International Middleware Conference"
      },
      "publication_date": "2019-12-09",
      "selected": null,
      "title": "Acctee: A WebAssembly-based Two-way Sandbox for Trusted Resource Accounting",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85078057952&origin=inward"
      ]
    },
    {
      "abstract": "Serverless computing is an emerging paradigm that greatly simplifies the usage of cloud resources and suits well to many tasks. Most notably, Function-as-a-Service (FaaS) enables programmers to develop cloud applications as individual functions that can run and scale independently. Yet, due to the disaggregation of storage and compute resources in FaaS, applications that require fine-grained support for mutable state and synchronization, such as machine learning and scientific computing, are hard to build. In this work, we present Crucial, a system to program highly-concurrent stateful applications with serverless architectures. Its programming model keeps the simplicity of FaaS and allows to port effortlessly multi-threaded algorithms to this new environment. Crucial is built upon the key insight that FaaS resembles to concurrent programming at the scale of a data center. As a consequence, a distributed shared memory layer is the right answer to the need for fine-grained state management and coordination in serverless. We validate our system with the help of micro-benchmarks and various applications. In particular, we implement two common machine learning algorithms: k-means clustering and logistic regression. For both cases, Crucial obtains superior or comparable performance to an equivalent Spark cluster. \u00c2\u00a9 2019 Association for Computing Machinery.",
      "authors": [
        "Barcelona-Pons, D.",
        "S\u00c3\u00a1nchez-Artigas, M.",
        "Par\u00c3\u00ads, G.",
        "Sutra, P.",
        "Garc\u00c3\u00ada-L\u00c3\u00b3pez, P."
      ],
      "categories": null,
      "citations": 11,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1145/3361525.3361535",
      "keywords": [
        "Stateful",
        "Serverless",
        "In-memory",
        "Synchronization",
        "FaaS"
      ],
      "number_of_pages": 14,
      "pages": "41-54",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450370097",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Middleware 2019 - Proceedings of the 2019 20th International Middleware Conference"
      },
      "publication_date": "2019-12-09",
      "selected": null,
      "title": "On the FaaS track: Building stateful distributed applications with serverless architectures",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85078068295&origin=inward"
      ]
    },
    {
      "abstract": "We consider the problem of scheduling serverless-computing instances such as Amazon Lambda functions. Instead of a quota per tenant/customer, we assume demand for Lambda functions is modulated by token-bucket mechanisms per tenant. Such quotas are due to, e.g., limited resources (as in a fog/edge-cloud context) or to prevent excessive unauthorized invocation of numerous instances by malware. Based on an upper bound on the stationary number of active \u00e2\u0080\u009cLambda servers\" considering the execution-time distribution of Lambda functions, we describe an approach that the cloud could use to overbook Lambda functions for improved utilization of IT resources. An earlier bound for a single service tier is extended to multiple service tiers. \u00c2\u00a9 2019 Association for Computing Machinery.",
      "authors": [
        "Kesidis, G."
      ],
      "categories": null,
      "citations": 1,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1145/3366615.3368351",
      "keywords": [],
      "number_of_pages": 6,
      "pages": "1-6",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450370332",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "WOC 2019 - Proceedings of the 2019 5th International Workshop on Container Technologies and Container Clouds, Part of Middleware 2019"
      },
      "publication_date": "2019-12-09",
      "selected": null,
      "title": "Overbooking lambda functions in the cloud",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85078944427&origin=inward"
      ]
    },
    {
      "abstract": "Information Centric Networking (ICN) is a modern networking concept which enables users to address named data directly by their name, without knowing the location where the data is stored. Since requesting static data is only a special case of requesting processed data, Named Function Networking (NFN) is a generalization of ICN by providing the possibility to define how data should be processed before they are delivered. Thereby, the network decides, where to process the data. The decision where to process data is crucial for the performance and the load on the network, especially when NFN is used within a data center. In this paper we discuss how NFN forwarding decisions can be improved and how to plan an execution of a computation in a name-based network to improve the execution performance. A plan is a list of instruction how and where to execute a computation. To create a plan, the network finds the best way to execute a computation regarding to a predefined metric. Furthermore, we present an extension for reusing plans and creating templates. \u00c2\u00a9 2019 Association for Computing Machinery. ACM ISBN 978-1-4503-7000-4/19/12...$15.00",
      "authors": [
        "Scherb, C.",
        "Marxer, C.",
        "Tschudin, C."
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1145/3359993.3366765",
      "keywords": [
        "Mobile Agents",
        "Serverless Computing",
        "Named Function Networking",
        "Content Centric Networking",
        "Information Centric Networking",
        "Named Data Networking",
        "Cloud Computing"
      ],
      "number_of_pages": 7,
      "pages": "34-40",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450370004",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "ENCP 2019 - Proceedings of the 1st ACM CoNEXT Workshop on Emerging in-Network Computing Paradigms, Part of CoNEXT 2019"
      },
      "publication_date": "2019-12-09",
      "selected": null,
      "title": "Execution plans for serverless computing in information centric networking",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85078884079&origin=inward"
      ]
    },
    {
      "abstract": "The rapid generation of data from distributed IoT devices, scientific instruments, and compute clusters presents unique data management challenges. The influx of large, heterogeneous, and complex data causes repositories to become siloed or generally unsearchable-both problems not currently well-addressed by distributed file systems. In this work, we propose Xtract, a serverless middleware to extract metadata from files spread across heterogeneous edge computing resources. In my future work, we intend to study how Xtract can automatically construct file extraction workflows subject to users' cost, time, security, and compute allocation constraints. To this end, Xtract will enable the creation of a searchable centralized index across distributed data collections. \u00c2\u00a9 2019 Association for Computing Machinery.",
      "authors": [
        "Skluzacek, T.J."
      ],
      "categories": null,
      "citations": 2,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1145/3366624.3368170",
      "keywords": [
        "Data lakes",
        "Metadata extraction",
        "Serverless",
        "File systems"
      ],
      "number_of_pages": 3,
      "pages": "51-53",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450370394",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Middleware 2019 - Proceedings of the 2019 20th International Middleware Conference Doctoral Symposium, Part of Middleware 2019"
      },
      "publication_date": "2019-12-09",
      "selected": null,
      "title": "Dredging a data lake: Decentralized metadata extraction",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85078240684&origin=inward"
      ]
    },
    {
      "abstract": "To overcome the performance limits of purely decentralized blockchains, off-chaining models for compute and storage have been studied recently. Serverless computing offers increased elasticity and scalability in executing microservices in event-driven manner, making it proper fit for off-chain computation tasks. In this work, we present a serverless-enabled off-chaining model for permissioned blockchains with some noticeable early results. \u00c2\u00a9 2019 Copyright held by the owner/author(s).",
      "authors": [
        "Oh, B.",
        "Kim, D."
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1145/3366627.3368118",
      "keywords": [
        "Hyperledger Sawtooth",
        "Serverless computing",
        "Off-chain computation",
        "Permissioned blockchain"
      ],
      "number_of_pages": 2,
      "pages": "9-10",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450370424",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Middleware Demos and Posters 2019 - Proceedings of the 2019 20th International Middleware Conference Demos and Posters, Part of Middleware 2019"
      },
      "publication_date": "2019-12-09",
      "selected": null,
      "title": "Serverless-enabled permissioned blockchain for elastic transaction processing",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85078939240&origin=inward"
      ]
    },
    {
      "abstract": "Serverless computing platforms provide Function-as-a-Service (FaaS) to end users for hosting individual functions known as microservices. In this paper, we describe the deployment of a Natural Language Processing (NLP) application using AWS Lambda. We investigate and study the performance and memory implications of two alternate service compositions. First, we evaluate a switchboard architecture, where a single Lambda deployment package aggregates all of the NLP application functions together into a single package. Second, we consider a service isolation architecture where each NLP function is deployed as a separate FaaS function decomposing the application to run across separate runtime containers. We compared the average runtime and processing throughput of these compositions using different pre-trained network weights to initialize our neural networks to perform inference. Additionally, we varied the workload dataset sizes to evaluate implications of inferencing throughput for our NLP application deployed to a FaaS platform. We found our switchboard composition, that shares FaaS runtime containers for all application tasks, produced a 14.75% runtime performance improvement, and also a 17.3% improvement in NLP processing throughput (samples/second). These results demonstrate the potential for careful application service compositions to provide notable performance improvements and ultimately cost savings for application deployments to serverless FaaS platforms. \u00c2\u00a9 2019 Association for Computing Machinery.",
      "authors": [
        "Fotouhi, M.",
        "Chen, D.",
        "Lloyd, W.J."
      ],
      "categories": null,
      "citations": 2,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1145/3366623.3368141",
      "keywords": [
        "Software architecture",
        "Natural Language Processing",
        "Serverless",
        "FaaS",
        "Cloud Computing"
      ],
      "number_of_pages": 6,
      "pages": "49-54",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450370387",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [
          "Performance",
          "Distributed, Parallel, and Cluster Computing"
        ],
        "title": "WOSC 2019 - Proceedings of the 2019 5th International Workshop on Serverless Computing, Part of Middleware 2019"
      },
      "publication_date": "2019-12-09",
      "selected": null,
      "title": "Function-as-a-service application service composition: Implications for a natural language processing application",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85078929165&origin=inward"
      ]
    },
    {
      "abstract": "Complex Event Processing (CEP) is a powerful paradigm that can derive correlations from different data sources for a wide variety of applications. CEP provides semantic units called operators e.g., filter and join, that collectively represent a complex event. In current CEP systems, operators are highly dependent on the programming language and the underlying server. This restricts the capability of provisioning user-defined operators at runtime as well as the flexibility of developing server agnostic custom operators. In this paper, we provide a serverless CEP architecture, which offers developers the flexibility to design operators in any language and integrate them at runtime. We embed operators in the function as a service model of serverless architecture. This is very beneficial for applications such as financial fraud detection where complex machine learning operators must be integrated at runtime to avoid service disruption. We show using our preliminary evaluation that only with minimal overhead in latency, we can offer highly flexible server agnostic CEP operators. \u00c2\u00a9 2019 Copyright held by the owner/author(s).",
      "authors": [
        "Luthra, M.",
        "Hennig, S.",
        "Agnihotri, P.",
        "Wang, L.",
        "Koldehofe, B."
      ],
      "categories": null,
      "citations": 1,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1145/3366627.3368110",
      "keywords": [
        "Complex Event Processing",
        "Internet of Things",
        "Serverless"
      ],
      "number_of_pages": 2,
      "pages": "11-12",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450370424",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Middleware Demos and Posters 2019 - Proceedings of the 2019 20th International Middleware Conference Demos and Posters, Part of Middleware 2019"
      },
      "publication_date": "2019-12-09",
      "selected": null,
      "title": "Highly flexible server agnostic complex event processing operators",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85078901115&origin=inward"
      ]
    },
    {
      "abstract": " We present new operational semantics for serverless computing that model the\nevent-driven relationships between serverless functions, as well as their\ninteraction with platforms services such as databases and object stores. These\nsemantics precisely encapsulate how control transfers between functions, both\ndirectly and through reads and writes to platform services. We use these\nsemantics to define the notion of the service call graph for serverless\napplications that captures program flows through functions and services.\nFinally, we construct service call graphs for twelve serverless JavaScript\napplications, using a prototype of our call graph construction algorithm, and\nwe evaluate their accuracy.\n",
      "authors": [
        "Obetz, Matthew",
        "Patterson, Stacy",
        "Milanova, Ana"
      ],
      "categories": null,
      "citations": null,
      "comments": null,
      "databases": [
        "arXiv"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": null,
      "publication_date": "2019-12-08",
      "selected": null,
      "title": "Formalizing Event-Driven Behavior of Serverless Applications",
      "urls": [
        "https://arxiv.org/pdf/1912.03584",
        "http://arxiv.org/pdf/1912.03584v1",
        "http://arxiv.org/abs/1912.03584v1"
      ]
    },
    {
      "abstract": "Recently, voice-triggered small cloud functions such as Alexa skills, and cloud mini programs for IoT and smartphone, grow exponentially. These new developments also attract organizations to host their own cloud functions or mini programs in private cloud environment and move from traditional Microservice architecture to Serverless Function-as-a-Service (FaaS) architecture. However, current Serverless FaaS frameworks cannot meet cold start latency, resource efficiency required by short-lived cloud functions and mini programs. In this paper, we build a new Framework - Pigeon that brings Serverless and FaaS programming paradigm into private cloud to enable enterprises to host these applications. Pigeon creates function-oriented Serverless framework by introducing an independent and finer-grained function-level resource scheduler on top of Kubernetes. A new oversubscription-based static pre-warmed container solution is also proposed to effectively reduce function startup latency and increase resource recycling speed for short-lived cloud functions. Empirical results show that Pigeon framework enhances function cold trigger rate by 26% to 80% comparing to AWS Lambda Serverless platform. Comparing to Kubernetes native scheduler based serverless platforms, throughput gets 3 times improvement while handling short-lived functions. \u00c2\u00a9 2019 IEEE.",
      "authors": [
        "Wei Ling",
        "Lin Ma",
        "Chen Tian",
        "Ziang Hu"
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/CSCI49370.2019.00265",
      "keywords": [
        "Serverless",
        "Private cloud",
        "FaaS",
        "Dynamic resource management"
      ],
      "number_of_pages": 6,
      "pages": "1416-1421",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-7281-5585-2",
        "issn": null,
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings - 6th Annual Conference on Computational Science and Computational Intelligence, CSCI 2019"
      },
      "publication_date": "2019-12-05",
      "selected": null,
      "title": "Pigeon: A Dynamic and Efficient Serverless and FaaS Framework for Private Cloud",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85084737861&origin=inward",
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9071414"
      ]
    },
    {
      "abstract": "Serverless computing has emerged as a new compelling paradigm for the deployment of applications and services, which enables developers to focus more on business logic rather than on infrastructure. Serverless computing platform enables the function container scales to zero, which results in a serious problem called cold start. Cold start severely affects the responsiveness of serverless computing platform and limits the use and adoption of serverless computing by a broader range of applications. The traditional strategies reduce the cold start latency at the expense of resources. How to simultaneously minimize the cold start latency and reduce the resources consumption of strategy implementation is a challenging problem. In this paper, we firstly propose an Adaptive Warm-Up Strategy (AWUS) to predict the function invoking time and warm up the functions, thus reducing the cold start latency. We use the function chain model to improve the AWUS. We adopt a fine-grained regression method to predict non-first functions in the function chain more accurately. Secondly, we propose an Adaptive Container Pool Scaling Strategy (ACPSS) to reduce the function launching time. We dynamically adjust the capacity of the container pool to reduce the resources waste. The AWUS and ACPSS work together to reduce the cold start latency and the resources waste. Finally, we implement a serverless computing platform and conduct extensive experiments to evaluate our strategy. The evaluation results demonstrate the effectiveness of our strategies. \u00c2\u00a9 2019 IEEE.",
      "authors": [
        "Zhengjun Xu",
        "Haitao Zhang",
        "Xin Geng",
        "Qiong Wu",
        "Huadong Ma"
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/ICPADS47876.2019.00011",
      "keywords": [
        "Cloud computing",
        "Function launching",
        "Serverless computing",
        "Cold start",
        "LSTM"
      ],
      "number_of_pages": 8,
      "pages": "9-16",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-7281-2584-8",
        "issn": "1521-9097",
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings of the International Conference on Parallel and Distributed Systems - ICPADS"
      },
      "publication_date": "2019-12-04",
      "selected": null,
      "title": "Adaptive Function Launching Acceleration in Serverless Computing Platforms",
      "urls": [
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=8975850",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85078926381&origin=inward"
      ]
    },
    {
      "abstract": "Serverless computing focuses on developing cloud applications that comprise components fully managed by providers. Function-asa-Service (FaaS) service model is often associated with the term serverless as it allows developing entire applications by composing provider-managed, event-driven code snippets. However, such reduced control over the infrastructure and tight-coupling with provider's services amplify the various lock-in problems. In this work, we explore the challenges of migrating serverless, FaaS-based applications across cloud providers. To achieve this, we conduct an experiment in which we implement four prevalent yet intentionally simple serverless use cases and manually migrate them across three popular commercial cloud providers. The results show that even when migrating simple use cases, developers encounter multiple aspects of a lock-in problem. Moreover, we present a categorization of the problems and discuss the feasibility of possible solutions. \u00c2\u00a9 2019 Association for Computing Machinery.",
      "authors": [
        "Yussupov, V.",
        "Breitenb\u00c3\u00bccher, U.",
        "Leymann, F.",
        "M\u00c3\u00bcller, C."
      ],
      "categories": null,
      "citations": 4,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1145/3344341.3368813",
      "keywords": [
        "Function-as-a-Service",
        "Serverless",
        "FaaS",
        "Portability",
        "Migration"
      ],
      "number_of_pages": 11,
      "pages": "273-283",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450368940",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "UCC 2019 - Proceedings of the 12th IEEE/ACM International Conference on Utility and Cloud Computing"
      },
      "publication_date": "2019-12-02",
      "selected": null,
      "title": "Facing the unplanned migration of serverless applications: A study on portability problems, solutions, and dead ends",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85078483150&origin=inward"
      ]
    },
    {
      "abstract": "With new paradigms to deliver software, a programmer\u00e2\u0080\u0099s utopia is close to becoming reality, where she only focuses on the realization of an application without messing around with infrastructural limitations and deployment considerations. Currently, this vision is supported by a paradigm shift of cloud providers\u00e2\u0080\u0099 service models, where new abstraction layers enable in particular serverless computing. Besides, the Internet of Things (IoT) requires a shift from the cloud paradigms to a fog computing perspective, where the functionality of a system needs to be allocated in the cloud-to-fog-continuum. In this regard, we analyze the applicability of a Function as a Service (FaaS) framework on an IoT service platform - SensIoT, which actually monitors environmental factors. Additionally, we deliver functions to cheap, energy-efficient Single Board Computers, which nowadays rapidly emerge as nodes of the IoT. We evaluate our approach by analyzing the resource usages of a FaaS enabled SensIoT and give an outline whether the combination of serverless computing, fog computing, and the IoT is going to enable the era of cloudless computing. \u00c2\u00a9 2019 Association for Computing Machinery.",
      "authors": [
        "Gro\u00c3\u009fmann, M.",
        "Ioannidis, C.",
        "Le, D.T."
      ],
      "categories": null,
      "citations": 4,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1145/3368235.3368834",
      "keywords": [
        "Continuous Integration",
        "Docker",
        "Multi-Architecture",
        "Function as a Service",
        "ARM",
        "Virtualization"
      ],
      "number_of_pages": 6,
      "pages": "29-34",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450370448",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "UCC 2019 Companion - Proceedings of the 12th IEEE/ACM International Conference on Utility and Cloud Computing"
      },
      "publication_date": "2019-12-02",
      "selected": null,
      "title": "Applicability of serverless computing in fog computing environments for IoT scenarios",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85077305563&origin=inward"
      ]
    },
    {
      "abstract": "Scientific and commercial applications are increasingly being executed in the cloud, but the difficulties associated with cluster management render on-demand resources inaccessible or inefficient to many users. Recently, the serverless execution model, in which the provisioning of resources is abstracted from the user, has gained prominence as an alternative to traditional cyberinfrastructure solutions. With its inherent elasticity, the serverless paradigm constitutes a promising computational model for scientific workflows, allowing domain specialists to develop and deploy workflows that are subject to varying workloads and intermittent usage without the overhead of infrastructure maintenance. We present the Serverless Workflow Enablement and Execution Platform (SWEEP), a cloud-agnostic workflow management system with a purely serverless execution model that allows users to define, run and monitor generic cloud-native workflows. We demonstrate the use of SWEEP on workflows from two disparate scientific domains and present an evaluation of performance and scaling. \u00c2\u00a9 2019 Copyright held by the owner/author(s).",
      "authors": [
        "John, A.",
        "Ausmees, K.",
        "Muenzen, K.",
        "Kuhn, C.",
        "Tan, A."
      ],
      "categories": null,
      "citations": 4,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1145/3368235.3368839",
      "keywords": [
        "Scalable workflows",
        "Satellite image analysis",
        "Serverless computing",
        "Variant calling",
        "Workflow management systems"
      ],
      "number_of_pages": 8,
      "pages": "43-50",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450370448",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "UCC 2019 Companion - Proceedings of the 12th IEEE/ACM International Conference on Utility and Cloud Computing"
      },
      "publication_date": "2019-12-02",
      "selected": null,
      "title": "Sweep: Accelerating scientific research through scalable serverless workflows",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85077336031&origin=inward"
      ]
    },
    {
      "abstract": "Serverless computing, or Function-as-a-Service (FaaS), offers a new alternative to operate cloud-based applications. FaaS platforms enable developers to define their application only through a set of service functions, relieving them of infrastructure management tasks, which are executed automatically by the platform. Since its introduction, FaaS has grown to support workloads beyond the lightweight use-cases it was originally intended for, and now serves as a viable paradigm for big data processing. However, several questions regarding FaaS platform quality are still unanswered. Specifically, the impact of automatic infrastructure management on serverless big data applications remains unexplored. In this paper, we propose a novel evaluation method (SIEM) to understand the impact of these tasks. For this purpose, we introduce new metrics to quantify quality in different big data application scenarios. We show an application of SIEM by evaluating the four major FaaS providers, and contribute results and new insights for FaaS-based big data processing. \u00c2\u00a9 2019 Copyright held by the owner/author(s).",
      "authors": [
        "Kuhlenkamp, J.",
        "Werner, S.",
        "Borges, M.C.",
        "Tal, K.E.",
        "Tai, S."
      ],
      "categories": null,
      "citations": 10,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1145/3344341.3368796",
      "keywords": [
        "Benchmarking",
        "Big Data Processing",
        "Serverless",
        "Cloud Computing"
      ],
      "number_of_pages": 9,
      "pages": "1-9",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450368940",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "UCC 2019 - Proceedings of the 12th IEEE/ACM International Conference on Utility and Cloud Computing"
      },
      "publication_date": "2019-12-02",
      "selected": null,
      "title": "An Evaluation of FaaS Platforms as a Foundation for Serverless Big Data Processing",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85078488690&origin=inward"
      ]
    },
    {
      "abstract": "Function-as-a-Service (FaaS) is a novel cloud service model allowing to develop fine-grained, provider-managed cloud applications. In this work, we investigate which challenges motivate researchers to introduce or enhance FaaS platforms and tools. We use a systematic mapping study method to collect and analyze the relevant scientific literature, which helps us answering the three clearly-defined research questions. We design our study using well-established guidelines and systematically apply it to 62 selected publications. The collected and synthesized data provides useful insights into the main challenges that motivate researchers to work on this topic and can be helpful in identifying research gaps for future research. \u00c2\u00a9 2019 Association for Computing Machinery.",
      "authors": [
        "Yussupov, V.",
        "Breitenb\u00c3\u00bccher, U.",
        "Leymann, F.",
        "Wurster, M."
      ],
      "categories": null,
      "citations": 5,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1145/3344341.3368803",
      "keywords": [
        "Systematic Mapping Study",
        "Serverless",
        "FaaS",
        "Function-as-a-Service"
      ],
      "number_of_pages": 12,
      "pages": "229-240",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450368940",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "UCC 2019 - Proceedings of the 12th IEEE/ACM International Conference on Utility and Cloud Computing"
      },
      "publication_date": "2019-12-02",
      "selected": null,
      "title": "A systematic mapping study on engineering function-as-a-service platforms and tools",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85078415296&origin=inward"
      ]
    },
    {
      "abstract": "Serverless computing is a growing industry trend with corresponding rise in interest by scholars and tinkerers. Increasingly, open source and academic system prototypes are being proposed especially in relation with cloud, edge and fog computing among other distributed computing specialisations. Due to the strict separation between elastically scalable stateless microservices bound to stateful backend services prevalent in this computing paradigm, the resulting applications are inherently distributed with favourable characteristics such as elastic scalability and disposability. Still, software application developers are confronted with a multitude of different methods and tools to build, test and deploy their function-based applications in today\u00e2\u0080\u0099s serverless ecosystems. The logical next step is therefore a methodical development approach with key enablers based on a classification of languages, tools, systems, system behaviours, patterns, pitfalls, application architectures, compositions and cloud services around the serverless application development process. \u00c2\u00a9 2019 Copyright held by the owner/author(s).",
      "authors": [
        "Spillner, J."
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1145/3368235.3370269",
      "keywords": [
        "Serverless computing",
        "Artefact quality",
        "Tutorial",
        "Cloud functions"
      ],
      "number_of_pages": 2,
      "pages": "177-178",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450370448",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "UCC 2019 Companion - Proceedings of the 12th IEEE/ACM International Conference on Utility and Cloud Computing"
      },
      "publication_date": "2019-12-02",
      "selected": null,
      "title": "Serverless computing and cloud function-based applications",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85077316935&origin=inward"
      ]
    },
    {
      "abstract": "The promise of ultimate elasticity and operational simplicity of serverless\ncomputing has recently lead to an explosion of research in this area. In the\ncontext of data analytics, the concept sounds appealing, but due to the\nlimitations of current offerings, there is no consensus yet on whether or not\nthis approach is technically and economically viable. In this paper, we\nidentify interactive data analytics on cold data as a use case where serverless\ncomputing excels. We design and implement Lambada, a system following a purely\nserverless architecture, in order to illustrate when and how serverless\ncomputing should be employed for data analytics. We propose several system\ncomponents that overcome the previously known limitations inherent in the\nserverless paradigm as well as additional ones we identify in this work. We can\nshow that, thanks to careful design, a serverless query processing system can\nbe at the same time one order of magnitude faster and two orders of magnitude\ncheaper compared to commercial Query-as-a-Service systems, the only alternative\nwith similar operational simplicity.",
      "authors": [
        "Ingo M\u00fcller",
        "Renato Marroqu\u00edn",
        "Gustavo Alonso"
      ],
      "categories": null,
      "citations": 5,
      "comments": null,
      "databases": [
        "arXiv",
        "Scopus"
      ],
      "doi": "10.1145/3318464.3389758",
      "keywords": [
        "cloud computing",
        "serverless functions",
        "serverless computing",
        "data lake",
        "interactive analytics",
        "elasticity"
      ],
      "number_of_pages": 16,
      "pages": "115-130",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450367356",
        "issn": "07308078",
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings of the ACM SIGMOD International Conference on Management of Data"
      },
      "publication_date": "2019-12-02",
      "selected": null,
      "title": "Lambada: Interactive Data Analytics on Cold Data using Serverless Cloud Infrastructure",
      "urls": [
        "http://arxiv.org/abs/1912.00937v1",
        "http://arxiv.org/pdf/1912.00937v1",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85086236825&origin=inward",
        "http://dx.doi.org/10.1145/3318464.3389758"
      ]
    },
    {
      "abstract": "In the last few years, human activity recognition (HAR) is a subject undergoing intense study in various contexts such as pattern recognition and human-device interaction. HAR applications come to an aid of Telecare system which is paving the way for doctors and nurses to measure the health status of their patients. Due to the ubiquitous influence of smartphones in an individual's life, we take embedded smartphone sensors into account as our case study. The proposed method, Modified Deep Residual Network, outperforms the accuracy of Human activity recognition compared with state-of-the-art machine learning techniques which are using Raw signals as their input. we defined new pooling layer called smooth-pooling to leverage the model performance. The accuracy of proposed architecture is evaluated on three common dataset that comprises accelerometer and gyroscope raw data. The results demonstrated the proposed method outperforms accuracy of classification while requiring just raw data with lower parameters compared to other works. Furthermore, The proposed HAR method is deployed in our IoT cloud platform which enables users to create scenarios based on what they are doing at home. Using Function as a Service (FaaS) architecture in this platform solves the scalability issues by running each function in a separate container. The IoT platform prepares an infrastructure for developers who want to integrate their application into the platform and use its functionality along with other IoT platform options. \u00c2\u00a9 2019 Elsevier B.V.",
      "authors": [
        "Keshavarzian, A.",
        "Sharifian, S.",
        "Seyedin, S."
      ],
      "categories": null,
      "citations": 9,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1016/j.future.2019.06.009",
      "keywords": [
        "Deep residual network",
        "Function as a service",
        "Cloud computing",
        "Human action recognition"
      ],
      "number_of_pages": 15,
      "pages": "14-28",
      "publication": {
        "category": "Journal",
        "cite_score": 13.3,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "0167739X",
        "publisher": "Elsevier",
        "sjr": 1.262,
        "snip": 2.72,
        "subject_areas": [
          "Hardware and Architecture",
          "Computer Networks and Communications",
          "Software"
        ],
        "title": "Future Generation Computer Systems"
      },
      "publication_date": "2019-12-01",
      "selected": null,
      "title": "Modified deep residual network architecture deployed on serverless framework of IoT platform based on human activity recognition application",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85066922149&origin=inward"
      ]
    },
    {
      "abstract": "[No abstract available]",
      "authors": [
        "Castro, P.",
        "Ishakian, V.",
        "Muthusamy, V.",
        "Slominski, A."
      ],
      "categories": null,
      "citations": 28,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1145/3368454",
      "keywords": [],
      "number_of_pages": 11,
      "pages": "44-54",
      "publication": {
        "category": "Journal",
        "cite_score": 11.3,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "00010782",
        "publisher": "Association for Computing Machinery (ACM)",
        "sjr": 0.967,
        "snip": 4.595,
        "subject_areas": [
          "Computer Science (all)"
        ],
        "title": "Communications of the ACM"
      },
      "publication_date": "2019-12-01",
      "selected": null,
      "title": "The rise of serverless computing",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85075812149&origin=inward"
      ]
    },
    {
      "abstract": "There is an increasing user interest in instant messaging applications. These applications allow us to interact with other users and include a functionalit",
      "authors": [
        "D. R. Filonov",
        "D. Ju. Chalyy",
        "D. M. Murin",
        "V. G. Durnev",
        "V. A. Sokolov"
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.3103/S0146411619070046",
      "keywords": [
        "cloud systems and services",
        "security",
        "question answering system",
        "information retrieval",
        "messenger"
      ],
      "number_of_pages": 6,
      "pages": "699-704",
      "publication": {
        "category": "Journal",
        "cite_score": 1.5,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "01464116",
        "publisher": "Pleiades Publishing",
        "sjr": 0.299,
        "snip": 0.676,
        "subject_areas": [
          "Control and Systems Engineering",
          "Software",
          "Signal Processing"
        ],
        "title": "Automatic Control and Computer Sciences"
      },
      "publication_date": "2019-12-01",
      "selected": null,
      "title": "A Question-Answering System for Applicant Support Using Modern Messaging Apps",
      "urls": [
        "https://link.springer.com/content/pdf/10.3103/S0146411619070046.pdf",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85080942736&origin=inward"
      ]
    },
    {
      "abstract": "The performance of Functions-as-a-Service (FaaS) would be significantly improved by organizing cloud servers into a hierarchical distributed architecture, resulting in low-latency access and faster response when compared to centralized cloud. However, the distributed organization introduces a new type of decision making problem for placing and executing functions to a specific cloud server. In order to handle the problem, we extended a well-known cloud computing simulator, CloudSim. The extended CloudSim enables users to define FaaS functions with various characteristics and service level objectives (SLOs), place them across geo-distributed cloud servers, and evaluate per-function performance. Proof-of-Concept (PoC) evaluation results show the potential of our CloudSim extension in terms of execution efficiency and simulation reality. \u00c2\u00a9 2019 IEEE.",
      "authors": [
        "Jeon, H.",
        "Cho, C.",
        "Shin, S.",
        "Yoon, S."
      ],
      "categories": null,
      "citations": 2,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1109/PDCAT46702.2019.00076",
      "keywords": [
        "Cloudsim",
        "Functions-as-a-service",
        "Cloud computing",
        "Faas",
        "Simulation",
        "Simulator",
        "Serverless computing"
      ],
      "number_of_pages": 6,
      "pages": "386-391",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781728126166",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings - 2019 20th International Conference on Parallel and Distributed Computing, Applications and Technologies, PDCAT 2019"
      },
      "publication_date": "2019-12-01",
      "selected": null,
      "title": "A cloudsim-extension for simulating distributed functions-as-a-service",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85083229164&origin=inward"
      ]
    },
    {
      "abstract": " This abstract presents a serverless approach to seismic imaging in the cloud\nbased on high-throughput containerized batch processing, event-driven\ncomputations and a domain-specific language compiler for solving the underlying\nwave equations. A 3D case study on Azure demonstrates that this approach allows\nreducing the operating cost of up to a factor of 6, making the cloud a viable\nalternative to on-premise HPC clusters for seismic imaging.\n",
      "authors": [
        "Witte, Philipp A.",
        "Louboutin, Mathias",
        "Jones, Charles",
        "Herrmann, Felix J."
      ],
      "categories": null,
      "citations": null,
      "comments": "Submitted to the 2020 Rice Oil & Gas HPC Conference",
      "databases": [
        "arXiv"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": null,
      "publication_date": "2019-11-27",
      "selected": null,
      "title": "Serverless seismic imaging in the cloud",
      "urls": [
        "http://arxiv.org/pdf/1911.12447v1",
        "https://arxiv.org/pdf/1911.12447",
        "http://arxiv.org/abs/1911.12447v1"
      ]
    },
    {
      "abstract": " Much like on-premises systems, the natural choice for running database\nanalytics workloads in the cloud is to provision a cluster of nodes to run a\ndatabase instance. However, analytics workloads are often bursty or low volume,\nleaving clusters idle much of the time, meaning customers pay for compute\nresources even when unused. The ability of cloud function services, such as AWS\nLambda or Azure Functions, to run small, fine granularity tasks make them\nappear to be a natural choice for query processing in such settings. But\nimplementing an analytics system on cloud functions comes with its own set of\nchallenges. These include managing hundreds of tiny stateless\nresource-constrained workers, handling stragglers, and shuffling data through\nopaque cloud services. In this paper we present Starling, a query execution\nengine built on cloud function services that employs number of techniques to\nmitigate these challenges, providing interactive query latency at a lower total\ncost than provisioned systems with low-to-moderate utilization. In particular,\non a 1TB TPC-H dataset in cloud storage, Starling is less expensive than the\nbest provisioned systems for workloads when queries arrive 1 minute apart or\nmore. Starling also has lower latency than competing systems reading from cloud\nobject stores and can scale to larger datasets.\n",
      "authors": [
        "Perron, Matthew",
        "Fernandez, Raul Castro",
        "DeWitt, David",
        "Madden, Samuel"
      ],
      "categories": null,
      "citations": null,
      "comments": null,
      "databases": [
        "arXiv"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": null,
      "publication_date": "2019-11-26",
      "selected": null,
      "title": "Starling: A Scalable Query Engine on Cloud Function Services",
      "urls": [
        "http://arxiv.org/abs/1911.11727v1",
        "https://arxiv.org/pdf/1911.11727",
        "http://arxiv.org/pdf/1911.11727v1"
      ]
    },
    {
      "abstract": "In the new global economy, web application has become a central issue for an enterprise organization with branches covering many countries around the world. One major issue in early business services research concerned in those organizations is that developing a web application that can support both global and local services at the same time is very difficult. Since at the local level, each country will have different languages, currencies, regulations. Therefore, to develop a system or web application to support business services around the world will have to be repeated the same, but with some details that are different, such as the same invoice form. However, to support services around the world that has repeated the same process but there is detailed information in each country or each language that is different. The objectives of this research are to determine whether to develop a platform that makes Form design to be shared in many countries more easily by automatically linking to the database via API. APIs can be embedded seamlessly into both the front-end and server side. The user interface can be designed smoothly. Export code can be used with HTML. In additional, it can work with serverless applications. Files can be managed in the form of JSON, csv and txt files. The results indicate that the designed platform can support the work that is intended to meet the objectives. Makes Form development in a web application very convenient and reduces many repetitive steps. In addition, data management is also effective. When creating this Form, it helps developers reduce the time it takes to create multiple Forms and reduces the form creation errors in the settings. Custom will help to keep the original Form. \u00c2\u00a9 2019 ACM.",
      "authors": [
        "Namee, K.",
        "Phoarun, R.",
        "Albadrani, G.M.",
        "Polpinij, J.",
        "Tanessakulwattana, S.",
        "Sphanphong, P."
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1145/3372422.3372452",
      "keywords": [
        "Automated Form",
        "Form-Based Application",
        "Serverless Application",
        "API Data Management Platform",
        "Form Platform"
      ],
      "number_of_pages": 6,
      "pages": "144-149",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450372596",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "ACM International Conference Proceeding Series"
      },
      "publication_date": "2019-11-23",
      "selected": null,
      "title": "A Form and API Data Management Platform for Progressive Web Application and Serverless Application Architecture",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85081079850&origin=inward"
      ]
    },
    {
      "abstract": " The increased use of micro-services to build web applications has spurred the\nrapid growth of Function-as-a-Service (FaaS) or serverless computing platforms.\nWhile FaaS simplifies provisioning and scaling for application developers, it\nintroduces new challenges in resource management that need to be handled by the\ncloud provider. Our analysis of popular serverless workloads indicates that\nschedulers need to handle functions that are very short-lived, have\nunpredictable arrival patterns, and require expensive setup of sandboxes. The\nchallenge of running a large number of such functions in a multi-tenant cluster\nmakes existing scheduling frameworks unsuitable. We present Archipelago, a platform that enables low latency request execution\nin a multi-tenant serverless setting. Archipelago views each application as a\nDAG of functions, and every DAG in associated with a latency deadline.\nArchipelago achieves its per-DAG request latency goals by: (1) partitioning a\ngiven cluster into a number of smaller worker pools, and associating each pool\nwith a semi-global scheduler (SGS), (2) using a latency-aware scheduler within\neach SGS along with proactive sandbox allocation to reduce overheads, and (3)\nusing a load balancing layer to route requests for different DAGs to the\nappropriate SGS, and automatically scale the number of SGSs per DAG. Our\ntestbed results show that Archipelago meets the latency deadline for more than\n99% of realistic application request workloads, and reduces tail latencies by\nup to 36X compared to state-of-the-art serverless platforms.\n",
      "authors": [
        "Singhvi, Arjun",
        "Houck, Kevin",
        "Balasubramanian, Arjun",
        "Shaikh, Mohammed Danish",
        "Venkataraman, Shivaram",
        "Akella, Aditya"
      ],
      "categories": null,
      "citations": null,
      "comments": "14 pages",
      "databases": [
        "arXiv"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": null,
      "publication_date": "2019-11-22",
      "selected": null,
      "title": "Archipelago: A Scalable Low-Latency Serverless Platform",
      "urls": [
        "http://arxiv.org/pdf/1911.09849v1",
        "http://arxiv.org/abs/1911.09849v1",
        "https://arxiv.org/pdf/1911.09849"
      ]
    },
    {
      "abstract": "Serverless computing has gained attention due to its fine-grained provisioning, large-scale multi-Tenancy, and on-demand scaling. However, it also forces applications to externalize state in remote storage, adding substantial overheads. To fix this \"data shipping problem\"we built Shredder, a low-latency multi-Tenant cloud store that allows small units of computation to be performed directly within storage nodes. Storage tenants provide Shredder with JavaScript functions (or WebAssembly programs), which can interact directly with data without moving them over the network. The key challenge in Shredder is safely isolating thousands of tenant storage functions while minimizing data interaction costs. Shredder uses a unique approach where its data store and networking paths are implemented in native code to ensure performance, while isolated tenant functions interact with data using a V8-specific intermediate representation that avoids expensive cross-protection-domain calls and data copying. As a result, Shredder can execute 4 million remotely-invoked tenant functions per second spread over thousands of tenants with median and 99th-percentile response latencies of less than 50 \u00c2\u00b5s and 500 \u00c2\u00b5s, respectively. Our evaluation shows that Shredder achieves a 14% to 78% speedup against conventional remote storage when fetching items with just one to three data dependencies between them. We also demonstrate Shredder's effectiveness in accelerating data-intensive applications, including a k-hop query on social graphs that shows orders of magnitude gain. \u00c2\u00a9 2019 Owner/Author.",
      "authors": [
        "Zhang, T.",
        "Xie, D.",
        "Li, F.",
        "Stutsman, R."
      ],
      "categories": null,
      "citations": 11,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1145/3357223.3362723",
      "keywords": [],
      "number_of_pages": 12,
      "pages": "1-12",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450369732",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "SoCC 2019 - Proceedings of the ACM Symposium on Cloud Computing"
      },
      "publication_date": "2019-11-20",
      "selected": null,
      "title": "Narrowing the Gap between Serverless and its State with Storage Functions",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85090506802&origin=inward"
      ]
    },
    {
      "abstract": "The past decade has seen a tremendous interest in large-scale data processing at Microsoft. Typical scenarios include building business-critical pipelines such as advertiser feedback loop, index builder, and relevance/ranking algorithms for Bing; analyzing user experience telemetry for Office, Windows or Xbox; and gathering recommendations for products like Windows and Xbox. To address these needs a first-party big data analytics platform, referred to as Cosmos, was developed in the early 2010s at Microsoft. Cosmos makes it possible to store data at exabyte scale and process in a serverless form factor, with SCOPE [4] being the query processing workhorse. Over time, however, several newer challenges have emerged, requiring major technical innovations in Cosmos to meet these newer demands. In this abstract, we describe three such challenges from the query processing viewpoint, and our approaches to handling them. Hyper Scale. Cosmos has witnessed a significant growth in usage from its early days, from the number of customers (starting from Bing to almost every single business unit at Microsoft today), to the volume of data processed (from petabytes to exabytes today), to the amount of processing done (from tens of thousands of SCOPE jobs to hundreds of thousands of jobs today, across hundreds of thousands of machines). Even a single job can consume tens of petabytes of data and produce similar volumes of data by running millions of tasks in parallel. Our approach to handle this unprecedented scale is two fold. First, we decoupled and disaggregated the query processor from storage and resource management components, thereby allowing different components in the Cosmos stack to scale independently. Second, we scaled the data movement in the SCOPE query processor with quasilinear complexity [2]. This is crucial since data movement is often the most expensive step, and hence the bottleneck, in massive-scale data processing. Massive Complexity. Cosmos workloads are also highly complex. Thanks to adoption across the whole of Microsoft, Cosmos needs to support workloads that are representative of multiple industry segments, including search engine (Bing), operating system (Windows), workplace productivity (Office), personal computing (Surface), gaming (XBox), etc. To handle such diverse workloads, our approach has been to provide a one-size-fits-All experience. First of all, to make it easy for the customers to express their computations, SCOPE supports different types of queries, from batch to interactive to streaming and machine learning. Second, SCOPE supports both structured and unstructured data processing. Likewise, multiple data formats, including both propriety and open source source such as Parquet, are supported. Third, users can write business logic using a mix of declarative and imperative languages, over even different imperative languages such as C# and Python, in the same job. Furthermore, users can express all of the above in simple data flow style computation for better readability and maintainability. Finally, considering the diverse workload mix inside Microsoft, we have come to realization that it is not possible to fits all scenarios using SCOPE. Therefore, we also support the popular Spark query processing engine. Overall, the one-size-fits-All query processing experience in Cosmos covers very diverse workloads, including data formats, programming languages, and the backend engines. Minimal Cost. While scale and complexity are hard by themselves, the biggest challenge is to achieve all of that at minimal cost. In fact, there is a pressing need to improve Cosmos efficiency and reduce operational costs. This is challenging due to several reasons. First, optimizing a SCOPE job is hard considering that the SCOPE DAGs are super large (up to 1000s of operators in single job!), and the optimization estimates (cardinality, cost, etc.) are often way off from the actuals. Second, SCOPE optimizes a given query, while the operational costs depend on the overall workload. Therefore workload optimization becomes very important. And finally, SCOPE jobs are typically interlinked in data pipelines, i.e., the output of one job is consumed by other jobs. This means that workload optimization needs to be aware of these dependencies. Our approach is to develop a feedback loop to learn from past workloads in order to optimize the future ones. Specifically, we leverage machine learning to learn models for optimizing individual jobs [3], apply multi-query optimizations to optimize the costs of overall workload [1], and build dependency graphs to identify and optimize for the data pipelines. \u00c2\u00a9 2019 Owner/Author.",
      "authors": [
        "Patel, H.",
        "Jindal, A.",
        "Szyperski, C."
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1145/3357223.3366029",
      "keywords": [],
      "number_of_pages": 1,
      "pages": "490",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450369732",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "SoCC 2019 - Proceedings of the ACM Symposium on Cloud Computing"
      },
      "publication_date": "2019-11-20",
      "selected": null,
      "title": "Big Data Processing at Microsoft: Hyper Scale, Massive Complexity, and Minimal Cost",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85091790347&origin=inward"
      ]
    },
    {
      "abstract": "Machine learning (ML) workflows are extremely complex. The typical workflow consists of distinct stages of user interaction, such as preprocessing, training, and tuning, that are repeatedly executed by users but have heterogeneous computational requirements. This complexity makes it challenging for ML users to correctly provision and manage resources and, in practice, constitutes a significant burden that frequently causes over-provisioning and impairs user productivity. Serverless computing is a compelling model to address the resource management problem, in general, but there are numerous challenges to adopt it for existing ML frameworks due to significant restrictions on local resources. This work proposes Cirrus-An ML framework that automates the end-To-end management of datacenter resources for ML workflows by efficiently taking advantage of serverless infrastructures. Cirrus combines the simplicity of the serverless interface and the scalability of the serverless infrastructure (AWS Lambdas and S3) to minimize user effort. We show a design specialized for both serverless computation and iterative ML training is needed for robust and efficient ML training on serverless infrastructure. Our evaluation shows that Cirrus outperforms frameworks specialized along a single dimension: Cirrus is 100x faster than a general purpose serverless system [36] and 3.75x faster than specialized ML frameworks for traditional infrastructures [49]. \u00c2\u00a9 2019 ACM.",
      "authors": [
        "Carreira, J.",
        "Fonseca, P.",
        "Tumanov, A.",
        "Zhang, A.",
        "Katz, R."
      ],
      "categories": null,
      "citations": 16,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1145/3357223.3362711",
      "keywords": [
        "Serverless",
        "Distributed Computing",
        "Machine Learning"
      ],
      "number_of_pages": 12,
      "pages": "13-24",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450369732",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "SoCC 2019 - Proceedings of the ACM Symposium on Cloud Computing"
      },
      "publication_date": "2019-11-20",
      "selected": null,
      "title": "Cirrus: A Serverless Framework for End-To-end ML Workflows",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85086244066&origin=inward"
      ]
    },
    {
      "abstract": "The control plane for mobile wireless (eg. cellular) networks faces challenges with respect to scaling, robustness, and handling of bursty traffic. In this paper, we take a cloud-native approach to building a mobile control plane, employing a design that maps transitions of device state to serverless functions. Using a prototype of the LTE/EPC Mobility Management Entity (MME), we demonstrate how to architect a mobile control plane using serverless computing primitives. We demonstrate the practicality of this approach, which differs significantly from designs based on traditional telecom infrastructure. \u00c2\u00a9 2019 ACM.",
      "authors": [
        "Jindal, S.",
        "Ricci, R."
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1145/3357223.3362722",
      "keywords": [
        "MME",
        "Serverless",
        "cloud-native",
        "FaaS",
        "mobile networks"
      ],
      "number_of_pages": 6,
      "pages": "152-157",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450369732",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "SoCC 2019 - Proceedings of the ACM Symposium on Cloud Computing"
      },
      "publication_date": "2019-11-20",
      "selected": null,
      "title": "MME-FaaS Cloud-Native Control for Mobile Networks",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85091743595&origin=inward"
      ]
    },
    {
      "abstract": "Serverless computing is gaining popularity with the Function-Asa-Service (FaaS) execution model. Without incurring overheads involved in provisioning cloud instances and with high availability and scalability, serverless computing allows developers to focus on implementation of core application logic using other well-developed cloud services. By abstracting the complex resource management task, serverless computing opens new opportunities for the cloud service adoption even to non-cloud experts [2]. With the popularity, many research results have been published using the FaaS execution model. They include investigation of serverless computing opportunities [1], proposing new serverless applications, function run-Time optimization, and public service comparison. Without a common test benchmark suite, authors in the previous work had evaluated proposed systems using fairly simple FaaS applications, such as micro-benchmarks that emphasize specific resources exclusively, e.g., CPU, disk I/O, and network. However, such simple workloads do not represent realistic FaaS system applications, and the evaluations might not compare proposed systems appropriately. To overcome the limitation of lacking a comprehensive benchmark suite for the serverless computing and FaaS execution model, the authors create FunctionBench that provides various FaaS workloads that are ready to be executed on public cloud function execution services-AWS Lambda, Google Cloud Functions, and Azure functions1. Since the inception of serving the FaaS workloads, we keep working to expand the supported applications and add scenarios in big-data processing, back-end web applications, and security. To represent big-data applications, we add a MapReduce WordCount workload, which counts the number of occurrences of each word in a given partitioned input dataset from Wikipedia. To cover web back-end applications, we add Chameleon. The application renders a template using the Chameleon module in Python PIP library to create an HTML table of N rows and M columns that are provided as input arguments. Another web-related application is JSON serialize-deserialize module. The application performs JSON deserialization using a JSON-encoded string dataset (Awesome JSON Dataset) downloaded from a public object storage service, and it serializes the JSON object again. To represent security-related applications, we add Pyaes benchmark that performs private key-based encryption and decryption. It is a pure-Python implementation of the AES block-cipher algorithm in CTR mode. We also add gzip-compression benchmark to represent realistic disk IO-heavy applications. The degree (High, Medium, Low) of resource usage characteristics of newly proposed applications are summarized in Table 1. Please refer to [3] to read the description of comprehensive applications list. The proposed FunctionBench provides a variety of FaaS applications in multiple categories, and we are sure that it will enable fair evaluation of new research work in the relevant field with practical application scenarios. \u00c2\u00a9 2019 Owner/Author.",
      "authors": [
        "Kim, J.",
        "Lee, K."
      ],
      "categories": null,
      "citations": 3,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1145/3357223.3365439",
      "keywords": [
        "benchmark",
        "cloud computing",
        "faas",
        "workload",
        "serverless"
      ],
      "number_of_pages": 1,
      "pages": "477",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450369732",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "SoCC 2019 - Proceedings of the ACM Symposium on Cloud Computing"
      },
      "publication_date": "2019-11-20",
      "selected": null,
      "title": "Practical Cloud Workloads for Serverless FaaS",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85091129148&origin=inward"
      ]
    },
    {
      "abstract": "The proceedings contain 52 papers. The topics discussed include: a system-wide debugging assistant powered by natural language processing; narrowing the gap between serverless and its state with storage functions; Cirrus: a serverless framework for end-to-end ML workflows; Cartel: a system for collaborative transfer learning at the edge; HyperSched: dynamic resource reallocation for model development on a deadline; lessons from large-scale software as a service at databricks; BurScale: using burstable instances for cost-effective autoscaling in the public cloud; characterizing and synthesizing task dependencies of data-parallel jobs in Alibaba cloud; and an automated, cross-layer instrumentation framework for diagnosing performance problems in distributed applications.",
      "authors": [],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450369732",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "SoCC 2019 - Proceedings of the ACM Symposium on Cloud Computing"
      },
      "publication_date": "2019-11-20",
      "selected": null,
      "title": "SoCC 2019 - Proceedings of the ACM Symposium on Cloud Computing",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85091756864&origin=inward"
      ]
    },
    {
      "abstract": "In recent years, many applications have started using serverless computing platforms primarily due to the ease of deployment and cost efficiency they offer. However, the existing scheduling mechanisms of serverless platforms fall short in catering to the unique characteristics of such applications: burstiness, short and variable execution times, statelessness and use of a single core. Specifically, the existing mechanisms fall short in meeting the requirements generated due to the combined effect of these characteristics: scheduling at a scale of millions of function invocations per second while achieving predictable performance. In this paper, we argue for a cluster-level centralized and core-granular scheduler for serverless functions. By maintaining a global view of the cluster resources, the centralized approach eliminates queue imbalances while the core granularity reduces interference; together these properties enable reduced performance variability. We expect such a scheduler to increase the adoption of serverless computing platforms by various latency and throughput sensitive applications. \u00c2\u00a9 2019 ACM.",
      "authors": [
        "Kaffes, K.",
        "Yadwadkar, N.J.",
        "Kozyrakis, C."
      ],
      "categories": null,
      "citations": 9,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1145/3357223.3362709",
      "keywords": [
        "serverless computing",
        "resource allocation",
        "scheduling",
        "cloud computing"
      ],
      "number_of_pages": 7,
      "pages": "158-164",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450369732",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "SoCC 2019 - Proceedings of the ACM Symposium on Cloud Computing"
      },
      "publication_date": "2019-11-20",
      "selected": null,
      "title": "Centralized Core-granular Scheduling for Serverless Functions",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85091770578&origin=inward"
      ]
    },
    {
      "abstract": "Amazon Web Services (AWS) Lambdas and other \"cloud functions\"(CFs) offer much lower startup latencies than virtual machines (VMs) (tens/hundreds of milliseconds vs. a few/several minutes) with lower minimum cost. This makes it appealing to use them for handling unexpected spikes in simple, stateless workloads [2, 3, 5]. If the spike persists, additional VMs may be launched and CFs can be decommissioned when the VMs are ready (VMs are cheaper per unit resource procured than CFs). However, it is not immediately clear if using CFs for complex workloads-those involving significant state exchange among components-is similarly effective. Current CFs have several restrictions that may limit their efficacy: (i) relatively limited resource capacity, especially main memory (e.g., an AWS Lambda may only have up to 3GB memory), (ii) limited lifetime (e.g., Lambdas are terminated after 15 minutes), and (iii) limited support for sharing of intermediate state (e.g., Lambdas must employ an external storage system such as AWS S3). Contrary to conventional wisdom, we show that it is possible to exploit the faster startup times of CFs to improve cost and performance of autoscaling even for complex workloads. Approach: We design SplitServe [1], implemented as an enhancement of Apache Spark [4], that is capable of simultaneously using AWS VMs and Lambdas for serving the tasks comprising a parallel Spark job. The most salient challenges addressed and design choices made in our efforts are: (i) State exchange: Instead of relying on a slower external cloud storage to transfer state, we leverage the resources associated with the procured VMs and employ HDFS for state exchange. We find that this allows both VMs and Lambdas to achieve throughputs close to that of local disks. Since we are using already provisioned disk capacity, we do not pay extra (as we would if we were to use, say, AWS S3). (ii) Segueing from Lambdas to newly available VMs: Simply killing ongoing tasks on Lambdas and rerunning them on newly available VMs triggers Spark's high overhead fault tolerance mechanisms. So, a diaphanous scheduling decision, based on the amount of time a Lambda function has been running, is made at per task granularity. Briefly, as the time since a Lambda was launched approaches the common-case startup delay for a VM, new tasks are not sent to the Lambda. Findings: In our experiments, we find that SplitServe reduces overall job execution time compared to the state of the art with either a homogeneous or heterogeneous execution environment, i.e., either all VMs or all Lambdas, or simultaneously involving both VMs and Lambdas to execute a job's tasks. For the heterogeneous case, our experimental evaluation of SplitServe using four different workloads (interactive TCP-DS, K-means clustering, PageRank, and Pi) shows that SplitServe-Spark improves performance up to 55% for workloads with small to modest amount of shuffling, and up to 31% in workloads with large amounts of shuffling, when compared to only VM based autoscaling. Also, with its novel segueing technique, SplitServe can help reduce costs by up to 21% while still providing almost 40% reduction in execution time. Ongoing Work: We are designing a comprehensive autoscaling system that leverages SplitServe's capabilities. We will carry out an empirical evaluation of the performance/cost improvements such a system can offer over state of the art solutions with diverse workloads that exhibit realistic dynamism and uncertainty. \u00c2\u00a9 2019 Owner/Author.",
      "authors": [
        "Jain, A.",
        "Baarzi, A.F.",
        "Alfares, N.",
        "Kesidis, G.",
        "Urgaonkar, B.",
        "Kandemir, M."
      ],
      "categories": null,
      "citations": 1,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1145/3357223.3366027",
      "keywords": [],
      "number_of_pages": 1,
      "pages": "487",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450369732",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "SoCC 2019 - Proceedings of the ACM Symposium on Cloud Computing"
      },
      "publication_date": "2019-11-20",
      "selected": null,
      "title": "SpIitServe: Efficiently Splitting Complex Workloads across FaaS and IaaS",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85091798971&origin=inward"
      ]
    },
    {
      "abstract": "Python-written data analytics applications can be modeled as and compiled into a directed acyclic graph (DAG) based workflow, where the nodes are fine-grained tasks and the edges are task dependencies.Such analytics workflow jobs are increasingly characterized by short, fine-grained tasks with large fan-outs. These characteristics make them well-suited for a new cloud computing model called serverless computing or Function-as-a-Service (FaaS), which has become prevalent in recent years. The auto-scaling property of serverless computing platforms accommodates short tasks and bursty workloads, while the pay-per-use billing model of serverless computing providers keeps the cost of short tasks low. In this paper, we thoroughly investigate the problem space of DAG scheduling in serverless computing. We identify and evaluate a set of techniques to make DAG schedulers serverless-aware. These techniques have been implemented in WUKONG, a serverless, DAG scheduler attuned to AWS Lambda. WUKONG provides decentralized scheduling through a combination of static and dynamic scheduling. We present the results of an empirical study in which WUKONG is applied to a range of microbenchmark and real-world DAG applications. Results demonstrate the efficacy of WUKONG in minimizing the performance overhead introduced by AWS Lambda-WUKONG achieves competitive performance compared to a serverful DAG scheduler, while improving the performance of real-world DAG jobs by as much as 4.1x at larger scale. \u00c2\u00a9 2019 IEEE.",
      "authors": [
        "Benjamin Carver",
        "Jingyuan Zhang",
        "Ao Wang",
        "Yue Cheng"
      ],
      "categories": null,
      "citations": 3,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/PDSW49588.2019.00005",
      "keywords": [],
      "number_of_pages": 10,
      "pages": "1-10",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-7281-6006-1",
        "issn": null,
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings of PDSW 2019: IEEE/ACM 4th International Parallel Data Systems Workshop - Held in conjunction with SC 2019: The International Conference for High Performance Computing, Networking, Storage and Analysis"
      },
      "publication_date": "2019-11-18",
      "selected": null,
      "title": "In Search of a Fast and Efficient Serverless DAG Engine",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85078949158&origin=inward",
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=8955207"
      ]
    },
    {
      "abstract": "Deployed AI platforms typically ship with bulky system architectures which present bottlenecks and a high risk of failure. A serverless deployment can mitigate these factors and provide a cost-effective, automatically scalable (up or down) and elastic real-time on-demand AI solution. However, deploying high complexity production workloads into serverless environments is far from trivial, e.g., due to factors such as minimal allowance for physical codebase size, low amount of runtime memory, lack of GPU support and a maximum runtime before termination via timeout. In this paper we propose a set of optimization techniques and show how these transform a codebase which was previously incompatible with a serverless deployment into one that can be successfully deployed in a serverless environment; without compromising capability or performance. The techniques are illustrated via worked examples that have been deployed live on rail data and realtime predictions on train movements on the UK rail network. The similarities of a serverless environment to other resource constrained environments (IoT, Mobile) means the techniques can be applied to a range of use cases. \u00c2\u00a9 2019 IEEE.",
      "authors": [
        "Angelos Christidis",
        "Roy Davies",
        "Sotiris Moschoyiannis"
      ],
      "categories": null,
      "citations": 3,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/SOCA.2019.00016",
      "keywords": [
        "Machine Learning",
        "Serverless",
        "FaaS",
        "Optimization",
        "AI",
        "AWS Lambda"
      ],
      "number_of_pages": 9,
      "pages": "55-63",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-7281-5412-1",
        "issn": "2163-2871",
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings - IEEE 11th International Conference on Service-Oriented Computing and Applications, SOCA 2018"
      },
      "publication_date": "2019-11-18",
      "selected": null,
      "title": "Serving Machine Learning Workloads in Resource Constrained Environments: a Serverless Deployment Example",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85078827240&origin=inward",
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=8953024"
      ]
    },
    {
      "abstract": "Serverless computing is increasingly popular because of the promise of lower cost and the convenience it provides to users who do not need to focus on server management. This has resulted in the availability of a number of proprietary and open-source serverless solutions. We seek to understand how the performance of serverless computing depends on a number of design issues using several popular open-source serverless platforms. We identify the idiosyncrasies affecting performance (throughput and latency) for different open-source serverless platforms. Further, we observe that just having either resource-based (CPU and memory) or workload-based (request per second (RPS) or concurrent requests) auto-scaling is inadequate to address the needs of the serverless platforms. \u00c2\u00a9 2019 Association for Computing Machinery.",
      "authors": [
        "Junfeng Li",
        "Sameer G. Kulkarni",
        "K. K. Ramakrishnan",
        "Dan Li"
      ],
      "categories": null,
      "citations": 6,
      "comments": null,
      "databases": [
        "arXiv",
        "Scopus"
      ],
      "doi": "10.1145/3366623.3368139",
      "keywords": [
        "Performance",
        "Function-as-a-service",
        "Serverless"
      ],
      "number_of_pages": 6,
      "pages": "37-42",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450370387",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [
          "Performance",
          "Distributed, Parallel, and Cluster Computing"
        ],
        "title": "WOSC 2019 - Proceedings of the 2019 5th International Workshop on Serverless Computing, Part of Middleware 2019"
      },
      "publication_date": "2019-11-18",
      "selected": null,
      "title": "Understanding Open Source Serverless Platforms: Design Considerations and Performance",
      "urls": [
        "http://arxiv.org/abs/1911.07449v4",
        "http://arxiv.org/pdf/1911.07449v4",
        "http://dx.doi.org/10.1145/3366623.3368139",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85078916655&origin=inward"
      ]
    },
    {
      "abstract": " Serverless computing has gained a significant traction in recent times\nbecause of its simplicity of development, deployment and fine-grained billing.\nHowever, while implementing complex services comprising databases, file stores,\nor more than one serverless function, the performance in terms of latency of\nserving requests often degrades severely. In this work, we analyze different\nserverless architectures with AWS Lambda services and compare their performance\nin terms of latency with a traditional virtual machine (VM) based approach. We\nobserve that database access latency in serverless architecture is almost 14\ntimes than that in VM based setup. Further, we introduce some caching\nstrategies which can improve the response time significantly, and compare their\nperformance.\n",
      "authors": [
        "Ghosh, Bishakh Chandra",
        "Addya, Sourav Kanti",
        "Somy, Nishant Baranwal",
        "Nath, Shubha Brata",
        "Chakraborty, Sandip",
        "Ghosh, Soumya K"
      ],
      "categories": null,
      "citations": null,
      "comments": null,
      "databases": [
        "arXiv"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": null,
      "publication_date": "2019-11-17",
      "selected": null,
      "title": "Caching Techniques to Improve Latency in Serverless Architectures",
      "urls": [
        "http://arxiv.org/pdf/1911.07351v1",
        "https://arxiv.org/pdf/1911.07351",
        "http://arxiv.org/abs/1911.07351v1"
      ]
    },
    {
      "abstract": "Function-as-a-Service (FaaS) platforms enable users to execute user-defined functions without worrying about operational issues such as the management of infrastructure resources. In order to improve performance, different FaaS platforms are implementing optimizations and improvements, but it's not clear how good these implementations are.In this work, Apache OpenWhisk platform is evaluated from an approach that allows to determinate and characterize the performance under different configuration options; it was found that under certain premises an improvement of the performance in cold-booting latencies up to 38% is obtain. \u00c2\u00a9 2019 IEEE.",
      "authors": [
        "Sebasti\u00e1n Quevedo",
        "Freddy Merch\u00e1n",
        "Rafael Rivadeneira",
        "Federico X. Dominguez"
      ],
      "categories": null,
      "citations": 1,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/ETCM48019.2019.9014867",
      "keywords": [],
      "number_of_pages": 5,
      "pages": "1-5",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-7281-3765-0",
        "issn": null,
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "2019 IEEE 4th Ecuador Technical Chapters Meeting, ETCM 2019"
      },
      "publication_date": "2019-11-11",
      "selected": null,
      "title": "Evaluating Apache OpenWhisk - FaaS",
      "urls": [
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9014867",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85082005500&origin=inward"
      ]
    },
    {
      "abstract": "Function-as-a-Service (FaaS) is a recent and popular cloud computing paradigm in which the function provider specifies a function to be run and is billed only for the computational resources used by that function. Compared to other cloud paradigms, FaaS requires significantly more fine-grained measurement of functions' compute time and memory usage. Since functions are short and stateless, small ephemeral entities (e.g. individuals or underutilized data centers) can become FaaS service providers. However, this exacerbates the already substantial challenges of 1) ensuring integrity of computation, 2) minimizing information revealed to the service provider, and 3) accurately measuring computational resource usage. To address these challenges, we introduce S-FaaS, the first architecture and implementation of FaaS to provide strong security and accountability guarantees using Intel SGX. To match the dynamic event-driven nature of FaaS, we introduce a new key distribution enclave and a novel transitive attestation protocol. A core contribution of S-FaaS is our set of reusable resource measurement mechanisms that securely measure compute time and memory usage inside an enclave. We have integrated S-FaaS into the OpenWhisk FaaS framework and provide this as open source software. \u00c2\u00a9 2019 Copyright held by the owner/author(s).",
      "authors": [
        "Alder, F.",
        "Asokan, N.",
        "Kurnikov, A.",
        "Paverd, A.",
        "Steiner, M."
      ],
      "categories": null,
      "citations": 9,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1145/3338466.3358916",
      "keywords": [
        "Resource measurement",
        "Function-as-a-service",
        "Intel SGX"
      ],
      "number_of_pages": 15,
      "pages": "185-199",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450370899",
        "issn": "15437221",
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings of the ACM Conference on Computer and Communications Security"
      },
      "publication_date": "2019-11-11",
      "selected": null,
      "title": "S-FaaS: Trustworthy and accountable function-as-a-service using Intel SGX",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85076110513&origin=inward"
      ]
    },
    {
      "abstract": "Recent trends in Web development demonstrate an increased interest in serverless applications, i.e. applications that utilize computational resources provided by cloud services on demand instead of requiring traditional server management. This approach enables better resource management while being scalable, reliable, and cost-effective. However, it comes with a number of organizational and technical difficulties which stem from the interaction between the application and the cloud infrastructure, for example, having to set up a recurring task of reuploading updated files. In this paper, we present Kotless-a Kotlin Serverless Framework. Kotless is a cloud-agnostic toolkit that solves these problems by interweaving the deployed application into the cloud infrastructure and automatically generating the necessary deployment code. This relieves developers from having to spend their time integrating and managing their applications instead of developing them. Kotless has proven its capabilities and has been used to develop several serverless applications already in production. Its source code is available at https://github.com/JetBrains/kotless, a tool demo can be found at https://www.youtube.com/watch?v=IMSakPNl3TY. \u00c2\u00a9 2019 IEEE.",
      "authors": [
        "Vladislav Tankov",
        "Yaroslav Golubev",
        "Timofey Bryksin"
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/ASE.2019.00114",
      "keywords": [
        "Serverless",
        "Kotlin",
        "Kotless",
        "Web",
        "Framework",
        "Cloud"
      ],
      "number_of_pages": 4,
      "pages": "1110-1113",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-7281-2509-1",
        "issn": "1938-4300",
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings - 2019 34th IEEE/ACM International Conference on Automated Software Engineering, ASE 2019"
      },
      "publication_date": "2019-11-11",
      "selected": null,
      "title": "Kotless: A Serverless Framework for Kotlin",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85078922769&origin=inward",
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=8952482"
      ]
    },
    {
      "abstract": "In this paper, we present CSPOT, a distributed runtime system implementing a functions-as-service (FaaS) programming model for the \u00e2\u0080\u009cInternet of Things\u00e2\u0080\u009d (IoT). With FaaS, developers express arbitrary computations as simple functions that are automatically invoked and managed by a cloud platform in response to events. We extend this FaaS model so that it is suitable for use in all tiers of scale for IoT - sensors, edge devices, and cloud - to facilitate robust, portable, and low-latency IoT application development and deployment. To enable this, we combine the use of Linux containers and namespaces for isolation and portability, an append-only object store for robust persistence, and a causal event log for triggering functions and tracking event dependencies. We present the design and implementation of CSPOT, detail its abstractions and APIs, and overview examples of its use. We empirically evaluate the performance of CSPOT using different devices and applications and find that it implements function invocation with significantly lower latency than other FaaS offerings, while providing portability across tiers and similar data durability characteristics. \u00c2\u00a9 2019 Association for Computing Machinery.",
      "authors": [
        "Wolski, R.",
        "Krintz, C.",
        "Bakir, F.",
        "George, G.",
        "Lin, W.-T."
      ],
      "categories": null,
      "citations": 4,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1145/3318216.3363314",
      "keywords": [
        "IoT",
        "Serverless",
        "Distributed systems",
        "Cloud functions",
        "Append-only",
        "Portability"
      ],
      "number_of_pages": 14,
      "pages": "236-249",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450367332",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings of the 4th ACM/IEEE Symposium on Edge Computing, SEC 2019"
      },
      "publication_date": "2019-11-07",
      "selected": null,
      "title": "CSPOT: Portable, multi-scale functions-as-a-service for IoT",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85076260123&origin=inward"
      ]
    },
    {
      "abstract": " Serverless computing is an approach to cloud computing that allows\nprogrammers to run serverless functions in response to external events.\nServerless functions are priced at sub-second granularity, support transparent\nelasticity, and relieve programmers from managing the operating system. Thus\nserverless functions allow programmers to focus on writing application code,\nand the cloud provider to manage computing resources globally. Unfortunately,\ntoday's serverless platforms exhibit high latency, because it is difficult to\nmaximize resource utilization while minimizing operating costs. This paper presents serverless function acceleration, which is an approach\nthat transparently lowers the latency and resource utilization of a large class\nof serverless functions. We accomplish this using language-based sandboxing,\nwhereas existing serverless platforms employ more expensive operating system\nsandboxing technologies, such as containers and virtual machines. OS-based\nsandboxing is compatible with more programs than language-based techniques.\nHowever, instead of ruling out any programs, we use language-based sandboxing\nwhen possible, and OS-based sandboxing if necessary. Moreover, we seamlessly\ntransition between language-based and OS-based sandboxing by leveraging the\nfact that serverless functions must tolerate re-execution for fault tolerance.\nTherefore, when a serverless function attempts to perform an unsupported\noperation in the language-based sandbox, we can safely re-execute it in a\ncontainer. We use a new approach to trace compilation to build source-level,\ninterprocedural, execution trace trees for serverless functions written in\nJavaScript. We compile trace trees to a safe subset of Rust, validate the\ncompiler output, and link it to a runtime system. We evaluate these techniques\nin our implementation, which we call Containerless.\n",
      "authors": [
        "Herbert, Emily",
        "Guha, Arjun"
      ],
      "categories": null,
      "citations": null,
      "comments": null,
      "databases": [
        "arXiv"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": null,
      "publication_date": "2019-11-06",
      "selected": null,
      "title": "A Language-based Serverless Function Accelerator",
      "urls": [
        "http://arxiv.org/abs/1911.02178v4",
        "http://arxiv.org/pdf/1911.02178v4",
        "https://arxiv.org/pdf/1911.02178"
      ]
    },
    {
      "abstract": " The topic of serverless computing has proved to be a controversial subject\nboth within academic and industrial communities. Many have praised the approach\nto be a platform for a new era of computing and some have argued that it is in\nfact a step backward. Though, both sides agree that there exist challenges that\nmust be addressed in order to better utilize its potentials. This paper surveys\nexisting challenges toward vast adoption of serverless services and also\nexplores some of the challenges that have not been thoroughly discussed in the\nprevious studies. Each challenge is discussed thoroughly and a number of\npossible directions for future studies is proposed. Moreover, the paper reviews\nsome of the unique opportunities and potentials that the serverless computing\npresents.\n",
      "authors": [
        "Shafiei, Hossein",
        "Khonsari, Ahmad",
        "Mousavi, Payam"
      ],
      "categories": null,
      "citations": null,
      "comments": "27 pages, 3 figures",
      "databases": [
        "arXiv"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": null,
      "publication_date": "2019-11-04",
      "selected": null,
      "title": "Serverless Computing: A Survey of Opportunities, Challenges and Applications",
      "urls": [
        "http://arxiv.org/pdf/1911.01296v4",
        "http://arxiv.org/abs/1911.01296v4",
        "https://arxiv.org/pdf/1911.01296"
      ]
    },
    {
      "abstract": "The serverless platforms offer an orchestration tool that supports composing workflow with the serverless functions on their platform. This orchestration tool creates an independent function that invokes other serverless functions step by step. However, since the existing serverless platform does not consider the execution of the workflow, the messages between functions are delivered inefficiently. We implemented a layered message bus to improve message delivery latency when executing a workflow in the serverless environment. Our implementation shows 205.37x and 56.12x improvement in the best and the worst case, respectively, compared to OpenWhisk Composer. \u00c2\u00a9 2019 IEEE.",
      "authors": [
        "Seunghyn Hwang",
        "Heeseok Choi",
        "Heonchang Yu"
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/MASSW.2019.00044",
      "keywords": [
        "Layred-network",
        "Serverless",
        "Cloud computing"
      ],
      "number_of_pages": 2,
      "pages": "170-171",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-7281-4122-0",
        "issn": null,
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings - 2019 IEEE 16th International Conference on Mobile Ad Hoc and Smart Systems Workshops, MASSW 2019"
      },
      "publication_date": "2019-11-04",
      "selected": null,
      "title": "Implementation of Low-Latency Message Delivery for Serverless Based Workflow",
      "urls": [
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9059431",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85084108948&origin=inward"
      ]
    },
    {
      "abstract": "Microservices, containers, and serverless computing belong to a trend toward applications composed of many small, self-contained, and automatically managed components. Core to serverless computing, function-as-a-service (FaaS) platforms employ state-of-the-art container technology and microservices-based architectures to enable users to manage complex applications without the need for system-level expertise. Victim of its own success, and partially due to proprietary technology, currently the community has a limited overview of these platforms. To address this, we propose a reference architecture and ecosystem for FaaS platforms. Based on a year-long survey of real-world platforms conducted within the SPEC-RG Cloud Group, we highlight specific components and identify common operational patterns. \u00c2\u00a9 1997-2012 IEEE.",
      "authors": [
        "Erwin van Eyk",
        "Johannes Grohmann",
        "Simon Eismann",
        "Andr\u00e9 Bauer",
        "Laurens Versluis",
        "Lucian Toader",
        "Norbert Schmitt",
        "Nikolas Herbst",
        "Cristina L. Abad",
        "Alexandru Iosup"
      ],
      "categories": null,
      "citations": 8,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/MIC.2019.2952061",
      "keywords": [
        "Serverless Computing",
        "Containers",
        "Reference Architecture",
        "FaaS",
        "Microservices",
        "Function-as-a-Service"
      ],
      "number_of_pages": 12,
      "pages": "7-18",
      "publication": {
        "category": "Journal",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "1941-0131",
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "IEEE Internet Computing"
      },
      "publication_date": "2019-11-01",
      "selected": null,
      "title": "The SPEC-RG Reference Architecture for FaaS: From Microservices and Containers to Serverless Platforms",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85075520705&origin=inward",
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=8894540"
      ]
    },
    {
      "abstract": "It\u2019s now remarkably easy to release to the world a cloud-based application programming interface (API) that provides some software function as a service. As a consequence, the cloud API space has become very densely populated, so that even if a particular API offers a service whose potential value is considerable, there are many other factors that play a role in determining whether or not that API will be commercially successful. If you\u2019re thinking about entering the API marketplace with your latest and greatest idea, this post offers some entirely subjective advice on how you might increase the chances of your offering not being lost in all the noise.",
      "authors": [
        "Robert Dale"
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1017/S1351324919000536",
      "keywords": [
        "APIs",
        "Text analytics"
      ],
      "number_of_pages": 4,
      "pages": "769-772",
      "publication": {
        "category": "Journal",
        "cite_score": 3.8,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "13513249",
        "publisher": "Cambridge University Press",
        "sjr": 0.29,
        "snip": 1.153,
        "subject_areas": [
          "Language and Linguistics",
          "Software",
          "Linguistics and Language",
          "Artificial Intelligence"
        ],
        "title": "Natural Language Engineering"
      },
      "publication_date": "2019-11-01",
      "selected": null,
      "title": "Five Tips for a Successful API",
      "urls": [
        "https://www.cambridge.org/core/services/aop-cambridge-core/content/view/CFC438D175525D7B4E356F3DCA05325D/S1351324919000536a.pdf/div-class-title-five-tips-for-a-successful-api-div.pdf",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85072761198&origin=inward"
      ]
    },
    {
      "abstract": "Cloud robotics is becoming an alternative to support advanced services of robots with low computing power as network technology advances. Recently, fog robotics has gained attention since the approach has merit relieving latency and security issues over the conventional cloud robotics. In this paper, a function as a service based fog robotic (FaaS-FR) for cognitive robots is proposed. The model distributes the cognitive functions according to the computational power, latency, and security with a public robot cloud and fog robot server. During the experiment with a Raspberry Pi as an edge, the proposed FaaS-FR model shows efficient and practical performance in the proper distribution of the computational work of the cognitive system.",
      "authors": [
        "Ahn, Hyunsik"
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.3390/app9214555",
      "keywords": [
        "Robot cloud",
        "Cognitive robots",
        "Human-robot interaction",
        "Cognition as a service",
        "Cloud service",
        "Sentential cognitive system"
      ],
      "number_of_pages": null,
      "pages": null,
      "publication": {
        "category": "Journal",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": null,
        "publisher": "Multidisciplinary Digital Publishing Institute",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Applied Sciences (Switzerland)"
      },
      "publication_date": "2019-11-01",
      "selected": null,
      "title": "A Function as a Service Based Fog Robotic System for Cognitive Robots",
      "urls": [
        "https://www.mdpi.com/2076-3417/9/21/4555/pdf",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85075236922&origin=inward"
      ]
    },
    {
      "abstract": "SUMMARY We introduce Tibanna, an open-source software tool for automated execution of bioinformatics pipelines on Amazon Web Services (AWS). Tibanna accepts reproducible and portable pipeline standards including Common Workflow Language (CWL), Workflow Description Language (WDL) and Docker. It adopts a strategy of isolation and optimization of individual executions, combined with a serverless scheduling approach. Pipelines are executed and monitored using local commands or the Python Application Programming Interface (API) and cloud configuration is automatically handled. Tibanna is well suited for projects with a range of computational requirements, including those with large and widely fluctuating loads. Notably, it has been used to process terabytes of data for the 4D Nucleome (4DN) Network.\nAVAILABILITY AND IMPLEMENTATION Source code is available on GitHub at https://github.com/4dn-dcic/tibanna.\nSUPPLEMENTARY INFORMATION Supplementary data are available at Bioinformatics online.",
      "authors": [
        "Soohyun Lee",
        "Jeremy Johnson",
        "Carl Vitzthum",
        "Koray K\u0131rl\u0131",
        "Burak H Alver",
        "Peter J Park"
      ],
      "categories": null,
      "citations": null,
      "comments": null,
      "databases": [
        "PubMed"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": 3,
      "pages": "4424-4426",
      "publication": {
        "category": "Journal",
        "cite_score": 9.9,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "1367-4811",
        "publisher": "Oxford University Press",
        "sjr": 3.599,
        "snip": 2.056,
        "subject_areas": [
          "Computer Science Applications",
          "Molecular Biology",
          "Biochemistry",
          "Statistics and Probability",
          "Computational Mathematics",
          "Computational Theory and Mathematics"
        ],
        "title": "Bioinformatics (Oxford, England)"
      },
      "publication_date": "2019-11-01",
      "selected": null,
      "title": "Tibanna: software for scalable execution of portable pipelines on the cloud.",
      "urls": []
    },
    {
      "abstract": "Summary: We introduce Tibanna, an open-source software tool for automated execution of bioinformatics pipelines on Amazon Web Services (AWS). Tibanna accepts reproducible and portable pipeline standards including Common Workflow Language (CWL), Workflow Description Language (WDL) and Docker. It adopts a strategy of isolation and optimization of individual executions, combined with a serverless scheduling approach. Pipelines are executed and monitored using local commands or the Python Application Programming Interface (API) and cloud configuration is automatically handled. Tibanna is well suited for projects with a range of computational requirements, including those with large and widely fluctuating loads. Notably, it has been used to process terabytes of data for the 4D Nucleome (4DN) Network. Availability and implementation: Source code is available on GitHub at https://github.com/4dn-dcic/tibanna. Supplementary information: Supplementary data are available at Bioinformatics online. \u00c2\u00a9 2019 The Author(s) 2019. Published by Oxford University Press. All rights reserved.",
      "authors": [
        "Lee, S.",
        "Johnson, J.",
        "Vitzthum, C.",
        "Klrll, K.",
        "Alver, B.H.",
        "Park, P.J."
      ],
      "categories": null,
      "citations": 2,
      "comments": null,
      "databases": [
        "bioRxiv",
        "Scopus"
      ],
      "doi": "10.1093/bioinformatics/btz379",
      "keywords": [],
      "number_of_pages": 3,
      "pages": "4424-4426",
      "publication": {
        "category": "Journal",
        "cite_score": 9.9,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "13674803",
        "publisher": "Oxford University Press",
        "sjr": 3.599,
        "snip": 2.056,
        "subject_areas": [
          "Computer Science Applications",
          "Molecular Biology",
          "Biochemistry",
          "Statistics and Probability",
          "Computational Mathematics",
          "Computational Theory and Mathematics"
        ],
        "title": "Bioinformatics"
      },
      "publication_date": "2019-11-01",
      "selected": null,
      "title": "Tibanna: Software for scalable execution of portable pipelines on the cloud",
      "urls": [
        "https://doi.org/10.1101/440974",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85074306186&origin=inward"
      ]
    },
    {
      "abstract": "Function-as-a-Service (FaaS) is an emerging cloud service model that enables composing applications using arbitrary, small, and event-driven code snippets managed by cloud providers and that can be scaled to zero. The scalability properties of FaaS look attractive for handling rare or unexpected high loads that affect only particular functionalities of the application. However, deciding on the component granularity upfront or reengineering the architecture of an entire application for rare workloads is often a very difficult challenge or even infeasible. In this work, we introduce a method that prepares annotated functionalities for handling rare workloads by automatically extracting them from the source code of the application and additionally deploying them as FaaS functions, while keeping the original application's functionalities and architecture unchanged. In this way, the benefits of FaaS can be leveraged without the need to reengineer the application only for rare cases. We validate our method by means of a prototype, evaluate its feasibility in a set of experiments, and discuss limitations and future work. \u00c2\u00a9 2019 IEEE.",
      "authors": [
        "Vladimir Yussupov",
        "Uwe Breitenb\u00fccher",
        "Michael Hahn",
        "Frank Leymann"
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/EDOC.2019.00035",
      "keywords": [
        "Failover",
        "Serverless",
        "Annotation",
        "Scalability",
        "FaaS",
        "Function-as-a-Service"
      ],
      "number_of_pages": 10,
      "pages": "226-235",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-7281-2703-3",
        "issn": "2325-6354",
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings - 2019 IEEE 23rd International Enterprise Distributed Object Computing Conference, EDOC 2019"
      },
      "publication_date": "2019-10-28",
      "selected": null,
      "title": "Serverless Parachutes: Preparing Chosen Functionalities for Exceptional Workloads",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85078270192&origin=inward",
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=8945021"
      ]
    },
    {
      "abstract": "Big data is a phrase that describes the large quantity of data, it would be structure, semi structure and unstructured. In the present industry data is indispensable for the business organization. The Big Data initiatives and technologies are used to analyze this massive amount of data for gaining insights which may help in making strategic decisions. For example, data size is increasing day by day like petabyte, Exabyte, zettabyte, yottabyte and more. That is why it is going to tough and complex to manage this large scale of data. In practical, there are many challenges to process and compute this data like server management, storage, clustering, algorithm deployment, etc. As everything is done by manually, so it is hard to design the exact architecture for data analysis in the Cloud. Serverless computing is a mechanism to provide pay-per-use backend services to clients. A serverless provider lets users create and deploy code without worrying about operating and managing servers. In this paper, we present serverless architecture for big data analytics, also we show how to implement, maintain, and governance of a serverless big data application on AWS (Amazon Web Service). In addition to it, we will demonstrate the difference between traditional data analytics and big data analytics in a serverless system. \u00c2\u00a9 2019 IEEE.",
      "authors": [
        "Md Mijanur Rahman",
        "Md Hasibul Hasan"
      ],
      "categories": null,
      "citations": 1,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/GCAT47503.2019.8978443",
      "keywords": [
        "Amazon Web Service",
        "Big Data Analysis",
        "AWS Serverless Service",
        "Serverless Cloud Computing",
        "AWS Lambda"
      ],
      "number_of_pages": 5,
      "pages": "1-5",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-7281-3695-0",
        "issn": null,
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "2019 Global Conference for Advancement in Technology, GCAT 2019"
      },
      "publication_date": "2019-10-18",
      "selected": null,
      "title": "Serverless Architecture for Big Data Analytics",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85084833149&origin=inward",
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=8978443"
      ]
    },
    {
      "abstract": "Network security lacks the verification of real world net flow data, and lacks a platform to collect and integrate net flow data and threat intelligence, so as to generate an evaluation benchmark for machine learning on cybersecurity. NetFlowTotal develop many net flow analysis tools to detect malicious threats in the net flow data. Through the two-side market strategies, NetFlowTotal platform tie together two distinct groups of users in a network. One kind of user can upload net flow data to the NetFlowTotal platform to obtain security incidents reports; the other kind of user can share threat intelligence to the NetFlowTotal platform to obtain more associate threat intelligence according to global net flow data. The goal of this paper is to establish a net flow evaluation platform to provide real world dataset with security incidents reports for machine learning evaluation. \u00c2\u00a9 2019 Association for Computing Machinery.",
      "authors": [
        "Jeng, T.-H.",
        "Chan, W.-M.",
        "Luo, W.-Y.",
        "Huang, C.-C.",
        "Chen, C.-C.",
        "Chen, Y.-M."
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1145/3366650.3366669",
      "keywords": [
        "MapReduce",
        "Serverless",
        "Microservice",
        "Cyber Threat Intelligence"
      ],
      "number_of_pages": 7,
      "pages": "154-160",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450372909",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "ACM International Conference Proceeding Series"
      },
      "publication_date": "2019-10-18",
      "selected": null,
      "title": "NetflowTotal: A cloud service integration platform for malicious traffic analysis and collaboration",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85077754398&origin=inward"
      ]
    },
    {
      "abstract": " It is increasingly common to outsource network functions (NFs) to the cloud.\nHowever, no cloud providers offer NFs-as-a-Service (NFaaS) that allows users to\nrun custom NFs. Our work addresses how a cloud provider can offer NFaaS. We use\nthe emerging serverless computing paradigm as it has the right building blocks\n- usage-based billing, convenient event-driven programming model and automatic\ncompute elasticity. Towards this end, we identify two core limitations of\nexisting serverless platforms to support demanding stateful NFs - coupling of\nthe billing and work assignment granularities, and state sharing via an\nexternal store. We develop a novel NFaaS framework, SNF, that overcomes these\nissues using two ideas. SNF allocates work at the granularity of flowlets\nobserved in network traffic, whereas billing and programming occur on the basis\nof packets. SNF embellishes serverless platforms with ephemeral state that\nlasts for the duration of the flowlet and supports high performance state\noperations between compute units in a peer-to-peer manner. We present\nalgorithms for work allocation and state maintenance, and demonstrate that our\nSNF prototype dynamically adapts compute resources for various stateful NFs\nbased on traffic demand at very fine time scales, with minimal overheads.\n",
      "authors": [
        "Singhvi, Arjun",
        "Khalid, Junaid",
        "Akella, Aditya",
        "Banerjee, Sujata"
      ],
      "categories": null,
      "citations": null,
      "comments": "14 pages",
      "databases": [
        "arXiv"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": null,
      "publication_date": "2019-10-17",
      "selected": null,
      "title": "SNF: Serverless Network Functions",
      "urls": [
        "https://arxiv.org/pdf/1910.07700",
        "http://arxiv.org/abs/1910.07700v1",
        "http://arxiv.org/pdf/1910.07700v1"
      ]
    },
    {
      "abstract": " A device for passive monitoring of slow water leaks, especially periodic\nleaks caused by faltering gaskets. The detection and notification solution is\ncomposed of an algorithm tuned specifically for bathroom leaks, motivated by a\nsurprise water bill, and a hardware prototype connected to a serverless cloud\ncomponent. The package is essentially a microservice for slow-leak detection\nand notification. Inexpensive commodity hardware is utilized to send alerts to\nusers over Amazon Simple Notification Service (SNS). Index Terms: home automation, water conservation, IoT, signal processing.\n",
      "authors": [
        "Greysukh, Alexander"
      ],
      "categories": null,
      "citations": null,
      "comments": "3 pages, 4 figures",
      "databases": [
        "arXiv"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": null,
      "publication_date": "2019-10-17",
      "selected": null,
      "title": "Internet-Connected Residential Water Leak Monitor",
      "urls": [
        "http://arxiv.org/pdf/1910.13335v1",
        "https://arxiv.org/pdf/1910.13335",
        "http://arxiv.org/abs/1910.13335v1"
      ]
    },
    {
      "abstract": "In this study, we propose Heresy, a web application to generate a document that solely exists in the form of a Uniform Resource Locator (URL) fragment. That document is compressed using Lempel-Ziv-Markov algorithm (LZMA) and encrypted using one of four symmetric-key cryptography algorithms: AES, Rabbit, RC4, and Triple DES. This allows a user to create a secured document using markdown markup language, and then share or save the generated URL. In order to view the document, a valid passphrase is needed. All operations are performed in the client machine (serverless). We analyzed the capability and performance of Heresy in several devices to find out the best cryptography algorithm to secure a document. \u00c2\u00a9 2019 IEEE.",
      "authors": [
        "Gottfried Prasetyadi",
        "Utomo Tri Hantoro",
        "Achmad Benny Mutiara",
        "Aries Muslim",
        "Rina Refianti"
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/ICIC47613.2019.8985735",
      "keywords": [
        "compression",
        "encryption",
        "document",
        "url",
        "serverless"
      ],
      "number_of_pages": 5,
      "pages": "1-5",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-7281-2208-3",
        "issn": null,
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings of 2019 4th International Conference on Informatics and Computing, ICIC 2019"
      },
      "publication_date": "2019-10-16",
      "selected": null,
      "title": "Heresy: A Serverless Web Application to Store Compressed and Encrypted Document in the Form of URL",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85081061720&origin=inward",
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=8985735"
      ]
    },
    {
      "abstract": " Python-written data analytics applications can be modeled as and compiled\ninto a directed acyclic graph (DAG) based workflow, where the nodes are\nfine-grained tasks and the edges are task dependencies. Such analytics workflow\njobs are increasingly characterized by short, fine-grained tasks with large\nfan-outs. These characteristics make them well-suited for a new cloud computing\nmodel called serverless computing or Function-as-a-Service (FaaS), which has\nbecome prevalent in recent years. The auto-scaling property of serverless\ncomputing platforms accommodates short tasks and bursty workloads, while the\npay-per-use billing model of serverless computing providers keeps the cost of\nshort tasks low. In this paper, we thoroughly investigate the problem space of DAG scheduling\nin serverless computing. We identify and evaluate a set of techniques to make\nDAG schedulers serverless-aware. These techniques have been implemented in\nWukong, a serverless, DAG scheduler attuned to AWS Lambda. Wukong provides\ndecentralized scheduling through a combination of static and dynamic\nscheduling. We present the results of an empirical study in which Wukong is\napplied to a range of microbenchmark and real-world DAG applications. Results\ndemonstrate the efficacy of Wukong in minimizing the performance overhead\nintroduced by AWS Lambda --- Wukong achieves competitive performance compared\nto a serverful DAG scheduler, while improving the performance of real-world DAG\njobs by as much as 3.1X at larger scale.\n",
      "authors": [
        "Carver, Benjamin",
        "Zhang, Jingyuan",
        "Wang, Ao",
        "Cheng, Yue"
      ],
      "categories": null,
      "citations": null,
      "comments": "Appears at PDSW 2019",
      "databases": [
        "arXiv"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": null,
      "publication_date": "2019-10-14",
      "selected": null,
      "title": "In Search of a Fast and Efficient Serverless DAG Engine",
      "urls": [
        "http://arxiv.org/pdf/1910.05896v2",
        "http://arxiv.org/abs/1910.05896v2",
        "https://arxiv.org/pdf/1910.05896"
      ]
    },
    {
      "abstract": "Serverless computing is a rapidly growing cloud application model, popularized by Amazon's Lambda platform. Serverless cloud services provide fine-grained provisioning of resources, which scale automatically with user demand. Function-as-a-Service (FaaS) applications follow this serverless model, with the developer providing their application as a set of functions which are executed in response to a user- or system-generated event. Functions are designed to be short-lived and execute inside containers or virtual machines, introducing a range of system-level overheads. This paper studies the architectural implications of this emerging paradigm. Using the commercial-grade Apache OpenWhisk FaaS platform on real servers, this work investigates and identifies the architectural implications of FaaS serverless computing. The workloads, along with the way that FaaS inherently interleaves short functions from many tenants frustrates many of the locality-preserving architectural structures common in modern processors. In particular, we find that: FaaS containerization brings up to 20x slowdown compared to native execution, cold-start can be over 10x a short function's execution time, branch mispredictions per kilo-instruction are 20x higher for short functions, memory bandwidth increases by 6x due to the invocation pattern, and IPC decreases by as much as 35% due to inter-function interference. We open-source FaaSProfiler, the FaaS testing and profiling platform that we developed for this work. \u00c2\u00a9 2019 Association for Computing Machinery.",
      "authors": [
        "Shahrad, M.",
        "Balkind, J.",
        "Wentzlaff, D."
      ],
      "categories": null,
      "citations": 17,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1145/3352460.3358296",
      "keywords": [
        "Serverless",
        "Architecture",
        "Open whisk",
        "Faas",
        "Function-as-a-service",
        "Cloud"
      ],
      "number_of_pages": 13,
      "pages": "1063-1075",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450369381",
        "issn": "10724451",
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings of the Annual International Symposium on Microarchitecture, MICRO"
      },
      "publication_date": "2019-10-12",
      "selected": null,
      "title": "Architectural implications of function-as-a-service computing",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85074454583&origin=inward"
      ]
    },
    {
      "abstract": "Various voice assistants were analyzed and Alexa was selected as the best one. For the first time a voice skill was developed that works with cloud environment, and also works with files and loses them in the column Echo Dot. The development peculiarity is to describe the interaction with Alexa in the JSON file format and the programming of the AWS Lambda service, which is proposed to replace the implementation on Ruby on Rails to reduce the processing time of the request, with the hosting (hosting) in the same skill implementation service. At the moment there are no similar skills and voice assistants. \u00c2\u00a9 2019 IEEE.",
      "authors": [
        "Mykhailo Reshetniak",
        "Svitlana Popereshnyak"
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/PICST47496.2019.9061463",
      "keywords": [
        "voice assistants",
        "method",
        "Alexa",
        "multimedia content",
        "cloud environment"
      ],
      "number_of_pages": 6,
      "pages": "71-76",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-7281-4185-5",
        "issn": null,
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "2019 IEEE International Scientific-Practical Conference: Problems of Infocommunications Science and Technology, PIC S and T 2019 - Proceedings"
      },
      "publication_date": "2019-10-08",
      "selected": null,
      "title": "Method for Accessing and Processing Multimedia Content in a Cloud Environment",
      "urls": [
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9061463",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85083679973&origin=inward"
      ]
    },
    {
      "abstract": " Modern FaaS systems perform well in the case of repeat executions when\nfunction working sets stay small. However, these platforms are less effective\nwhen applied to more complex, large-scale and dynamic workloads. In this paper,\nwe introduce SEUSS (serverless execution via unikernel snapshot stacks), a new\nsystem-level approach for rapidly deploying serverless functions. Through our\napproach, we demonstrate orders of magnitude improvements in function start\ntimes and cacheability, which improves common re-execution paths while also\nunlocking previously-unsupported large-scale bursty workloads.\n",
      "authors": [
        "Cadden, James",
        "Unger, Thomas",
        "Awad, Yara",
        "Dong, Han",
        "Krieger, Orran",
        "Appavoo, Jonathan"
      ],
      "categories": null,
      "citations": null,
      "comments": null,
      "databases": [
        "arXiv"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": null,
      "publication_date": "2019-10-03",
      "selected": null,
      "title": "SEUSS: Rapid serverless deployment using environment snapshots",
      "urls": [
        "https://arxiv.org/pdf/1910.01558",
        "http://arxiv.org/pdf/1910.01558v1",
        "http://arxiv.org/abs/1910.01558v1"
      ]
    },
    {
      "abstract": "Decentralized online social networks (OSNs) have attracted the attention of researchers and practitioners as a viable alternative to the current centralized OSNs, whose business model is based on the exploitation of the private data of their users. Yet, pure decentralized models may either require significant investment on the user side in terms of hardware and bandwidth, or may fail to provide the desired user experience. In this paper, we propose a middle-ground solution that mainly relies on a serverless social overlay in which links represent friendship relations, but occasionally complements it with inexpensive storage rented from the cloud. The experimental evaluation based on a real OSN dataset confirms that our solution provides the desired quality of service at a low cost. \u00c2\u00a9 2013 IEEE.",
      "authors": [
        "Giuliano Mega",
        "Alberto Montresor",
        "Gian Pietro Picco"
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/TNSE.2018.2860600",
      "keywords": [
        "decentralized online social networks",
        "peer-to-peer (P2P)",
        "Social overlays",
        "friend-to-friend (F2F)"
      ],
      "number_of_pages": 15,
      "pages": "613-627",
      "publication": {
        "category": "Journal",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "2334-329X",
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "IEEE Transactions on Network Science and Engineering"
      },
      "publication_date": "2019-10-01",
      "selected": null,
      "title": "Social Overlays Meet the Cloud: A Hybrid Architecture for Profile Dissemination in Decentralized Social Networks",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85050629361&origin=inward",
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=8421083"
      ]
    },
    {
      "abstract": "Serverless computing frameworks allow users to execute a small application (dedicated to a specific task) without handling operational issues such as server provisioning, resource management, and resource scaling for the increased load. Serverless computing originally emerged as a Cloud computing framework, but might be a perfect match for IoT data processing at the Edge. However, the existing serverless solutions, based on VMs and containers, are too heavy-weight (large memory footprint and high function invocation time) for operating efficiency and elastic scaling at the Edge. Moreover, many novel IoT applications require low-latency data processing and near real-time responses, which makes the current cloud-based serverless solutions unsuitable. Recently, WebAssembly (Wasm) has been proposed as an alternative method for running serverless applications at near-native speeds, while having a small memory footprint and optimized invocation time. In this paper, we discuss some existing serverless solutions, their design details, and unresolved performance challenges for an efficient serverless management at the Edge. We outline our serverless framework, called aWsm, based on the WebAssembly approach, and discuss the opportunities enabled by the aWsm design, including function profiling and SLO-driven performance management of users' functions. Finally, we present an initial assessment of aWsm performance featuring average startup time (12\u00ce\u00bcs to 30\u00ce\u00bcs) and an economical memory footprint (ranging from 10s to 100s of kB) for a subset of MiBench microbenchmarks used as functions. \u00c2\u00a9 2019 IEEE.",
      "authors": [
        "Phani Kishore Gadepalli",
        "Gregor Peach",
        "Ludmila Cherkasova",
        "Rob Aitken",
        "Gabriel Parmer"
      ],
      "categories": null,
      "citations": 8,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/SRDS47363.2019.00036",
      "keywords": [
        "Performance management",
        "IoT",
        "Serverless",
        "Cloud computing",
        "Wasm",
        "FaaS",
        "Edge computing",
        "SLOs",
        "WebAssembly"
      ],
      "number_of_pages": 2355,
      "pages": "261-2615",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": 2.7,
        "is_potentially_predatory": false,
        "isbn": "978-1-7281-4223-4",
        "issn": "1060-9857",
        "publisher": "IEEE Computer Society",
        "sjr": 0.291,
        "snip": 1.133,
        "subject_areas": [
          "Theoretical Computer Science",
          "Hardware and Architecture",
          "Computer Networks and Communications",
          "Software"
        ],
        "title": "Proceedings of the IEEE Symposium on Reliable Distributed Systems"
      },
      "publication_date": "2019-10-01",
      "selected": null,
      "title": "Challenges and Opportunities for Efficient Serverless Computing at the Edge",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85084126491&origin=inward",
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9049531"
      ]
    },
    {
      "abstract": "Security systems such as the Security Information and Event Management (SIEMs) have been used to monitor logs and correlate data to quickly detect and respond to incidents. Despite their advantages, SIEMs are expensive to deploy and maintain, requiring extra budget and specialized staff. Another concern is the event retention period, which events are stored for a short period of time, missing important information about how threats may have affected the company infrastructure in the past. This thesis aims to improve these issues by using low-cost cloud services to correlate and store security events. We will investigate techniques to index, compress and store events in the cloud in a cost-efficient and safe way for a long time. We will create a cloud correlation engine using a serverless platform, such as Amazon Lambda. This approach can minimize the complexity of managing SIEMs in place, charging the customer only for the time actually spent processing events. Finally, we will integrate the storage and correlation engine into a cloud SIEM, providing also a monitoring tool, building a complete and innovative low-cost cloud-based security monitoring solution. \u00c2\u00a9 2019 IEEE.",
      "authors": [
        "Adriano Serckumecka",
        "Ib\u00e9ria Medeiros",
        "Alysson Bessani"
      ],
      "categories": null,
      "citations": 1,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/SRDS47363.2019.00057",
      "keywords": [
        "multiple clouds",
        "indexing",
        "cost-effectiveness",
        "cloud SIEM",
        "long-term archival",
        "Security"
      ],
      "number_of_pages": 3431,
      "pages": "381-3811",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": 2.7,
        "is_potentially_predatory": false,
        "isbn": "978-1-7281-4223-4",
        "issn": "1060-9857",
        "publisher": "IEEE Computer Society",
        "sjr": 0.291,
        "snip": 1.133,
        "subject_areas": [
          "Theoretical Computer Science",
          "Hardware and Architecture",
          "Computer Networks and Communications",
          "Software"
        ],
        "title": "Proceedings of the IEEE Symposium on Reliable Distributed Systems"
      },
      "publication_date": "2019-10-01",
      "selected": null,
      "title": "Low-Cost Serverless SIEM in the Cloud",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85084149733&origin=inward",
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9049574"
      ]
    },
    {
      "abstract": "Initial developments in Service-Oriented Computing (SOC) led to the development of Web Services using the SOAP protocol and an extensive set of tools and methods for composing new services from those existing. Subsequently, other types of services also emerged, such as event-oriented services and RESTful services. Nevertheless, all mentioned service types expose data and functionality, and users can benefit from their composition, regardless of the service type chosen for their implementation. In the Internet of Things, it is relevant to employ event-oriented services for sensing and SOAP, RESTful or lightweight web APIs for control. In the emerging field of microservices, heterogeneity is embraced as a design principle and services that are part of a single system may be implemented using heterogeneous technologies and paradigms. The research question of this review is: How heterogeneous services can be composed? There are several surveys that cover service composition with each of the existing service types, but the composition of heterogeneous services is only marginally addressed. This systematic literature review focuses explicitly on the heterogeneity of the aforementioned service types. A total of 66 documents, published from 2005 to 2018, have been surveyed, targeting all possible combinations of the three service types. In addition to summarizing existing works, the specific methods employed for supporting service type heterogeneity are grouped into archetypes and have their limitations and capabilities analyzed. Despite the large number of documents found, there are several open issues on heterogeneous service composition. The results of this review are confronted with emerging fields in service computing, namely microservices, serverless and IoT, yielding additional research directions. \u00c2\u00a9 2019 Elsevier Ltd",
      "authors": [
        "Huf, A.",
        "Siqueira, F."
      ],
      "categories": null,
      "citations": 5,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1016/j.jnca.2019.06.008",
      "keywords": [
        "Event-oriented services",
        "SOAP services",
        "Heterogeneous services",
        "RESTful services",
        "Microservices",
        "Web service composition"
      ],
      "number_of_pages": 22,
      "pages": "89-110",
      "publication": {
        "category": "Journal",
        "cite_score": 14.5,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "10848045",
        "publisher": "Academic Press Inc.",
        "sjr": 1.145,
        "snip": 2.637,
        "subject_areas": [
          "Hardware and Architecture",
          "Computer Networks and Communications",
          "Computer Science Applications"
        ],
        "title": "Journal of Network and Computer Applications"
      },
      "publication_date": "2019-10-01",
      "selected": null,
      "title": "Composition of heterogeneous web services: A systematic review",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85067853499&origin=inward"
      ]
    },
    {
      "abstract": "In the Smart Cities context, a plethora of Middleware Platforms has been proposed to support applications execution and data processing. However, just a few of them have explored the overall Smart Cities computing environment. The vast majority focuses on specific domains, typically presenting a sensor-acquisition architecture for processing in Cloud Computing. Most recent initiatives try to include Cloud Computing and Edge Computing, while few of them use the three computing levels (Cloud, Fog, and Edge). Besides, many of these platforms do not define the services that should be deployed at each level, nor how the developer can better use each feature. This work fulfills this gap presenting an architecture for applications classifying services implemented by a typical Computing Environment of Smart Cities. Our architecture uses all the computational levels (Cloud, Fog, Edge) of a city infrastructure, and it defines how to deploy each type of service at each level. We also present an example of the proposed architecture that we are implementing in the city of Natal, where some evaluative tests have been carried out. \u00c2\u00a9 2019 IEEE.",
      "authors": [
        "Souza, A.",
        "Izidio, L.",
        "Rocha, A.",
        "Cacho, N.",
        "Batista, T."
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1109/ISC246665.2019.9071686",
      "keywords": [
        "edge computing",
        "fog computing",
        "serverless"
      ],
      "number_of_pages": 6,
      "pages": "262-267",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781728108469",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "5th IEEE International Smart Cities Conference, ISC2 2019"
      },
      "publication_date": "2019-10-01",
      "selected": null,
      "title": "Sapparchi: An architecture for smart city applications from edge, fog and cloud computing",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85084657157&origin=inward"
      ]
    },
    {
      "abstract": "This article provides a systematic review of cloud pricing in an interdisciplinary approach. It examines many historical cases of pricing in practice and tracks down multiple roots of pricing in research. The aim is to help both cloud service provider (CSP) and cloud customers to capture the essence of cloud pricing when they need to make a critical decision either to achieve competitive advantages or to manage cloud resource effectively. Currently, the number of available pricing schemes in the cloud market is overwhelming. It is an intricate issue to understand these schemes and associated pricing models clearly due to involving several domains of knowledge, such as cloud technologies, microeconomics, operations research, and value theory. Some earlier studies have introduced this topic unsystematically. Their approaches inevitably lead to much confusion for many cloud decision-makers. To address their weaknesses, we present a comprehensive taxonomy of cloud pricing, which is driven by a framework of three fundamental pricing strategies that are built on nine cloud pricing categories. These categories can be further mapped onto a total of 60 pricing models. Many of the pricing models have been already adopted by CSPs. Others have been widespread across in other industries. We give descriptions of these model categories and highlight both advantages and disadvantages. Moreover, this article offers an extensive survey of many cloud pricing models that were proposed by many researchers during the past decade. Based on the survey, we identify four trends of cloud pricing and the general direction, which is moving from intrinsic value per physical box to extrinsic value per serverless sandbox. We conclude that hyper-converged cloud resources pool supported by cloud orchestration, virtual machine, Open Application Programming Interface, and serverless sandbox will drive the future of cloud pricing. \u00c2\u00a9 2019 Association for Computing Machinery.",
      "authors": [
        "Wu, C.",
        "Buyya, R.",
        "Ramamohanarao, K."
      ],
      "categories": null,
      "citations": 9,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1145/3342103",
      "keywords": [
        "Cloud price model",
        "Value-based pricing",
        "Cloud services provider (CSP)",
        "Cost-based pricing",
        "Market-based pricing"
      ],
      "number_of_pages": null,
      "pages": null,
      "publication": {
        "category": "Journal",
        "cite_score": 22.3,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "03600300",
        "publisher": "Association for Computing Machinery (ACM)",
        "sjr": 2.079,
        "snip": 6.953,
        "subject_areas": [
          "Theoretical Computer Science",
          "Computer Science (all)"
        ],
        "title": "ACM Computing Surveys"
      },
      "publication_date": "2019-10-01",
      "selected": null,
      "title": "Cloud pricing models: Taxonomy, survey, and interdisciplinary challenges",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85074173586&origin=inward"
      ]
    },
    {
      "abstract": "Internet of Things (IoT) is a new paradigm that has been evolving into the wireless sensor networks to expand the scope of networked devices (or things). This evolution drives communication engineers to design secure and reliable communication at a low cost for many network applications such as radio frequency identification (RFID). In the RFID system, servers, readers, and tags communicate wirelessly. Therefore, mutual authentication is necessary to ensure secure communication. Normally, a central server supports the authentication of readers and tags by distributing and managing the credentials. Recent lightweight RFID authentication protocols have been proposed to satisfy the security features of RFID networks. Using a serverless RFID system is an alternative solution to using a central server. In this model, both the reader and the tag perform mutual authentication without the need for the central server. However, many security challenges arise from implementing lightweight authentication protocols in serverless RFID systems. We propose a new secure serverless RFID authentication protocol based on the famous elliptic curve cryptography (ECC). The protocol also maintains the confidentiality and privacy of the messages, tag information, and location. Although most of the current serverless protocols assume secure channels in the setup phase, we assume an insecure environment during the setup phase between the servers, readers, and tags. We ensure that the credentials can be renewed by any checkpoint server in the mobile RFID network. Thus, we implement ECC in the setup phase (renewal phase), to transmit and store the communication credentials of the server to multiple readers so that the tags can perform the mutual authentication successfully while far from the server. The proposed protocol is compared with other serverless frameworks proposed in the literature in terms of computation cost and attacks resistance.",
      "authors": [
        "Baashirah, Rania",
        "Abuzneid, Abdelshakour"
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.3390/electronics8101166",
      "keywords": [
        "IoT",
        "RFID",
        "Serverless",
        "ECC",
        "Mutual authentication"
      ],
      "number_of_pages": null,
      "pages": null,
      "publication": {
        "category": "Journal",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": null,
        "publisher": "Multidisciplinary Digital Publishing Institute",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Electronics (Switzerland)"
      },
      "publication_date": "2019-10-01",
      "selected": null,
      "title": "SLEC: A Novel Serverless RFID Authentication Protocol Based on Elliptic Curve Cryptography",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85073730543&origin=inward",
        "https://www.mdpi.com/2079-9292/8/10/1166/pdf"
      ]
    },
    {
      "abstract": "Reactive security monitoring, self-driving cars, the Internet of Things (IoT), and many other novel applications require systems for both writing events arriving at very high and fluctuating rates to persistent storage as well as supporting analytical ad hoc queries. As standard database systems are not capable of delivering the required write performance, log-based systems, key-value stores, and other write-optimized data stores have emerged recently. However, the drawbacks of these systems are a fair query performance and the lack of suitable instant recovery mechanisms in case of system failures. In this article, we present ChronicleDB, a novel database system with a storage layout tailored for high write performance under fluctuating data rates and powerful indexing capabilities to support a variety of queries. In addition, ChronicleDB offers low-cost fault tolerance and instant recovery within milliseconds. Unlike previous work, ChronicleDB is designed either as a serverless library to be tightly integrated in an application or as a standalone database server. Our results of an experimental evaluation with real and synthetic data reveal that ChronicleDB clearly outperforms competing systems with respect to both write and query performance. \u00c2\u00a9 2019 Association for Computing Machinery.",
      "authors": [
        "Seidemann, M.",
        "Glombiewski, N.",
        "K\u00c3\u00b6rber, M.",
        "Seeger, B."
      ],
      "categories": null,
      "citations": 2,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1145/3342357",
      "keywords": [
        "Event processing",
        "Indexing",
        "Recovery",
        "Time travel queries",
        "Storage layout",
        "Aggregation queries"
      ],
      "number_of_pages": null,
      "pages": null,
      "publication": {
        "category": "Journal",
        "cite_score": 9.2,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "03625915",
        "publisher": "Association for Computing Machinery (ACM)",
        "sjr": 0.988,
        "snip": 3.217,
        "subject_areas": [
          "Information Systems"
        ],
        "title": "ACM Transactions on Database Systems"
      },
      "publication_date": "2019-10-01",
      "selected": null,
      "title": "ChronicleDB: A high-performance event store",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85073696340&origin=inward"
      ]
    },
    {
      "abstract": "The proceedings contain 48 papers. The topics discussed include: building ad-hoc clouds with CloudAgora; revisiting broadcast algorithms for wireless edge networks; fault tolerant high performance solver for linear equation systems; d'Artagnan: a trusted NoSQL database on untrusted clouds; challenges and opportunities for efficient serverless computing at the edge; hyperpubsub: blockchain based publish/subscribe; atomic swapping bitcoins and ethers; and P3LS: plausible deniability for practical privacy-preserving live streaming.",
      "authors": [],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": 2.7,
        "is_potentially_predatory": false,
        "isbn": "0769567118",
        "issn": "10609857",
        "publisher": "IEEE Computer Society",
        "sjr": 0.291,
        "snip": 1.133,
        "subject_areas": [
          "Theoretical Computer Science",
          "Hardware and Architecture",
          "Computer Networks and Communications",
          "Software"
        ],
        "title": "Proceedings of the IEEE Symposium on Reliable Distributed Systems"
      },
      "publication_date": "2019-10-01",
      "selected": null,
      "title": "Proceedings - 2019 IEEE 38th International Symposium on Reliable Distributed Systems, SRDS 2019",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85084130251&origin=inward"
      ]
    },
    {
      "abstract": "The development of hadoop distribution has been carried out by developers from the big data field starting from Cloudera (CDH), Horton Work (HDP), and MapR, which are more widely used for enterprise version. In addition, when viewed from the field of both formal and non-formal educations, many students and laymen who learn about big data find it difficult to carry out the learning process, especially if the learning process is done locally and completely without a server (serverless), for example like using IBM cognitiveclass, AWS educate, and indeed, this local learning is very cheap without always having to connect to the internet. This is in line with the specifications of netbooks, notebooks and personal computers (PCs) that are used by most students with limited specs, for example it will run slowly when a single-node hadoop is implemented, especially a multi-note hadoop. And also in the hadoop itself requires quite a lot of supporting software that runs on hadoop, such as spark, hive, pig, flume, oozie, sqoop, hue and others. In this study, hadoop distribution with the name 'UBig' or 'HiDUPs' which was made using Linux Ubuntu and Windows OS so easily to be made independently by each student both the student and the general public as a great development solution to many various fields. \u00c2\u00a9 2019 IEEE.",
      "authors": [
        "Imam Cholissodin",
        "Ahmad Afif Supianto"
      ],
      "categories": null,
      "citations": 1,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/SIET48054.2019.8986040",
      "keywords": [
        "hadoop distribution",
        "enterprise",
        "hidups",
        "ubig",
        "education",
        "cygwin64"
      ],
      "number_of_pages": 4,
      "pages": "90-93",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-7281-3881-7",
        "issn": null,
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings of 2019 4th International Conference on Sustainable Information Engineering and Technology, SIET 2019"
      },
      "publication_date": "2019-09-28",
      "selected": null,
      "title": "Enhancement Full Open Source Hadoop Distribution Universal Big Data Up Projects (UBig) From Education To Enterprise",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85080125309&origin=inward",
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=8986040"
      ]
    },
    {
      "abstract": " There is a growing interest in serverless compute, a cloud computing model\nthat automates infrastructure resource-allocation and management while billing\ncustomers only for the resources they use. Workloads like stream processing\nbenefit from high elasticity and fine-grain pricing of these serverless\nframeworks. However, so far, limited concurrency and high latency of server\nCPUs prohibit many interactive workloads (e.g., web servers and database\nclients) from taking advantage of serverless compute to achieve high\nperformance. In this paper, we argue that server CPUs are ill-suited to run serverless\nworkloads (i.e., lambdas) and present $\\lambda$-NIC, an open-source framework,\nthat runs interactive workloads directly on a SmartNIC; more specifically an\nASIC-based NIC that consists of a dense grid of Network Processing Unit (NPU)\ncores. $\\lambda$-NIC leverages SmartNIC's proximity to the network and a vast\narray of NPU cores to simultaneously run thousands of lambdas on a single NIC\nwith strict tail-latency guarantees. To ease development and deployment of\nlambdas, $\\lambda$-NIC exposes an event-based programming abstraction,\nMatch+Lambda, and a machine model that allows developers to compose and execute\nlambdas on SmartNICs easily. Our evaluation shows that $\\lambda$-NIC achieves\nup to 880x and 736x improvements in workloads' response latency and throughput,\nrespectively, while significantly reducing host CPU and memory usage.\n",
      "authors": [
        "Choi, Sean",
        "Shahbaz, Muhammad",
        "Prabhakar, Balaji",
        "Rosenblum, Mendel"
      ],
      "categories": null,
      "citations": null,
      "comments": null,
      "databases": [
        "arXiv"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": null,
      "publication_date": "2019-09-26",
      "selected": null,
      "title": "$\\lambda$-NIC: Interactive Serverless Compute on Programmable SmartNICs",
      "urls": [
        "http://arxiv.org/abs/1909.11958v1",
        "http://arxiv.org/pdf/1909.11958v1",
        "https://arxiv.org/pdf/1909.11958"
      ]
    },
    {
      "abstract": "Cloud computing has the potential to be a great equalizer, providing powerful and sophisticated computing tools to anyone with an internet connection and even a minimal budget. In fact, educational institutions can often get cloud grants providing access at no cost. Although any traditional computing paradigm can be implemented with cloud computing, there are now new and potentially more useful options available. This workshop is a hands-on exploration of several of those new paradigms in a single gamifiable system. Participants will explore cloud computing through a game-playing case study. Concepts covered include serverless computing, distributed systems, event-driven software, message passing, asynchronous communication, and non-relational databases. Each new idea will be used to advance the example system a step at a time. The workshop will emphasize ways to incorporate the case study in class and possibilities for extending it. All code for the system is available on GitHub for participants to work with to implement their own games or extend the concepts in other ways, such as a programming assignment submission and scoring system. \u00c2\u00a9 2019 Copyright held by the owner/author(s).",
      "authors": [
        "White, L.",
        "Engelke, C."
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1145/3349266.3351392",
      "keywords": [],
      "number_of_pages": 2,
      "pages": "138-139",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450369213",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "SIGITE 2019 - Proceedings of the 20th Annual Conference on Information Technology Education"
      },
      "publication_date": "2019-09-26",
      "selected": null,
      "title": "Serverless distributed architecture by incremental examples",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85073591085&origin=inward"
      ]
    },
    {
      "abstract": "Applications of conversational agents, also called chatbots, have accelerated in recent years. However, it is difficult for people with limited programming skills to implement chatbots and analyze the data collected by chatbots. In this paper, we present a new serverless implementation of conversational agents for delivering customizable surveys on smart devices, including smartphones and smart speakers, and a web-based system for applying advanced analytics techniques to survey data using cloud services. The system is called TigerAware Assistant, as part of the TigerAware platform for customizable mobile survey and sensor data collection. TigerAware Assistant enables non-technical people to easily create and deploy chatbots on various mobile devices to conduct surveys through conversations in natural languages via auditory and textual methods. It also provides a web-based system for survey data visualization, statistical analysis, and advanced machine learning-based data analysis using cloud services on survey responses collected by chatbots. \u00c2\u00a9 2019 IEEE.",
      "authors": [
        "Yohanes Handrianto",
        "Rui Huang",
        "Yi Shang"
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/TransAI46475.2019.00023",
      "keywords": [
        "Serverless Computing",
        "Cognitive AI",
        "Cloud Function",
        "Conversational Agent",
        "Chatbot",
        "Mobile Survey"
      ],
      "number_of_pages": 4,
      "pages": "88-91",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-7281-4128-2",
        "issn": null,
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings - 2019 1st International Conference on Transdisciplinary AI, TransAI 2019"
      },
      "publication_date": "2019-09-25",
      "selected": null,
      "title": "Short Paper: TigerAware Assistant: A New Serverless Implementation of Conversational Agents for Customizable Surveys on Smart Devices",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85078216361&origin=inward",
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=8940418"
      ]
    },
    {
      "abstract": "This paper evaluates the current state of the Function as a Service (FaaS) landscape and investigates the extent of the applicability of this new technology for the use-cases of today. We have selected the most popular Function as a Service platforms and have measured the relevant application performance parameters (latency and database access rate) under different types of load. Our source code used by our experiments is available from our public repository. Our measurements confirm that the investigated FaaS technologies have stable performance characteristics under various load conditions. They can be safely applied to a large number of use-cases, and their performance will hold up to the traditional solutions with also added benefits as well, such as less operational costs and better scalability. \u00c2\u00a9 2019 ACM.",
      "authors": [
        "Hegyi, G.I.",
        "Maliosz, M.",
        "Simon, C."
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1145/3386164.3390516",
      "keywords": [
        "Faas",
        "Serverless",
        "Analysis",
        "Performance"
      ],
      "number_of_pages": null,
      "pages": null,
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450376617",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "ACM International Conference Proceeding Series"
      },
      "publication_date": "2019-09-25",
      "selected": null,
      "title": "Performance Measurements of Function as a Service Platforms",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85086428505&origin=inward"
      ]
    },
    {
      "abstract": "We propose a serverless computing mechanism for distributed computation based on polar codes. Serverless computing is an emerging cloud based computation model that lets users run their functions on the cloud without provisioning or managing servers. Our proposed approach is a hybrid computing framework that carries out computationally expensive tasks such as linear algebraic operations involving large-scale data using serverless computing and does the rest of the processing locally. We address the limitations and reliability issues of serverless platforms such as straggling workers using coding theory, drawing ideas from recent literature on coded computation. The proposed mechanism uses polar codes to ensure straggler-resilience in a computationally effective manner. We provide extensive evidence showing polar codes outperform other coding methods. We have designed a sequential decoder specifically for polar codes in erasure channels with full-precision input and outputs. In addition, we have extended the proposed method to the matrix multiplication case where both matrices being multiplied are coded. The proposed coded computation scheme is implemented for AWS Lambda. Experiment results are presented where the performance of the proposed coded computation technique is tested in optimization via gradient descent. Finally, we introduce the idea of partial polarization which reduces the computational burden of encoding and decoding at the expense of straggler-resilience. \u00c2\u00a9 2019 IEEE.",
      "authors": [
        "Burak Bartan",
        "Mert Pilanci"
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/ALLERTON.2019.8919767",
      "keywords": [],
      "number_of_pages": 8,
      "pages": "276-283",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-7281-3152-8",
        "issn": null,
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "2019 57th Annual Allerton Conference on Communication, Control, and Computing, Allerton 2019"
      },
      "publication_date": "2019-09-24",
      "selected": null,
      "title": "Straggler Resilient Serverless Computing Based on Polar Codes",
      "urls": [
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=8919767",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85077801536&origin=inward"
      ]
    },
    {
      "abstract": "The adoption of computation-and data-intensive science, or eScience, makes research progress increasingly dependent on the availability, management, and use of sophisticated cyberinfrastructure. An unfortunate consequence is that researchers face increasingly burdensome demands for managing and maintaining cyberinfrastructure. The advent of virtualization and cloud computing has helped, by allowing outsourcing of some such tasks to reliable and scalable cloud providers. But much more progress is needed before we can create a research cyberinfrastructure that allows researchers to focus on creative thought rather than systems management. We examine here how the emerging paradigm of serverless computing, in which arbitrary functions can be dispatched seamlessly to scalable, secure, and reliable service providers, can move us in that direction. To demonstrate how serverless computing can transform scientific computing, we describe three serverless computing models: service-oriented computing, research automation, and function as a service, presenting illustrative case studies for each. \u00c2\u00a9 2019 IEEE.",
      "authors": [
        "Kyle Chard",
        "Ian Foster"
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/eScience.2019.00056",
      "keywords": [
        "Globus",
        "Serverless-science",
        "function-as-a-service",
        "serverless-computing"
      ],
      "number_of_pages": 7,
      "pages": "432-438",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-7281-2452-0",
        "issn": null,
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings - IEEE 15th International Conference on eScience, eScience 2019"
      },
      "publication_date": "2019-09-24",
      "selected": null,
      "title": "Serverless Science for Simple, Scalable, and Shareable Scholarship",
      "urls": [
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9041780",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85083167171&origin=inward"
      ]
    },
    {
      "abstract": "The typical centralized cloud model is poorly suited to latency-sensitive applications requiring low-latency and high-throughput. This paper proposes an in",
      "authors": [
        "Servio Palacios",
        "Victor Santos",
        "Edgardo Barsallo",
        "Bharat Bhargava"
      ],
      "categories": null,
      "citations": 3,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1007/s11042-018-6940-2",
      "keywords": [
        "WebRTC",
        "Event-driven model",
        "Edge computing",
        "Media streaming",
        "Peer-to-Peer"
      ],
      "number_of_pages": 24,
      "pages": "24657-24680",
      "publication": {
        "category": "Journal",
        "cite_score": 4.6,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "13807501",
        "publisher": "Springer Netherlands",
        "sjr": 0.443,
        "snip": 1.139,
        "subject_areas": [
          "Hardware and Architecture",
          "Computer Networks and Communications",
          "Media Technology",
          "Software"
        ],
        "title": "Multimedia Tools and Applications"
      },
      "publication_date": "2019-09-15",
      "selected": null,
      "title": "MioStream: a peer-to-peer distributed live media streaming on the edge",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85059678063&origin=inward",
        "https://link.springer.com/content/pdf/10.1007/s11042-018-6940-2.pdf"
      ]
    },
    {
      "abstract": " Experiment-in-the-Loop Computing (EILC) requires support for numerous types\nof processing and the management of heterogeneous infrastructure over a dynamic\nrange of scales: from the edge to the cloud and HPC, and intermediate\nresources. Serverless is an emerging service that combines high-level\nmiddleware services, such as distributed execution engines for managing tasks,\nwith low-level infrastructure. It offers the potential of usability and\nscalability, but adds to the complexity of managing heterogeneous and dynamic\nresources. In response, we extend Pilot-Streaming to support serverless\nplatforms. Pilot-Streaming provides a unified abstraction for resource\nmanagement for HPC, cloud, and serverless, and allocates resource containers\nindependent of the application workload removing the need to write\nresource-specific code. Understanding of the performance and scaling\ncharacteristics of streaming applications and infrastructure presents another\nchallenge for EILC. StreamInsight provides insight into the performance of\nstreaming applications and infrastructure, their selection, configuration and\nscaling behavior. Underlying StreamInsight is the universal scalability law,\nwhich permits the accurate quantification of scalability properties of\nstreaming applications. Using experiments on HPC and AWS Lambda, we demonstrate\nthat StreamInsight provides an accurate model for a variety of application\ncharacteristics, e.g., machine learning model sizes and resource\nconfigurations.\n",
      "authors": [
        "Luckow, Andre",
        "Jha, Shantenu"
      ],
      "categories": null,
      "citations": null,
      "comments": null,
      "databases": [
        "arXiv"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": null,
      "publication_date": "2019-09-13",
      "selected": null,
      "title": "Performance Characterization and Modeling of Serverless and HPC Streaming Applications",
      "urls": [
        "https://arxiv.org/pdf/1909.06055",
        "http://arxiv.org/abs/1909.06055v1",
        "http://arxiv.org/pdf/1909.06055v1"
      ]
    },
    {
      "abstract": "Currently, several factors are moving biomedical research towards a (big) data-centred science. This yields new challenges for computer science solutions when dealing with bioinformatics applications. Among others, efficient storage, preprocessing, integration and analysis of omics and clinical data, result in a bottleneck on the analysis pipeline. This may be faced using cloud technology. This paper discusses the challenges and opportunities of deploying bioinformatics applications using the Amazon Serverless Lambda services. First experiments show that serverless computing is useful for this particular bioinformatics high-throughput application, because it simplifies resource management. \u00c2\u00a9 2019 Association for Computing Machinery.",
      "authors": [
        "Crespo-Cepeda, R.",
        "Agapito, G.",
        "Vazquez-Poletti, J.L.",
        "Cannataro, M."
      ],
      "categories": null,
      "citations": 2,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1145/3307339.3343462",
      "keywords": [
        "Bioinformatics",
        "Amazon Lamba",
        "Serverless Computing"
      ],
      "number_of_pages": 6,
      "pages": "663-668",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450366663",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "ACM-BCB 2019 - Proceedings of the 10th ACM International Conference on Bioinformatics, Computational Biology and Health Informatics"
      },
      "publication_date": "2019-09-04",
      "selected": null,
      "title": "Challenges and opportunities of Amazon serverless lambda services in bioinformatics",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85073168038&origin=inward"
      ]
    },
    {
      "abstract": "Cloud computing offers on-demand, scalable computing and storage, and has become an essential resource for the analyses of big biomedical data. The usual approach to cloud computing requires users to reserve and provision virtual servers. An emerging alternative is to have the provider allocate machine resources dynamically. This type of serverless computing has tremendous potential for biomedical research in terms of ease-of-use, instantaneous scalability, and cost effectiveness. In our proof of concept example, we demonstrate how serverless computing provides low cost access to hundreds of CPUs, on demand, with little or no setup. In particular, we illustrate that the all-against-all pairwise comparison among all unique human proteins can be accomplished in approximately 2 minutes, at a cost of less than $1, using Amazon Web Services Lambda. We also demonstrate the feasibility of our approach using Google Functions and show that the same task of pairwise protein sequence comparison can be accomplished in approximately 11.5 minutes. In contrast, running the same task on a typical laptop computer required 8.7 hours. \u00c2\u00a9 2019 Copyright held by the owner/author(s).",
      "authors": [
        "Niu, X.",
        "Kumanov, D.",
        "Hung, L.-H.",
        "Lloyd, W.",
        "Yeung, K.Y."
      ],
      "categories": null,
      "citations": 4,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1145/3307339.3343465",
      "keywords": [
        "Bioinformatics",
        "Sequence alignment",
        "Cloud computing",
        "Serverless computing"
      ],
      "number_of_pages": 5,
      "pages": "683-687",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450366663",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "ACM-BCB 2019 - Proceedings of the 10th ACM International Conference on Bioinformatics, Computational Biology and Health Informatics"
      },
      "publication_date": "2019-09-04",
      "selected": null,
      "title": "Leveraging serverless computing to improve performance for sequence comparison",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85073172436&origin=inward"
      ]
    },
    {
      "abstract": " Adapting the cloud for high-performance computing (HPC) is a challenging\ntask, as software for HPC applications hinges on fast network connections and\nis sensitive to hardware failures. Using cloud infrastructure to recreate\nconventional HPC clusters is therefore in many cases an infeasible solution for\nmigrating HPC applications to the cloud. As an alternative to the generic lift\nand shift approach, we consider the specific application of seismic imaging and\ndemonstrate a serverless and event-driven approach for running large-scale\ninstances of this problem in the cloud. Instead of permanently running compute\ninstances, our workflow is based on a serverless architecture with high\nthroughput batch computing and event-driven computations, in which\ncomputational resources are only running as long as they are utilized. We\ndemonstrate that this approach is very flexible and allows for resilient and\nnested levels of parallelization, including domain decomposition for solving\nthe underlying partial differential equations. While the event-driven approach\nintroduces some overhead as computational resources are repeatedly restarted,\nit inherently provides resilience to instance shut-downs and allows a\nsignificant reduction of cost by avoiding idle instances, thus making the cloud\na viable alternative to on-premise clusters for large-scale seismic imaging.\n",
      "authors": [
        "Witte, Philipp A.",
        "Louboutin, Mathias",
        "Modzelewski, Henryk",
        "Jones, Charles",
        "Selvage, James",
        "Herrmann, Felix J."
      ],
      "categories": null,
      "citations": null,
      "comments": "Submitted to IEEE Transactions on Parallel and Distributed Systems.\n  August 2019",
      "databases": [
        "arXiv"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": null,
      "publication_date": "2019-09-03",
      "selected": null,
      "title": "An Event-Driven Approach to Serverless Seismic Imaging in the Cloud",
      "urls": [
        "http://arxiv.org/abs/1909.01279v1",
        "https://arxiv.org/pdf/1909.01279",
        "http://arxiv.org/pdf/1909.01279v1"
      ]
    },
    {
      "abstract": "This paper describes various challenges faced by the Big Data cloud providers and the challenges encountered by its users. This foreshadows that the Serverless computing as the feasible platform for Big Data application\u00e2\u0080\u0099s data storages. The literature research undertaken focuses on various Serverless computing architectural designs, computational methodologies, performance, data movement and functions. The framework for Serverless cloud computing is discussed and its performance is tested for the metric of scaling in the Serverless cloud storage for Big Data applications. The results of the analyses and its outcome are also discussed. Thus suggesting that the scaling of Serverless cloud storage for data storage during random load increase as the optimal solution for cloud provider and Big Data application user. \u00c2\u00a9 BEIESP.",
      "authors": [
        "Annie Christina, A.",
        "Kavitha, A.R."
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.35940/ijrte.C5471.098319",
      "keywords": [
        "Big Data",
        "Serverless cloud",
        "Big Data Cloud",
        "Serverless computing",
        "Data Storage"
      ],
      "number_of_pages": 4,
      "pages": "6592-6595",
      "publication": {
        "category": "Journal",
        "cite_score": null,
        "is_potentially_predatory": true,
        "isbn": null,
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "International Journal of Recent Technology and Engineering"
      },
      "publication_date": "2019-09-01",
      "selected": null,
      "title": "Serverless computing platform for big data storage",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85073536844&origin=inward"
      ]
    },
    {
      "abstract": "Industrial food production is one of the biggest businesses that supplies most of the food consumed by the world. Despite being one of the largest industries, the lack of appropriate control and quality due to inefficient food management results in a lot of waste and cost ineffectiveness. With the emergence of Internet of Things (IoT) and Industry 4.0, the food industry can be benefited by adapting to these concepts and enhance the desirable quality of the products. In this paper, an advanced quality check method has been proposed by identifying influencing process parameters and proposes a retrofitting architecture for existing machines by implementing a hardware device capable of collecting vast amount of process data and integrating them with a cloud platform for further analysis. \u00c2\u00a9 2019 IEEE.",
      "authors": [
        "Panda, S.K.",
        "Blome, A.",
        "Wisniewski, L.",
        "Meyer, A."
      ],
      "categories": null,
      "citations": 5,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1109/ETFA.2019.8869093",
      "keywords": [
        "IoT",
        "Sensor node",
        "Food industry",
        "AWS IoT",
        "AWS Greengrass",
        "Industry 4.0",
        "OPC UA",
        "LoRaWAN",
        "AWS Lambda"
      ],
      "number_of_pages": 4,
      "pages": "1639-1642",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781728103037",
        "issn": "19460740",
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "IEEE International Conference on Emerging Technologies and Factory Automation, ETFA"
      },
      "publication_date": "2019-09-01",
      "selected": null,
      "title": "IoT Retrofitting Approach for the Food Industry",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85074211091&origin=inward"
      ]
    },
    {
      "abstract": "Growing popularity of serverless functions is driving the need to optimize the execution platform to reduce resource usage and increase the number of functions that can be executed concurrently. This reduces the provider's costs and increases profit. While current serverless solutions use containers and/or virtual machines, we propose a unikernel based design called USETL which is specialized for serverless extract, transform, load (ETL) workloads. Our design is motivated by a number of key observations: Serverless functions are stateless, ephemeral and event-driven. Further, each function's specific purpose is known at invocation time. Unikernels are a natural fit for execution contexts with these properties: They are minimal kernels packaged with a single application in a single address space, which makes them incredibly lightweight. Our design removes network and storage components entirely, replacing them with high level APIs tailored to the needs of serverless ETL functions. Virtualizing I/O at the runtime library interface reduces memory and CPU overheads, yielding higher consolidation density. \u00c2\u00a9 2019 Copyright held by the owner/author(s). Publication rights licensedto ACM.",
      "authors": [
        "Fingler, H.",
        "Akshintala, A.",
        "Rossbach, C.J."
      ],
      "categories": null,
      "citations": 6,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1145/3343737.3343750",
      "keywords": [],
      "number_of_pages": 8,
      "pages": "23-30",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450368933",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings of the 10th ACM SIGOPS Asia-Pacific Workshop on Systems, APSys 2019"
      },
      "publication_date": "2019-08-19",
      "selected": null,
      "title": "USETL: Unikernels for serverless extract transform and load why should you settle for less?",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85074455209&origin=inward"
      ]
    },
    {
      "abstract": "[No abstract available]",
      "authors": [
        "Choi, S.",
        "Shahbaz, M.",
        "Prabhakar, B.",
        "Rosenblum, M."
      ],
      "categories": null,
      "citations": 1,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1145/3342280.3342341",
      "keywords": [
        "npu",
        "Serverless compute",
        "P4",
        "Smartnic"
      ],
      "number_of_pages": 2,
      "pages": "151-152",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450368865",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "SIGCOMM 2019 - Proceedings of the 2019 ACM SIGCOMM Conference Posters and Demos, Part of SIGCOMM 2019"
      },
      "publication_date": "2019-08-19",
      "selected": null,
      "title": "\u03bb-NIC: Interactive Serverless Compute on Smart NICs",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85071903196&origin=inward"
      ]
    },
    {
      "abstract": " Growing data volumes and velocities are driving exciting new methods across\nthe sciences in which data analytics and machine learning are increasingly\nintertwined with research. These new methods require new approaches for\nscientific computing in which computation is mobile, so that, for example, it\ncan occur near data, be triggered by events (e.g., arrival of new data), or be\noffloaded to specialized accelerators. They also require new design approaches\nin which monolithic applications can be decomposed into smaller components,\nthat may in turn be executed separately and on the most efficient resources. To\naddress these needs we propose funcX---a high-performance function-as-a-service\n(FaaS) platform that enables intuitive, flexible, efficient, scalable, and\nperformant remote function execution on existing infrastructure including\nclouds, clusters, and supercomputers. It allows users to register and then\nexecute Python functions without regard for the physical resource location,\nscheduler architecture, or virtualization technology on which the function is\nexecuted---an approach we refer to as \"serverless supercomputing.\" We motivate\nthe need for funcX in science, describe our prototype implementation, and\ndemonstrate, via experiments on two supercomputers, that funcX can process\nmillions of functions across more than 65000 concurrent workers. We also\noutline five scientific scenarios in which funcX has been deployed and\nhighlight the benefits of funcX in these scenarios.\n",
      "authors": [
        "Chard, Ryan",
        "Skluzacek, Tyler J.",
        "Li, Zhuozhao",
        "Babuji, Yadu",
        "Woodard, Anna",
        "Blaiszik, Ben",
        "Tuecke, Steven",
        "Foster, Ian",
        "Chard, Kyle"
      ],
      "categories": null,
      "citations": null,
      "comments": null,
      "databases": [
        "arXiv"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": null,
      "publication_date": "2019-08-14",
      "selected": null,
      "title": "Serverless Supercomputing: High Performance Function as a Service for Science",
      "urls": [
        "http://arxiv.org/pdf/1908.04907v1",
        "https://arxiv.org/pdf/1908.04907",
        "http://arxiv.org/abs/1908.04907v1"
      ]
    },
    {
      "abstract": "Summary form only given, as follows. A record of the panel discussion was not made available for publication as part of the conference proceedings. Data Center Transformation \u2013 How will the DataCenter look different in 5 years. Points covered: How will system architecture change towards connectivity; Edge Networking; Scalable compute workloads in the cloud; Serverless computing and its impact on networking; I/O wall and shift towards optics; Competing technologies (CXL vs CSIX vs TileLink vs nvlink). Panelists: Andreas Bechtolsheim (Arista) and Hong Liu (Google).",
      "authors": [],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "IEEE"
      ],
      "doi": "10.1109/HOTI.2019.00009",
      "keywords": [],
      "number_of_pages": 1,
      "pages": "15-15",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-7281-5526-5",
        "issn": "1550-4794",
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "2019 IEEE Symposium on High-Performance Interconnects (HOTI)"
      },
      "publication_date": "2019-08-14",
      "selected": null,
      "title": "Panel HOTI 2019: Data center transformation - How will the datacenter look different in 5 years",
      "urls": [
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9070321"
      ]
    },
    {
      "abstract": "With the enhancement of people's awareness of environmental protection, environmental monitoring technology has gradually entered into all aspects of people's life and work. However, due to the high demand of real-time monitoring for data transmission delay, the traditional cloud computing architecture cannot meet the demand, and the fog computing architecture emerges at the historic moment. In this paper, the traditional cloud computing architecture is improved by using the fog computing architecture combined with the function as a service mode of the serverless architecture, and an environment monitoring architecture based on fog computing is proposed. Taking indoor formaldehyde monitoring as an example, the delay of the system is significantly improved, and the resource utilization efficiency is higher and the energy consumption is lower. It solves the deficiency of traditional cloud computing architecture and better meets the demand of real-time environmental monitoring. \u00c2\u00a9 Published under licence by IOP Publishing Ltd.",
      "authors": [
        "Chen, H.",
        "Li, S.",
        "Zhang, J.",
        "Peng, X."
      ],
      "categories": null,
      "citations": 1,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1088/1757-899X/569/4/042048",
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": 0.7,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "17578981",
        "publisher": "IOP Publishing Ltd.",
        "sjr": 0.198,
        "snip": 0.484,
        "subject_areas": [
          "Engineering (all)",
          "Materials Science (all)"
        ],
        "title": "IOP Conference Series: Materials Science and Engineering"
      },
      "publication_date": "2019-08-09",
      "selected": null,
      "title": "Indoor formaldehyde monitoring system based on fog computing",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85071924262&origin=inward"
      ]
    },
    {
      "abstract": "In recent years, the use of the cloud has become one of the essential elements when constructing a system for deploying web services. By combining serverless cloud services, various web services can be performed without building servers. However, serverless environments have various limitations, and traditional methods of building servers on VM are indispensable. In addition, technology for migrating VM to physically different hosts was established, and it became possible to easily migrate VM between hosts under the same cloud management. However, depending on the server running on VM, there may be restrictions on the range that can be physically moved. We have solved the problem by focusing on the problem that migration can be performed without checking the information about the server running on the VM at the time of migration. Therefore, in this paper, we introduce a managing technique for VM migration policy in the cloud using blockchain, and show that it is more useful than the conventional policy management method. \u00c2\u00a9 2019 IEEE.",
      "authors": [
        "Toshihiro Uchibayashi",
        "Bernady O. Apduhan",
        "Norio Shiratori",
        "Takuo Suganuma",
        "Masahiro Hiji"
      ],
      "categories": null,
      "citations": 2,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/DASC/PiCom/CBDCom/CyberSciTech.2019.00073",
      "keywords": [
        "Data protection",
        "Block-chain",
        "Cloud computing",
        "Control mechanism",
        "Privacy policy",
        "Migration"
      ],
      "number_of_pages": 3,
      "pages": "360-362",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-7281-3025-5",
        "issn": null,
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings - IEEE 17th International Conference on Dependable, Autonomic and Secure Computing, IEEE 17th International Conference on Pervasive Intelligence and Computing, IEEE 5th International Conference on Cloud and Big Data Computing, 4th Cyber Science and Technology Congress, DASC-PiCom-CBDCom-CyberSciTech 2019"
      },
      "publication_date": "2019-08-05",
      "selected": null,
      "title": "Policy Management Technique Using Blockchain for Cloud VM Migration",
      "urls": [
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=8890425",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85075123992&origin=inward"
      ]
    },
    {
      "abstract": "Time management is challenging because not only does one want to ensure they are able to get work done on time, they also want to utilize time in the most efficient way. This paper proposes a solution developed using Cloud Computing and a scheduling algorithm based on Pomodoro technique. \u00c2\u00a9 2019 IEEE.",
      "authors": [
        "Aminov, P.",
        "Bola, N.",
        "Shiralkar, D.",
        "Yoganarasimha, M."
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1109/CSE/EUC.2019.00055",
      "keywords": [
        "Serverless Architecture",
        "Pomodoro technique",
        "Time management",
        "Cloud Computing"
      ],
      "number_of_pages": 5,
      "pages": "249-253",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781728116631",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings - 22nd IEEE International Conference on Computational Science and Engineering and 17th IEEE International Conference on Embedded and Ubiquitous Computing, CSE/EUC 2019"
      },
      "publication_date": "2019-08-01",
      "selected": null,
      "title": "Cloud based algorithm for task management",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85077033479&origin=inward"
      ]
    },
    {
      "abstract": "Workflow scheduling is one of the challenging issues in emerging trends of the distributed environment that focuses on satisfying various quality of service (QoS) constraints. The cloud receives the applications as a form of a workflow, consisting of a set of interdependent tasks, to solve the large-scale scientific or enterprise problems. Workflow scheduling in the cloud environment has been studied extensively over the years, and this article provides a comprehensive review of the approaches. This article analyses the characteristics of various workflow scheduling techniques and classifies them based on their objectives and execution model. In addition, the recent technological developments and paradigms such as serverless computing and Fog computing are creating new requirements/opportunities for workflow scheduling in a distributed environment. The serverless infrastructures are mainly designed for processing background tasks such as Internet-of-Things (IoT), web applications, or event-driven applications. To address the ever-increasing demands of resources and to overcome the drawbacks of the cloud-centric IoT, the Fog computing paradigm has been developed. This article also discusses workflow scheduling in the context of these emerging trends of cloud computing. \u00c2\u00a9 2019 Association for Computing Machinery.",
      "authors": [
        "Adhikari, M.",
        "Amgoth, T.",
        "Srirama, S.N."
      ],
      "categories": null,
      "citations": 11,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1145/3325097",
      "keywords": [
        "QoS constraint",
        "Fog computing",
        "Cloud computing",
        "Workflow scheduling",
        "Serverless computing",
        "Scientific problems"
      ],
      "number_of_pages": null,
      "pages": null,
      "publication": {
        "category": "Journal",
        "cite_score": 22.3,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "03600300",
        "publisher": "Association for Computing Machinery (ACM)",
        "sjr": 2.079,
        "snip": 6.953,
        "subject_areas": [
          "Theoretical Computer Science",
          "Computer Science (all)"
        ],
        "title": "ACM Computing Surveys"
      },
      "publication_date": "2019-08-01",
      "selected": null,
      "title": "A survey on scheduling strategies for workflows in cloud environment and emerging trends",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85072019437&origin=inward"
      ]
    },
    {
      "abstract": "MapReduce is one of the most widely used programming models for analysing large-scale datasets, i.e. Big Data. In recent years, serverless computing and, in particular, Functions as a Service (FaaS) has surged as an execution model in which no explicit management of servers (e.g. virtual machines) is performed by the user. Instead, the Cloud provider dynamically allocates resources to the function invocations and fine-grained billing is introduced depending on the execution time and allocated memory, as exemplified by AWS Lambda. In this article, a high-performant serverless architecture has been created to execute MapReduce jobs on AWS Lambda using Amazon S3 as the storage backend. In addition, a thorough assessment has been carried out to study the suitability of AWS Lambda as a platform for the execution of High Throughput Computing jobs. The results indicate that AWS Lambda provides a convenient computing platform for general-purpose applications that fit within the constraints of the service (15 min of maximum execution time, 3008 MB of RAM and 512 MB of disk space) but it exhibits an inhomogeneous performance behaviour that may jeopardise adoption for tightly coupled computing jobs. \u00c2\u00a9 2019",
      "authors": [
        "Gim\u00c3\u00a9nez-Alventosa, V.",
        "Molt\u00c3\u00b3, G.",
        "Caballer, M."
      ],
      "categories": null,
      "citations": 13,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1016/j.future.2019.02.057",
      "keywords": [
        "MapReduce",
        "Serverless",
        "Elasticity",
        "Cloud computing"
      ],
      "number_of_pages": 16,
      "pages": "259-274",
      "publication": {
        "category": "Journal",
        "cite_score": 13.3,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "0167739X",
        "publisher": "Elsevier",
        "sjr": 1.262,
        "snip": 2.72,
        "subject_areas": [
          "Hardware and Architecture",
          "Computer Networks and Communications",
          "Software"
        ],
        "title": "Future Generation Computer Systems"
      },
      "publication_date": "2019-08-01",
      "selected": null,
      "title": "A framework and a performance assessment for serverless MapReduce on AWS Lambda",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85062650844&origin=inward"
      ]
    },
    {
      "abstract": "Stream processing systems need to be elastically scalable to process and respond the unpredictable massive load spike in real-time with high throughput and low latency. Though the modern cloud technologies can help in elastically provisioning the required computing resources on-the-fly, finding out the right point-in-time varies among systems based on their expected QoS characteristics. The latency sensitivity of the stream processing applications varies based on their nature and pre-set requirements. For few applications, even a little latency in the response will have huge impact, whereas for others the little latency will not have that much impact. For the former ones, the processing systems are expected to be highly available, elastically scalable, and fast enough to perform, whenever there is a spike. The time required to elasticity provision the systems under FaaS is very high, comparing to provisioning the Virtual Machines and Containers. However, the current FaaS systems have some limitations that need to be overcome to handle the unexpected spike in real-time. This paper proposes a new algorithm called Elastic-FaaS on top of the existing FaaS to overcome this QoS latency issue. Our proposed algorithm will provision required number of FaaS container instances than any typical FaaS can provision normally, whenever there is a demand to avoid the latency issue. We have experimented our algorithm with an event stream processing system and the result shows that our proposed Elastic-FaaS algorithm performs better than typical FaaS by improving the throughput that meets the high accuracy and low latency requirements. \u00c2\u00a9 BEIESP.",
      "authors": [
        "Kathirvel, J.",
        "Parasuraman, E."
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.35940/ijitee.J9965.0881019",
      "keywords": [
        "Data Stream Processing",
        "Elastic FaaS",
        "Serverless",
        "Function-as-a-Service"
      ],
      "number_of_pages": 7,
      "pages": "3756-3762",
      "publication": {
        "category": "Journal",
        "cite_score": null,
        "is_potentially_predatory": true,
        "isbn": null,
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "International Journal of Innovative Technology and Exploring Engineering"
      },
      "publication_date": "2019-08-01",
      "selected": null,
      "title": "A QoS-latency aware event stream processing with elastic-faaS",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85071336483&origin=inward"
      ]
    },
    {
      "abstract": "In this paper we discuss the development of a science gateway; identifying Ca2+ binding sites in proteins using a java application developed by Dr. Jenny Yang at the Chemistry department, Georgia State University. Starting with a Protein Data Bank (PDB) X-ray or NMR structure file, MUGC application predicts calcium binding sites using a graph theory-based algorithm [1]. The project creates a science gateway to provide access to the MUGC algorithm using tools provided by Amazon Web Services. The full-stack solution uses S3 storage, AWS Lambda functions, and API gateway to relay the PDB files to the back-end computing in EC2. Architecture for a full stack serverless processing pipeline is implemented which allows users to access the application. The design is optimized for scalability, reliability, security, performance, and cost. \u00c2\u00a9 2019 Association for Computing Machinery.",
      "authors": [
        "Mashiku, M.",
        "Edirisinghe, N."
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1145/3332186.3333050",
      "keywords": [
        "Science Gateways",
        "Ca+ binding cite Prediction",
        "Cloud Computing"
      ],
      "number_of_pages": null,
      "pages": null,
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450372275",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "ACM International Conference Proceeding Series"
      },
      "publication_date": "2019-07-28",
      "selected": null,
      "title": "Serverless Science Gateway Development for Ca2<sup>+</sup> binding site prediction on Amazon Web Services: Case study",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85071022914&origin=inward"
      ]
    },
    {
      "abstract": " Serverless computing has become very popular today since it largely\nsimplifies cloud programming. Developers do not need to longer worry about\nprovisioning or operating servers, and they pay only for the compute resources\nused when their code is run. This new cloud paradigm suits well for many\napplications, and researchers have already begun investigating the feasibility\nof serverless computing for data analytics. Unfortunately, today's serverless\ncomputing presents important limitations that make it really difficult to\nsupport all sorts of analytics workloads. This paper first starts by analyzing\nthree fundamental trade-offs of today's serverless computing model and their\nrelationship with data analytics. It studies how by relaxing disaggregation,\nisolation, and simple scheduling, it is possible to increase the overall\ncomputing performance, but at the expense of essential aspects of the model\nsuch as elasticity, security, or sub-second activations, respectively. The\nconsequence of these trade-offs is that analytics applications may well end up\nembracing hybrid systems composed of serverless and serverful components, which\nwe call Servermix in this paper. We will review the existing related work to\nshow that most applications can be actually categorized as Servermix. Finally,\nthis paper will introduce the major challenges of the CloudButton research\nproject to manage these trade-offs.\n",
      "authors": [
        "Garc\u00eda-L\u00f3pez, Pedro",
        "S\u00e1nchez-Artigas, Marc",
        "Shillaker, Simon",
        "Pietzuch, Peter",
        "Breitgand, David",
        "Vernik, Gil",
        "Sutra, Pierre",
        "Tarrant, Tristan",
        "Ferrer, Ana Juan"
      ],
      "categories": null,
      "citations": null,
      "comments": "15 pages, 1 figure, 1 table",
      "databases": [
        "arXiv"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": null,
      "publication_date": "2019-07-26",
      "selected": null,
      "title": "ServerMix: Tradeoffs and Challenges of Serverless Data Analytics",
      "urls": [
        "http://arxiv.org/abs/1907.11465v1",
        "https://arxiv.org/pdf/1907.11465",
        "http://arxiv.org/pdf/1907.11465v1"
      ]
    },
    {
      "abstract": " Fog computing can support IoT services with fast response time and low\nbandwidth usage by moving computation from the cloud to edge devices. However,\nexisting fog computing frameworks have limited flexibility to support dynamic\nservice composition with a data-oriented approach. Function-as-a-Service (FaaS)\nis a promising programming model for fog computing to enhance flexibility, but\nthe current event- or topic-based design of function triggering and the\nseparation of data management and function execution result in inefficiency for\ndata-intensive IoT services. To achieve both flexibility and efficiency, we\npropose a data-centric programming model called Fog Function and also introduce\nits underlying orchestration mechanism that leverages three types of contexts:\ndata context, system context, and usage context. Moreover, we showcase a\nconcrete use case for smart parking where Fog Function allows service\ndevelopers to easily model their service logic with reduced learning efforts\ncompared to a static service topology. Our performance evaluation results show\nthat the Fog Function can be scaled to hundreds of fog nodes. Fog Function can\nimprove system efficiency by saving 95% of the internal data traffic over cloud\nfunction and it can reduce service latency by 30% over edge function.\n",
      "authors": [
        "Cheng, Bin",
        "F\u00fcrst, Jonathan",
        "Solmaz, Gurkan",
        "Sanada, Takuya"
      ],
      "categories": null,
      "citations": null,
      "comments": null,
      "databases": [
        "arXiv"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": null,
      "publication_date": "2019-07-18",
      "selected": null,
      "title": "Fog Function: Serverless Fog Computing for Data Intensive IoT Services",
      "urls": [
        "http://arxiv.org/pdf/1907.08278v1",
        "https://arxiv.org/pdf/1907.08278",
        "http://arxiv.org/abs/1907.08278v1"
      ]
    },
    {
      "abstract": "Steady progress in ubiquitous technologies and machine learning facilitates ever-new and better digital assistants. However, most of these emerging assistants rely on-partly similar-data-driven analyses that are independent of each other, leading to redundancy issues. In this paper, we propose a novel concept (termed AssistantGraph) for an efficient design and runtime support of digital assistants. More specifically, assistants need to represent their data-driven processing pipelines as a directed acyclic graph of assistant components (modularity) to benefit from serverless computing with data access. Facilitated component sharing across assistants (reusability) leads to a more connected and efficient overall graph: a shared component instance requires to run only once; versioned components are enabled by the proposed backward chains of converters (versioning). We further develop data and control flow mechanisms through recursive filtering on demand to trigger the data-driven components as required. Within a novel proposed and prototypically implemented open assistant infrastructure, we evaluate our concept in terms of feasibility and performance. The results show reduced redundancy with simultaneous significant performance gains (through component sharing) despite minimal additional overhead (due to modularization and backward compatibility). We believe that our approach gives a new perspective on data-driven assistants and complements an open assistant ecosystem. \u00c2\u00a9 2019 IEEE.",
      "authors": [
        "Christian Meurisch",
        "Bekir Bayrak",
        "Max M\u00fchlh\u00e4user"
      ],
      "categories": null,
      "citations": 5,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/COMPSAC.2019.00079",
      "keywords": [
        "versioning",
        "data-driven analytics",
        "ubiquitous personal assistant",
        "operation graph",
        "serverless computing",
        "FaaS"
      ],
      "number_of_pages": 10,
      "pages": "513-522",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": 2.5,
        "is_potentially_predatory": false,
        "isbn": "978-1-7281-2607-4",
        "issn": "0730-3157",
        "publisher": "Institute of Electrical and Electronics Engineers Inc.",
        "sjr": 0.216,
        "snip": 0.785,
        "subject_areas": [
          "Software",
          "Computer Science Applications"
        ],
        "title": "2019 IEEE 43rd Annual Computer Software and Applications Conference (COMPSAC)"
      },
      "publication_date": "2019-07-15",
      "selected": null,
      "title": "AssistantGraph: An Approach for Reusable and Composable Data-Driven Assistant Components",
      "urls": [
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=8754080",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85072702778&origin=inward"
      ]
    },
    {
      "abstract": "In smart factories, process planning and scheduling need to be performed every time a new manufacturing order is received or a factory state change has been detected. A new plan and schedule need to be determined quickly to increase the responsiveness of the factory and enlarge its profit. Simultaneous optimisation of manufacturing process planning and scheduling leads to better results than a traditional sequential approach but is computationally more expensive and thus difficult to be applied to real-world manufacturing scenarios. In this paper, a working approach for cloud-based distributed optimisation of process planning and scheduling is presented. It executes a multi-objective genetic algorithm on multiple subpopulations (islands). The number of islands is automatically decided based on the current optimisation state. A number of test cases based on two real-world manufacturing scenarios are used to show the applicability of the proposed solution. \u00c2\u00a9 2019 Copyright held by the owner/author(s). ACM ISBN 978-1-4503-6111-8/19/07.",
      "authors": [
        "Zhao, S.",
        "Dziurzanski, P.",
        "Przewozniczek, M.",
        "Komarnicki, M.",
        "Indrusiak, L.S."
      ],
      "categories": null,
      "citations": 6,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1145/3321707.3321826",
      "keywords": [
        "Function as a Service",
        "Serverless Clouds",
        "Integrated process planning and scheduling",
        "Multi-objective Genetic Algorithm"
      ],
      "number_of_pages": 9,
      "pages": "1381-1389",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450361118",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "GECCO 2019 - Proceedings of the 2019 Genetic and Evolutionary Computation Conference"
      },
      "publication_date": "2019-07-13",
      "selected": null,
      "title": "Cloud-based Dynamic Distributed Optimisation of Integrated Process Planning and Scheduling in Smart Factories",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85072332323&origin=inward"
      ]
    },
    {
      "abstract": "This paper advances the state-of-the-art by enhancing an existing provider-independent modelling language towards the complete specification of both serverless and hybrid multi-cloud applications. This extension has been validated by a use case developed in the context of the Functionizer project. \u00c2\u00a9 2019 IEEE.",
      "authors": [
        "Kyriakos Kritikos",
        "Pawel Skrzypek",
        "Alexandru Moga",
        "Oliviu Matei"
      ],
      "categories": null,
      "citations": 5,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/CLOUD.2019.00056",
      "keywords": [
        "Deployment",
        "Hybrid application",
        "Validation",
        "Serverless",
        "Requirements",
        "Cloud",
        "Modelling"
      ],
      "number_of_pages": 5,
      "pages": "291-295",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-7281-8781-5",
        "issn": "2159-6182",
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "2020 IEEE 13th International Conference on Cloud Computing (CLOUD)"
      },
      "publication_date": "2019-07-08",
      "selected": null,
      "title": "Towards the Modelling of Hybrid Cloud Applications",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85072310905&origin=inward",
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=8814556"
      ]
    },
    {
      "abstract": "With the development of serverless computing, orchestration of multiple serverless computing services is highly desired by many cloud-based applications. In this paper, we present GlobalFlow, an orchestration service that can coordinate various geographically distributed but logically dependent serverless computing services through copy-based or connector-based strategy. Through preliminary evaluation, the proposed service has demonstrated its effectiveness in orchestrating various AWS Lambda functions in different regions without significant overhead. \u00c2\u00a9 2019 IEEE.",
      "authors": [
        "Ge Zheng",
        "Yang Peng"
      ],
      "categories": null,
      "citations": 1,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/CLOUD.2019.00093",
      "keywords": [
        "cloud computing",
        "orchestration",
        "serverless computing",
        "geo distributed",
        "AWS Lambda"
      ],
      "number_of_pages": 3,
      "pages": "508-510",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-7281-8781-5",
        "issn": "2159-6182",
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "2020 IEEE 13th International Conference on Cloud Computing (CLOUD)"
      },
      "publication_date": "2019-07-08",
      "selected": null,
      "title": "GlobalFlow: A Cross-Region Orchestration Service for Serverless Computing Services",
      "urls": [
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=8814505",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85072325057&origin=inward"
      ]
    },
    {
      "abstract": "Serverless runtimes provide efficient and cost-effective environments for scalable computations, thanks to their event-driven and elastic nature. So far, they have mostly been used for stateless, data parallel and sporadic computations. In this work, we propose exploiting serverless runtimes to solve generic, large-scale optimization problems. To this end, we implement a parallel optimization algorithm for solving a regularized logistic regression problem, and use AWS Lambda for the compute-intensive work. We show that relative speedups up to 256 workers and efficiencies above 70% up to 64 workers can be expected. \u00c2\u00a9 2019 IEEE.",
      "authors": [
        "Arda Aytekin",
        "Mikael Johansson"
      ],
      "categories": null,
      "citations": 2,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/CLOUD.2019.00090",
      "keywords": [
        "distributed optimization",
        "optimization",
        "alternating direction method of multipliers",
        "serverless"
      ],
      "number_of_pages": 3,
      "pages": "499-501",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-7281-8781-5",
        "issn": "2159-6182",
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "2020 IEEE 13th International Conference on Cloud Computing (CLOUD)"
      },
      "publication_date": "2019-07-08",
      "selected": null,
      "title": "Exploiting Serverless Runtimes for Large-Scale Optimization",
      "urls": [
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=8814497",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85072323908&origin=inward"
      ]
    },
    {
      "abstract": "Fog computing can support IoT services with fast response time and low bandwidth usage by moving computation from the cloud to edge devices. However, existing fog computing frameworks have limited flexibility to support dynamic service composition with a data-oriented approach. Function-as-a-Service (FaaS) is a promising programming model for fog computing to enhance flexibility, but the current event-or topic-based design of function triggering and the separation of data management and function execution result in inefficiency for data-intensive IoT services. To achieve both flexibility and efficiency, we propose a data-centric programming model called Fog Function and also introduce its underlying orchestration mechanism that leverages three types of contexts: data context, system context, and usage context. Moreover, we showcase a concrete use case for smart parking where Fog Function allows service developers to easily model their service logic with reduced learning efforts compared to a static service topology. Our performance evaluation results show that the Fog Function can be scaled to hundreds of fog nodes. Fog Function can improve system efficiency by saving 95% of the internal data traffic over cloud function and it can reduce service latency by 30% over edge function. \u00c2\u00a9 2019 IEEE.",
      "authors": [
        "Bin Cheng",
        "Jonathan Fuerst",
        "Gurkan Solmaz",
        "Takuya Sanada"
      ],
      "categories": null,
      "citations": 10,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/SCC.2019.00018",
      "keywords": [
        "fog computing",
        "IoT services",
        "serverless computing",
        "context driven",
        "edge computing",
        "programming model"
      ],
      "number_of_pages": 8,
      "pages": "28-35",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-7281-2721-7",
        "issn": "2474-8137",
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings - 2019 IEEE International Conference on Services Computing, SCC 2019 - Part of the 2019 IEEE World Congress on Services"
      },
      "publication_date": "2019-07-08",
      "selected": null,
      "title": "Fog Function: Serverless Fog Computing for Data Intensive IoT Services",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85072574704&origin=inward",
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=8814084"
      ]
    },
    {
      "abstract": "Microservices, serverless architectures, cloud native programming are novel paradigms and techniques which could significantly reduce the burden on both developers and operators of future services. Several types of applications fit in well with the new concepts easing the life of different stakeholders while enabling cloud-grade service deployments. However, latency sensitive applications with strict delay constraints between different components pose additional challenges on the platforms. In order to gain benefit from recent cloud technologies for latency sensitive applications as well, a comprehensive performance analysis of available platforms and relevant components is a crucial first step. In this paper, we address one of the most widely used and versatile cloud platforms, namely Amazon Web Services (AWS), and reveal the delay characteristics of key components and services which impact the overall performance of latency sensitive applications. Our contribution is threefold. First, we define a detailed measurement methodology for CaaS/FaaS (Container/Function as a Service) platforms, specifically for AWS. Second, we provide a comprehensive analysis of AWS components focusing on delay characteristics. Third, we attempt to adjust a drone control application to the platform and investigate the performance on today's system. \u00c2\u00a9 2019 IEEE.",
      "authors": [
        "Istv\u00e1n Pelle",
        "J\u00e1nos Czentye",
        "J\u00e1nos D\u00f3ka",
        "Bal\u00e1zs Sonkoly"
      ],
      "categories": null,
      "citations": 12,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/CLOUD.2019.00054",
      "keywords": [
        "AWS",
        "Cloud computing",
        "Latency sensitive applications",
        "Function as a Service",
        "Performance measurement"
      ],
      "number_of_pages": 9,
      "pages": "272-280",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-7281-8781-5",
        "issn": "2159-6182",
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "2020 IEEE 13th International Conference on Cloud Computing (CLOUD)"
      },
      "publication_date": "2019-07-08",
      "selected": null,
      "title": "Towards Latency Sensitive Cloud Native Applications: A Performance Study on AWS",
      "urls": [
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=8814512",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85072317198&origin=inward"
      ]
    },
    {
      "abstract": "We are witnessing the emergence of elastic web services which are hosted in public cloud infrastructures. For reasons of cost-effectiveness, it is crucial for the elasticity of these web services to match the dynamically-evolving user demand. Traditional approaches employ clusters of virtual machines (VMs) to dynamically scale resources based on application demand. However, they still face challenges such as higher cost due to over-provisioning or incur service level objective (SLO) violations due to under-provisioning. Motivated by this observation, we propose Spock, a new scalable and elastic control system that exploits both VMs and serverless functions to reduce cost and ensure SLO for elastic web services. We show that under two different scaling policies, Spock reduces SLO violations of queries by up to 74\\% when compared to VM-based resource procurement schemes. Further, Spock yields significant cost savings, by up to 33\\% compared to traditional approaches which use only VMs. \u00c2\u00a9 2019 IEEE.",
      "authors": [
        "Jashwant Raj Gunasekaran",
        "Prashanth Thinakaran",
        "Mahmut Taylan Kandemir",
        "Bhuvan Urgaonkar",
        "George Kesidis",
        "Chita Das"
      ],
      "categories": null,
      "citations": 12,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/CLOUD.2019.00043",
      "keywords": [
        "autoscaling",
        "SLO",
        "cost-aware",
        "lambda",
        "FaaS",
        "serverless"
      ],
      "number_of_pages": 10,
      "pages": "199-208",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-7281-8781-5",
        "issn": "2159-6182",
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "2020 IEEE 13th International Conference on Cloud Computing (CLOUD)"
      },
      "publication_date": "2019-07-08",
      "selected": null,
      "title": "Spock: Exploiting Serverless Functions for SLO and Cost Aware Resource Procurement in Public Cloud",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85069531622&origin=inward",
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=8814535"
      ]
    },
    {
      "abstract": "In this talk we will do a quick retrospective on how Services Computing has evolved over the last fifteen years and the major trends driving the next generation of services. We will emphasize the rapid transformation of entire industries due to the revolution in services computing that is currently underway-based on cognitive computing/AI capabilities, Hybrid and Multi Cloud platforms, end to end Automation, large scale serverless computing, and proliferation of nanoservices. This is completely changing how services are engineered, developed with high levels of reuse in open and community development models, and delivered through site reliability engineers. We will discuss the implications of the kinds of outcomes expected in services and the concomitant shift in skills expected of service engineers.",
      "authors": [
        "Gopal Pingali"
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "IEEE"
      ],
      "doi": "10.1109/SERVICES.2019.00055",
      "keywords": [],
      "number_of_pages": 1,
      "pages": "199-199",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-7281-3852-7",
        "issn": "2378-3818",
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings - 2019 IEEE World Congress on Services, SERVICES 2019"
      },
      "publication_date": "2019-07-08",
      "selected": null,
      "title": "SWoSC 2019 Invited Talk",
      "urls": [
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=8817165"
      ]
    },
    {
      "abstract": "Serverless computing is attracting considerable attention recently, but many published papers use micro-benchmarks for evaluation that might result in impracticality. To address this, we present FunctionBench, a suite of practical function workloads for public services. It contains realistic data-oriented applications that utilize various resources during execution. The source codes customized for various cloud service providers are publicly available. We are positive that it suggests opportunities for new function applications with lessen experiment setup overheads. \u00c2\u00a9 2019 IEEE.",
      "authors": [
        "Jeongchul Kim",
        "Kyungyong Lee"
      ],
      "categories": null,
      "citations": 15,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/CLOUD.2019.00091",
      "keywords": [
        "benchmark",
        "workload",
        "cloud",
        "FaaS",
        "serverless"
      ],
      "number_of_pages": 3,
      "pages": "502-504",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-7281-8781-5",
        "issn": "2159-6182",
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "2020 IEEE 13th International Conference on Cloud Computing (CLOUD)"
      },
      "publication_date": "2019-07-08",
      "selected": null,
      "title": "FunctionBench: A Suite of Workloads for Serverless Cloud Function Service",
      "urls": [
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=8814583",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85072317217&origin=inward"
      ]
    },
    {
      "abstract": "Typically, Function-as-a-Service (FaaS) involves state-less replication with very large numbers of instances. The reliability of such services can be evaluated using Bayesian Networks and k-out-of-n models. However, existing k-out-of-n models do not scale to the larger number of hosts of FaaS services. Therefore, we propose a scalable k-out-of-n model in this paper with the same semantics as the standard k-out-of-n voting gates in fault trees, enabling the reliability analysis of FaaS services. \u00c2\u00a9 2019 IEEE.",
      "authors": [
        "Otto Bibartiu",
        "Frank D\u00fcrr",
        "Kurt Rothermel",
        "Beate Ottenw\u00e4lder",
        "Andreas Grau"
      ],
      "categories": null,
      "citations": 1,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/CLOUD.2019.00095",
      "keywords": [
        "k out of n",
        "Replication",
        "Function as a Service",
        "Bayesian Networks",
        "causal independence",
        "Reliability"
      ],
      "number_of_pages": 3,
      "pages": "514-516",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-7281-8781-5",
        "issn": "2159-6182",
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "2020 IEEE 13th International Conference on Cloud Computing (CLOUD)"
      },
      "publication_date": "2019-07-08",
      "selected": null,
      "title": "Towards Scalable k-out-of-n Models for Assessing the Reliability of Large-Scale Function-as-a-Service Systems with Bayesian Networks",
      "urls": [
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=8814557",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85072345673&origin=inward"
      ]
    },
    {
      "abstract": "Simulations are the greatest means for evaluating systems and producing knowledge related to their optimal configuration for production. Simulation systems support the execution of simulations. These can be installed and executed internally to an organisation or can be offered as a service in the cloud. Current simulation-as-a-service (SimaaS) offerings rely on VM or container-based deployments which lead to additional costs due to the charging in an hourly basis. Further, such offerings cannot be easily adapted at runtime to still be able to sustain their promised service level. To resolve these issues, this paper proposes a novel SimaaS architecture and solution which exploits the serverless computing paradigm for reducing the simulation cost based on the actual usage of resources as well as accelerating the simulation time through the limitless, parallelised invocation of functions. Further, this solution relies on the MELODIC/Functionizer multi-cloud platform which enables adapting the simulation execution at runtime in order to sustain the right service level according to the user requirements and preferences. For the validation of our solution, a real business application provided by AI Investments has been used. It aims to optimise investment portfolio using the most advanced AI-based methods and requires heavy computational power to accomplish the respective tasks. \u00c2\u00a9 2019 IEEE.",
      "authors": [
        "Kyriakos Kritikos",
        "Pawel Skrzypek"
      ],
      "categories": null,
      "citations": 3,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/SERVICES.2019.00056",
      "keywords": [
        "Asynchronous communication",
        "Deployment",
        "Task computing",
        "Serverless",
        "Massive parallelisation",
        "Simulation",
        "Queues",
        "Cloud"
      ],
      "number_of_pages": 6,
      "pages": "200-205",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-7281-3852-7",
        "issn": "2378-3818",
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings - 2019 IEEE World Congress on Services, SERVICES 2019"
      },
      "publication_date": "2019-07-08",
      "selected": null,
      "title": "Simulation-as-a-Service with Serverless Computing",
      "urls": [
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=8817117",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85072777494&origin=inward"
      ]
    },
    {
      "abstract": "The goal of our work is to simplify and expedite the construction and evaluation of machine learning models using autoscaled cloud computing resources. To enable this, we develop an open source system called Seneca, which leverages the serverless programming model and its implementation in Amazon Web Services (AWS) Lambda. Seneca takes a machine learning application, dataset, and a list of possible hyperparameter options as input and automatically constructs an AWS Lambda function. The function ingresses and splits the input dataset into training and testing subsets and constructs, tests, and evaluates (i.e. scores) a machine learning model for a given set of hyperparameter values. Seneca concurrently invokes functions for all combinations of the hyperparameters specified. It then returns the configuration (or model) that results in the best score to the user. In this paper, we overview the design and implementation of Seneca, and empirically evaluate its performance for a popular classification application. \u00c2\u00a9 2019 IEEE.",
      "authors": [
        "Michael Zhang",
        "Chandra Krintz",
        "Markus Mock",
        "Rich Wolski"
      ],
      "categories": null,
      "citations": 3,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/CLOUD.2019.00071",
      "keywords": [
        "Machine learning model selection",
        "Serverless computing",
        "Hyperparameter tuning"
      ],
      "number_of_pages": 5,
      "pages": "404-408",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-7281-8781-5",
        "issn": "2159-6182",
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "2020 IEEE 13th International Conference on Cloud Computing (CLOUD)"
      },
      "publication_date": "2019-07-08",
      "selected": null,
      "title": "Seneca: Fast and Low Cost Hyperparameter Search for Machine Learning Models",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85072328054&origin=inward",
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=8814572"
      ]
    },
    {
      "abstract": "The proliferation of Internet of Things (IoT) and the success of resource-rich cloud services have pushed the data processing horizon towards the edge of the network. This has the potential to address bandwidth costs, and latency, availability and data privacy concerns. Serverless computing, a cloud computing model for stateless and event-driven applications, promises to further improve Quality of Service (QoS) by eliminating the burden of always-on infrastructure through ephemeral containers. Open source serverless frameworks have been introduced to avoid the vendor lock-in and computation restrictions of public cloud platforms and to bring the power of serverless computing to on-premises deployments. In an IoT environment, these frameworks can leverage the computational capabilities of devices in the local network to further improve QoS of applications delivered to the user. However, these frameworks have not been evaluated in a resource-constrained, edge computing environment. In this work we evaluate four open source serverless frameworks, namely, Kubeless, Apache OpenWhisk, OpenFaaS, Knative. Each framework is installed on a bare-metal, single master, Kubernetes cluster. We use the JMeter framework to evaluate the response time, throughput and success rate of functions deployed using these frameworks under different workloads. The evaluation results are presented and open research opportunities are discussed. \u00c2\u00a9 2019 IEEE.",
      "authors": [
        "Andrei Palade",
        "Aqeel Kazmi",
        "Siobh\u00e1n Clarke"
      ],
      "categories": null,
      "citations": 14,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/SERVICES.2019.00057",
      "keywords": [
        "kubeless",
        "JMeter",
        "Docker",
        "opensource serverless computing frameworks",
        "OpenFaaS",
        "Apache Openwhisk",
        "Function as a Service",
        "QoS",
        "function composition",
        "serverless computing",
        "FaaS",
        "Kubernetes",
        "quantitative evaluation",
        "Knative",
        "containers"
      ],
      "number_of_pages": 6,
      "pages": "206-211",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-7281-3852-7",
        "issn": "2378-3818",
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings - 2019 IEEE World Congress on Services, SERVICES 2019"
      },
      "publication_date": "2019-07-08",
      "selected": null,
      "title": "An Evaluation of Open Source Serverless Computing Frameworks Support at the Edge",
      "urls": [
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=8817155",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85072771398&origin=inward"
      ]
    },
    {
      "abstract": "The advent of open-source serverless computing frameworks has introduced the ability to bring the Functions-as-a-Service (FaaS) paradigm for applications to be executed on-premises. In particular, data-driven scientific applications can benefit from these frameworks with the ability to trigger scalable computation in response to incoming workloads of files to be processed. This paper introduces an open-source framework to achieve on-premises serverless computing for event-driven data processing applications that features: i) the automated provisioning of an elastic Kubernetes cluster that can grow and shrink, in terms of the number of nodes, on multi-Clouds; ii) the automated deployment of a FaaS framework together with a data storage back-end that triggers events upon file uploads; iii) a service that provides a REST API to orchestrate the creation of such functions and iv) a graphical user interface that provides a unified entry point to interact with the aforementioned services. Together, this provides a framework to deploy a computing platform to create highly-parallel event-driven file-processing serverless applications that execute on customized runtime environments provided by Docker containers that run on an elastic Kubernetes cluster. The usefulness of this framework is exemplified by means of the execution of a data-driven workflow for optimised object detection on video. The workflow is tested under three different workloads which process ten, a hundred and a thousand functions. The results show that the presented architecture is able to process such workloads taking advantage of its elasticity to make a sensible usage of the resources. \u00c2\u00a9 2019 IEEE.",
      "authors": [
        "Alfonso P\u00e9rez",
        "Sebasti\u00e1n Risco",
        "Diana Mar\u00eda Naranjo",
        "Miguel Caballer",
        "Germ\u00e1n Molt\u00f3"
      ],
      "categories": null,
      "citations": 4,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/CLOUD.2019.00073",
      "keywords": [
        "Distributed Infrastructures",
        "Docker",
        "Containers",
        "Scientific Computing",
        "Cloud Computing"
      ],
      "number_of_pages": 8,
      "pages": "414-421",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-7281-8781-5",
        "issn": "2159-6182",
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "2020 IEEE 13th International Conference on Cloud Computing (CLOUD)"
      },
      "publication_date": "2019-07-08",
      "selected": null,
      "title": "On-Premises Serverless Computing for Event-Driven Data Processing Applications",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85072348653&origin=inward",
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=8814513"
      ]
    },
    {
      "abstract": "Distributed implementations of gradient-based methods, wherein a server distributes gradient computations across worker machines, suffer from slow running machines, called stragglers. Gradient coding is a coding-theoretic framework to mitigate stragglers by enabling the server to recover the gradient sum in the presence of stragglers. Approximate gradient codes are variants of gradient codes that reduce computation and storage overhead per worker by allowing the server to approximately reconstruct the gradient sum.In this work, our goal is to construct approximate gradient codes that are resilient to stragglers selected by a computationally unbounded adversary. Our motivation for constructing codes to mitigate adversarial stragglers stems from the challenge of tackling stragglers in massive-scale elastic and serverless systems, wherein it is difficult to statistically model stragglers. Towards this end, we propose a class of approximate gradient codes based on balanced incomplete block designs (BIBDs). We show that the approximation error for these codes depends only on the number of stragglers, and thus, adversarial straggler selection has no advantage over random selection. In addition, the proposed codes admit computationally efficient decoding at the server. Next, to characterize fundamental limits of adversarial straggling, we consider the notion of adversarial threshold - the smallest number of workers that an adversary must straggle to inflict certain approximation error. We compute a lower bound on the adversarial threshold, and show that codes based on symmetric BIBDs maximize this lower bound among a wide class of codes, making them excellent candidates for mitigating adversarial stragglers. \u00c2\u00a9 2019 IEEE.",
      "authors": [
        "Swanand Kadhe",
        "O. Ozan Koyluoglu",
        "Kannan Ramchandran"
      ],
      "categories": null,
      "citations": 9,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/ISIT.2019.8849690",
      "keywords": [],
      "number_of_pages": 5,
      "pages": "2813-2817",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": 2.8,
        "is_potentially_predatory": false,
        "isbn": "978-1-5386-9292-9",
        "issn": "2157-8095",
        "publisher": "Institute of Electrical and Electronics Engineers Inc.",
        "sjr": 0.6,
        "snip": 0.686,
        "subject_areas": [
          "Information Systems",
          "Modeling and Simulation",
          "Theoretical Computer Science",
          "Applied Mathematics"
        ],
        "title": "IEEE International Symposium on Information Theory - Proceedings"
      },
      "publication_date": "2019-07-07",
      "selected": null,
      "title": "Gradient Coding Based on Block Designs for Mitigating Adversarial Stragglers",
      "urls": [
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=8849690",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85073167405&origin=inward"
      ]
    },
    {
      "abstract": " Koalja describes a generalized data wiring or `pipeline' platform, built on\ntop of Kubernetes, for plugin user code. Koalja makes the Kubernetes underlay\ntransparent to users (for a `serverless' experience), and offers a\nbreadboarding experience for development of data sharing circuitry, to\ncommoditize its gradual promotion to a production system, with a minimum of\ninfrastructure knowledge. Enterprise grade metadata are captured as data\npayloads flow through the circuitry, allowing full tracing of provenance and\nforensic reconstruction of transactional processes, down to the versions of\nsoftware that led to each outcome. Koalja attends to optimizations for avoiding\nunwanted processing and transportation of data, that are rapidly becoming\nsustainability imperatives. Thus one can minimize energy expenditure and waste,\nand design with scaling in mind, especially with regard to edge computing, to\naccommodate an Internet of Things, Network Function Virtualization, and more.\n",
      "authors": [
        "Burgess, Mark",
        "Prangsma, Ewout"
      ],
      "categories": null,
      "citations": null,
      "comments": null,
      "databases": [
        "arXiv"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": null,
      "publication_date": "2019-07-03",
      "selected": null,
      "title": "Koalja: from Data Plumbing to Smart Workspaces in the Extended Cloud",
      "urls": [
        "https://arxiv.org/pdf/1907.01796",
        "http://arxiv.org/pdf/1907.01796v1",
        "http://arxiv.org/abs/1907.01796v1"
      ]
    },
    {
      "abstract": "The proceedings contain 84 papers. The topics discussed include: data protection as a service in the multi-cloud environment; robust management of trans-cloud applications; an adaptive approach for dealing with flow disruption in virtualized water-cooled data centers; cloud VM provisioning using analytical performance models; QuADD : quantifying accelerator disaggregated datacenter efficiency; TrIMS: transparent and isolated model sharing for low latency deep learning inference in function-as-a-service; STRETCH: in-memory storage with autoscaling for cluster computing; exploiting serverless runtimes for large-scale optimization; and non-intrusive cloud application transaction pattern discovery.",
      "authors": [],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781728187808",
        "issn": "21596182",
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "IEEE International Conference on Cloud Computing, CLOUD"
      },
      "publication_date": "2019-07-01",
      "selected": null,
      "title": "Proceedings - 2019 IEEE International Conference on Cloud Computing, CLOUD 2019 - Part of the 2019 IEEE World Congress on Services",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85072341858&origin=inward"
      ]
    },
    {
      "abstract": "Raw DNA sequences contain an immense amount of meaningful biological information. However, these sequences are hard for humans to intuitively interpret. To solve this problem, a number of methods have been proposed to transform DNA sequences into two-dimensional visualizations. DNAvisualization.org implements several of these methods in a cost effective and performant manner via a novel, entirely serverless architecture. By taking advantage of recent developments in serverless parallel computing and selective data retrieval, the website is able to offer users the ability to visualize up to thirty 4.5 Mb DNA sequences simultaneously using one of five supported methods and to export these visualizations in a variety of publication-ready formats.",
      "authors": [
        "Benjamin D Lee",
        "Michael A Timony",
        "Pablo Ruiz"
      ],
      "categories": null,
      "citations": null,
      "comments": null,
      "databases": [
        "PubMed"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": "W20-W25",
      "publication": {
        "category": "Journal",
        "cite_score": 23.5,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "1362-4962",
        "publisher": "Oxford University Press",
        "sjr": 9.008,
        "snip": 4.779,
        "subject_areas": [
          "Genetics"
        ],
        "title": "Nucleic acids research"
      },
      "publication_date": "2019-07-01",
      "selected": null,
      "title": "DNAvisualization.org: a serverless web tool for DNA sequence visualization.",
      "urls": []
    },
    {
      "abstract": "The cloud computing simplifies application development into the orchestration of virtual-services workflow. However, network latency between geographically distributed hosts would slow down the workflow's makespan time. This paper proposes a geo-aware task allocation approach (GTAA). GTAA partitions the workflow for geo-distributed data centers(DCs) and reduces sub-workflows across DCs. GTAA aims to optimize overall workflow makespan time and improves the efficiency of workflow. \u00c2\u00a9 2019 IEEE.",
      "authors": [
        "Niu, M.",
        "Cheng, B.",
        "Chen, J."
      ],
      "categories": null,
      "citations": 1,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1109/ICWS.2019.00082",
      "keywords": [
        "Task Allocation",
        "Serverless",
        "Geo-distributed",
        "Workflow",
        "Cloud Computing"
      ],
      "number_of_pages": 3,
      "pages": "449-451",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781728127170",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings - 2019 IEEE International Conference on Web Services, ICWS 2019 - Part of the 2019 IEEE World Congress on Services"
      },
      "publication_date": "2019-07-01",
      "selected": null,
      "title": "GTAA: A geo-aware task allocation approach in cloud workflow",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85072772770&origin=inward"
      ]
    },
    {
      "abstract": "Serverless computing platforms have gained popularity because they allow easy deployment of services in a highly scalable and cost-effective manner. By enabling just-in-time startup of container-based services, these platforms can achieve good multiplexing and automatically respond to traffic growth, making them particularly desirable for edge cloud data centers where resources are scarce. Edge cloud data centers are also gaining attention because of their promise to provide responsive, low-latency shared computing and storage resources. Bringing serverless capabilities to edge cloud data centers must continue to achieve the goals of low latency and reliability. The reliability guarantees provided by serverless computing however are weak, with node failures causing requests to be dropped or executed multiple times. Thus serverless computing only provides a best effort infrastructure, leaving application developers responsible for implementing stronger reliability guarantees at a higher level. Current approaches for providing stronger semantics such as 'exactly once' guarantees could be integrated into serverless platforms, but they come at high cost in terms of both latency and resource consumption. As edge cloud services move towards applications such as autonomous vehicle control that require strong guarantees for both reliability and performance, these approaches may no longer be sufficient. In this paper we evaluate the latency, throughput, and resource costs of providing different reliability guarantees, with a focus on these emerging edge cloud platforms and applications. \u00c2\u00a9 2019 IEEE.",
      "authors": [
        "Sameer G Kulkarni",
        "Guyue Liu",
        "K. K. Ramakrishnan",
        "Timothy Wood"
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/LANMAN.2019.8846970",
      "keywords": [],
      "number_of_pages": 6,
      "pages": "1-6",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-7281-1435-4",
        "issn": "1944-0367",
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "2019 IEEE International Symposium on Local and Metropolitan Area Networks (LANMAN)"
      },
      "publication_date": "2019-07-01",
      "selected": null,
      "title": "Living on the Edge: Serverless Computing and the Cost of Failure Resiliency",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85073166273&origin=inward",
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=8846970"
      ]
    },
    {
      "abstract": "Serverless computing is a novel usage of cloud computing that offers programmers an environment to execute functions with no concerns on the infrastructure where the code runs. This work presents a serverless implementation of a technique used in cybersecurity, which focuses on the identification of unexpected behaviors from network users by means of TopK rankings. The implementation proposed leverages the potential of serverless computing by integrating the following services from Amazon Web Services: Lambda, DynamoDB, SQS and S3. The running time required to process user network traffic was dramatically reduced in comparison to other implementations of the same algorithm. \u00c2\u00a9 2019 IEEE.",
      "authors": [
        "Alvaro Parres-Peredo",
        "Ivan Piza-Davila",
        "Francisco Cervantes"
      ],
      "categories": null,
      "citations": 2,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/TSP.2019.8768825",
      "keywords": [
        "serverless architecture",
        "network security",
        "cybersecurity",
        "aws",
        "functions as a service"
      ],
      "number_of_pages": 4,
      "pages": "164-167",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-7281-1865-9",
        "issn": null,
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "2019 42nd International Conference on Telecommunications and Signal Processing, TSP 2019"
      },
      "publication_date": "2019-07-01",
      "selected": null,
      "title": "Building and Evaluating User Network Profiles for Cybersecurity Using Serverless Architecture",
      "urls": [
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=8768825",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85071069841&origin=inward"
      ]
    },
    {
      "abstract": "Raw DNA sequences contain an immense amount of meaningful biological information. However, these sequences are hard for humans to intuitively interpret. To solve this problem, a number of methods have been proposed to transform DNA sequences into two-dimensional visualizations. DNAvisualization.org implements several of these methods in a cost effective and performant manner via a novel, entirely serverless architecture. By taking advantage of recent developments in serverless parallel computing and selective data retrieval, the website is able to offer users the ability to visualize up to thirty 4.5 Mb DNA sequences simultaneously using one of five supported methods and to export these visualizations in a variety of publication-ready formats. \u00c2\u00a9 2019 The Author(s) 2019.",
      "authors": [
        "Lee, B.D.",
        "Timony, M.A.",
        "Ruiz, P."
      ],
      "categories": null,
      "citations": 5,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1093/nar/gkz404",
      "keywords": [],
      "number_of_pages": null,
      "pages": "W20-W25",
      "publication": {
        "category": "Journal",
        "cite_score": 23.5,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "03051048",
        "publisher": "Oxford University Press",
        "sjr": 9.008,
        "snip": 4.779,
        "subject_areas": [
          "Genetics"
        ],
        "title": "Nucleic Acids Research"
      },
      "publication_date": "2019-07-01",
      "selected": null,
      "title": "DNAvisualization.org: A serverless web tool for DNA sequence visualization",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85069237820&origin=inward"
      ]
    },
    {
      "abstract": "The proceedings contain 27 papers. The topics discussed include: living on the edge: serverless computing and the cost of failure resiliency; computing node selection for location-based service in NDN networks; virtual wires: rethinking WiFi networks; H2NDN: supporting connected vehicle applications with hierarchical hyperbolic NDN; integration of oneM2M in inter-IoT\u00e2\u0080\u0099s platform of platforms; resource optimization in visible light communication for Internet of things; and securing health-related data transmission using ECG and named data networks.",
      "authors": [],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781728114347",
        "issn": "19440367",
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "IEEE Workshop on Local and Metropolitan Area Networks"
      },
      "publication_date": "2019-07-01",
      "selected": null,
      "title": "25th IEEE International Symposium on Local and Metropolitan Area Networks, LANMAN 2019",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85073170301&origin=inward"
      ]
    },
    {
      "abstract": "To build a high-resilient and low-latency IoT system, it is a must to utilize various cloud computing resources available in different service regions owned by different providers, and obtaining latency information is the key for the success. In this paper, we present the design and implementation of a lightweight latency measurement service that can collect latency data across cloud service regions and providers. Preliminary data has been collected from six U.S. regions owned by AWS and Azure, and useful insights from the data are also reported in this paper. \u00c2\u00a9 2019 IEEE.",
      "authors": [
        "Vu, T.",
        "Mediran, C.J.",
        "Peng, Y."
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1109/SERVICES.2019.00105",
      "keywords": [
        "IoT",
        "Cross region",
        "Latency measurement",
        "Cross provider",
        "Serverless computing"
      ],
      "number_of_pages": 2,
      "pages": "364-365",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781728138510",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings - 2019 IEEE World Congress on Services, SERVICES 2019"
      },
      "publication_date": "2019-07-01",
      "selected": null,
      "title": "Measurement and observation of cross-provider cross-region latency for cloud-based IoT systems",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85072765180&origin=inward"
      ]
    },
    {
      "abstract": "Serverless implementation for a semantic e-science framework (SSe-SF) is all about pushing code to a compute service and networking with third party services and APIs to get the work done. The underlying infrastructure both hardware and software are hidden from the user. Serverless semantic e-science framework (SSe-SF) includes Knowledge Search and Navigation, Identity Management, URI/ Content Negotiation, RDF & RDF Schema annotated information resources, Shared Ontologies, Read-only Onto-Repository & Vocabulary, Onto-learning and merging, Semantic reasoners and Semantic data storage. SSe-SF is applied on computing the Outcome bases education attainment (OBE) calculation. \u00c2\u00a9 BEIESP.",
      "authors": [
        "Rubin Jose, T.",
        "Sojan Lal, P."
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.35940/ijrte.B1230.0782S319",
      "keywords": [
        "Ontology",
        "Serverless architecture",
        "Ontology engineering",
        "Linked data",
        "Semantic web",
        "eScience",
        "Scientific data representation"
      ],
      "number_of_pages": 5,
      "pages": "1231-1235",
      "publication": {
        "category": "Journal",
        "cite_score": null,
        "is_potentially_predatory": true,
        "isbn": null,
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "International Journal of Recent Technology and Engineering"
      },
      "publication_date": "2019-07-01",
      "selected": null,
      "title": "Research on E-science-serverless semantic E-science framework (SSE-SF)",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85071237437&origin=inward"
      ]
    },
    {
      "abstract": "[No abstract available]",
      "authors": [
        "Meng, F.",
        "Cao, D."
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1109/SERVICES.2019.00053",
      "keywords": [],
      "number_of_pages": 1,
      "pages": "197",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781728138510",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings - 2019 IEEE World Congress on Services, SERVICES 2019"
      },
      "publication_date": "2019-07-01",
      "selected": null,
      "title": "1st IEEE workshop on serverless computing frameworks and services (SWoSC 2019) Message from the Workshop Chairs",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85072784312&origin=inward"
      ]
    },
    {
      "abstract": "The study is aimed at developing an information system for the Students Activity Unit (SAU) of the Reasoning Division based on the Android and mobile Backend as a Service mBaaS and finding out the quality of the system on the aspects of functional suitability, compatibility, usability, and performance efficiency on the ISO 25010 criteria. The study was a research and development (R&D) project. For the research method, the study used the rational unified process RUP model for software development. The developed information system satisfied the ISO 25010 quality standard for all the required criteria. On the function suitability aspect, the system reached 100% percentage fulfilling the AQuA quality standard; on the compatibility aspect 89.99%; and on the usablity aspect 82.83% (\u00e2\u0080\u009chighly feasible\u00e2\u0080\u009d). On the performance efficiency aspect the system showed a response average of 3.46 seconds (\u00e2\u0080\u009chighly satisfying\u00e2\u0080\u009d). \u00c2\u00a9 2019 Association for Computing Machinery.",
      "authors": [
        "Mahali, M.I.",
        "Putro, N.H.P.S.",
        "Sumaryanto",
        "Rahmat, B."
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1145/3348400.3348402",
      "keywords": [
        "SAU",
        "MBaaS",
        "Android",
        "RUP",
        "Information system"
      ],
      "number_of_pages": 7,
      "pages": "6-12",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450371674",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "ACM International Conference Proceeding Series"
      },
      "publication_date": "2019-06-28",
      "selected": null,
      "title": "Android and FIREBASE mBaaS-based information system design of students activity unit (SAU) using the rational unified process (RUP) Method",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85073148535&origin=inward"
      ]
    },
    {
      "abstract": "Digital Media Distribution platforms are necessary for delivering multimedia content. Classic client-server approaches and 3-tier architectures are not optimized for media processing. In this paper, we present a serverless modern digital media platform for media content distribution based on the Amazon Web Services (AWS) cloud platform. The proposed platform uses CloudFront for static content cashing, S3 for data storage, Lambda for the dynamic content and Elastic Transcoder for media format conversion. This platform offers reduced loading times and efficient media format conversion/distribution. \u00c2\u00a9 2019 IEEE.",
      "authors": [
        "Marius Alexandru Dinca",
        "Nicoleta Angelescu",
        "Radu Dragomir",
        "Dan Constantin Puchianu",
        "Ion Caciula"
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/ECAI46879.2019.9042112",
      "keywords": [
        "serverless architecture",
        "video transcoding",
        "Amazon AWS cloud"
      ],
      "number_of_pages": 4,
      "pages": "1-4",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-7281-1625-9",
        "issn": null,
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings of the 11th International Conference on Electronics, Computers and Artificial Intelligence, ECAI 2019"
      },
      "publication_date": "2019-06-27",
      "selected": null,
      "title": "Digital Media Distribution Platform Using Amazon Web Services",
      "urls": [
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9042112",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85084552507&origin=inward"
      ]
    },
    {
      "abstract": "When processing IoT data on a large scale, the cloud is no longer sufficient and it has been proposed to move parts of the computation closer to the IoT devices - the so-called fog computing. There are also three basic processing paradigms today that lend themselves to IoT data processing: stream and batch processing as well as serverless functions. Where to place which part of the data processing and which processing paradigm to choose, however, is often unclear. In this paper, we give an overview of all three paradigms as well as different data processing use-cases. We use these to derive a decision framework which provides general guidelines for placement of processing and the respectively suitable paradigm when designing a large-scale IoT data processing architecture. \u00c2\u00a9 2019 IEEE.",
      "authors": [
        "Tobias Pfandzelter",
        "David Bermbach"
      ],
      "categories": null,
      "citations": 5,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/ICFC.2019.00033",
      "keywords": [
        "IoT",
        "Edge Computing",
        "Data Analytics",
        "Event Processing",
        "Fog Computing",
        "Cloud Computing"
      ],
      "number_of_pages": 6,
      "pages": "201-206",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-7281-3237-2",
        "issn": null,
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings - 2019 IEEE International Conference on Fog Computing, ICFC 2019"
      },
      "publication_date": "2019-06-24",
      "selected": null,
      "title": "IoT Data Processing in the Fog: Functions, Streams, or Batch Processing?",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85072937489&origin=inward",
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=8822056"
      ]
    },
    {
      "abstract": "Motivated by the growth of Internet of Things (IoT) technologies and the volumes and velocity of data that they can and will produce, we investigate automated data repair for event-driven, IoT applications. IoT devices are heterogeneous in their hardware architectures, software, size, cost, capacity, network capabilities, power requirements, etc. They must execute in a wide range of operating environments where failures and degradations of service due to hardware malfunction, software bugs, network partitions, etc. cannot be immediately remediated. Further, many of these failure modes cause corruption in the data that these devices produce and in the computations \"downstream\" that depend on this data. To \"repair\" corrupted data from its origin through its computational dependencies in a distributed IoT setting, we explore SANS-SOUCI - a system for automatically tracking causal data dependencies and re-initiating dependent computations in event-driven IoT deployment frameworks. SANS-SOUCI presupposes an event-driven programming model based on cloud functions, which we extend for portable execution across IoT tiers (device, edge, cloud). We add fast, persistent, append-only storage and versioning for efficient data robustness and durability. SANS-SOUCI records events and their causal dependencies using a distributed event log and repairs applications dynamically, across tiers via replay. We evaluate SANS-SOUCI using a portable, open source, distributed IoT platform, example applications, and microbenchmarks. We find that SANS-SOUCI is able to perform repair for both software (function) and sensor produced data corruption with very low overhead. \u00c2\u00a9 2019 ACM.",
      "authors": [
        "Lin, W.-T.",
        "Bakir, F.",
        "Krintz, C.",
        "Wolski, R.",
        "Mock, M."
      ],
      "categories": null,
      "citations": 2,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1145/3328905.3329511",
      "keywords": [
        "Replay",
        "Serverless",
        "IoT",
        "Cloud functions"
      ],
      "number_of_pages": 12,
      "pages": "139-150",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450367943",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "DEBS 2019 - Proceedings of the 13th ACM International Conference on Distributed and Event-Based Systems"
      },
      "publication_date": "2019-06-24",
      "selected": null,
      "title": "Data repair for distributed, event-based IoT applications",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85074405742&origin=inward"
      ]
    },
    {
      "abstract": "The emergence of real-time and data-intensive applications empowered by mobile computing and IoT devices is challenging the success of centralized data centers, and fostering the adoption of the paradigm of fog/edge computing. Differently from cloud data centers, fog nodes are geographically distributed in proximity to data prosumers, taking advantage of the emerging wireless communication technologies and mobile networks. The limited resources of densely distributed fog nodes call for their efficient use by hosted applications and services. To address this challenge, and the needs of different application scenarios, this paper proposes a serverless platform for edge computing. It starts motivating the adoption of a serverless architecture. Then, it presents the services and mechanisms that are the building blocks of a \\textit{Serverless Edge Platform}. The paper also proposes a prototype platform and its assessment. Obtained results demonstrate the feasibility of the proposed solution for satisfying different application requirements in diverse deployment configurations of heterogeneous fog nodes. \u00c2\u00a9 2019 IEEE.",
      "authors": [
        "Luciano Baresi",
        "Danilo Filgueira Mendon\u00e7a"
      ],
      "categories": null,
      "citations": 10,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/ICFC.2019.00008",
      "keywords": [
        "fog-computing",
        "latency-sensitive",
        "serverless-computing",
        "edge-computing",
        "data-intensive"
      ],
      "number_of_pages": 10,
      "pages": "1-10",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-7281-3237-2",
        "issn": null,
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings - 2019 IEEE International Conference on Fog Computing, ICFC 2019"
      },
      "publication_date": "2019-06-24",
      "selected": null,
      "title": "Towards a Serverless Platform for Edge Computing",
      "urls": [
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=8821843",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85072937530&origin=inward"
      ]
    },
    {
      "abstract": "The growing demand for video processing and the advantages in scalability and cost reduction brought by the emerging serverless computing have attracted significant attention in serverless computing powered video processing. However, how to implement and configure serverless functions to optimize the performance and cost of video processing applications remains unclear. In this paper, we explore the configuration and implementation schemes of typical video processing functions deployed to the serverless platforms and quantify their influence on the execution duration and monetary cost from a developer's perspective. Our measurement reveals that memory configuration is non-trivial. Dynamic profiling of workloads is necessary to find the best memory configuration. Moreover, compared with calling external video processing APIs, implementing these services locally in serverless functions can be competitive. We also find that the performance of video processing applications could be affected by the underlying infrastructure. Our work provides guidelines for further function-level optimization and complements the existing measurement studies for both serverless computing and video processing. \u00c2\u00a9 2019 Association for Computing Machinery.",
      "authors": [
        "Zhang, M.",
        "Zhu, Y.",
        "Zhang, C.",
        "Liu, J."
      ],
      "categories": null,
      "citations": 8,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1145/3304112.3325608",
      "keywords": [
        "Video processing",
        "Serverless computing",
        "Serverless functions"
      ],
      "number_of_pages": 6,
      "pages": "61-66",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450362993",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings of the 29th ACM Workshop on Network and Operating Systems Support for Digital Audio and Video, NOSSDAV 2019"
      },
      "publication_date": "2019-06-21",
      "selected": null,
      "title": "Video processing with serverless computing: A measurement study",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85069187649&origin=inward"
      ]
    },
    {
      "abstract": "While significant advances have been made towards realizing self-tuning cloud caches, existing products still require manual tuning. These systems are built to serve requests extremely fast and anything that consumes resources not directly related to the request-serving control path is avoided. We show that severless computing platforms can be leveraged to solve complex optimization problems that arise during self-tuning loops, and thus can be used to optimize resources in cloud caches, for free. To show that our approach is feasible and useful, we implement SPREDS (Self-Partitioning REDis), a modified version of Redis that optimizes memory management in the multi-instance Redis scenario. Through this case study and cost analysis, we make a case for implementing the controller of autonomic systems using a serverless computing approach. \u00c2\u00a9 2019 IEEE.",
      "authors": [
        "Xavier Andrade",
        "Jorge Cedeno",
        "Edwin Boza",
        "Harold Aragon",
        "Cristina Abad",
        "Jorge Murillo"
      ],
      "categories": null,
      "citations": 3,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/FAS-W.2019.00044",
      "keywords": [
        "cloud cache",
        "memory partitioning",
        "self partitoning",
        "self tuning"
      ],
      "number_of_pages": 6,
      "pages": "140-145",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-7281-2407-0",
        "issn": null,
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings - 2019 IEEE 4th International Workshops on Foundations and Applications of Self* Systems, FAS*W 2019"
      },
      "publication_date": "2019-06-16",
      "selected": null,
      "title": "Optimizing Cloud Caches For Free: A Case for Autonomic Systems with a Serverless Computing Approach",
      "urls": [
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=8792007",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85071488776&origin=inward"
      ]
    },
    {
      "abstract": "The growth of cloud services leads to more and more data centers that are increasingly larger and consume considerable amounts of power. To increase energy efficiency, informed decisions on workload placement and provisioning are essential. Micro-services and the upcoming serverless platforms with more granular deployment options exacerbate this problem. For this reason, knowing the power consumption of the deployed application becomes crucial, providing the necessary information for autonomous decision making. However, the actual power draw of a server running a specific application under load is not available without specialized measurement equipment or power consumption models. Yet, granularity is often only down to machine level and not application level. In this paper, we propose a monitoring and modeling approach to estimate power consumption on an application function level. The model uses performance counters that are allocated to specific functions to assess their impact on the total power consumption. Hence our model applies to a large variety of servers and for micro-service and serverless workloads. Our model uses an additional correction to minimize falsely allocated performance counters and increase accuracy. We validate the proposed approach on real hardware with a dedicated benchmarking application. The evaluation shows that our approach can be used to monitor application power consumption down to the function level with high accuracy for reliable workload provisioning and placement decisions. \u00c2\u00a9 2019 IEEE.",
      "authors": [
        "Norbert Schmitt",
        "Lukas Iffl\u00e4nder",
        "Andr\u00e9 Bauer",
        "Samuel Kounev"
      ],
      "categories": null,
      "citations": 2,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/ICAC.2019.00018",
      "keywords": [
        "DevOps",
        "code offloading",
        "micro-services",
        "Energy efficiency",
        "serverless"
      ],
      "number_of_pages": 10,
      "pages": "63-72",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-7281-2412-4",
        "issn": "2474-0764",
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings - 2019 IEEE International Conference on Autonomic Computing, ICAC 2019"
      },
      "publication_date": "2019-06-16",
      "selected": null,
      "title": "Online Power Consumption Estimation for Functions in Cloud Applications",
      "urls": [
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=8831214",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85073205512&origin=inward"
      ]
    },
    {
      "abstract": "Serverless computing and function execution using cloud computing services are currently the subject considerable attention from both academia and industry. One of the reasons for the success of serverless computing is its straightforward interface that allows users to control the size of the memory allocated for the run-time of a function. However, this approach may result in the abstraction of too much information, and users cannot predict how their applications will perform, especially for the network resource. To address this issue, we evaluated several aspects of network resource performance. Despite the general belief, the variation of serverless applications' network performance is quite significant, and the ability to isolate network resource allocation during concurrent execution is rarely provided by service providers. Based on the results presented in this paper, we insist that network resource performance of functional execution models should be more visible and predictable, in order to expand the applications of serverless computing. \u00c2\u00a9 2019 IEEE.",
      "authors": [
        "Jeongchul Kim",
        "Jungae Park",
        "Kyungyong Lee"
      ],
      "categories": null,
      "citations": 5,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/FAS-W.2019.00051",
      "keywords": [
        "serverless computing",
        "network",
        "FaaS"
      ],
      "number_of_pages": 6,
      "pages": "182-187",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-7281-2407-0",
        "issn": null,
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings - 2019 IEEE 4th International Workshops on Foundations and Applications of Self* Systems, FAS*W 2019"
      },
      "publication_date": "2019-06-16",
      "selected": null,
      "title": "Network Resource Isolation in Serverless Cloud Function Service",
      "urls": [
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=8791958",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85071503411&origin=inward"
      ]
    },
    {
      "abstract": "The serverless computing paradigm promises increased development productivity by abstracting the underlying hardware infrastructure and software runtime when building distributed cloud applications. However, composing a serverless application consisting of many tiny functions is still a cumbersome and inflexible process due to the lack of a unified source code view and strong coupling to non-standardized function-level interfaces for code and configuration. In our vision, developers can focus on writing readable source code in a logical structure, which then gets transformed into an optimized multi-function serverless orchestration. Our idea involves transpilation (i.e., source-to-source transformation) based on an optimization model (e.g., cost optimization) by dynamically deciding which set of methods will be grouped into individual deployment units. A successful implementation of our vision would enable a broader range of serverless applications and allow for dynamic deployment optimization based on monitoring runtime metrics. Further, we would expect increased developer productivity by using more familiar abstractions and facilitating clean coding practices and code reuse. \u00c2\u00a9 2019 IEEE.",
      "authors": [
        "Joel Scheuner",
        "Philipp Leitner"
      ],
      "categories": null,
      "citations": 1,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/FAS-W.2019.00031",
      "keywords": [
        "orchestration",
        "FaaS",
        "serverless",
        "transpiling"
      ],
      "number_of_pages": 2,
      "pages": "72-73",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-7281-2407-0",
        "issn": null,
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings - 2019 IEEE 4th International Workshops on Foundations and Applications of Self* Systems, FAS*W 2019"
      },
      "publication_date": "2019-06-16",
      "selected": null,
      "title": "Transpiling Applications into Optimized Serverless Orchestrations",
      "urls": [
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=8791968",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85071473899&origin=inward"
      ]
    },
    {
      "abstract": " Serverless computing -- an emerging cloud-native paradigm for the deployment\nof applications and services -- represents an evolution in cloud application\ndevelopment, programming models, abstractions, and platforms. It promises a\nreal pay-as-you-go billing (with millisecond granularity) with no waste of\nresources, and lowers the bar for developers by asking them to delegate all\ntheir operational complexity and scalability to the cloud provider. Delivering\non these promises comes at the expense of restricting functionality. In this\narticle we provide an overview of serverless computing, its evolution, general\narchitecture, key characteristics and uses cases that made it an attractive\noption for application development. Based on discussions with academics and\nindustry experts during a series of organized serverless computing workshops\n(WoSC), we also identify the technical challenges and open problems.\n",
      "authors": [
        "Castro, Paul",
        "Ishakian, Vatche",
        "Muthusamy, Vinod",
        "Slominski, Aleksander"
      ],
      "categories": null,
      "citations": null,
      "comments": null,
      "databases": [
        "arXiv"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": null,
      "publication_date": "2019-06-07",
      "selected": null,
      "title": "The server is dead, long live the server: Rise of Serverless Computing, Overview of Current State and Future Trends in Research and Industry",
      "urls": [
        "http://arxiv.org/pdf/1906.02888v1",
        "http://arxiv.org/abs/1906.02888v1",
        "https://arxiv.org/pdf/1906.02888"
      ]
    },
    {
      "abstract": "Summary We detail the application of cloud technology to Chevron&apos;s seismic data repository, share the applicable learnings and highlight areas of workflow evolution that delivered value. The aim of the project, run as a piloted field trial, was to couple the transformative capability of public cloud services with subsurface data. The learnings shared in this paper are designed to inform and assist other subsurface data custodians whether they are energy companies, national data repositories, service companies or academia. Cloud technology enables us to reduce seismic data duplication to a single data version which can be accessed securely by all appropriate stakeholders. We discuss a highly automated, scalable data migration process which included seismic ingestion, machine learning and serverless architecture. This automated the data management process, progressing data from loading to global analysis in minutes. The project has provided access to subsurface data anytime, anywhere and on any device, delivering a more accessible data environment at lower costs and connecting via an API to traditional workflows. By approaching the subsurface data challenge in an innovative way, this project has provided multiple learnings to share and built a greater understanding of the value case for faster adoption of public cloud infrastructure.",
      "authors": [
        "S. Ashley",
        "A. Gray",
        "C. Jones",
        "J. Nicholson",
        "J. Selvage",
        "M. Sohail",
        "K. Stewart"
      ],
      "categories": null,
      "citations": 1,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.3997/2214-4609.201900773",
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9789462822894",
        "issn": "2214-4609",
        "publisher": "European Association of Geoscientists & Engineers",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "81st EAGE Conference and Exhibition 2019"
      },
      "publication_date": "2019-06-03",
      "selected": null,
      "title": "Sharing Learnings: The Methodology, Optimisation and Benefits of Moving Subsurface Data to the Public Cloud",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85088067716&origin=inward"
      ]
    },
    {
      "abstract": "Our society is increasingly solving complex problems through the use of graph processing. Existing graph processing systems focus on performance, which allows addressing ever-larger and more complex problems. They also require uncommon expertise to properly deploy and utilize. To make graph processing generally accessible-to small and medium enterprises and institutions, to common research groups, to individuals-, in this work we design and implement the Graphless graph-processing system. Graphless is based on the serverless paradigm, which proposes to simplify computing by letting developers only focus on small, stateless functions, which are deployed and managed automatically. We address with Graphless the key challenge of combining the stateless functions assumed by serverless computing with the (opposite) data-intensive nature of graph processing. Graphless tackles this challenge through an architectural approach that allows it to deploy with push or with pull operation, and a collection of backend services, such as an orchestrator and a memory-as-a-service component. We implement Graphless and conduct with it real-world experiments using Amazon Lambda for cloud-based serverless resources. Using the LDBC Graphalytics benchmark, we analyze Graphless, and compare its performance and operational cost with the graph-processing systems Apache Giraph (big data domain) and GraphMat (HPC). Overall, we show evidence Graphless provides performance and cost-efficiency similar to Giraph, for algorithms that can benefit from fine-grained elasticity, and lower than GraphMat, but is architecturally easier to deploy, and provides both push and pull operation. \u00c2\u00a9 2019 IEEE.",
      "authors": [
        "Lucian Toader",
        "Alexandru Uta",
        "Ahmed Musaafir",
        "Alexandru Iosup"
      ],
      "categories": null,
      "citations": 5,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/ISPDC.2019.00012",
      "keywords": [
        "Function as a Service",
        "graph processing",
        "elasticity",
        "serverless"
      ],
      "number_of_pages": 8,
      "pages": "66-73",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-7281-3802-2",
        "issn": "2379-5352",
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings - 2019 18th International Symposium on Parallel and Distributed Computing, ISPDC 2019"
      },
      "publication_date": "2019-06-03",
      "selected": null,
      "title": "Graphless: Toward Serverless Graph Processing",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85071513030&origin=inward",
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=8790945"
      ]
    },
    {
      "abstract": "Cloud vendors offer a variety of serverless technologies promising high availability and dynamic scaling while reducing operational and maintenance costs. One such technology, serverless computing, or function-as-a-service (FaaS), is advertised as a good candidate for web applications, data-processing, or backend services, where you only pay for usage. Unlike virtual machines (VMs), they come with automatic resource provisioning and allocation, providing elastic and automatic scaling. We present the results from our investigation of a specific serverless candidate, Web Application Programming Interface or Web API, deployed on virtual machines and as function(s)-as-a-service. We contrast these deployments by varying the number of concurrent users for measuring response times and costs. We found no significant response time differences between deployments when VMs are configured for the expected load, and test scenarios are within the FaaS hardware limitations. Higher numbers of concurrent users or unexpected user growths are effortlessly handled by FaaS, whereas additional labor must be invested in VMs for equivalent results. We identified that despite the advantages serverless computing brings, there is no clear choice between serverless or virtual machines for a Web API application because one needs to carefully measure costs and factor-in all components that are included with FaaS.",
      "authors": [
        "Ivan, Cosmina",
        "Vasile, Radu",
        "Dadarlat, Vasile"
      ],
      "categories": null,
      "citations": 1,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.3390/computers8020050",
      "keywords": [
        "Web API",
        "Response time",
        "Serverless",
        "Function-as-a-Service"
      ],
      "number_of_pages": null,
      "pages": null,
      "publication": {
        "category": "Journal",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": null,
        "publisher": "Multidisciplinary Digital Publishing Institute",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Computers"
      },
      "publication_date": "2019-06-01",
      "selected": null,
      "title": "Serverless Computing: An Investigation of Deployment Environments for Web APIs",
      "urls": [
        "https://www.mdpi.com/2073-431X/8/2/50/pdf",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85073419848&origin=inward"
      ]
    },
    {
      "abstract": "At the core of the value proposition of edge computing is the ability to put computation close enough to the data sources, on demand. However, the data sources, computational infrastructure and software services needed to come together to power emerging and future edge computing applications are fragmented across different stakeholders, each with their own incentives, policies, and constraints on resources they can afford. This fragmentation limits the ability of edge computing to guarantee to applications and data the edge which will deliver the desired benefit. In this paper, we present our vision for an Edge Exchange, a decentralized directory service for a multi-stakeholder edge, as a path forward to enabling applications to be deployed across the best available edge resources, while still providing each stakeholder with controls regarding their resource use and sharing policies. \u00c2\u00a9 2019 IEEE.",
      "authors": [
        "Bhardwaj, K.",
        "Gavrilovska, A.",
        "Kolesnikov, V.",
        "Saunders, M.",
        "Yoon, H.",
        "Bondre, M.",
        "Babu, M.",
        "Walsh, J."
      ],
      "categories": null,
      "citations": 2,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1109/IC2E.2019.00030",
      "keywords": [
        "Decentralization",
        "Serverless",
        "Performance",
        "Orchestration",
        "Edge exchange",
        "Distributed system",
        "Edge computing",
        "Cloud"
      ],
      "number_of_pages": 12,
      "pages": "156-167",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781728102184",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings - 2019 IEEE International Conference on Cloud Engineering, IC2E 2019"
      },
      "publication_date": "2019-06-01",
      "selected": null,
      "title": "Addressing the fragmentation problem in distributed and decentralized edge computing: A vision",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85071474284&origin=inward"
      ]
    },
    {
      "abstract": "Today, Serverless computing gathers pace and attention in the cloud computing area. The abstraction of operational tasks combined with the auto-scaling pro",
      "authors": [
        "Johannes Manner",
        "Stefan Kolb",
        "Guido Wirtz"
      ],
      "categories": null,
      "citations": 4,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1007/s00450-019-00398-6",
      "keywords": [
        "Debugging",
        "Serverless functions",
        "Testing",
        "Monitoring",
        "FaaS",
        "AWS Lambda"
      ],
      "number_of_pages": 6,
      "pages": "99-104",
      "publication": {
        "category": "Journal",
        "cite_score": 6.7,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "25248510",
        "publisher": "Springer Berlin",
        "sjr": 0.519,
        "snip": 1.241,
        "subject_areas": [
          "Information Systems",
          "Computer Networks and Communications",
          "Computer Science (miscellaneous)",
          "Hardware and Architecture",
          "Software",
          "Computational Theory and Mathematics"
        ],
        "title": "SICS Software-Intensive Cyber-Physical Systems"
      },
      "publication_date": "2019-06-01",
      "selected": null,
      "title": "Troubleshooting Serverless functions: a combined monitoring and debugging approach",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85066128325&origin=inward",
        "https://link.springer.com/content/pdf/10.1007/s00450-019-00398-6.pdf"
      ]
    },
    {
      "abstract": "Serverless architectures are becoming computing standard and best practice. It is inevitable that more and more software systems will embrace the trend. Our tool toLambda provides automatic conversion of Java monolith application code into AWS Lambda Node.js microservices. During the refactoring, we provide assorted useful transformations of the original code and generate all the necessary artifacts to deploy the generated functions to the Cloud. In this paper we will describe the challenges we have faced including parsing, transformation, performance and testing. We will also underline the advantages of serverless compared to other architectures. Our approach will help to migrate systems to serverless microservices easier and faster. \u00c2\u00a9 2019 IEEE.",
      "authors": [
        "Alex Kaplunovich"
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/IWoR.2019.00008",
      "keywords": [
        "Parsing",
        "Automation",
        "AWS",
        "Refactoring",
        "Serverless",
        "Java",
        "Node.js",
        "Transformation",
        "FaaS",
        "Lambda",
        "Microservices",
        "Cloud",
        "JavaScript"
      ],
      "number_of_pages": 8,
      "pages": "1-8",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-7281-2271-7",
        "issn": null,
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings - 2019 IEEE/ACM 3rd International Workshop on Refactoring, IWOR 2019"
      },
      "publication_date": "2019-05-28",
      "selected": null,
      "title": "ToLambda--Automatic Path to Serverless Architectures",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85073422103&origin=inward",
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=8844428"
      ]
    },
    {
      "abstract": "Data leek issues represents a very high or critical importance within the cloud developers. Given the tremendous growth of cloud computing in the past 3 years the authors of this paper believe that an analysis of the implementation of modern security solutions for data leaks and data protection is of the utmost importance. Authentication tokens, provided by several different cloud providers and third parties, are one of the most common and useful tools that developers have in order to secure their applications. The goal of this paper is to analyze how these tokens are currently used and to provide a solution in order to improve their implementation by reviewing their compatibility with novel security concepts or challenges such as data tagging, hybrid data security algorithms, microservices deployment using Docker or serverless applications. \u00c2\u00a9 2019 IEEE.",
      "authors": [
        "Vlad Bucur",
        "Ovidiu Stan",
        "Liviu C. Miclea"
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/CSCS.2019.00128",
      "keywords": [
        "Data-Tagging",
        "Data loss protection",
        "Multi-cloud storage",
        "Security token",
        "ID token",
        "Security audit",
        "Multi cloud security",
        "Web token",
        "Access token",
        "Computing resource sharing"
      ],
      "number_of_pages": 6,
      "pages": "720-725",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-7281-2332-5",
        "issn": "2379-0474",
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings - 2019 22nd International Conference on Control Systems and Computer Science, CSCS 2019"
      },
      "publication_date": "2019-05-28",
      "selected": null,
      "title": "Data Loss Prevention and Data Protection in Cloud Environments Based on Authentication Tokens",
      "urls": [
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=8744776",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85069194067&origin=inward"
      ]
    },
    {
      "abstract": "Serverless computing is a relatively new execution model where the cloud platform provider manages the allocation of resources for containerized functions dynamically. This evolving paradigm is called Function as a Service (FaaS). The statelessness of these functions enables the application to be scaled up elastically in the case of peak loads. They can be tested easily in isolation, but the behavior arising by integrating them to an application is both hard to predict and test. The parallel execution of the functions and the shift of its state to data storages can cause several workflows accessing the same data. These workflows are hard to detect, particularly for complex applications. Therefore, we suggest an approach for modelling an existing serverless application based on a specialized graph holding all relevant features. Our serverless-specific model can be applied during the whole life cycle of a complex application and offers a good basis for this specific class of applications. It helps to optimize an existing system by identifying hot spots, supports the generation of test cases and can be used to monitor an existing system. Furthermore, we show how the generation of the model can be automated by realizing a tool supporting Amazon's AWS Lambda. \u00c2\u00a9 2019 IEEE.",
      "authors": [
        "Stefan Winzinger",
        "Guido Wirtz"
      ],
      "categories": null,
      "citations": 4,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/MiSE.2019.00020",
      "keywords": [
        "Dependency graph",
        "Integration testing",
        "Model-driven testing",
        "FaaS",
        "Cloud functions",
        "Serverless computing"
      ],
      "number_of_pages": 7,
      "pages": "82-88",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-7281-2232-8",
        "issn": "2575-4467",
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings - 2019 IEEE/ACM 11th International Workshop on Modelling in Software Engineering, MiSE 2019"
      },
      "publication_date": "2019-05-26",
      "selected": null,
      "title": "Model-Based Analysis of Serverless Applications",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85074896024&origin=inward",
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=8877078"
      ]
    },
    {
      "abstract": "QoS (Quality of Service) is a series of widely used indicators for networked user-oriented online services such as SOAP/JSON based web services, serverless microservices or function services in the modern cloud market. Of which, response time and throughput are most important measurements which almost determine the whole user experience caused by underlying factors including network delay or congestion, fluctuating service computation performance at different system workload level, or constrained by cascading resource or service dependencies. It's valuable to accurately predict QoS indicators under complex scenarios and conditions combination from archived history service experience dataset. In this paper, two subsets of real-world dataset named WS-DREAM were used, which collected 339 users' records on 5825 web services. Based on related work and descriptive analysis, two QoS (response time and throughput) prediction models were proposed for classification and regression problems. A custom recurrent neural network(RNN) was proposed, which comprises stacked multiple LSTM(Long term and Short Term Memory) layers, several regularization techniques were used. Extensive experiments were conducted to verify the accuracy and efficiency of deep learning based approach comparing with 6 competitive machine learning approaches, including decision tree, AdaBoost, multilayer perceptron, XGBoost, LightGBM, and CatBoost. Results showed the prediction accuracy of most algorithms could reach more than 90%, and the proposed RNN based network showed a superior performance both at accuracy and efficiency than other approaches. \u00c2\u00a9 2019 IEEE.",
      "authors": [
        "Du Chen",
        "Ming Gao",
        "An Liu",
        "Mingxia Chen",
        "Zehui Zhang",
        "Yu Feng"
      ],
      "categories": null,
      "citations": 4,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/ICAIBD.2019.8837006",
      "keywords": [
        "deep learning",
        "QoS",
        "web service",
        "recurrent neural network",
        "LSTM"
      ],
      "number_of_pages": 8,
      "pages": "350-357",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-7281-0832-2",
        "issn": null,
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "2019 2nd International Conference on Artificial Intelligence and Big Data, ICAIBD 2019"
      },
      "publication_date": "2019-05-25",
      "selected": null,
      "title": "A Recurrent Neural Network Based Approach for Web Service QoS Prediction",
      "urls": [
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=8837006",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85073233661&origin=inward"
      ]
    },
    {
      "abstract": "Serverless computing revolutionizes cloud software by eliminating the need to manage the underlying infrastructure, while providing efficient scaling, performance and security isolation as well as usage metering. The goal of Runboxes is to bring the benefits of serverless computing to Interactive Computing, involving ad-hoc, stateful, resource-intensive tasks, whose resource demand is directly affected by the observed user behavior. We evaluate Runboxes in the context of cost-efficient hosting of sandbox programming environments for Computer Science students. \u00c2\u00a9 2019 Copyright held by the owner/author(s).",
      "authors": [
        "Glikson, A.",
        "Nie, S.",
        "Breitgand, D."
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1145/3319647.3325852",
      "keywords": [
        "Serverless",
        "Runbox",
        "Interactive computing",
        "Kubernetes"
      ],
      "number_of_pages": 1,
      "pages": "191",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450367493",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "SYSTOR 2019 - Proceedings of the 12th ACM International Systems and Storage Conference"
      },
      "publication_date": "2019-05-22",
      "selected": null,
      "title": "Runbox: Serverless interactive computing platform",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85067104301&origin=inward"
      ]
    },
    {
      "abstract": "The increasingly popular and novel Function-as-a-Service (FaaS) clouds allow users the deployment of single functions. Compared to Infrastructure-as-a-Service or Platform-as-a-Service, this enables providers even more aggressive and rigorous resource sharing and liberates customers from tedious maintenance tasks. However, as a crucial factor of cloud adoption, FaaS clouds need to provide security and privacy guarantees in order to allow sensitive data processing. In this paper, we investigate securing FaaS clouds for sensitive data processing, while respecting their new features, capabilities and benefits in a technology-aware manner. We start with the proposal of a generic approach for a JavaScript-based secure FaaS platform, then get more specific and discuss the implementation of two distinct approaches based on (a) a lightweight and (b) a high performance JavaScript engine. Our prototype implementation shows promising performance while efficiently utilising resources, thereby keeping the penalties of the added security low. \u00c2\u00a9 2019 Association for Computing Machinery.",
      "authors": [
        "Brenner, S.",
        "Kapitza, R."
      ],
      "categories": null,
      "citations": 10,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1145/3319647.3325825",
      "keywords": [
        "Serverless cloud",
        "Trusted function-as-a-service",
        "Intel SGX"
      ],
      "number_of_pages": 11,
      "pages": "33-43",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450367493",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "SYSTOR 2019 - Proceedings of the 12th ACM International Systems and Storage Conference"
      },
      "publication_date": "2019-05-22",
      "selected": null,
      "title": "Trust more, serverless",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85067091027&origin=inward"
      ]
    },
    {
      "abstract": "We introduce Clemmys, a security-first serverless platform that ensures confidentiality and integrity of users\u00e2\u0080\u0099 functions and data as they are processed on untrusted cloud premises, while keeping the cost of protection low. We provide a design for hardening FaaS platforms with Intel SGX\u00e2\u0080\u0094a hardware-based shielded execution technology. We explain the protocol that our system uses to ensure confidentiality and integrity of data, and integrity of function chains. To overcome performance and latency issues that are inherent in SGX applications, we apply several SGX-specific optimizations to the runtime system: we use SGXv2 to speed up the enclave startup and perform batch EPC augmentation. To evaluate our approach, we implement our design over Apache OpenWhisk, a popular serverless platform. Lastly, we show that Clemmys achieved same throughput and similar latency as native Apache OpenWhisk, while allowing it to withstand several new attack vectors. \u00c2\u00a9 2019 Association for Computing Machinery.",
      "authors": [
        "Trach, B.",
        "Oleksenko, O.",
        "Gregor, F.",
        "Bhatotia, P.",
        "Fetzer, C."
      ],
      "categories": null,
      "citations": 6,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1145/3319647.3325835",
      "keywords": [],
      "number_of_pages": 11,
      "pages": "44-54",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450367493",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "SYSTOR 2019 - Proceedings of the 12th ACM International Systems and Storage Conference"
      },
      "publication_date": "2019-05-22",
      "selected": null,
      "title": "CLEMMYS: Towards secure remote execution in FaAs",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85067111785&origin=inward"
      ]
    },
    {
      "abstract": "Cloud computing, together with all its boons, has taken the world of computing by a storm, reaping benefits across various domains. Introduction of serverless computing, and more precisely Function-as-a-Service (FaaS), removed many orchestration and maintenance issues that system designers were facing. This inspired an emerging field of research on utilization and optimization of serverless computing. Existing body of work on this topic is, to the best of authors knowledge, focused on using serverless functions (e.g. AWS Lambda, Google Cloud Functions) exclusively. Such functions suffer constraints in the context of their execution environment, time or available space. In this paper we present a more general approach that improves upon existing architectures that revolve around cloud functions. By leveraging AWS Fargate technology, we propose a fully serverless and infinitely scalable architecture that is based on producer-consumer pattern and can be shaped to satisfy wide range of requirements. As worker nodes, Docker containers are used, which helps avoid aforementioned constrains. This concept is put to use in a system for acquisition of high frequency data. \u00c2\u00a9 42nd International Convention on Information and Communication Technology, Electronics and Microelectronics, MIPRO 2019 - Proceedings. All rights reserved.",
      "authors": [
        "Ajdin Mujezinovi\u0107",
        "Vedran Ljubovi\u0107"
      ],
      "categories": null,
      "citations": 2,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.23919/MIPRO.2019.8756833",
      "keywords": [
        "scientific workflow",
        "cloud computing",
        "serverless architecture",
        "function-as-a-service"
      ],
      "number_of_pages": 5,
      "pages": "242-246",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-5386-9296-7",
        "issn": "2623-8764",
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "2019 42nd International Convention on Information and Communication Technology, Electronics and Microelectronics, MIPRO 2019 - Proceedings"
      },
      "publication_date": "2019-05-20",
      "selected": null,
      "title": "Serverless architecture for workflow scheduling with unconstrained execution environment",
      "urls": [
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=8756833",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85070323129&origin=inward"
      ]
    },
    {
      "abstract": "Cloud-based serverless computing is an increasingly popular computing paradigm. In this paradigm, different services have diverse computing requirements that justify deploying an inconsistently Heterogeneous Computing (HC) system to efficiently process them. In an inconsistently HC system, each task needed for a given service, potentially exhibits different execution times on each type of machine. An ideal resource allocation system must be aware of such uncertainties in execution times and be robust against them, so that Quality of Service (QoS) requirements of users are met. This research aims to maximize the robustness of an HC system utilized to offer a serverless computing system, particularly when the system is oversubscribed. Our strategy to maximize robustness is to develop a task pruning mechanism that can be added to existing task-mapping heuristics without altering them. Pruning tasks with a low probability of meeting their deadlines improves the likelihood of other tasks meeting their deadlines, thereby increasing system robustness and overall QoS. To evaluate the impact of the pruning mechanism, we examine it on various configurations of heterogeneous and homogeneous computing systems. Evaluation results indicate a considerable improvement (up to 35%) in the system robustness. \u00c2\u00a9 2019 IEEE.",
      "authors": [
        "Chavit Denninnart",
        "James Gentry",
        "Mohsen Amini Salehi"
      ],
      "categories": null,
      "citations": 4,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/IPDPSW.2019.00012",
      "keywords": [
        "Mapping Heuristic",
        "Serverless",
        "Scheduling",
        "Robustness",
        "Heterogeneous Computing (HC)",
        "Pruning"
      ],
      "number_of_pages": 10,
      "pages": "6-15",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-7281-3511-3",
        "issn": null,
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings - 2019 IEEE 33rd International Parallel and Distributed Processing Symposium Workshops, IPDPSW 2019"
      },
      "publication_date": "2019-05-20",
      "selected": null,
      "title": "Improving Robustness of Heterogeneous Serverless Computing Systems via Probabilistic Task Pruning",
      "urls": [
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=8778313",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85070390816&origin=inward"
      ]
    },
    {
      "abstract": "Stacked Denoising Autoencoders (SDA) are deep networks which have superior generative properties and therefore can be trained and retrained to learn the structure of a patient's heart beat signal with minimal training data. This approach is particularly useful in continuous remote devices because they gather large amounts of data for longer periods of time. Serverless applications are the desired way of building applications due to its cost effectiveness after advancements in commercially available serverless host providers like Amazon AWS. This work proposes a serverless architecture for the training and retraining of SDA, for classification of arrhythmias in a patient-specific manner. This work also proposes a technique for data parallelization in the serverless architecture to achieve a speedup of up-To 13x in training time. This work uses MIT-BIH Arrhythmia database. Retraining with this architecture shows high classification accuracies for Ventricular Ectopic Beats (VEB) (97.41%) and Supraventricular Ectopic Beats (SVEB) (98.77%). \u00c2\u00a9 2019 IEEE.",
      "authors": [
        "Michael Marefat",
        "Amit Juneja"
      ],
      "categories": null,
      "citations": 1,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/BHI.2019.8834566",
      "keywords": [
        "Remote Continuous Health Devices",
        "Retraining",
        "Serverless",
        "Deep Learning",
        "Arrhythmia Classification",
        "Stacked Denoising Autoencoders",
        "Patient Specific"
      ],
      "number_of_pages": 4,
      "pages": "1-4",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-7281-0849-0",
        "issn": "2641-3590",
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "2019 IEEE EMBS International Conference on Biomedical and Health Informatics, BHI 2019 - Proceedings"
      },
      "publication_date": "2019-05-19",
      "selected": null,
      "title": "Serverless Data Parallelization for Training and Retraining of Deep Learning Architecture in Patient-Specific Arrhythmia Detection",
      "urls": [
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=8834566",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85073011419&origin=inward"
      ]
    },
    {
      "abstract": "Fast deployment and execution of cloud functions in Function-as-a-Service (FaaS) platforms is critical, for example, for microservices architectures. However, functions that require large packages or libraries are bloated and start slowly. An optimization is to cache packages at the worker nodes instead of bundling them with the functions. However, existing FaaS schedulers are vanilla load balancers, agnostic of packages cached in response to prior function executions, and cannot properly reap the benefits of package caching. We study the case of package-aware scheduling and propose PASch, a novel scheduling algorithm that seeks package affinity during scheduling so that worker nodes can re-use execution environments with preloaded packages. PASch leverages consistent hashing and the power of 2 choices, while actively avoiding worker overload. We implement PASch in a new scheduler for the OpenLambda framework and evaluate it using simulations and real experiments. When using PASch instead of a least loaded balancer, tasks perceive an average speedup of 1.29x, and 80th percentile latency that is 23x faster. Furthermore, for the workload studied in this paper, PASch outperforms consistent hashing with bounded loads - a state-of-the-art load balancing algorithm - yielding a 1.3x average speedup, and a speedup of 1.5x at the 80th percentile. \u00c2\u00a9 2019 IEEE.",
      "authors": [
        "Gabriel Aumala",
        "Edwin Boza",
        "Luis Ortiz-Avil\u00e9s",
        "Gustavo Totoy",
        "Cristina Abad"
      ],
      "categories": null,
      "citations": 2,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/CCGRID.2019.00042",
      "keywords": [
        "performance",
        "cloud computing",
        "load balancing",
        "function as a service",
        "scheduling",
        "OpenLambda",
        "serverless computing",
        "data locality"
      ],
      "number_of_pages": 10,
      "pages": "282-291",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-7281-0913-8",
        "issn": null,
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings - 19th IEEE/ACM International Symposium on Cluster, Cloud and Grid Computing, CCGrid 2019"
      },
      "publication_date": "2019-05-14",
      "selected": null,
      "title": "Beyond Load Balancing: Package-Aware Scheduling for Serverless Platforms",
      "urls": [
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=8752939",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85069433686&origin=inward"
      ]
    },
    {
      "abstract": " The serverless computing ecosystem is growing due to interest by software\nengineers. Beside Function-as-a-Service (FaaS) and Backend-as-a-Service (BaaS)\nsystems, developer-oriented tools such as deployment and debugging frameworks\nas well as cloud function repositories enable the rapid creation of wholly or\npartially serverless applications. This study presents first insights into how\ncloud functions (Lambda functions) and composite serverless applications\noffered through the AWS Serverless Application Repository have evolved over the\ncourse of one year. Specifically, it outlines information on cloud function and\nfunction-based application offering models and descriptions, high-level\nimplementation statistics, and evolution including change patterns over time.\nSeveral results are presented in live paper style, offering hyperlinks to\ncontinuously updated figures to follow the evolution after publication date.\n",
      "authors": [
        "Spillner, Josef"
      ],
      "categories": null,
      "citations": null,
      "comments": "26 pages, 13 figures, 4 tables, live updates, unreviewed",
      "databases": [
        "arXiv"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": null,
      "publication_date": "2019-05-12",
      "selected": null,
      "title": "Quantitative Analysis of Cloud Function Evolution in the AWS Serverless Application Repository",
      "urls": [
        "https://arxiv.org/pdf/1905.04800",
        "http://arxiv.org/pdf/1905.04800v1",
        "http://arxiv.org/abs/1905.04800v1"
      ]
    },
    {
      "abstract": " Development of autonomous and self-driving vehicles requires agile and\nreliable services to manage hazardous road situations. Vehicular Network is the\nmedium that can provide high-quality services for self-driving vehicles. The\nmajority of service requests in Vehicular Networks are delay intolerant (e.g.,\nhazard alerts, lane change warning) and require immediate service. Therefore,\nVehicular Networks, and particularly, Vehicle-to-Infrastructure (V2I) systems\nmust provide a consistent real-time response to autonomous vehicles. During\npeak hours or disasters, when a surge of requests arrives at a Base Station, it\nis challenging for the V2I system to maintain its performance, which can lead\nto hazardous consequences. Hence, the goal of this research is to develop a V2I\nsystem that is robust against uncertain request arrivals. To achieve this goal,\nwe propose to dynamically allocate service requests among Base Stations. We\ndevelop an uncertainty-aware resource allocation method for the federated\nenvironment that assigns arriving requests to a Base Station so that the\nlikelihood of completing it on-time is maximized. We evaluate the system under\nvarious workload conditions and oversubscription levels. Simulation results\nshow that edge federation can improve robustness of the V2I system by reducing\nthe overall service miss rate by up to 45%.\n",
      "authors": [
        "Hussain, Razin Farhan",
        "Salehi, Mohsen Amini",
        "Semiari, Omid"
      ],
      "categories": null,
      "citations": null,
      "comments": null,
      "databases": [
        "arXiv"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": null,
      "publication_date": "2019-05-11",
      "selected": null,
      "title": "Serverless Edge Computing for Green Oil and Gas Industry",
      "urls": [
        "http://arxiv.org/abs/1905.04460v1",
        "https://arxiv.org/pdf/1905.04460",
        "http://arxiv.org/pdf/1905.04460v1"
      ]
    },
    {
      "abstract": " Cloud-based serverless computing is an increasingly popular computing\nparadigm. In this paradigm, different services have diverse computing\nrequirements that justify deploying an inconsistently Heterogeneous Computing\n(HC) system to efficiently process them. In an inconsistently HC system, each\ntask needed for a given service, potentially exhibits different execution times\non each type of machine. An ideal resource allocation system must be aware of\nsuch uncertainties in execution times and be robust against them, so that\nQuality of Service (QoS) requirements of users are met. This research aims to\nmaximize the robustness of an HC system utilized to offer a serverless\ncomputing system, particularly when the system is oversubscribed. Our strategy\nto maximize robustness is to develop a task pruning mechanism that can be added\nto existing task-mapping heuristics without altering them. Pruning tasks with a\nlow probability of meeting their deadlines improves the likelihood of other\ntasks meeting their deadlines, thereby increasing system robustness and overall\nQoS. To evaluate the impact of the pruning mechanism, we examine it on various\nconfigurations of heterogeneous and homogeneous computing systems. Evaluation\nresults indicate a considerable improvement (up to 35%) in the system\nrobustness.\n",
      "authors": [
        "Denninnart, Chavit",
        "Gentry, James",
        "Salehi, Mohsen Amini"
      ],
      "categories": null,
      "citations": null,
      "comments": "IPDPSW '19",
      "databases": [
        "arXiv"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": null,
      "publication_date": "2019-05-11",
      "selected": null,
      "title": "Improving Robustness of Heterogeneous Serverless Computing Systems Via Probabilistic Task Pruning",
      "urls": [
        "http://arxiv.org/abs/1905.04456v1",
        "http://arxiv.org/pdf/1905.04456v1",
        "https://arxiv.org/pdf/1905.04456"
      ]
    },
    {
      "abstract": "The proceedings contain 112 papers. The topics discussed include: an accurate tool for modeling, fingerprinting, comparison, and clustering of parallel applications based on performance counters; SmarTmem: intelligent management of transcendent memory in a virtualized server; data reliability and redundancy optimization of a secure multi-cloud storage under uncertainty of errors and falsifications; a portable GPU framework for SNP comparisons; towards a methodology for benchmarking edge processing frameworks; a fast local algorithm for track reconstruction on parallel architectures; towards native execution of deep learning on a leadership-class hpc system; improving robustness of heterogeneous serverless computing systems via probabilistic task pruning; and influence of tasks duration variability on task-based runtime schedulers.",
      "authors": [],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781728135106",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings - 2019 IEEE 33rd International Parallel and Distributed Processing Symposium Workshops, IPDPSW 2019"
      },
      "publication_date": "2019-05-01",
      "selected": null,
      "title": "Proceedings - 2019 IEEE 33rd International Parallel and Distributed Processing Symposium Workshops, IPDPSW 2019",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85070382430&origin=inward"
      ]
    },
    {
      "abstract": "Digital technologies are reshaping our world and are becoming an integral part of our being. It became obvious that in modern days digitalization in each industry is an irreversible process and the speed of adopting of such kind of technologies in an appropriate manner will determine the evolution and survival of any business. Digital technologies play a crucial role in any domain of our life: from simple everyday activities, to such important domains like security, safety and health. We are the witnesses of so-called 'Industry 4.0 Revolution' which is dominated by Artificial Intelligence and Cloud Architectures with related technologies. When we think about big change or (r) evolution, we are looking mostly for advantages only, but don't care about challenges and what is happening under the hood. The truth is that 'reality is distributed' and the things are getting more complex with each passing day. The information systems are dealing with more and more (huge) amount of data, nevertheless, a quick response (in milliseconds) is expected and no downtime is accepted. In this context, the challenges consist first of all in designing and implementing a reliable (doing well what it was designed for), performant (quick reaction time), low-overhead (non-blocking and optimal use of resources) and flexible (adding new features with minimal effect upon production environment) systems. To implement a system with such kind of features a specific programming models need to be used. In this paper is proposed an architectural approach aimed to ensure scalability and extensibility of a distributed information systems using not fresh, but still very actual concept like Actor Model and REST. Modern Event-Driven, Asynchronous and non-blocking programming models are used. \u00c2\u00a9 2019 IEEE.",
      "authors": [
        "Tovarnitchi, V.M."
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1109/CSCS.2019.00088",
      "keywords": [
        "Actor Model",
        "Serverless Computing",
        "Event-Driven Architecture",
        "Reactive Systems",
        "Environment Monitoring",
        "REST",
        "System Architecture",
        "Asynchronous",
        "Microservices",
        "Distributed Systems",
        "Cloud"
      ],
      "number_of_pages": 5,
      "pages": "484-488",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781728123318",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings - 2019 22nd International Conference on Control Systems and Computer Science, CSCS 2019"
      },
      "publication_date": "2019-05-01",
      "selected": null,
      "title": "Designing distributed, scalable and extensible system using reactive architectures",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85069199355&origin=inward"
      ]
    },
    {
      "abstract": "Traditional methods intended for education are no longer suitable for it, since they are unable to meet the students\u00e2\u0080\u0099 learning needs. M-learning is becoming a global interest. Various studies were conducted in many countries such as South Korea, Taiwan, UK, Malaysia, Serbia, European Union, and Saudi Arabia investigating student's readiness to adopt M-learning. Our study aims to introduce a new mobile bite-sized learning tool and to explore student's readiness to adopt M-learning and to investigate the motivational and acceptance factors related to it. We introduced our learning tool (IMSSAP), after-school interactive M-learning student support Application, to university students from different majors in Turkey. Analysis of the questionnaire data revealed that an easy to use tool with social media collaboration and sharing capabilities appears to be the vital factors that will motivate students to adopt M-learning. An improvement in the relation between the students, the teachers and the academic institution was obvious. Student's performance got much better added to better analytical and critical skills advancement. We have compared IMSSAP with another learning tool in the same class for clarity and reliability of the results. Highlights: A cloud-based mobile application built with Google-Firebase platform in the model of Backend as a Service (BaaS). Bite-sized learning methodology used to fulfill student's needs in a social circle era. Lightweight learning tool created for knowledge sharing and a learning process monitoring facility. \u00c2\u00a9 2019 Wiley Periodicals, Inc.",
      "authors": [
        "Khachan, A.M.",
        "\u00c3\u0096zmen, A."
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1002/cae.22096",
      "keywords": [
        "interactive software",
        "classroom demonstration",
        "undergraduate education",
        "education",
        "engineering"
      ],
      "number_of_pages": 10,
      "pages": "543-552",
      "publication": {
        "category": "Journal",
        "cite_score": 2.9,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "10613773",
        "publisher": "John Wiley & Sons Inc.",
        "sjr": 0.478,
        "snip": 1.14,
        "subject_areas": [
          "Engineering (all)",
          "Computer Science (all)",
          "Education"
        ],
        "title": "Computer Applications in Engineering Education"
      },
      "publication_date": "2019-05-01",
      "selected": null,
      "title": "IMSSAP: After-school interactive mobile learning student support application",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85059590894&origin=inward"
      ]
    },
    {
      "abstract": "The emergence of widespread cloudification and virtualisation promises increased flexibility, scalability, and programmability for the deployment of services by Vertical Service Providers (VSPs). This cloudification also improves service and network management, reducing the Capital and Operational Expenses (CAPEX, OPEX). A truly cloud-native approach is essential, since 5G will provide a diverse range of services - many requiring stringent performance guarantees while maximising flexibility and agility despite the technological diversity. This paper proposes a workflow based on the principles of build-to-order, Build-Ship-Run, and automation; following the Next Generation Platform as a Service (NGPaaS) vision. Through the concept of Reusable Functional Blocks (RFBs), an enhancement to Virtual Network Functions, this methodology allows a VSP to deploy and manage platforms and services, agnostic to the underlying technologies, protocols, and APIs. To validate the proposed workflow, a use case is also presented herein, which illustrates both the deployment of the underlying platform by the Telco operator and of the services that run on top of it. In this use case, the NGPaaS operator facilitates a VSP to provide Virtual Network Function as a Service (VNFaaS) capabilities for its end customers.",
      "authors": [
        "Mimidis-Kentis, Angelos",
        "Soler, Jose",
        "Veitch, Paul",
        "Broadbent, Adam",
        "Mobilio, Marco",
        "Riganelli, Oliviero",
        "Van Rossem, Steven",
        "Tavernier, Wouter",
        "Sayadi, Bessem"
      ],
      "categories": null,
      "citations": 4,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.3390/fi11050119",
      "keywords": [
        "5G",
        "CORD",
        "Telco-grade",
        "Cloud-native",
        "PaaS",
        "Cloud",
        "NFV",
        "SDN"
      ],
      "number_of_pages": null,
      "pages": null,
      "publication": {
        "category": "Journal",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": null,
        "publisher": "Multidisciplinary Digital Publishing Institute",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Future Internet"
      },
      "publication_date": "2019-05-01",
      "selected": null,
      "title": "The Next Generation Platform as A Service: Composition and Deployment of Platforms and Services",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85065926450&origin=inward",
        "https://www.mdpi.com/1999-5903/11/5/119/pdf"
      ]
    },
    {
      "abstract": " Distributed implementations of gradient-based methods, wherein a server\ndistributes gradient computations across worker machines, suffer from slow\nrunning machines, called 'stragglers'. Gradient coding is a coding-theoretic\nframework to mitigate stragglers by enabling the server to recover the gradient\nsum in the presence of stragglers. 'Approximate gradient codes' are variants of\ngradient codes that reduce computation and storage overhead per worker by\nallowing the server to approximately reconstruct the gradient sum. In this work, our goal is to construct approximate gradient codes that are\nresilient to stragglers selected by a computationally unbounded adversary. Our\nmotivation for constructing codes to mitigate adversarial stragglers stems from\nthe challenge of tackling stragglers in massive-scale elastic and serverless\nsystems, wherein it is difficult to statistically model stragglers. Towards\nthis end, we propose a class of approximate gradient codes based on balanced\nincomplete block designs (BIBDs). We show that the approximation error for\nthese codes depends only on the number of stragglers, and thus, adversarial\nstraggler selection has no advantage over random selection. In addition, the\nproposed codes admit computationally efficient decoding at the server. Next, to\ncharacterize fundamental limits of adversarial straggling, we consider the\nnotion of 'adversarial threshold' -- the smallest number of workers that an\nadversary must straggle to inflict certain approximation error. We compute a\nlower bound on the adversarial threshold, and show that codes based on\nsymmetric BIBDs maximize this lower bound among a wide class of codes, making\nthem excellent candidates for mitigating adversarial stragglers.\n",
      "authors": [
        "Kadhe, Swanand",
        "Koyluoglu, O. Ozan",
        "Ramchandran, Kannan"
      ],
      "categories": null,
      "citations": null,
      "comments": "Shorter version accepted in 2019 IEEE International Symposium on\n  Information Theory (ISIT)",
      "databases": [
        "arXiv"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": null,
      "publication_date": "2019-04-30",
      "selected": null,
      "title": "Gradient Coding Based on Block Designs for Mitigating Adversarial Stragglers",
      "urls": [
        "http://arxiv.org/abs/1904.13373v1",
        "https://arxiv.org/pdf/1904.13373",
        "http://arxiv.org/pdf/1904.13373v1"
      ]
    },
    {
      "abstract": "Serverless computing platforms allow developers to host single-purpose applications that automatically scale with demand. In contrast to traditional long-running applications on dedicated, virtualized, or container-based platforms, serverless applications are intended to be instantiated when called, execute a single function, and shut down when finished. State-of-the-art serverless platforms achieve these goals by creating a new container instance to host a function when it is called and destroying the container when it completes. This design allows for cost and resource savings when hosting simple applications, such as those supporting IoT devices at the edge of the network. However, the use of containers introduces some overhead which may be unsuitable for applications requiring low-latency response or hardware platforms with limited resources, such as those served by edge computing environments. In this paper, we present a nomenclature for characterizing server-less function access patterns which allows us to derive the basic requirements of a serverless computing runtime. We then propose the use of WebAssembly as an alternative method for running serverless applications while meeting these requirements. Finally, we demonstrate how a WebAssembly-based serverless platform provides many of the same isolation and performance guarantees of container-based platforms while reducing average application start times and the resources needed to host them. \u00c2\u00a9 2019 ACM.",
      "authors": [
        "Hall, A.",
        "Ramachandran, U."
      ],
      "categories": null,
      "citations": 30,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1145/3302505.3310084",
      "keywords": [
        "webassembly",
        "fog computing",
        "FaaS",
        "serverless",
        "edge computing",
        "function-as-a-service"
      ],
      "number_of_pages": 12,
      "pages": "225-236",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450362832",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "IoTDI 2019 - Proceedings of the 2019 Internet of Things Design and Implementation"
      },
      "publication_date": "2019-04-15",
      "selected": null,
      "title": "An execution model for serverless functions at the edge",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85066038506&origin=inward"
      ]
    },
    {
      "abstract": "Cloud services have recently started undergoing a major shift from monolithic applications, to graphs of hundreds of loosely-coupled microservices. Microservices fundamentally change a lot of assumptions current cloud systems are designed with, and present both opportunities and challenges when optimizing for quality of service (QoS) and utilization. In this paper we explore the implications microservices have across the cloud system stack. We first present Death- StarBench, a novel, open-source benchmark suite built with microservices that is representative of large end-to-end services, modular and extensible. DeathStarBench includes a social network, a media service, an e-commerce site, a banking system, and IoT applications for coordination control of UAV swarms. We then use DeathStarBench to study the architectural characteristics of microservices, their implications in networking and operating systems, their challenges with respect to cluster management, and their trade-offs in terms of application design and programming frameworks. Finally, we explore the tail at scale effects of microservices in real deployments with hundreds of users, and highlight the increased pressure they put on performance predictability. \u00c2\u00a9 2019 Association for Computing Machinery.",
      "authors": [
        "Gan, Y.",
        "Zhang, Y.",
        "Cheng, D.",
        "Shetty, A.",
        "Rathi, P.",
        "Katarki, N.",
        "Bruno, A.",
        "Hu, J.",
        "Ritchken, B.",
        "Jackson, B.",
        "Hu, K.",
        "Pancholi, M.",
        "He, Y.",
        "Clancy, B.",
        "Colen, C.",
        "Wen, F.",
        "Leung, C.",
        "Wang, S.",
        "Zaruvinsky, L.",
        "Espinosa, M.",
        "Lin, R.",
        "Liu, Z.",
        "Padilla, J.",
        "Delimitrou, C."
      ],
      "categories": null,
      "citations": 82,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1145/3297858.3304013",
      "keywords": [
        "cloud computing",
        "cluster management",
        "datacenters",
        "acceleration",
        "microservices",
        "QoS",
        "fpga",
        "serverless"
      ],
      "number_of_pages": 16,
      "pages": "3-18",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450362405",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "International Conference on Architectural Support for Programming Languages and Operating Systems - ASPLOS"
      },
      "publication_date": "2019-04-04",
      "selected": null,
      "title": "An Open-Source Benchmark Suite for Microservices and Their Hardware-Software Implications for Cloud &amp; Edge Systems",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85064688619&origin=inward"
      ]
    },
    {
      "abstract": " With the proliferation of machine learning (ML) libraries and frameworks, and\nthe programming languages that they use, along with operations of data loading,\ntransformation, preparation and mining, ML model development is becoming a\ndaunting task. Furthermore, with a plethora of cloud-based ML model development\nplatforms, heterogeneity in hardware, increased focus on exploiting edge\ncomputing resources for low-latency prediction serving and often a lack of a\ncomplete understanding of resources required to execute ML workflows\nefficiently, ML model deployment demands expertise for managing the lifecycle\nof ML workflows efficiently and with minimal cost. To address these challenges,\nwe propose an end-to-end data analytics, a serverless platform called Stratum.\nStratum can deploy, schedule and dynamically manage data ingestion tools, live\nstreaming apps, batch analytics tools, ML-as-a-service (for inference jobs),\nand visualization tools across the cloud-fog-edge spectrum. This paper\ndescribes the Stratum architecture highlighting the problems it resolves.\n",
      "authors": [
        "Bhattacharjee, Anirban",
        "Barve, Yogesh",
        "Khare, Shweta",
        "Bao, Shunxing",
        "Gokhale, Aniruddha",
        "Damiano, Thomas"
      ],
      "categories": null,
      "citations": null,
      "comments": null,
      "databases": [
        "arXiv"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": null,
      "publication_date": "2019-04-03",
      "selected": null,
      "title": "Stratum: A Serverless Framework for Lifecycle Management of Machine Learning based Data Analytics Tasks",
      "urls": [
        "https://arxiv.org/pdf/1904.01727",
        "http://arxiv.org/pdf/1904.01727v1",
        "http://arxiv.org/abs/1904.01727v1"
      ]
    },
    {
      "abstract": "Escalating demand of petroleum led the Oil and Gas (OG) industry to extend oil extraction operation in the remote reservoirs. Oil extraction is a fault intolerant process where the maximum penalty is disaster impacting the environment seriously. Therefore, efficient and nature-friendly green oil extraction is a challenging operation, especially with location constrained in accessing the sites. To overcome these challenges and protect the environment from pollution, smart oil fields with numerous sensors (e.g., for pipeline pressure, gas leakage, air pollution) are established to achieve clean OG extraction. Conventionally, cloud datacenters are utilized to process the generated data. High-latency satellite communication are used for data transfer, which is not suitable for time-sensitive operations/tasks. To process such latency-sensitive tasks, edge computing can be a suitable candidate, however, their computational power goes downhill at disaster time due to surge demand of many coordinated activities. Therefore, we propose green smart oil fields that operate based on edge computing. To overcome shortage of resources and rapid deployment of the edge computing systems, we propose to use lightweight serverless computing on a federation of edge computing resources from nearby oil rigs. Our solution coordinates urgent coordinated operations/tasks to prevent disasters in oil fields and enable the idea of green smart oil fields. Evaluation results demonstrate the efficacy of our proposed solution in compare to conventional solutions for smart oil fields. \u00c2\u00a9 2019 IEEE.",
      "authors": [
        "Razin Farhan Hussain",
        "Mohsen Amini Salehi",
        "Omid Semiari"
      ],
      "categories": null,
      "citations": 8,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/GreenTech.2019.8767119",
      "keywords": [],
      "number_of_pages": 4,
      "pages": "1-4",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-7281-1458-3",
        "issn": "2166-546X",
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "2019 IEEE Green Technologies Conference(GreenTech)"
      },
      "publication_date": "2019-04-03",
      "selected": null,
      "title": "Serverless Edge Computing for Green Oil and Gas Industry",
      "urls": [
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=8767119",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85069894482&origin=inward"
      ]
    },
    {
      "abstract": "Pre-trained deep learning models are increasingly being used to offer a variety of compute-intensive predictive analytics services such as fitness tracking, speech, and image recognition. The stateless and highly parallelizable nature of deep learning models makes them well-suited for serverless computing paradigm. However, making effective resource management decisions for these services is a hard problem due to the dynamic workloads and diverse set of available resource configurations that have different deployment and management costs. To address these challenges, we present a distributed and scalable deep-learning prediction serving system called Barista and make the following contributions. First, we present a fast and effective methodology for forecasting workloads by identifying various trends. Second, we formulate an optimization problem to minimize the total cost incurred while ensuring bounded prediction latency with reasonable accuracy. Third, we propose an efficient heuristic to identify suitable compute resource configurations. Fourth, we propose an intelligent agent to allocate and manage the compute resources by horizontal and vertical scaling to maintain the required prediction latency. Finally, using representative real-world workloads for an urban transportation service, we demonstrate and validate the capabilities of Barista. \u00c2\u00a9 2019 IEEE.",
      "authors": [
        "Anirban Bhattacharjee",
        "Ajay Dev Chhokra",
        "Zhuangwei Kang",
        "Hongyang Sun",
        "Aniruddha Gokhale",
        "Gabor Karsai"
      ],
      "categories": null,
      "citations": 12,
      "comments": null,
      "databases": [
        "arXiv",
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/IC2E.2019.00-10",
      "keywords": [
        "Serverless Computing",
        "Machine Learning Models",
        "Containers",
        "Predictive Analytics",
        "Resource Management"
      ],
      "number_of_pages": 11,
      "pages": "23-33",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-7281-0219-1",
        "issn": null,
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings - 2019 IEEE International Conference on Cloud Engineering, IC2E 2019"
      },
      "publication_date": "2019-04-02",
      "selected": null,
      "title": "BARISTA: Efficient and Scalable Serverless Serving System for Deep Learning Prediction Services",
      "urls": [
        "http://arxiv.org/pdf/1904.01576v2",
        "http://dx.doi.org/10.1109/IC2E.2019.00-10",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85071468472&origin=inward",
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=8790088",
        "http://arxiv.org/abs/1904.01576v2"
      ]
    },
    {
      "abstract": "The proceedings contain 44 papers. The topics discussed include: field testing of manufacturable advanced low-cost receiver for parabolic trough solar power; serverless edge computing for green oil and gas industry; challenges and suggestions toward developing full-scale commercialization of transportation biofuels within the united states; uncertainty mitigation in feeder level power loss reduction with distributed generation; comparing values of second life batteries to different classes of prosumers in California; distributed model predictive control based on goal coordination for multi-zone building temperature control; a review of quantum computer energy efficiency; baseline control strategy for maximum power tracking for a 5MW offshore wind turbine; wave excitation force prediction methodology based on autoregressive filters for real time control; and a sustainable, portable, and efficient electricity delivery (SPEED) system.",
      "authors": [],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781728114576",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "IEEE Green Technologies Conference"
      },
      "publication_date": "2019-04-01",
      "selected": null,
      "title": "2019 IEEE Green Technologies Conference, GreenTech 2019",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85069900029&origin=inward"
      ]
    },
    {
      "abstract": "Product and engineering teams' speed of producing highquality results is critical to ensuring enterprise competitiveness. Additionally, one can observe an increase in IT systems complexity driven by the adoption of service-oriented architecture, micro-services, and serverless. Therefore, many large enterprises benefit from a mono-repository for source code management because of the improved team cognition that results from eroding barriers between teams and from influencing enhanced teamwork quality. This paper, first, reviews the characteristics of a multi-repositories structure, a monorepository structure, and a hybrid model. Second, it discusses why some manage source code in a multi-repositories structure, either by choice or because of the organic evolution of large enterprises. Third, it reviews how mono-repositories in large teams, beyond the technical arguments, can drive high efficiency and enhanced product quality through improved team cognition. \u00c2\u00a9 2019 Association for Computing Machinery.",
      "authors": [
        "Brousse, N."
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1145/3328433.3328435",
      "keywords": [
        "Devops",
        "Monorepository",
        "Programmer experience",
        "Enterprise",
        "Multi-repositories",
        "Source code management"
      ],
      "number_of_pages": null,
      "pages": null,
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450362573",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "ACM International Conference Proceeding Series"
      },
      "publication_date": "2019-04-01",
      "selected": null,
      "title": "The issue of monorepo and polyrepo in large enterprises",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85072798781&origin=inward"
      ]
    },
    {
      "abstract": " Rapid adoption of the serverless (or Function-as-a-Service, FaaS) paradigm,\npioneered by Amazon with AWS Lambda and followed by numerous commercial\nofferings and open source projects, introduces new challenges in designing the\ncloud infrastructure, balancing between performance and cost. While instant\nper-request elasticity that FaaS platforms typically offer application\ndevelopers makes it possible to achieve high performance of bursty workloads\nwithout over-provisioning, such elasticity often involves extra latency\nassociated with on-demand provisioning of individual runtime containers that\nserve the functions. This phenomenon is often called cold starts, as opposed to\nthe situation when a function is served by a pre-provisioned \"warm\" container,\nready to serve requests with close to zero overhead. Providers are constantly\nworking on techniques aimed at reducing cold starts. A common approach to\nreduce cold starts is to maintain a pool of warm containers, in anticipation of\nfuture requests. In this report, we address the cold start problem in\nserverless architectures, specifically under the Knative Serving FaaS platform.\nWe describe our implementation leveraging a pool of function instances, and\nevaluate the latency compared to the original implementation, resulting in a\n85% reduction of P99 response time for a single instance pool.\n",
      "authors": [
        "Lin, Ping-Min",
        "Glikson, Alex"
      ],
      "categories": null,
      "citations": null,
      "comments": null,
      "databases": [
        "arXiv"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": null,
      "publication_date": "2019-03-28",
      "selected": null,
      "title": "Mitigating Cold Starts in Serverless Platforms: A Pool-Based Approach",
      "urls": [
        "http://arxiv.org/pdf/1903.12221v1",
        "https://arxiv.org/pdf/1903.12221",
        "http://arxiv.org/abs/1903.12221v1"
      ]
    },
    {
      "abstract": "We present Replayable Execution, a system for improving the efficiency of Function-as-a-Service (FaaS) frameworks. It takes advantage of standard kernel features to reduce memory usage and accelerate cold startup speed without changes to the OS kernel, language runtimes, and the surrounding FaaS deployment environment. Replayable Execution exploits the intensive-deflated execution characteristics of the majority of target applications. It uses checkpointing to save an image of an application, allowing this image to be shared across containers and resulting in speedy restoration at service startup. We apply Replayable Execution to a representative FaaS Java framework to create a ReplayableJVM execution, which together with benefits from deterministic execution of a warmed up runtime, offers 2X memory footprint reduction, and over 10X startup time improvement. \u00c2\u00a9 2019 Association for Computing Machinery.",
      "authors": [
        "Wang, K.-T.A.",
        "Ho, R.",
        "Wu, P."
      ],
      "categories": null,
      "citations": 10,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1145/3302424.3303978",
      "keywords": [
        "Operating Systems",
        "Programming Languages",
        "Runtimes",
        "Cloud Computing"
      ],
      "number_of_pages": null,
      "pages": null,
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450362818",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings of the 14th EuroSys Conference 2019"
      },
      "publication_date": "2019-03-25",
      "selected": null,
      "title": "Replayable execution optimized for page sharing for a managed runtime environment",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85063898722&origin=inward"
      ]
    },
    {
      "abstract": " Motivated by recent developments in serverless systems for large-scale\ncomputation as well as improvements in scalable randomized matrix algorithms,\nwe develop OverSketched Newton, a randomized Hessian-based optimization\nalgorithm to solve large-scale convex optimization problems in serverless\nsystems. OverSketched Newton leverages matrix sketching ideas from Randomized\nNumerical Linear Algebra to compute the Hessian approximately. These sketching\nmethods lead to inbuilt resiliency against stragglers that are a characteristic\nof serverless architectures. Depending on whether the problem is strongly\nconvex or not, we propose different iteration updates using the approximate\nHessian. For both cases, we establish convergence guarantees for OverSketched\nNewton and empirically validate our results by solving large-scale supervised\nlearning problems on real-world datasets. Experiments demonstrate a reduction\nof ~50% in total running time on AWS Lambda, compared to state-of-the-art\ndistributed optimization schemes.\n",
      "authors": [
        "Gupta, Vipul",
        "Kadhe, Swanand",
        "Courtade, Thomas",
        "Mahoney, Michael W.",
        "Ramchandran, Kannan"
      ],
      "categories": null,
      "citations": null,
      "comments": "37 pages, 12 figures",
      "databases": [
        "arXiv"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": null,
      "publication_date": "2019-03-21",
      "selected": null,
      "title": "OverSketched Newton: Fast Convex Optimization for Serverless Systems",
      "urls": [
        "http://arxiv.org/pdf/1903.08857v3",
        "https://arxiv.org/pdf/1903.08857",
        "http://arxiv.org/abs/1903.08857v3"
      ]
    },
    {
      "abstract": " Serverless computing, also known as Functions-as-a-Service, is a recent\nparadigm aimed at simplifying the programming of cloud applications. The idea\nis that developers design applications in terms of functions, which are then\ndeployed on a cloud infrastructure. The infrastructure takes care of executing\nthe functions whenever requested by remote clients, dealing automatically with\ndistribution and scaling with respect to inbound traffic. While vendors already support a variety of programming languages for\nserverless computing (e.g. Go, Java, Javascript, Python), as far as we know\nthere is no reference model yet to formally reason on this paradigm. In this\npaper, we propose the first formal programming model for serverless computing,\nwhich combines ideas from both the $\\lambda$-calculus (for functions) and the\n$\\pi$-calculus (for communication). To illustrate our proposal, we model a\nreal-world serverless system. Thanks to our model, we are also able to capture\nand pinpoint the limitations of current vendor technologies, proposing possible\namendments.\n",
      "authors": [
        "Gabbrielli, Maurizio",
        "Giallorenzo, Saverio",
        "Lanese, Ivan",
        "Montesi, Fabrizio",
        "Peressotti, Marco",
        "Zingaro, Stefano Pio"
      ],
      "categories": null,
      "citations": null,
      "comments": null,
      "databases": [
        "arXiv"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": null,
      "publication_date": "2019-03-19",
      "selected": null,
      "title": "No more, no less - A formal model for serverless computing",
      "urls": [
        "http://arxiv.org/abs/1903.07962v2",
        "https://arxiv.org/pdf/1903.07962",
        "http://arxiv.org/pdf/1903.07962v2"
      ]
    },
    {
      "abstract": "<h3>Abstract</h3>\n<p>We present a novel method that yields 1100-fold computational speedup and allows biomedical scientists to interactively adjust alignment parameters in real time to iteratively improve final analytical results. Specifically, the alignment time for a 640 million read human RNA-sequencing dataset is reduced from 19 hours to 1 minute using serverless cloud computing. We provide a graphical interface for the accelerated workflows, thus making our methodology accessible to non-cloud experts.</p>",
      "authors": [
        "Ling-Hong Hung",
        "Xingzhi Niu",
        "Wes Lloyd",
        "Ka Yee Yeung"
      ],
      "categories": null,
      "citations": null,
      "comments": null,
      "databases": [
        "bioRxiv"
      ],
      "doi": "10.1101/576199",
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": null,
      "publication_date": "2019-03-13",
      "selected": null,
      "title": "Accessible and interactive RNA sequencing analysis using serverless computing",
      "urls": [
        "https://www.biorxiv.org/content/biorxiv/early/2020/10/03/576199.full.pdf",
        "https://doi.org/10.1101/576199"
      ]
    },
    {
      "abstract": "This paper supplies a route for using the Watson Machine Learning API on IBM Cloud to carry out serverless data analytics using machine learning as a service. Transforming the large amount of data produced by an organization into intelligence can be done using advanced analytics methods such as using a modified Mahalanobis Distance algorithm for synthesis of correlation data under the purview of machine learning. Further refinement of correlation data is done using a Multivariate Reliability Classifier model. The consumption of this advanced analytics service can be done in a serverless manner where the developer only must be concerned with how the data is analyzed, i.e., scoring, batch or stream models with a continuous learning system without the outlay of hardware upon which to train those models. This paper examines the usage of such serverless AI systems in the scope of user behavior analysis over varied demographics. \u00c2\u00a9 2019 Bharati Vidyapeeth, New Delhi. Copy Right in Bulk will be transferred to IEEE by Bharati Vidyapeeth.",
      "authors": [
        "Darezik Damkevala",
        "Rohit Lunavara",
        "Mansi Kosamkar",
        "Suja Jayachandran"
      ],
      "categories": null,
      "citations": 1,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": null,
      "keywords": [
        "REST API",
        "Serverless Computing",
        "Machine Learning Models",
        "Mahalanobis Distance",
        "Demographic Classification",
        "Data Analytics",
        "User Behavior Regression"
      ],
      "number_of_pages": 5,
      "pages": "1068-1072",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-5386-9271-4",
        "issn": null,
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings of the 2019 6th International Conference on Computing for Sustainable Global Development, INDIACom 2019"
      },
      "publication_date": "2019-03-13",
      "selected": null,
      "title": "Behavior Analysis using Serverless Machine Learning",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85080966917&origin=inward",
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=8991407"
      ]
    },
    {
      "abstract": "Blockchain technologies and smart contracts are becoming mainstream research fields in computer science and researchers are continuously investigating new frontiers for new applications. Likewise, microservices are getting more and more popular in the latest years thanks to their properties, that allow teams to slice existing information systems into small and independent services that can be developed independently by different teams.A symmetric paradigm applies to smart contracts as well, which represent well defined, usually isolated, executable programs, typically implementing simple and autonomous tasks with a well defined purpose, which can be assumed as services provided by the Contract. In this work we analyze a concrete case study where the microservices architecture environment is replicated and implemented through an equivalent set of smart contracts, showing for the first time the feasibility of implementing a microservices-based system with smart contracts and how the two innovative paradigms match together.Results show that it is possible to implement a simple microservices-based system with smart contracts maintaining the same set of functionalities and results. The result could be highly beneficial in contexts such as smart voting, where not only the data integrity is fundamental but also the source code executed must be trustable. \u00c2\u00a9 2019 IEEE.",
      "authors": [
        "Tonelli, R.",
        "Lunesu, M.I.",
        "Pinna, A.",
        "Taibi, D.",
        "Marchesi, M."
      ],
      "categories": null,
      "citations": 13,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1109/IWBOSE.2019.8666520",
      "keywords": [
        "Smart contract",
        "Blockchain",
        "Serverless",
        "Microservice",
        "Cloud Native"
      ],
      "number_of_pages": 10,
      "pages": "22-31",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781728118079",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "IWBOSE 2019 - 2019 IEEE 2nd International Workshop on Blockchain Oriented Software Engineering"
      },
      "publication_date": "2019-03-12",
      "selected": null,
      "title": "Implementing a Microservices System with Blockchain Smart Contracts",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85063937410&origin=inward"
      ]
    },
    {
      "abstract": "Future pervasive applications, like mobile augmented reality, have huge bandwidth and computation demands and very stringent delay constraints. Edge computing has been proposed to cope with such challenging requirements, since it shortens significantly the distance between the end users and the servers. On the other hand, serverless computing is emerging among cloud technologies to respond to the need of highly scalable event-driven execution of stateless tasks. In this paper, we investigate the convergence of the two to enable very low-latency execution of short-lived stateless tasks whose computation is offloaded from the user terminal to servers hosted by or close to edge devices in mobile pervasive environments. We realized a proof-of-concept implementation to delve into the specific issue of efficient dispatching of tasks in a distributed manner to achieve high scalability. We evaluated our proposed algorithm with experiments in a large-scale emulated network environment, showing that our solution achieves similar or better delay performance than a centralized solution, with far less network utilization. \u00c2\u00a9 2019 IEEE.",
      "authors": [
        "Claudio Cicconetti",
        "Marco Conti",
        "Andrea Passarella"
      ],
      "categories": null,
      "citations": 13,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/PERCOM.2019.8767419",
      "keywords": [
        "serverless computing",
        "edge computing",
        "online job dispatching",
        "computation offloading"
      ],
      "number_of_pages": 10,
      "pages": "1-10",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-5386-9149-6",
        "issn": "2474-2503",
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "2019 IEEE International Conference on Pervasive Computing and Communications, PerCom 2019"
      },
      "publication_date": "2019-03-11",
      "selected": null,
      "title": "Low-latency Distributed Computation Offloading for Pervasive Environments",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85070218519&origin=inward",
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=8767419"
      ]
    },
    {
      "abstract": "Neuroscience has been carried into the domain of big data and high performance computing (HPC) on the backs of initiatives in data collection and an increasingly compute-intensive tools. While managing HPC experiments requires considerable technical acumen, platforms and standards have been developed to ease this burden on scientists. While web-portals make resources widely accessible, data organizations such as the Brain Imaging Data Structure and tool description languages such as Boutiques provide researchers with a foothold to tackle these problems using their own datasets, pipelines, and environments. While these standards lower the barrier to adoption of HPC and cloud systems for neuroscience applications, they still require the consolidation of disparate domain-specific knowledge. We present Clowdr, a lightweight tool to launch experiments on HPC systems and clouds, record rich execution records, and enable the accessible sharing and re-launch of experimental summaries and results. Clowdr uniquely sits between web platforms and bare-metal applications for experiment management by preserving the flexibility of do-it-yourself solutions while providing a low barrier for developing, deploying and disseminating neuroscientific analysis.",
      "authors": [
        "Kiar, Gregory",
        "Brown, Shawn T.",
        "Glatard, Tristan",
        "Evans, Alan C."
      ],
      "categories": null,
      "citations": 3,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.3389/fninf.2019.00012",
      "keywords": [
        "Interactive visualization",
        "High performance computing",
        "Cloud computing",
        "Microservice",
        "Reproducibility and tools"
      ],
      "number_of_pages": null,
      "pages": null,
      "publication": {
        "category": "Journal",
        "cite_score": 6.2,
        "is_potentially_predatory": true,
        "isbn": null,
        "issn": "1662-5196",
        "publisher": "Frontiers Media S.A.",
        "sjr": 1.144,
        "snip": 1.364,
        "subject_areas": [
          "Neuroscience (miscellaneous)",
          "Biomedical Engineering",
          "Computer Science Applications"
        ],
        "title": "Frontiers in Neuroinformatics"
      },
      "publication_date": "2019-03-05",
      "selected": null,
      "title": "A Serverless Tool for Platform Agnostic Computational Experiment Management",
      "urls": [
        "https://www.frontiersin.org/articles/10.3389/fninf.2019.00012/pdf",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85064253467&origin=inward"
      ]
    },
    {
      "abstract": "Neuroscience has been carried into the domain of big data and high performance computing (HPC) on the backs of initiatives in data collection and an increasingly compute-intensive tools. While managing HPC experiments requires considerable technical acumen, platforms, and standards have been developed to ease this burden on scientists. While web-portals make resources widely accessible, data organizations such as the Brain Imaging Data Structure and tool description languages such as Boutiques provide researchers with a foothold to tackle these problems using their own datasets, pipelines, and environments. While these standards lower the barrier to adoption of HPC and cloud systems for neuroscience applications, they still require the consolidation of disparate domain-specific knowledge. We present Clowdr, a lightweight tool to launch experiments on HPC systems and clouds, record rich execution records, and enable the accessible sharing and re-launch of experimental summaries and results. Clowdr uniquely sits between web platforms and bare-metal applications for experiment management by preserving the flexibility of do-it-yourself solutions while providing a low barrier for developing, deploying and disseminating neuroscientific analysis.",
      "authors": [
        "Gregory Kiar",
        "Shawn T Brown",
        "Tristan Glatard",
        "Alan C Evans"
      ],
      "categories": null,
      "citations": null,
      "comments": null,
      "databases": [
        "PubMed"
      ],
      "doi": null,
      "keywords": [
        "N cloud computing",
        "N high performance computing",
        "N microservice",
        "N interactive visualization",
        "N reproducibility and tools"
      ],
      "number_of_pages": null,
      "pages": "12",
      "publication": {
        "category": "Journal",
        "cite_score": 6.2,
        "is_potentially_predatory": true,
        "isbn": null,
        "issn": "1662-5196",
        "publisher": "Frontiers Media S.A.",
        "sjr": 1.144,
        "snip": 1.364,
        "subject_areas": [
          "Neuroscience (miscellaneous)",
          "Biomedical Engineering",
          "Computer Science Applications"
        ],
        "title": "Frontiers in Neuroinformatics"
      },
      "publication_date": "2019-03-05",
      "selected": null,
      "title": "A Serverless Tool for Platform Agnostic Computational Experiment Management.",
      "urls": []
    },
    {
      "abstract": "Function-as-a-Service (FaaS) describes cloud computing services that make infrastructure components transparent to application developers, thus falling in the larger group of \u00e2\u0080\u009cserverless\u00e2\u0080\u009d computing models. When using FaaS offerings, such as AWS Lambda, developers provide atomic and short-running code for their functions, and FaaS providers execute and horizontally scale them on-demand. Currently, there is no systematic research on how developers use serverless, what types of applications lend themselves to this model, or what architectural styles and practices FaaS-based applications are based on. We present results from a mixed-method study, combining interviews with practitioners who develop applications and systems that use FaaS, a systematic analysis of grey literature, and a Web-based survey. We find that successfully adopting FaaS requires a different mental model, where systems are primarily constructed by composing pre-existing services, with FaaS often acting as the \u00e2\u0080\u009cglue\u00e2\u0080\u009d that brings these services together. Tooling availability and maturity, especially related to testing and deployment, remains a major difficulty. Further, we find that current FaaS systems lack systematic support for function reuse, and abstractions and programming models for building non-trivial FaaS applications are limited. We conclude with a discussion of implications for FaaS providers, software developers, and researchers. \u00c2\u00a9 2018 Elsevier Inc.",
      "authors": [
        "Leitner, P.",
        "Wittern, E.",
        "Spillner, J.",
        "Hummer, W."
      ],
      "categories": null,
      "citations": 32,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1016/j.jss.2018.12.013",
      "keywords": [
        "Serverless",
        "Cloud computing",
        "Function-as-a-Service",
        "Empirical research"
      ],
      "number_of_pages": 20,
      "pages": "340-359",
      "publication": {
        "category": "Journal",
        "cite_score": 8.4,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "01641212",
        "publisher": "Elsevier Inc.",
        "sjr": 0.642,
        "snip": 2.16,
        "subject_areas": [
          "Information Systems",
          "Hardware and Architecture",
          "Software"
        ],
        "title": "Journal of Systems and Software"
      },
      "publication_date": "2019-03-01",
      "selected": null,
      "title": "A mixed-method empirical study of Function-as-a-Service software development in industrial practice",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85058711426&origin=inward"
      ]
    },
    {
      "abstract": "On-Device AI is an emerging paradigm that aims to make devices more intelligent, autonomous and proactive by equipping them with machine and deep learning routines for robust decision making and optimal execution in devices' operations. On-Device intelligence promises the possibility of computing huge amounts of data close to its source, e.g., sensor and multimedia data. By doing so, devices can complement their counterpart cloud services with more sophisticated functionality to provide better applications and services. However, increased computational capabilities of smart devices, wearables and IoT devices along with the emergence of services at the Edge of the network are driving the trend of migrating and distributing computation between devices. Indeed, devices can reduce the burden of executing resource intensive tasks via collaborations in the wild. While several work has shown the benefits of an opportunistic collaboration of a device with others, not much is known regarding how devices can be organized as a group as they move together. In this paper, we contribute by analyzing how dynamic group organization of devices can be utilized to distribute intelligence on the moving Edge. The key insight is that instead of On-Device solutions complementing with cloud, dynamic groups can be formed to complement each other in an On-Multi-Device manner. Thus, we highlight the challenges and opportunities from extending the scope of On-Device AI from an egocentric view to a collaborative, multi-device view. \u00c2\u00a9 2019 IEEE.",
      "authors": [
        "Flores, H.",
        "Nurmi, P.",
        "Hui, P."
      ],
      "categories": null,
      "citations": 1,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1109/PERCOMW.2019.8730873",
      "keywords": [
        "Edge",
        "Serverless",
        "Data Analytics",
        "Artificial Intelligence",
        "Device-to-Device",
        "Cloud",
        "Cloudlet"
      ],
      "number_of_pages": 6,
      "pages": "310-315",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781538691519",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "2019 IEEE International Conference on Pervasive Computing and Communications Workshops, PerCom Workshops 2019"
      },
      "publication_date": "2019-03-01",
      "selected": null,
      "title": "AI on the Move: From On-Device to On-Multi-Device",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85068003418&origin=inward"
      ]
    },
    {
      "abstract": "In this day and age everything is monitored and tracked. GPS tracking plays one of the most vital roles in our everyday life. Tracking entities is important in many fields including fleet management, personal security and even operations management. The proposed work details the low power analysis carried out on the built real time GPS tracking system. Incorporating microservices and modern architecture, the system provides live tracking solution along with analyses of the travel history. The use of serverless architecture augments and provides an intelligible design for the system. Equipped with mobile and web application, this system delivers live tracking results to the end users. Customized geofences enables the email alert service to the user in case of a breach in the boundary. \u00c2\u00a9 2019 IEEE.",
      "authors": [
        "Sundar Anand",
        "Annie Johnson",
        "Priyanka Mathikshara",
        "Karthik R."
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/CCOMS.2019.8821738",
      "keywords": [
        "cloud computing",
        "microservices",
        "low power",
        "QoS",
        "GPS",
        "RTOS"
      ],
      "number_of_pages": 6,
      "pages": "618-623",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-7281-1323-4",
        "issn": null,
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "2019 IEEE 4th International Conference on Computer and Communication Systems, ICCCS 2019"
      },
      "publication_date": "2019-02-23",
      "selected": null,
      "title": "Low Power Real Time GPS Tracking Enabled with RTOS and Serverless Architecture",
      "urls": [
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=8821738",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85072946377&origin=inward"
      ]
    },
    {
      "abstract": "Serverless computing (also known as functions as a service) is a new cloud\ncomputing abstraction that makes it easier to write robust, large-scale web\nservices. In serverless computing, programmers write what are called serverless\nfunctions, and the cloud platform transparently manages the operating system,\nresource allocation, load-balancing, and fault tolerance. When demand for the\nservice spikes, the platform automatically allocates additional hardware to the\nservice and manages load-balancing; when demand falls, the platform silently\ndeallocates idle resources; and when the platform detects a failure, it\ntransparently retries affected requests. In 2014, Amazon Web Services\nintroduced the first serverless platform, AWS Lambda, and similar abstractions\nare now available on all major cloud computing platforms.\n  Unfortunately, the serverless computing abstraction exposes several low-level\noperational details that make it hard for programmers to write and reason about\ntheir code. This paper sheds light on this problem by presenting\n$\\lambda_\\Lambda$, an operational semantics of the essence of serverless\ncomputing. Despite being a small (half a page) core calculus, $\\lambda_\\Lambda$\nmodels all the low-level details that serverless functions can observe. To show\nthat $\\lambda_\\Lambda$ is useful, we present three applications. First, to ease\nreasoning about code, we present a simplified naive semantics of serverless\nexecution and precisely characterize when the naive semantics and\n$\\lambda_\\Lambda$ coincide. Second, we augment $\\lambda_\\Lambda$ with a\nkey-value store to allow reasoning about stateful serverless functions. Third,\nsince a handful of serverless platforms support serverless function\ncomposition, we show how to extend $\\lambda_\\Lambda$ with a composition\nlanguage. We have implemented this composition language and show that it\noutperforms prior work.",
      "authors": [
        "Abhinav Jangda",
        "Donald Pinckney",
        "Yuriy Brun",
        "Arjun Guha"
      ],
      "categories": null,
      "citations": null,
      "comments": null,
      "databases": [
        "arXiv"
      ],
      "doi": "10.1145/3360575",
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": {
        "category": null,
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [
          "Programming Languages"
        ],
        "title": "PACMPL, OOPSLA issue, vol. 3, October 2019, pp. 149:1-149:26"
      },
      "publication_date": "2019-02-15",
      "selected": null,
      "title": "Formal Foundations of Serverless Computing",
      "urls": [
        "http://dx.doi.org/10.1145/3360575",
        "http://arxiv.org/abs/1902.05870v6",
        "http://arxiv.org/pdf/1902.05870v6"
      ]
    },
    {
      "abstract": " Serverless cloud computing handles virtually all the system administration\noperations needed to make it easier for programmers to use the cloud. It\nprovides an interface that greatly simplifies cloud programming, and represents\nan evolution that parallels the transition from assembly language to high-level\nprogramming languages. This paper gives a quick history of cloud computing,\nincluding an accounting of the predictions of the 2009 Berkeley View of Cloud\nComputing paper, explains the motivation for serverless computing, describes\napplications that stretch the current limits of serverless, and then lists\nobstacles and research opportunities required for serverless computing to\nfulfill its full potential. Just as the 2009 paper identified challenges for\nthe cloud and predicted they would be addressed and that cloud use would\naccelerate, we predict these issues are solvable and that serverless computing\nwill grow to dominate the future of cloud computing.\n",
      "authors": [
        "Jonas, Eric",
        "Schleier-Smith, Johann",
        "Sreekanti, Vikram",
        "Tsai, Chia-Che",
        "Khandelwal, Anurag",
        "Pu, Qifan",
        "Shankar, Vaishaal",
        "Carreira, Joao",
        "Krauth, Karl",
        "Yadwadkar, Neeraja",
        "Gonzalez, Joseph E.",
        "Popa, Raluca Ada",
        "Stoica, Ion",
        "Patterson, David A."
      ],
      "categories": null,
      "citations": null,
      "comments": null,
      "databases": [
        "arXiv"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": null,
      "publication_date": "2019-02-09",
      "selected": null,
      "title": "Cloud Programming Simplified: A Berkeley View on Serverless Computing",
      "urls": [
        "http://arxiv.org/pdf/1902.03383v1",
        "https://arxiv.org/pdf/1902.03383",
        "http://arxiv.org/abs/1902.03383v1"
      ]
    },
    {
      "abstract": " We consider the problem of scheduling serverless-computing instances such as\nAmazon Lambda functions, or scheduling microservices within (privately held)\nvirtual machines (VMs). Instead of a quota per tenant/customer, we assume\ndemand for Lambda functions is modulated by token-bucket mechanisms per tenant.\nSuch quotas are due to, e.g., limited resources (as in a fog/edge-cloud\ncontext) or to prevent excessive unauthorized invocation of numerous instances\nby malware. Based on an upper bound on the stationary number of active \"Lambda\nservers\" considering the execution-time distribution of Lambda functions, we\ndescribe an approach that the cloud could use to overbook Lambda functions for\nimproved utilization of IT resources. An earlier bound for a single service\ntier is extended to multiple service tiers. For the context of scheduling\nmicroservices in a private setting, the framework could be used to determine\nthe required VM resources for a token-bucket constrained workload stream.\nFinally, we note that the looser Markov inequality may be useful in settings\nwhere the job service times are dependent.\n",
      "authors": [
        "Kesidis, George"
      ],
      "categories": null,
      "citations": null,
      "comments": null,
      "databases": [
        "arXiv"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": null,
      "publication_date": "2019-01-28",
      "selected": null,
      "title": "Overbooking Microservices in the Cloud",
      "urls": [
        "http://arxiv.org/pdf/1901.09842v2",
        "http://arxiv.org/abs/1901.09842v2",
        "https://arxiv.org/pdf/1901.09842"
      ]
    },
    {
      "abstract": " We propose a serverless computing mechanism for distributed computation based\non polar codes. Serverless computing is an emerging cloud based computation\nmodel that lets users run their functions on the cloud without provisioning or\nmanaging servers. Our proposed approach is a hybrid computing framework that\ncarries out computationally expensive tasks such as linear algebraic operations\ninvolving large-scale data using serverless computing and does the rest of the\nprocessing locally. We address the limitations and reliability issues of\nserverless platforms such as straggling workers using coding theory, drawing\nideas from recent literature on coded computation. The proposed mechanism uses\npolar codes to ensure straggler-resilience in a computationally effective\nmanner. We provide extensive evidence showing polar codes outperform other\ncoding methods. We have designed a sequential decoder specifically for polar\ncodes in erasure channels with full-precision input and outputs. In addition,\nwe have extended the proposed method to the matrix multiplication case where\nboth matrices being multiplied are coded. The proposed coded computation scheme\nis implemented for AWS Lambda. Experiment results are presented where the\nperformance of the proposed coded computation technique is tested in\noptimization via gradient descent. Finally, we introduce the idea of partial\npolarization which reduces the computational burden of encoding and decoding at\nthe expense of straggler-resilience.\n",
      "authors": [
        "Bartan, Burak",
        "Pilanci, Mert"
      ],
      "categories": null,
      "citations": null,
      "comments": "New results added in the new version. More discussion on serverless\n  computing",
      "databases": [
        "arXiv"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": null,
      "publication_date": "2019-01-21",
      "selected": null,
      "title": "Straggler Resilient Serverless Computing Based on Polar Codes",
      "urls": [
        "https://arxiv.org/pdf/1901.06811",
        "http://arxiv.org/pdf/1901.06811v2",
        "http://arxiv.org/abs/1901.06811v2"
      ]
    },
    {
      "abstract": "In a previous report, we explored the serverless OpenHealth approach to the Web as a Global Compute space. That approach relies on the modern browser full stack, and, in particular, its configuration for application assembly by code injection. The opportunity, and need, to expand this approach has since increased markedly, reflecting a wider adoption of Open Data policies by Public Health Agencies. Here, we describe how the serverless scaling challenge can be achieved by the isomorphic mapping between the remote data layer API and a local (client-side, in-browser) operator. This solution is validated with an accompanying interactive web application (bit.ly/loadsparcs) capable of real-time traversal of New York's 20 million patient records of the Statewide Planning and Research Cooperative System (SPARCS), and is compared with alternative approaches. The results obtained strengthen the argument that the FAIR reproducibility needed for Population Science applications in the age of P4 Medicine is particularly well served by the Web platform.",
      "authors": [
        "Jonas S Almeida",
        "Janos Hajagos",
        "Joel Saltz",
        "Mary Saltz"
      ],
      "categories": null,
      "citations": null,
      "comments": null,
      "databases": [
        "PubMed"
      ],
      "doi": null,
      "keywords": [
        "N Openhealth",
        "N Serverless computing",
        "N Public health",
        "N Epidemiology data commons",
        "N Sparcs"
      ],
      "number_of_pages": null,
      "pages": "e6230",
      "publication": {
        "category": "Journal",
        "cite_score": 3.8,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "2167-8359",
        "publisher": "PeerJ Inc.",
        "sjr": 0.927,
        "snip": 1.04,
        "subject_areas": [
          "Agricultural and Biological Sciences (all)",
          "Biochemistry, Genetics and Molecular Biology (all)",
          "Neuroscience (all)"
        ],
        "title": "PeerJ"
      },
      "publication_date": "2019-01-15",
      "selected": null,
      "title": "Serverless OpenHealth at data commons scale-traversing the 20 million patient records of New York's SPARCS dataset in real-time.",
      "urls": []
    },
    {
      "abstract": " Cloud service provider propose services to insensitive customers to use their\nplatform. Different services can achieve the same result at different cost. In\nthis paper, we study the efficiency of a serverless architecture for running\nhighly parallelizable tasks to compare theses services in order to find the\nmost efficient in term of performance and cost. More precisely, we look at the\ncompute time and at the cost per task for a given task. The tasks studied is\nthe count of the occurrence of a given word in a corpus. We compare the\nserverless architecture to the Apache Spark map reduce technique commonly used\nfor this type of task. Using AWS Lambda for the serverless architecture and\nAmazon EMR for the Apache Spark map reduce, with similar compute power, we show\nthat the serverless technique achieve comparable performance in term of compute\ntime and cost. We observed that the lambda function is a great approach for\nreal time computing, while EMR is preferable for task that require long compute\ntime.\n",
      "authors": [
        "Lavoie, Samuel",
        "Garant, Anthony",
        "Petrillo, Fabio"
      ],
      "categories": null,
      "citations": null,
      "comments": null,
      "databases": [
        "arXiv"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": null,
      "publication_date": "2019-01-13",
      "selected": null,
      "title": "Serverless architecture efficiency: an exploratory study",
      "urls": [
        "http://arxiv.org/abs/1901.03984v1",
        "https://arxiv.org/pdf/1901.03984",
        "http://arxiv.org/pdf/1901.03984v1"
      ]
    },
    {
      "abstract": " The event-driven and elastic nature of serverless runtimes makes them a very\nefficient and cost-effective alternative for scaling up computations. So far,\nthey have mostly been used for stateless, data parallel and ephemeral\ncomputations. In this work, we propose using serverless runtimes to solve\ngeneric, large-scale optimization problems. Specifically, we build a\nmaster-worker setup using AWS Lambda as the source of our workers, implement a\nparallel optimization algorithm to solve a regularized logistic regression\nproblem, and show that relative speedups up to 256 workers and efficiencies\nabove 70% up to 64 workers can be expected. We also identify possible\nalgorithmic and system-level bottlenecks, propose improvements, and discuss the\nlimitations and challenges in realizing these improvements.\n",
      "authors": [
        "Aytekin, Arda",
        "Johansson, Mikael"
      ],
      "categories": null,
      "citations": null,
      "comments": "9 pages, double column, 9 figures",
      "databases": [
        "arXiv"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": null,
      "publication_date": "2019-01-10",
      "selected": null,
      "title": "Harnessing the Power of Serverless Runtimes for Large-Scale Optimization",
      "urls": [
        "https://arxiv.org/pdf/1901.03161",
        "http://arxiv.org/abs/1901.03161v1",
        "http://arxiv.org/pdf/1901.03161v1"
      ]
    },
    {
      "abstract": " Serverless computing is an emerging Cloud service model. It is currently\ngaining momentum as the next step in the evolution of hosted computing from\ncapacitated machine virtualisation and microservices towards utility computing.\nThe term \"serverless\" has become a synonym for the entirely\nresource-transparent deployment model of cloud-based event-driven distributed\napplications. This work investigates how adaptive event dispatching can improve\nserverless platform resource efficiency and contributes a novel approach that\nallows for better scaling and fitting of the platform's resource consumption to\nactual demand.\n",
      "authors": [
        "Stein, Manuel"
      ],
      "categories": null,
      "citations": null,
      "comments": null,
      "databases": [
        "arXiv"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": null,
      "publication_date": "2019-01-10",
      "selected": null,
      "title": "Adaptive Event Dispatching in Serverless Computing Infrastructures",
      "urls": [
        "http://arxiv.org/pdf/1901.03086v1",
        "https://arxiv.org/pdf/1901.03086",
        "http://arxiv.org/abs/1901.03086v1"
      ]
    },
    {
      "abstract": "A microservice architecture is a routine of enhancing cloud applications which enable large-scale enterprises to scale their application as per the demand. These microservices can be deployed using virtual machines, Docker containers or as a serverless function such as AWS lambda. However, with an increase in the number of microservices, it becomes strenuous to manage and deploy these services. Therefore, to overcome the problem, continuous integration and continuous delivery tool are used to deploy the microservices with minimum possible downtime. In this paper, we will be comparing different continuous integration and delivery tools taking into consideration different parameters like performance monitoring post-deployment, pipeline integration, cloud compatibility, and server monitoring. \u00c2\u00a9 2019 IEEE.",
      "authors": [
        "Charanjot Singh",
        "Nikita Seth Gaba",
        "Manjot Kaur",
        "Bhavleen Kaur"
      ],
      "categories": null,
      "citations": 2,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/CONFLUENCE.2019.8776985",
      "keywords": [
        "Virtual Machines",
        "Continous Integration",
        "Delivery Pipeline",
        "Continous Delivery",
        "Gitlab",
        "Docker Containers",
        "Microservices",
        "Elastic Container Services",
        "Monolithic; Jenkins",
        "Webhook",
        "Virtualization",
        "Cloud Computing"
      ],
      "number_of_pages": 6,
      "pages": "7-12",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-5386-5934-2",
        "issn": null,
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings of the 9th International Conference On Cloud Computing, Data Science and Engineering, Confluence 2019"
      },
      "publication_date": "2019-01-10",
      "selected": null,
      "title": "Comparison of Different CI/CD Tools Integrated with Cloud Platform",
      "urls": [
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=8776985",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85070580633&origin=inward"
      ]
    },
    {
      "abstract": " Serverless computing is an emerging service model in distributed computing\nsystems. The term captures cloud-based event-driven distributed application\ndesign and stems from its completely resource-transparent deployment model,\ni.e. serverless. This work thesisizes that adaptive event dispatching can\nimprove current serverless platform resource efficiency by considering locality\nand dependencies. These design contemplations have also been formulated by\nHendrickson et al., which identifies the requirement that \"Serverless load\nbalancers must make low-latency decisions while considering session, code and\ndata locality\". This interim report investigates the economical importance of\nthe emerging trend and asserts that existing serverless platforms still do not\noptimize for data locality, whereas a variety of scheduling methods are\navailable from distributed computing research which have proven to increase\nresource efficiency.\n",
      "authors": [
        "Stein, Manuel"
      ],
      "categories": null,
      "citations": null,
      "comments": null,
      "databases": [
        "arXiv"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": null,
      "publication_date": "2019-01-09",
      "selected": null,
      "title": "Interim Report on Adaptive Event Dispatching in Serverless Computing Infrastructures",
      "urls": [
        "http://arxiv.org/pdf/1901.02680v1",
        "http://arxiv.org/abs/1901.02680v1",
        "https://arxiv.org/pdf/1901.02680"
      ]
    },
    {
      "abstract": "The emerging trend of edge computing has led several cloud providers to release their own platforms for performing computation at the 'edge' of the network. We compare two such platforms, Amazon AWS Greengrass and Microsoft Azure IoT Edge, using a new benchmark comprising a suite of performance metrics. We also compare the performance of the edge frameworks to cloud-only implementations available in their respective cloud ecosystems. Amazon AWS Greengrass and Azure IoT Edge use different underlying technologies, edge Lambda functions vs. containers, and so we also elaborate on platform features available to developers. Our study shows that both of these edge platforms provide comparable performance, which nevertheless differs in important ways for key types of workloads used in edge applications. Finally, we discuss several current issues and challenges we faced in deploying these platforms. \u00c2\u00a9 2018 IEEE.",
      "authors": [
        "Das, A.",
        "Patterson, S.",
        "Wittie, M."
      ],
      "categories": null,
      "citations": 19,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1109/UCC-Companion.2018.00053",
      "keywords": [
        "Cloud Functions",
        "Internet of Things",
        "Serverless Computing"
      ],
      "number_of_pages": 6,
      "pages": "175-180",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781728103594",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings - 11th IEEE/ACM International Conference on Utility and Cloud Computing Companion, UCC Companion 2018"
      },
      "publication_date": "2019-01-08",
      "selected": null,
      "title": "EdgeBench: Benchmarking edge computing platforms",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85061829199&origin=inward"
      ]
    },
    {
      "abstract": "There have been many advancements in the field of technology which have helped to shape better solutions for the problems of today. One such advancement that has provided extraordinary services with minimal effort is cloud computing. The aim of this work is to build a GPS tracker for vehicles using serverless architecture. It is equipped with a suitable mobile/web application for viewing the live results. The location data is stored in a cloud database that can be used for processing. The route that the vehicle takes is plotted using google maps after the 'to and from' dates are selected by the user. This can be viewed on the website that is specially designed for this vehicle tracking application. An email is sent to the user if movement outside a specific geographical boundary is detected. These geographical boundaries or geofences are customized based on the user's desire. Incorporating cloud computing has increased the efficiency of storage and analysis of data. Thereby, enhancing the features available in vehicle tracking applications. \u00c2\u00a9 2019 IEEE.",
      "authors": [
        "Sundar Anand",
        "Annie Johnson",
        "Priyanka Mathikshara",
        "R. Karthik"
      ],
      "categories": null,
      "citations": 3,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/COMSNETS.2019.8711273",
      "keywords": [],
      "number_of_pages": 3,
      "pages": "541-543",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-7281-3188-7",
        "issn": "2155-2487",
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "2019 11th International Conference on Communication Systems and Networks, COMSNETS 2019"
      },
      "publication_date": "2019-01-07",
      "selected": null,
      "title": "Real-time GPS tracking using serverless architecture and ARM processor",
      "urls": [
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=8711273",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85066482014&origin=inward"
      ]
    },
    {
      "abstract": "This paper proposes a serverless platform for building and operating edge AI applications. We analyze edge AI use cases to illustrate the challenges in building and operating AI applications in edge cloud scenarios. By elevating concepts from AI lifecycle management into the established serverless model, we enable easy development of edge AI workflow functions. We take a deviceless approach, i.e., we treat edge resources transparently as cluster resources, but give developers fine-grained control over scheduling constraints. Furthermore, we demonstrate the limitations of current serverless function schedulers, and present the current state of our prototype. \u00c2\u00a9 2019 USENIX Association. All rights reserved.",
      "authors": [
        "Rausch, T.",
        "Hummer, W.",
        "Muthusamy, V.",
        "Dustdar, S.",
        "Rashed, A."
      ],
      "categories": null,
      "citations": 13,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "2nd USENIX Workshop on Hot Topics in Edge Computing, HotEdge 2019, co-located with USENIX ATC 2019"
      },
      "publication_date": "2019-01-01",
      "selected": null,
      "title": "Towards a serverless platform for edge AI",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85086444901&origin=inward"
      ]
    },
    {
      "abstract": "Sensors connected to the cloud services equipped with data analytics has created a plethora of new type of applications ranging from personal to an industrial level forming to what is known today as Internet of Things (IoT). IoT-based system follows a pattern of data collection, data analytics, automation, and system improvement recommendations. However, most applications would have its own unique requirements in terms of the type of the smart devices, communication technologies as well as its application provisioning service. In order to enable an IoT-based system, various services are commercially available that provide services such as backend-as-a-service (BaaS) and software-as-a-service (SaaS) hosted in the cloud. This, in turn, raises the issues of security and privacy. However there is no plug-and-play IoT middleware framework that could be deployed out of the box for on-premise server. This paper aims at providing a lightweight IoT middleware that can be used to enable IoT applications owned by the individuals or organizations that effectively securing the data on-premise or in remote server. Specifically, the middleware with a standardized application programming interface (API) that could adapt to the application requirements through high level abstraction and interacts with the application service provider is proposed. Each API endpoint would be secured using Access Control List (ACL) and easily integratable with any other modules to ensure the scalability of the system as well as easing system deployment. In addition, this middleware could be deployed in a distributed manner and coordinate among themselves to fulfil the application requirements. A middleware is presented in this paper with GET and POST requests that are lightweight in size with a footprint of less than 1 KB and a round trip time of less than 1 second to facilitate rapid application development by individuals or organizations for securing IoT resources.",
      "authors": [
        "A. Karim Mohamed Ibrahim",
        "Rozeha A. Rashid",
        "A. Hadi Fikri A. Hamid",
        "M. Adib Sarijari",
        "Muhammad Ariff Baharudin"
      ],
      "categories": null,
      "citations": 5,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.12928/telkomnika.v17i3.11793",
      "keywords": [
        "",
        "application programming protocol (API)",
        "middleware",
        "internet-of-things (IoT)"
      ],
      "number_of_pages": 8,
      "pages": "1385-1392",
      "publication": {
        "category": "Journal",
        "cite_score": 2.2,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "16936930",
        "publisher": "Universitas Ahmad Dahlan",
        "sjr": 0.258,
        "snip": 0.746,
        "subject_areas": [
          "Electrical and Electronic Engineering"
        ],
        "title": "Telkomnika (Telecommunication Computing Electronics and Control)"
      },
      "publication_date": "2019-01-01",
      "selected": null,
      "title": "Lightweight IoT middleware for rapid application development",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85070926561&origin=inward",
        "http://journal.uad.ac.id/index.php/TELKOMNIKA/article/download/11793/6514"
      ]
    },
    {
      "abstract": "Nowadays, the rapid development of emerging Cloud, Fog, Edge, and Internet of Things (IoT) technologies has accelerated the advancement trends forcing applications and information systems (IS) to...",
      "authors": [
        "Alina Buzachis",
        "Maria Fazio",
        "Antonio Celesti",
        "Massimo Villari"
      ],
      "categories": null,
      "citations": 1,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1007/978-3-030-34914-1_37",
      "keywords": [
        "IoT",
        "Microservice architecture",
        "Osmotic Computing",
        "Serverless",
        "MELs",
        "FaaS",
        "Video surveillance"
      ],
      "number_of_pages": 11,
      "pages": "391-401",
      "publication": {
        "category": "Book",
        "cite_score": 1.8,
        "is_potentially_predatory": false,
        "isbn": "9783030715922",
        "issn": "03029743",
        "publisher": "Springer Verlag",
        "sjr": 0.249,
        "snip": 0.628,
        "subject_areas": [
          "Databases",
          "Cryptography and Security",
          "Distributed, Parallel, and Cluster Computing",
          "Theoretical Computer Science",
          "Computer Science (all)"
        ],
        "title": "IFIP International Conference on Distributed Applications and\n  Interoperable Systems, DAIS 2017: Distributed Applications and Interoperable\n  Systems pp 83-98"
      },
      "publication_date": "2019-01-01",
      "selected": null,
      "title": "Osmotic Flow Deployment Leveraging FaaS Capabilities",
      "urls": [
        "https://link.springer.com/content/pdf/10.1007%2F978-3-030-34914-1_37.pdf",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85075863995&origin=inward"
      ]
    },
    {
      "abstract": "This paper about the dCache storage platform and use cases for one of its latest features - storage events is based on three talks given at the ISGC 2019, the International Symposium on Grids and Clouds in Taipei, Taiwan from April 1-5 2019. Building on a deployment in a multi-cloud environment, where dCache acts as a write-through and read-through cache with one single, distributed namespace, we introduce the reader to dCache storage events in both tracks: message queuing and server sent events. Turning to broader use case scenarios in cloud native applications, we address the role of dCache in the EOSCpilot project Photon and Neutron Science Demonstrator, a deployment of Function-as-a-Service platforms for both, interactive and event- driven scientific computing. Copyright \u00c2\u00a9 2019 the author(s).",
      "authors": [
        "Schuh, M.",
        "Fuhrmanny, P.",
        "Millar, P.",
        "Mkrtchyan, T."
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings of Science"
      },
      "publication_date": "2019-01-01",
      "selected": null,
      "title": "Building a scalable, interactive and event-driven computing platform in multi-cloud environments with dCache",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85076493310&origin=inward"
      ]
    },
    {
      "abstract": "Mobile enterprise applications are primarily devel-oped for existing backend enterprise systems and some usage scenarios require storing of large files on the mobile devices.These files range from large PDFs to media files in various formats (MPEG videos).These files needs to be used offline , sometimes updated and shared among users. Present work studied different Mobile Backend as a service (M)BaaS platforms to understand techniques use to handle large file and found that many are either missing the feature or does not handle performance issues for large files. In this paper, we are proposing, NetMob, a mobile synchronization platform that allows resource-limited mobile devices to access large objects from the cloud. This framework is mainly focused on large file handling and has support for both table and objects data models that can be tuned for three consistency semantics, resembling strong, causal and eventual consistency. Experimental results conducted using representative workloads showed that NetMob can handle large files access with the size ranging from 100MB upto 1GB and is able to reduce sync time with object chunking in our experiment settings.",
      "authors": [
        "Yunus Parvej Faniband",
        "Iskandar Ishak",
        "Fatimah Sidi",
        "Marzanah A. Jabar"
      ],
      "categories": null,
      "citations": 1,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.14569/IJACSA.2019.0100784",
      "keywords": [
        "mobile apps",
        "mobile back-end as a service",
        "data consistency",
        "Mobile cloud computing",
        "distributed systems"
      ],
      "number_of_pages": 12,
      "pages": "639-650",
      "publication": {
        "category": "Journal",
        "cite_score": 1.1,
        "is_potentially_predatory": true,
        "isbn": null,
        "issn": "2158107X",
        "publisher": "Science and Information Organization",
        "sjr": 0.193,
        "snip": 0.54,
        "subject_areas": [
          "Computer Science (all)"
        ],
        "title": "International Journal of Advanced Computer Science and Applications (IJACSA)"
      },
      "publication_date": "2019-01-01",
      "selected": null,
      "title": "NetMob: A Mobile Application Development Framework with Enhanced Large Objects Access for Mobile Cloud Storage Service",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85070095544&origin=inward",
        "http://thesai.org/Downloads/Volume10No7/Paper_84-NetMob_A_Mobile_Application_Development_Framework.pdf"
      ]
    },
    {
      "abstract": "Many young people suffer from chronic stress and other issues that inhibit the functioning and development of the prefrontal cortex, and this also affects their intrinsic motivation to engage in any...",
      "authors": [
        "Alicia Garc\u00eda-Holgado",
        "I\u00f1aki Tajes Reiris",
        "Nick Kearney",
        "Charlotta Martinus",
        "Francisco J. Garc\u00eda-Pe\u00f1alvo"
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1007/978-3-030-21814-0_4",
      "keywords": [
        "Mobile app",
        "Usability",
        "European project",
        "Yoga",
        "Wellbeing",
        "Heuristic evaluation",
        "Mental health"
      ],
      "number_of_pages": 12,
      "pages": "38-49",
      "publication": {
        "category": "Book",
        "cite_score": 1.8,
        "is_potentially_predatory": false,
        "isbn": "9783030715922",
        "issn": "03029743",
        "publisher": "Springer Verlag",
        "sjr": 0.249,
        "snip": 0.628,
        "subject_areas": [
          "Databases",
          "Cryptography and Security",
          "Distributed, Parallel, and Cluster Computing",
          "Theoretical Computer Science",
          "Computer Science (all)"
        ],
        "title": "IFIP International Conference on Distributed Applications and\n  Interoperable Systems, DAIS 2017: Distributed Applications and Interoperable\n  Systems pp 83-98"
      },
      "publication_date": "2019-01-01",
      "selected": null,
      "title": "An App to Support Yoga Teachers to Implement a Yoga-Based Approach to Promote Wellbeing Among Young People: Usability Study",
      "urls": [
        "https://link.springer.com/content/pdf/10.1007%2F978-3-030-21814-0_4.pdf",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85069868587&origin=inward"
      ]
    },
    {
      "abstract": "In a previous report, we explored the serverless OpenHealth approach to the Web as a Global Compute space. That approach relies on the modern browser full stack, and, in particular, its configuration for application assembly by code injection. The opportunity, and need, to expand this approach has since increased markedly, reflecting a wider adoption of Open Data policies by Public Health Agencies. Here, we describe how the serverless scaling challenge can be achieved by the isomorphic mapping between the remote data layer API and a local (client-side, in-browser) operator. This solution is validated with an accompanying interactive web application (bit.ly/loadsparcs) capable of real-time traversal of New York\u2019s 20 million patient records of the Statewide Planning and Research Cooperative System (SPARCS), and is compared with alternative approaches. The results obtained strengthen the argument that the FAIR reproducibility needed for Population Science applications in the age of P4 Medicine is particularly well served by the Web platform.",
      "authors": [
        "Jonas S. Almeida",
        "Janos Hajagos",
        "Joel Saltz",
        "Mary Saltz"
      ],
      "categories": null,
      "citations": 1,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.7717/peerj.6230",
      "keywords": [
        "Public health",
        "Epidemiology data commons",
        "Sparcs",
        "Serverless computing",
        "Openhealth"
      ],
      "number_of_pages": null,
      "pages": null,
      "publication": {
        "category": "Journal",
        "cite_score": 3.8,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "2167-8359",
        "publisher": "PeerJ Inc.",
        "sjr": 0.927,
        "snip": 1.04,
        "subject_areas": [
          "Agricultural and Biological Sciences (all)",
          "Biochemistry, Genetics and Molecular Biology (all)",
          "Neuroscience (all)"
        ],
        "title": "PeerJ"
      },
      "publication_date": "2019-01-01",
      "selected": null,
      "title": "Serverless OpenHealth at data commons scale\u2014traversing the 20 million patient records of New York\u2019s SPARCS dataset in real-time",
      "urls": [
        "https://peerj.com/articles/6230.pdf",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85060079058&origin=inward"
      ]
    },
    {
      "abstract": "With the emergence of Function-as-a-Service (FaaS) in the cloud, pay-per-use pricing models became available along with the traditional fixed price model for VMs and increased the complexity of...",
      "authors": [
        "Shay Horovitz",
        "Roei Amos",
        "Ohad Baruch",
        "Tomer Cohen",
        "Tal Oyar",
        "Afik Deri"
      ],
      "categories": null,
      "citations": 2,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1007/978-3-030-13342-9_15",
      "keywords": [
        "Machine learning",
        "Function as a service",
        "Serverless"
      ],
      "number_of_pages": 16,
      "pages": "171-186",
      "publication": {
        "category": "Book",
        "cite_score": 1.8,
        "is_potentially_predatory": false,
        "isbn": "9783030715922",
        "issn": "03029743",
        "publisher": "Springer Verlag",
        "sjr": 0.249,
        "snip": 0.628,
        "subject_areas": [
          "Databases",
          "Cryptography and Security",
          "Distributed, Parallel, and Cluster Computing",
          "Theoretical Computer Science",
          "Computer Science (all)"
        ],
        "title": "IFIP International Conference on Distributed Applications and\n  Interoperable Systems, DAIS 2017: Distributed Applications and Interoperable\n  Systems pp 83-98"
      },
      "publication_date": "2019-01-01",
      "selected": null,
      "title": "FaaStest - Machine Learning Based Cost and Performance FaaS Optimization",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85063060495&origin=inward",
        "https://link.springer.com/content/pdf/10.1007%2F978-3-030-13342-9_15.pdf"
      ]
    },
    {
      "abstract": "Serverless computing introduces a new Cloud service which consist an increasingly popular architecture for building distributed applications. This paper investigates and proposes a new resource management approach in a FaaS platform, based on intelligent techniques. A number of experiments applied through an indicative framework consisting of a client application and a Lambda function. Three Genetic Algorithms were employed to deliver optimal solutions in a multi-objective environment. \u00c2\u00a9 2019 CEUR-WS. All Rights Reserved.",
      "authors": [
        "Christoforou, A.",
        "Andreou, A.S."
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": 7,
      "pages": "2-8",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": 0.8,
        "is_potentially_predatory": false,
        "isbn": "9788670314764",
        "issn": "16130073",
        "publisher": "CEUR-WS",
        "sjr": 0.177,
        "snip": 0.345,
        "subject_areas": [
          "Computer Science (all)"
        ],
        "title": "CEUR Workshop Proceedings"
      },
      "publication_date": "2019-01-01",
      "selected": null,
      "title": "An effective resource management approach in a FaaS environment",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85063301718&origin=inward"
      ]
    },
    {
      "abstract": "The proceedings contain 24 papers. The special focus in this conference is on International Symposium on Model-Based Safety and Assessment. The topics include: Model synchronization: A formal framework for the management of heterogeneous models; DPN \u00e2\u0080\u0093 dependability priority numbers; towards dependability and energy aware asset management framework for maintenance planning in smart grids; formal verification of network interlocking control by distributed signal boxes; SQUADfps: Integrated model-based machine safety and product quality for flexible production systems; a serverless architecture for wireless body area network applications; Automated model-based attack tree analysis using HiP-HOPS; what today\u00e2\u0080\u0099s serious cyber attacks on cars tell us: Consequences for automotive security and dependability; Safety and security aspects of fail-operational urban surround perceptION (FUSION); Model based approach for RAMS analyses in the space domain with capella open-source tool; an approach for validating safety of perception software in autonomous driving systems; Stochastic modelling of autonomous vehicles driving scenarios using PEPA; a runtime safety analysis concept for open adaptive systems; clustering environmental conditions of historical accident data to efficiently generate testing sceneries for maritime systems; pattern-based formal approach to analyse security and safety of control systems; modeling patterns for the assessment of maintenance policies with altaRica 3.0; A domain specific language to support HAZOP studies of SysML models; Integrating existing safety analyses into SysML; FDS-ML: A new modeling formalism for probabilistic risk and safety analyses; Integrating safety design artifacts into system development models using safeDeML; A conceptual framework to incorporate complex basic events in HiP-HOPS; compositionality of component fault trees.",
      "authors": [],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": {
        "category": "Book",
        "cite_score": 1.8,
        "is_potentially_predatory": false,
        "isbn": "9783030715922",
        "issn": "03029743",
        "publisher": "Springer Verlag",
        "sjr": 0.249,
        "snip": 0.628,
        "subject_areas": [
          "Databases",
          "Cryptography and Security",
          "Distributed, Parallel, and Cluster Computing",
          "Theoretical Computer Science",
          "Computer Science (all)"
        ],
        "title": "IFIP International Conference on Distributed Applications and\n  Interoperable Systems, DAIS 2017: Distributed Applications and Interoperable\n  Systems pp 83-98"
      },
      "publication_date": "2019-01-01",
      "selected": null,
      "title": "6th International Symposium on Model-Based Safety and Assessment, IMBSA 2019",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85075685897&origin=inward"
      ]
    },
    {
      "abstract": "[No abstract available]",
      "authors": [
        "Al-Ameen, M.",
        "Spillner, J."
      ],
      "categories": null,
      "citations": 2,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": 6,
      "pages": "30-35",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": 0.8,
        "is_potentially_predatory": false,
        "isbn": "9788670314764",
        "issn": "16130073",
        "publisher": "CEUR-WS",
        "sjr": 0.177,
        "snip": 0.345,
        "subject_areas": [
          "Computer Science (all)"
        ],
        "title": "CEUR Workshop Proceedings"
      },
      "publication_date": "2019-01-01",
      "selected": null,
      "title": "Systematic and open exploration of FaaS and Serverless Computing research",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85063285891&origin=inward"
      ]
    },
    {
      "abstract": "We analyze many facets of the performance of gVisor, a new security-oriented container engine that integrates with Docker and backs Google\u00e2\u0080\u0099s serverless platform. We explore the effect gVisor\u00e2\u0080\u0099s in-Sentry network stack has on network throughput as well as the overheads of performing file opens via gVisor\u00e2\u0080\u0099s Gofer service. We further analyze gVisor startup performance, memory efficiency, and system-call overheads. Our findings have implications for the future design of similar hypervisor-based container engines. \u00c2\u00a9 2019 USENIX Association. All rights reserved.",
      "authors": [
        "Young, E.G.",
        "Zhu, P.",
        "Caraza-Harter, T.",
        "Arpaci-Dusseau, A.C.",
        "Arpaci-Dusseau, R.H."
      ],
      "categories": null,
      "citations": 19,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "11th USENIX Workshop on Hot Topics in Cloud Computing, HotCloud 2019, co-located with USENIX ATC 2019"
      },
      "publication_date": "2019-01-01",
      "selected": null,
      "title": "The true cost of containing: A gVisor case study",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85084164482&origin=inward"
      ]
    },
    {
      "abstract": "Digital Library",
      "authors": [
        "Adbys Vasconcelos",
        "Lucas Vieira",
        "\u00c3\u008dtalo Batista",
        "Rodolfo Silva",
        "Francisco Brasileiro"
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.5220/0007877005950600",
      "keywords": [
        "Cloud Federation",
        "Distributed Computing",
        "Function-as-a-Service"
      ],
      "number_of_pages": 6,
      "pages": "595-600",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9789897583650",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "CLOSER 2019 - Proceedings of the 9th International Conference on Cloud Computing and Services Science"
      },
      "publication_date": "2019-01-01",
      "selected": null,
      "title": "DistributedFaaS: Execution of Containerized Serverless Applications in Multi-Cloud Infrastructures",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85067456647&origin=inward"
      ]
    },
    {
      "abstract": "Wireless body area networks (WBANs) have become popular for providing real-time healthcare monitoring services. WBANs are an important subset of Cyber-physical systems (CPS). As the amount of sensing...",
      "authors": [
        "Pangkaj Chandra Paul",
        "John Loane",
        "Fergal McCaffery",
        "Gilbert Regan"
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1007/978-3-030-32872-6_16",
      "keywords": [
        "Serverless architecture",
        "Wireless body area network",
        "Cloud computing"
      ],
      "number_of_pages": 16,
      "pages": "239-254",
      "publication": {
        "category": "Book",
        "cite_score": 1.8,
        "is_potentially_predatory": false,
        "isbn": "9783030715922",
        "issn": "03029743",
        "publisher": "Springer Verlag",
        "sjr": 0.249,
        "snip": 0.628,
        "subject_areas": [
          "Databases",
          "Cryptography and Security",
          "Distributed, Parallel, and Cluster Computing",
          "Theoretical Computer Science",
          "Computer Science (all)"
        ],
        "title": "IFIP International Conference on Distributed Applications and\n  Interoperable Systems, DAIS 2017: Distributed Applications and Interoperable\n  Systems pp 83-98"
      },
      "publication_date": "2019-01-01",
      "selected": null,
      "title": "A Serverless Architecture for Wireless Body Area Network Applications",
      "urls": [
        "https://link.springer.com/content/pdf/10.1007%2F978-3-030-32872-6_16.pdf",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85075641641&origin=inward"
      ]
    },
    {
      "abstract": "The Cloud computing paradigm has revolutionised the computer science horizon during the past decade and has enabled the emergence of computing as the fifth utility. It has captured significant attention of academia, industries, and government bodies. Now, it has emerged as the backbone of modern economy by offering subscription-based services anytime, anywhere following a pay-as-you-go model. This has instigated (1) shorter establishment times for start-ups, (2) creation of scalable global enterprise applications, (3) better cost-to-value associativity for scientific and high-performance computing applications, and (4) different invocation/execution models for pervasive and ubiquitous applications. The recent technological developments and paradigms such as serverless computing, software-defined networking, Internet of Things, and processing at network edge are creating new opportunities for Cloud computing. However, they are also posing several new challenges and creating the need for new approaches and research strategies, as well as the re-evaluation of the models that were developed to address issues such as scalability, elasticity, reliability, security, sustainability, and application models. The proposed manifesto addresses them by identifying the major open challenges in Cloud computing, emerging trends, and impact areas. It then offers research directions for the next decade, thus helping in the realisation of Future Generation Cloud Computing. \u00c2\u00a9 2018 Association for Computing Machinery.",
      "authors": [
        "Buyya, R.",
        "Srirama, S.N.",
        "Casale, G.",
        "Calheiros, R.",
        "Simmhan, Y.",
        "Varghese, B.",
        "Gelenbe, E.",
        "Javadi, B.",
        "Vaquero, L.M.",
        "Netto, M.A.S.",
        "Toosi, A.N.",
        "Rodriguez, M.A.",
        "Llorente, I.M.",
        "De Capitani Di Vimercati, S.",
        "Samarati, P.",
        "Milojicic, D.",
        "Varela, C.",
        "Bahsoon, R.",
        "Dias De Assuncao, M.",
        "Rana, O.",
        "Zhou, W.",
        "Jin, H.",
        "Gentzsch, W.",
        "Zomaya, A.Y.",
        "Shen, H."
      ],
      "categories": null,
      "citations": 69,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1145/3241737",
      "keywords": [
        "Application development",
        "Fog computing",
        "Cloud computing",
        "InterCloud",
        "Sustainability",
        "Cloud economics",
        "Scalability",
        "Serverless computing",
        "Data management"
      ],
      "number_of_pages": null,
      "pages": null,
      "publication": {
        "category": "Journal",
        "cite_score": 22.3,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "03600300",
        "publisher": "Association for Computing Machinery (ACM)",
        "sjr": 2.079,
        "snip": 6.953,
        "subject_areas": [
          "Theoretical Computer Science",
          "Computer Science (all)"
        ],
        "title": "ACM Computing Surveys"
      },
      "publication_date": "2019-01-01",
      "selected": null,
      "title": "A manifesto for future generation cloud computing: Research directions for the next decade",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85061443613&origin=inward"
      ]
    },
    {
      "abstract": "Visually challenged people may experience certain difficulties in their daily interaction with technology. That is essentially because the main way to exchange and process information is by written text, images or videos. Since the basic purpose of innovation is to improve people's lifestyle, in this paper we propose a system that can make technology accessible to a broader group. Our prototype is presented as a mobile application based on vocal interaction, which can help people facing visual disorders consult their personal agenda, create an event, invite other friends to attend it, check the weather in certain areas and many other day-to-day tasks. Regarding the implementation, the project consists of a mobile application that interacts with a cloud based system, which makes it reliable and low in latency due to the resource availability in multiple global regions, provided by the newly emerging platform used in building the infrastructure. The novelty of the system lays in the highly flexible serverless architecture [1] that is open to extension and closed to modification through the set of autonomous cloud processing methods that sustain the base of the functionality. This distributed processing approach guarantees that the user always receives a response from his personal assistant, either by using artificial intelligence context generated phrases, by real-time cloud function processing or by fallback to the training answers. \u00c2\u00a9 2019 The Author(s). Published by Elsevier B.V.",
      "authors": [
        "Calancea, C.G.",
        "Milu\u00c5\u00a3, C.-M.",
        "Alboaie, L.",
        "Iftene, A."
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1016/j.procs.2019.09.169",
      "keywords": [
        "Cloud Architectures",
        "Personal Assistants",
        "Visually Challenged"
      ],
      "number_of_pages": 10,
      "pages": "145-154",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Procedia Computer Science"
      },
      "publication_date": "2019-01-01",
      "selected": null,
      "title": "IAssistMe - Adaptable assistant for persons with eye disabilities",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85076257910&origin=inward"
      ]
    },
    {
      "abstract": "Container virtualization has become the tool of choice for running isolated applications in cloud environments. Linux-Containers virtualize at the operating system level, with multiple containers running atop the operating system kernel directly. Therefore, threats to one container are potentially threats to many others. Especially for PaaS and Serverless providers, the secure execution of untrusted workloads on their platform in order to mitigate software vulnerabilities from spreading has high priority. Containers face a variety of different threats, vulnerabilities and historical weaknesses that need to be considered and defended against. This paper presents current approaches to securing container workloads. gVisor, Kata Containers and Firecracker are presented and compared with each other. Although sandbox containers have different attack surfaces such as the container daemon process, network, or storage, this paper focuses on the Linux kernel itself as a vulnerability in sandbox containers and examines how each approach implements protection. Copyright \u00c2\u00a9 2019 for this paper by its authors. Use permitted under Creative Commons License Attribution 4.0 International (CC BY 4.0).",
      "authors": [
        "Bargmann, C.",
        "Tropmann-Frick, M."
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": 0.8,
        "is_potentially_predatory": false,
        "isbn": "9788670314764",
        "issn": "16130073",
        "publisher": "CEUR-WS",
        "sjr": 0.177,
        "snip": 0.345,
        "subject_areas": [
          "Computer Science (all)"
        ],
        "title": "CEUR Workshop Proceedings"
      },
      "publication_date": "2019-01-01",
      "selected": null,
      "title": "A survey on secure container isolation approaches for multi-tenant container workloads and serverless computing",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85076487729&origin=inward"
      ]
    },
    {
      "abstract": "The main technologies around modern cloud development and deployment paradigms such as Function-as-a-Service (FaaS) environments follow a typical technology life-cycle. Starting with basic code installation and execution environments, they unfold into a complete ecosystem with rich collaborative development and market enablement tools. In this paper, we analyse the growth of such ecosystems, reveal causes of hindrances in previous service-oriented approaches, and present a vision of how an ecosystem with sustainable operation could look like both in general and specifically for cloud functions. We present Function Hub, a partial prototypical implementation to gain first knowledge about the potential operational ecosystem behaviour. \u00c2\u00a9 2019 CEUR-WS. All Rights Reserved.",
      "authors": [
        "Bogado-Sarubbi, Y.",
        "Benitez-Davalos, W.",
        "Lopez-Pires, F.",
        "Spillner, J."
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": null,
      "keywords": [
        "Service ecosystems",
        "Cloud applications",
        "Tangible microservices",
        "Serverless computing",
        "Marketplaces"
      ],
      "number_of_pages": 7,
      "pages": "18-24",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": 0.8,
        "is_potentially_predatory": false,
        "isbn": "9788670314764",
        "issn": "16130073",
        "publisher": "CEUR-WS",
        "sjr": 0.177,
        "snip": 0.345,
        "subject_areas": [
          "Computer Science (all)"
        ],
        "title": "CEUR Workshop Proceedings"
      },
      "publication_date": "2019-01-01",
      "selected": null,
      "title": "Towards sustainable ecosystems for cloud functions",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85063262852&origin=inward"
      ]
    },
    {
      "abstract": "[No abstract available]",
      "authors": [
        "Spillner, J."
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": 1,
      "pages": "1",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": 0.8,
        "is_potentially_predatory": false,
        "isbn": "9788670314764",
        "issn": "16130073",
        "publisher": "CEUR-WS",
        "sjr": 0.177,
        "snip": 0.345,
        "subject_areas": [
          "Computer Science (all)"
        ],
        "title": "CEUR Workshop Proceedings"
      },
      "publication_date": "2019-01-01",
      "selected": null,
      "title": "European Symposium on serverless computing and applications - ESSCA 2018 - Symposium proceedings",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85063294919&origin=inward"
      ]
    },
    {
      "abstract": "[No abstract available]",
      "authors": [
        "Werner, Sebastian",
        "Kuhlenkamp, J\u00f6rn",
        "Klems, Markus",
        "M\u00fcller, Johannes",
        "Tai, Stefan"
      ],
      "categories": null,
      "citations": 1,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.18420/inf2019_35",
      "keywords": [
        "Serverless",
        "Matrix multiplication",
        "Big data",
        "Cloud services"
      ],
      "number_of_pages": 2,
      "pages": "263-264",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": 0.7,
        "is_potentially_predatory": false,
        "isbn": "9783885796886",
        "issn": "16175468",
        "publisher": "Gesellschaft fur Informatik (GI)",
        "sjr": 0.148,
        "snip": 0.185,
        "subject_areas": [
          "Computer Science Applications"
        ],
        "title": "Lecture Notes in Informatics (LNI), Proceedings - Series of the Gesellschaft fur Informatik (GI)"
      },
      "publication_date": "2019-01-01",
      "selected": null,
      "title": "Serverless Big Data Processing using Matrix Multiplication as Example",
      "urls": [
        "http://dl.gi.de/bitstream/20.500.12116/24983/1/paper3_12.pdf",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85086012826&origin=inward"
      ]
    },
    {
      "abstract": "Fueled by IoT botnets and DDoS-as-a-Service tools, distributed denial of service (DDoS) attacks have reached record high volumes. Although there exist DDoS protection services, they can be costly for small organizations as well as individual users. In this paper, we present a low-cost DDoS solution, DynaShield, which a user can deploy at common cloud service providers. DynaShield employs three techniques to reduce cost. First, it uses an on-demand model. A server dynamically updates its DNS record to redirect clients\u00e2\u0080\u0099 traffic to DynaShield when it is under attack, avoiding paying for cloud services during peacetime. Second, DynaShield combines serverless functions and elastic servers provided by cloud providers to auto-scale to large attacks without overprovisioning. Third, DynaShield uses cryptocurrency puzzles as proof of work. The coin mining profit can further offset a protected server\u00e2\u0080\u0099s cloud service charges. Our preliminary evaluation suggests that DynaShield can cost as little as a few dollars per month to prevent an organization from common DDoS attacks. \u00c2\u00a9 2019 USENIX Association. All rights reserved.",
      "authors": [
        "Zheng, S.",
        "Yang, X."
      ],
      "categories": null,
      "citations": 2,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "11th USENIX Workshop on Hot Topics in Cloud Computing, HotCloud 2019, co-located with USENIX ATC 2019"
      },
      "publication_date": "2019-01-01",
      "selected": null,
      "title": "DynaShield: Reducing the cost of DDoS defense using cloud services",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85084161930&origin=inward"
      ]
    },
    {
      "abstract": "The Serverless or Function-as-a-Service (FaaS) model capitalizes on lightweight execution by packaging code and dependencies together for just-in-time dispatch. Often a container environment has to be set up afresh\u00e2\u0080\u0093 a condition called \u00e2\u0080\u009ccold start\", and in such cases, performance suffers and overheads mount, both deteriorating rapidly under high concurrency. Caching and reusing previously employed containers ties up memory and risks information leakage. Latency for cold starts is frequently due to work and wait-times in setting up various dependencies \u00e2\u0080\u0093 such as in initializing networking elements. This paper proposes a solution that pre-crafts such resources and then dynamically reassociates them with baseline containers. Applied to networking, this approach demonstrates an order of magnitude gain in cold starts, negligible memory consumption, and flat startup time under rising concurrency. \u00c2\u00a9 2019 USENIX Association. All rights reserved.",
      "authors": [
        "Mohan, A.",
        "Sane, H.",
        "Doshi, K.",
        "Edupuganti, S.",
        "Nayak, N.",
        "Sukhomlinov, V."
      ],
      "categories": null,
      "citations": 22,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "11th USENIX Workshop on Hot Topics in Cloud Computing, HotCloud 2019, co-located with USENIX ATC 2019"
      },
      "publication_date": "2019-01-01",
      "selected": null,
      "title": "Agile cold starts for scalable serverless",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85084160535&origin=inward"
      ]
    },
    {
      "abstract": "In this article, we analyze Tan et al.\u2019s serverless RFID authentication and search protocols. Tan et al. proposed a serverless RFID system to solve this problem without a central database while...",
      "authors": [
        "Chia-Hui Wei",
        "Cheng-Ying Yang",
        "Min-Shiang Hwang"
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1007/978-3-030-02804-6_110",
      "keywords": [
        "Security",
        "Authentication",
        "Serverless",
        "RFID"
      ],
      "number_of_pages": 5,
      "pages": "842-846",
      "publication": {
        "category": "Book",
        "cite_score": 0.9,
        "is_potentially_predatory": false,
        "isbn": "9783030577957",
        "issn": "21945357",
        "publisher": "Springer Verlag",
        "sjr": 0.184,
        "snip": 0.428,
        "subject_areas": [
          "Control and Systems Engineering",
          "Computer Science (all)"
        ],
        "title": "Workshops of  the International Conference on Advanced Information Networking and Applications"
      },
      "publication_date": "2019-01-01",
      "selected": null,
      "title": "Cryptanalysis of the Serverless RFID Authentication and Search Protocols",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85061093922&origin=inward",
        "https://link.springer.com/content/pdf/10.1007%2F978-3-030-02804-6_110.pdf"
      ]
    },
    {
      "abstract": "The proceedings contain 18 papers. The topics discussed include: a survey on secure container isolation approaches for multi-tenant container workloads and serverless computing; the impact of refactoring on maintability of Java code: a preliminary review; survey on static analysis tools of python programs; detecting source code similarity using compression; process evaluation and improvement: a case study of the loan approval process; an insight on standardized patterns in model-driven software development; and approach to selecting an appropriate JavaScript charting library for graphically rich single page JavaScript applications.",
      "authors": [],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": 0.8,
        "is_potentially_predatory": false,
        "isbn": "9788670314764",
        "issn": "16130073",
        "publisher": "CEUR-WS",
        "sjr": 0.177,
        "snip": 0.345,
        "subject_areas": [
          "Computer Science (all)"
        ],
        "title": "CEUR Workshop Proceedings"
      },
      "publication_date": "2019-01-01",
      "selected": null,
      "title": "SQAMIA 2019 - Proceedings of the 8th Workshop on Software Quality Analysis, Monitoring, Improvement, and Applications",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85076462760&origin=inward"
      ]
    },
    {
      "abstract": "Function as a Service (FaaS) promises a more cost-efficient deployment and operation of cloud functions compared to related cloud technologies, like Platform as a Service (PaaS) and Container as a Service (CaaS). Scaling, cold starts, function configurations, dependent services, network latency etc. influence the two conflicting goals cost and performance. Since so many factors have impact on these two dimensions, users need a tool to simulate the function in an early development stage to solve these conflicting goals. Therefore, a simulation framework is proposed in this paper. \u00c2\u00a9 2019 CEUR-WS. All rights reserved.",
      "authors": [
        "Manner, J."
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": null,
      "keywords": [
        "Simulation Framework",
        "Serverless Computing",
        "Benchmarking",
        "Cold Start",
        "Function as a Service",
        "Load Pattern",
        "FaaS",
        "Pricing"
      ],
      "number_of_pages": 4,
      "pages": "43-46",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": 0.8,
        "is_potentially_predatory": false,
        "isbn": "9788670314764",
        "issn": "16130073",
        "publisher": "CEUR-WS",
        "sjr": 0.177,
        "snip": 0.345,
        "subject_areas": [
          "Computer Science (all)"
        ],
        "title": "CEUR Workshop Proceedings"
      },
      "publication_date": "2019-01-01",
      "selected": null,
      "title": "Towards performance and cost simulation in function as a service",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85064120182&origin=inward"
      ]
    },
    {
      "abstract": "Serverless computing is currently taking a momentum due to the main benefits it introduces which include zero administration and reduced operation cost for applications. However, not all application...",
      "authors": [
        "Kyriakos Kritikos",
        "Pawe\u0142 Skrzypek"
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1007/978-3-030-20485-3_34",
      "keywords": [],
      "number_of_pages": 15,
      "pages": "435-449",
      "publication": {
        "category": "Book",
        "cite_score": 1.5,
        "is_potentially_predatory": false,
        "isbn": "9783030588571",
        "issn": "18651348",
        "publisher": "Springer Verlag",
        "sjr": 0.214,
        "snip": 0.493,
        "subject_areas": [
          "Information Systems and Management",
          "Information Systems",
          "Business and International Management",
          "Management Information Systems",
          "Modeling and Simulation",
          "Control and Systems Engineering"
        ],
        "title": "International Conference on Business Information Systems"
      },
      "publication_date": "2019-01-01",
      "selected": null,
      "title": "Towards an Optimized, Cloud-Agnostic Deployment of Hybrid Applications",
      "urls": [
        "https://link.springer.com/content/pdf/10.1007%2F978-3-030-20485-3_34.pdf",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85068167035&origin=inward"
      ]
    },
    {
      "abstract": "The proceedings contain 15 papers. The special focus in this conference is on Coordination Models and Languages. The topics include: Verification of concurrent design patterns with data; self-organising coordination regions: A pattern for edge computing; aggregate processes in field calculus; automatic quality-of-service evaluation in service-oriented computing; DiRPOMS: Automatic checker of distributed realizability of POMSets; Coordination of tasks on a real-time OS; reversing P/T nets; towards races in linear logic; the share operator for field-based coordination; scan: A simple coordination workbench; CHOReVOLUTION: Automating the realization of highly\u00e2\u0080\u0093collaborative distributed applications; ABEL - A domain specific framework for programming with attribute-based communication; bridging the gap between supervisory control and coordination of services: Synthesis of orchestrations and choreographies; no more, no less: A formal model for serverless computing.",
      "authors": [],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": {
        "category": "Book",
        "cite_score": 1.8,
        "is_potentially_predatory": false,
        "isbn": "9783030715922",
        "issn": "03029743",
        "publisher": "Springer Verlag",
        "sjr": 0.249,
        "snip": 0.628,
        "subject_areas": [
          "Databases",
          "Cryptography and Security",
          "Distributed, Parallel, and Cluster Computing",
          "Theoretical Computer Science",
          "Computer Science (all)"
        ],
        "title": "IFIP International Conference on Distributed Applications and\n  Interoperable Systems, DAIS 2017: Distributed Applications and Interoperable\n  Systems pp 83-98"
      },
      "publication_date": "2019-01-01",
      "selected": null,
      "title": "21st IFIP WG 6.1 International Conference on Coordination Models and Languages, COORDINATION 2019 held as part of the 14th International Federated Conference on Distributed Computing Techniques, DisCoTec 2019",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85067518186&origin=inward"
      ]
    },
    {
      "abstract": "The idea of integrating a voice response system to control IoT applications is creating a new dimension in human-computer interaction. Google Assistant, Apple\u00e2\u0080\u0099s Siri, Microsoft\u00e2\u0080\u0099s Cortana, Amazon Alexa are the key players in the market that provide generalized response services. These services are restricted to specific devices and OS platforms, and cannot be modified, as per user requirement. This work presents a low-cost, artificially intelligent voice response system driven by AWS (Amazon Web Services) IoT cloud platform and Raspberry Pi. We used Alexa voice service (AVS) in Raspberry Pi and a microphone for speech reception. AVS is an integral part of AWS IoT that enables our device to act as Alexa voice client. It receives a speech signal, recognizes and interprets the speech signal, and responds to the user, accordingly. This device will serve as Alexa voice client, as well as Eclipse Paho MQTT (Message Queuing Telemetry Transport), simultaneously. This low-cost, voice response system can replace Amazon Echo, Google Home, and Apple HomePod. Moreover, users can customize the response of their query using speech synthesis markup language (SSML) in AVS. This design successfully integrates various Platform as a Service (PAAS) services like, AWS Lambda, Alexa Voice Service (AVS), and AWS IoT. \u00c2\u00a9 2019 Elsevier Inc. All rights reserved.",
      "authors": [
        "Saha, S.",
        "Alam, M.",
        "Dey, S."
      ],
      "categories": null,
      "citations": 2,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1016/B978-0-12-818130-0.00010-6",
      "keywords": [
        "Speech system markup language",
        "Human-computer interaction",
        "Voice response system",
        "Artificially intelligent",
        "Amazon web server",
        "AWS Lambda"
      ],
      "number_of_pages": 11,
      "pages": "175-185",
      "publication": {
        "category": "Book",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9780128181300",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Intelligent Speech Signal Processing"
      },
      "publication_date": "2019-01-01",
      "selected": null,
      "title": "A framework for artificially intelligent customized voice response system design using speech synthesis markup language",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85083267434&origin=inward"
      ]
    },
    {
      "abstract": "We present new means for performing static program analysis on serverless programs. We propose a new type of call graph that captures the stateless, event-driven nature of such programs and describe a method for constructing these new extended service call graphs. Next, we survey applications of program analysis that can leverage our extended service call graphs to answer questions about code that executes on a serverless platform. We present findings on the applicability of our techniques to real open source serverless programs. Finally, we close with several open questions about how to best incorporate static analysis in problem solving for developing serverless applications. \u00c2\u00a9 2019 USENIX Association. All rights reserved.",
      "authors": [
        "Obetz, M.",
        "Patterson, S.",
        "Milanova, A."
      ],
      "categories": null,
      "citations": 5,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "11th USENIX Workshop on Hot Topics in Cloud Computing, HotCloud 2019, co-located with USENIX ATC 2019"
      },
      "publication_date": "2019-01-01",
      "selected": null,
      "title": "Static call graph construction in AWS lambda serverless applications",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85084163844&origin=inward"
      ]
    },
    {
      "abstract": "The advances of Machine Learning (ML) have sparked a growing demand of ML-as-a-Service: developers train ML models and publish them in the cloud as online services to provide low-latency inference at scale. The key challenge of ML model serving is to meet the response-time Service-Level Objectives (SLOs) of inference workloads while minimizing the serving cost. In this paper, we tackle the dual challenge of SLO compliance and cost effectiveness with MArk (Model Ark), a general-purpose inference serving system built in Amazon Web Services (AWS). MArk employs three design choices tailor-made for inference workload. First, MArk dynamically batches requests and opportunistically serves them using expensive hardware accelerators (e.g., GPU) for improved performance-cost ratio. Second, instead of relying on feedback control scaling or over-provisioning to serve dynamic workload, which can be too slow or too expensive for inference serving, MArk employs predictive autoscaling to hide the provisioning latency at low cost. Third, given the stateless nature of inference serving, MArk exploits the flexible, yet costly serverless instances to cover the occasional load spikes that are hard to predict. We evaluated the performance of MArk using several state-of-the-art ML models trained in popular frameworks including TensorFlow, MXNet, and Keras. Compared with the premier industrial ML serving platform SageMaker, MArk reduces the serving cost up to 7.8\u00c3\u0097 while achieving even better latency performance. \u00c2\u00a9 Proceedings of the 2019 USENIX Annual Technical Conference, USENIX ATC 2019. All rights reserved.",
      "authors": [
        "Zhang, C.",
        "Yu, M.",
        "Wang, W.",
        "Yan, F."
      ],
      "categories": null,
      "citations": 30,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": 14,
      "pages": "1049-1062",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781939133038",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings of the 2019 USENIX Annual Technical Conference, USENIX ATC 2019"
      },
      "publication_date": "2019-01-01",
      "selected": null,
      "title": "Mark: Exploiting cloud services for cost-effective, slo-aware machine learning inference serving",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85076183718&origin=inward"
      ]
    },
    {
      "abstract": "This paper accompanies a keynote speech given at the 8th International Conference on Cloud Computing and Services Science, CLOSER 2018. The keynote offered an overview of \u2018traditional\u2019 and \u2018new\u2019...",
      "authors": [
        "Lee Gillam"
      ],
      "categories": null,
      "citations": 2,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1007/978-3-030-29193-8_2",
      "keywords": [],
      "number_of_pages": 16,
      "pages": "24-39",
      "publication": {
        "category": "Book",
        "cite_score": 0.8,
        "is_potentially_predatory": false,
        "isbn": "9783030719050",
        "issn": "18650929",
        "publisher": "Springer Verlag",
        "sjr": 0.16,
        "snip": 0.32,
        "subject_areas": [
          "Mathematics (all)",
          "Computer Science (all)"
        ],
        "title": "International Conference on Software Process Improvement and Capability Determination"
      },
      "publication_date": "2019-01-01",
      "selected": null,
      "title": "Will Cloud Gain an Edge, or, CLOSER, to the Edge",
      "urls": [
        "https://link.springer.com/content/pdf/10.1007%2F978-3-030-29193-8_2.pdf",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85071498994&origin=inward"
      ]
    },
    {
      "abstract": "Digital Library",
      "authors": [
        "Louis Racicot",
        "Nicolas Cloutier",
        "Julien Abt",
        "Fabio Petrillo"
      ],
      "categories": null,
      "citations": 2,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.5220/0007842000600070",
      "keywords": [
        "Maintainability",
        "Function as a service",
        "Software architecture",
        "Serverless",
        "Cloud computing"
      ],
      "number_of_pages": 11,
      "pages": "60-70",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9789897583797",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "ICSOFT 2019 - Proceedings of the 14th International Conference on Software Technologies"
      },
      "publication_date": "2019-01-01",
      "selected": null,
      "title": "Quality Aspects of Serverless Architecture: An Exploratory Study on Maintainability",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85073100053&origin=inward"
      ]
    },
    {
      "abstract": "The rapid evolution in cloud computing leads to a rising elegance of serverless cloud-based software architectures which primarily focuses on providing the software developers a great potential for executing different arbitrary functions having minor overhead in server management as FaaS (Function-as-a-service). These FaaS applications are a set of stateless functions that are triggered by events defined by the cloud provider. However, the service configuration of such event-driven serverless applications is a complex process. Particularly, the changing configuration requirements on multiple clouds create low-level implementation challenges. Therefore, this article introduces UMLPMSC (UML Profile for Multi-Cloud Service Configuration) for event driven serverless applications to model the service configuration design requirements at high abstraction level. This leads to transform the high-level source UMLPMSC models into low level serverless framework implementations for the service configuration. The applicability of the profile has been validated through two case studies for AWS and Azure serverless function providers. It has been concluded that UMLPMSC significantly simplifies the multi-cloud service configuration process for event-driven serverless applications. \u00c2\u00a9 2019 Association for Computing Machinery.",
      "authors": [
        "Samea, F.",
        "Azam, F.",
        "Anwar, M.W.",
        "Khan, M.",
        "Rashid, M."
      ],
      "categories": null,
      "citations": 6,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1145/3316615.3316636",
      "keywords": [
        "Service configuration",
        "MDA",
        "Serverless computing",
        "UMLPMSC"
      ],
      "number_of_pages": 5,
      "pages": "431-435",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450365734",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "ACM International Conference Proceeding Series"
      },
      "publication_date": "2019-01-01",
      "selected": null,
      "title": "A UML profile for multi-cloud service configuration (UMLPMSC) in event-driven serverless applications",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85066053141&origin=inward"
      ]
    },
    {
      "abstract": "In the growing Internet of Things context, thousands of computing devices with various functionalities are producing data (from environmental sensors or other sources). However, they are also collecting, storing, processing and transmitting data to eventually communicate them securely to third parties (e.g., owners of devices or cloud data storage). The deployed devices are often battery-powered mobile or static nodes equipped with sensors and/or actuators, and they communicate using wireless technologies. Examples include unmanned aerial vehicles, wireless sensor nodes, smart beacons, and wearable health objects. Such resource-constrained devices include Active Radio Frequency IDentification (RFID) nodes, and these are used to illustrate our proposal. In most scenarios, these nodes are unattended in an adverse environment, so data confidentiality must be ensured from the sensing phase through to delivery to authorized entities: in other words, data must be securely stored and transmitted to prevent attack by active adversaries even if the nodes are captured. However, due to the scarce resources available to nodes in terms of energy, storage, and/or computation, the proposed security solution has to be lightweight. In this article, we propose a serverless protocol to enable Mobile Data Collectors (MDCs), such as drones, to securely collect data from mobile and static Active RFID nodes and then deliver them later to an authorized third party. The whole solution ensures data confidentiality at each step (from the sensing phase, before data collection by the MDC, once data have been collected by MDC, and during final delivery), while fulfilling the lightweight requirements for the resource-limited entities involved. To assess the suitability of the protocol against the performance requirements, it was implemented on the most resource-constrained devices to get the worst possible results. In addition, to prove the protocol fulfills the security requirements, it was analyzed using security games and also formally verified using the AVISPA and ProVerif tools. \u00c2\u00a9 2019 Association for Computing Machinery.",
      "authors": [
        "Cherif, A.",
        "Belkadi, M.",
        "Sauveron, D."
      ],
      "categories": null,
      "citations": 1,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1145/3274667",
      "keywords": [
        "Lightweight cryptography",
        "Data collection protocol",
        "Active RFID nodes",
        "Data confidentiality",
        "Serverless protocol"
      ],
      "number_of_pages": null,
      "pages": null,
      "publication": {
        "category": "Journal",
        "cite_score": 4.7,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "15399087",
        "publisher": "Association for Computing Machinery (ACM)",
        "sjr": 0.435,
        "snip": 1.089,
        "subject_areas": [
          "Hardware and Architecture",
          "Software"
        ],
        "title": "ACM Transactions on Embedded Computing Systems"
      },
      "publication_date": "2019-01-01",
      "selected": null,
      "title": "A lightweight and secure data collection serverless protocol demonstrated in an active RFIDS scenario",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85065767561&origin=inward"
      ]
    },
    {
      "abstract": "Communication networks need to be both adaptive and scalable. The last few years have seen an explosive growth of software-defined networking (SDN) and network function virtualization (NFV) to address this need. Both technologies help enable networking software to be decoupled from the hardware so that software functionality is no longer constrained by the underlying hardware and can evolve independently. Both SDN and NFV aim to advance a software-based approach to networking, where networking functionality is implemented in software modules and executed on a suitable cloud computing platform. Achieving this goal requires the virtualization paradigm used in these services that play an important role in the transition to software-based networks. Consequently, the corresponding computing platforms accompanying the virtualization technologies need to provide the required agility, robustness, and scalability for the services executed. Serverless computing has recently emerged as a new paradigm in virtualization and has already significantly changed the economics of offloading computations to the cloud. It is considered as a low-latency, resource-efficient, and rapidly deployable alternative to traditional virtualization approaches, such as those based on virtual machines and containers. Serverless computing provides scalability and cost reduction, without requiring any additional configuration overhead on the part of the developer. In this paper, we explore and survey how serverless computing technology can help building adaptive and scalable networks and show the potential pitfalls of doing so. \u00c2\u00a9 1963-2012 IEEE.",
      "authors": [
        "Paarijaat Aditya",
        "Istemi Ekin Akkus",
        "Andre Beck",
        "Ruichuan Chen",
        "Volker Hilt",
        "Ivica Rimac",
        "Klaus Satzke",
        "Manuel Stein"
      ],
      "categories": null,
      "citations": 14,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/JPROC.2019.2898101",
      "keywords": [
        "Application virtualization",
        "cloud computing",
        "software-defined networking (SDN)",
        "serverless computing",
        "network function virtualization (NFV)",
        "edge computing"
      ],
      "number_of_pages": 12,
      "pages": "667-678",
      "publication": {
        "category": "Journal",
        "cite_score": 21.6,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "1558-2256",
        "publisher": "Institute of Electrical and Electronics Engineers Inc.",
        "sjr": 2.383,
        "snip": 4.671,
        "subject_areas": [
          "Computer Science (all)",
          "Electrical and Electronic Engineering"
        ],
        "title": "Proceedings of the IEEE"
      },
      "publication_date": "2019-01-01",
      "selected": null,
      "title": "Will Serverless Computing Revolutionize NFV?",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85062408182&origin=inward",
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=8653379"
      ]
    },
    {
      "abstract": "Mathematics education for visually impaired students is challenging because their learning materials are generally limited to braille books, and audiobooks. In order to increase the chance of learning mathematical content for people with visual impairment, this paper presents the design and development of a cloud-based mobile application called EyeMath, using serverless microservices in Amazon AWS. Users can provide images of page snippets for the application to process and read their content to the users. EyeMath segments an input image into smaller pieces and separates pieces that have only plain text from pieces with mathematical symbols. The mathematical-related pieces are further processed into an Abstract Syntax Tree (AST) and then parsed into Thai sentences. For plain text pieces, EyeMath relies on Tesseract OCR to convert them into text. Finally, results for all pieces are combined together systematically for the device's screen reader program to read aloud. The performance evaluation of the application shows high correctness in reading math content within test images and our usability testing confirms the potential usefulness of the application to visually impaired readers. \u00c2\u00a9 2019 IEEE.",
      "authors": [
        "Kanlayanee Dumkasem",
        "Padchaya Srisingchai",
        "Prapaporn Rattanatamrong"
      ],
      "categories": null,
      "citations": 1,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/ICSEC47112.2019.8974682",
      "keywords": [
        "Learning accessibility",
        "Mathematical expression recognition",
        "Language parsing",
        "Optical Character Recognition (OCR)",
        "Serverless microservices",
        "Image processing",
        "Mobile Application"
      ],
      "number_of_pages": 6,
      "pages": "197-202",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-7281-2545-9",
        "issn": null,
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "2019 23rd International Computer Science and Engineering Conference (ICSEC)"
      },
      "publication_date": "2019-01-01",
      "selected": null,
      "title": "EyeMath: Increasing Accessibility of Mathematics to Visually Impaired Readers",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85081656218&origin=inward",
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=8974682"
      ]
    },
    {
      "abstract": "The focus of research into 5G networks to date has been largely on the required advances in network architectures, technologies, and infrastructures. Less effort has been put on the applications and services that will make use of and exploit the flexibility of 5G networks built upon the concept of software-defined networking (SDN) and network function virtualization (NFV). Media-based applications are amongst the most demanding services, requiring large bandwidths for high audio-visual quality, low-latency for interactivity, and sufficient infrastructure resources to deliver the computational power for running the media applications in the networked cloud. This paper presents a novel service virtualization platform (SVP), called 5G-MEDIA SVP, which leverages the principles of NFV and SDN to facilitate the development, deployment, and operation of media services on 5G networks. The platform offers an advanced cognitive management environment for the provisioning of network services (NSs) and media-related applications, which directly link their lifecycle management with user experience as well as optimization of infrastructure resource utilization. Another innovation of 5G-MEDIA SVP is the integration of serverless computing with media intensive applications in 5G networks, increasing cost effectiveness of operation and simplifying development and deployment time. The proposed SVP is being validated against three media use cases: 1) immersive virtual reality 3-D gaming application; 2) remote production of broadcast content incorporating user generated contents; and 3) dynamically adaptive content distribution networks for the intelligent distribution of ultrahigh definition content. The preliminary results of the 5G-MEDIA SVP platform evaluation are compared against current practice and show that the proposed platform provides enhanced functionality for the operators and infrastructure owners, while ensuring better NS performance to service providers and end users. \u00c2\u00a9 1963-12012 IEEE.",
      "authors": [
        "Federico Alvarez",
        "David Breitgand",
        "David Griffin",
        "Pasquale Andriani",
        "Stamatia Rizou",
        "Nikolaos Zioulis",
        "Francesca Moscatelli",
        "Javier Serrano",
        "Madeleine Keltsch",
        "Panagiotis Trakadas",
        "T. Khoa Phan",
        "Avi Weit",
        "Ugur Acar",
        "Oscar Prieto",
        "Francesco Iadanza",
        "Gino Carrozzo",
        "Harilaos Koumaras",
        "Dimitrios Zarpalas",
        "David Jimenez"
      ],
      "categories": null,
      "citations": 25,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/TBC.2019.2901400",
      "keywords": [
        "immersive media",
        "remote production",
        "5G networks",
        "network functions virtualization",
        "serverless computing",
        "content delivery networks"
      ],
      "number_of_pages": 12,
      "pages": "369-380",
      "publication": {
        "category": "Journal",
        "cite_score": 8.1,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "1557-9611",
        "publisher": "Institute of Electrical and Electronics Engineers Inc.",
        "sjr": 0.782,
        "snip": 1.881,
        "subject_areas": [
          "Electrical and Electronic Engineering",
          "Media Technology"
        ],
        "title": "IEEE Transactions on Broadcasting"
      },
      "publication_date": "2019-01-01",
      "selected": null,
      "title": "An Edge-to-Cloud Virtualized Multimedia Service Platform for 5G Networks",
      "urls": [
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=8667014",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85063366825&origin=inward"
      ]
    },
    {
      "abstract": "The fast-paced developments of cloud computing are evolving new kinds of machines that will be applied to professional media production. Serverless, distributed, clustered, and graphics-processingunit (GPU)-accelerated, the nature of cloud-fit architectures is changing the patterns and design of software and services. Is it even possible to shift the highly sequential, line-timed infrastructure of the existing media facilities into the stochastic, message-driven, and asynchronous cloud? What new creative possibilities emerge from a platform that scales to enable personalized production? This paper visualizes the kind of machine you would build if you had an infinite amount of capacity in terms of networks, storage, and compute. The design for such a machine and a plan for how to build it are introduced in the form of the Agile Media Blueprint (AMB). In the context of video data, the measurements and analysis are provided for as is the capability of current systems in relation to the idealistic notion of infinite capacity. \u00c2\u00a9 2019 SMPTE.",
      "authors": [
        "Richard I. Cartwright",
        "Brad Gilmer"
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.5594/JMI.2019.2931600",
      "keywords": [
        "cloud computing",
        "software architecture",
        "Business agility",
        "parallel processing",
        "media workflow"
      ],
      "number_of_pages": 7,
      "pages": "1-7",
      "publication": {
        "category": "Journal",
        "cite_score": 0.7,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "2160-2492",
        "publisher": "Society of Motion and Television Engineers",
        "sjr": 0.243,
        "snip": 0.846,
        "subject_areas": [
          "Electrical and Electronic Engineering",
          "Media Technology"
        ],
        "title": "SMPTE Motion Imaging Journal"
      },
      "publication_date": "2019-01-01",
      "selected": null,
      "title": "The Infinite Capacity Media Machine",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85072786375&origin=inward",
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=8846853"
      ]
    },
    {
      "abstract": "Diverse airborne and ground-based environmental observations are important technologies for disaster assessment and response, as well as for the validation of environmental satellite observations and atmospheric models which can improve forecasts. The VISAGE (Visualization for Integrated Satellite, Airborne and Ground-based data Exploration) project is working to provide three-dimensional visualization and basic analytics capabilities for such datasets in an interactive user interface. The use of cloud-native, serverless technologies and analysis optimized data storage will position VISAGE for integration with other technologies into a Data Analytic Center Framework. \u00c2\u00a9 2019 IEEE.",
      "authors": [
        "Helen Conover",
        "Todd Berendes",
        "Patrick Gatlin",
        "Manil Maskey",
        "Aaron Naeger",
        "Stephanie Wingo",
        "Ajinkya Kulkarni",
        "Abdelhak Marouane",
        "Lihua Wang",
        "Brian Ellingson",
        "Bibek Dahal",
        "Khomsun Singhirunnusorn"
      ],
      "categories": null,
      "citations": 1,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/IGARSS.2019.8897954",
      "keywords": [
        "data integration",
        "3D visualization",
        "analysis optimized data store",
        "GPM ground validation"
      ],
      "number_of_pages": 4,
      "pages": "5405-5408",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-5386-9155-7",
        "issn": "2153-6996",
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "IGARSS 2019 - 2019 IEEE International Geoscience and Remote Sensing Symposium"
      },
      "publication_date": "2019-01-01",
      "selected": null,
      "title": "Visage \u2013 A Visualization and Exploration Framework for Environmental Data",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85077698356&origin=inward",
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=8897954"
      ]
    },
    {
      "abstract": "The use of Cloud computing for the development of Internet of Things (IoT) applications has emerged during the last years. But there is a lack of a platform which facilitates the deployment and the interoperability of this type of applications. This paper presents a platform to facilitate the deployment of Cloud-based applications to devices in IoT domains. The platform allows the programmers to use a Function-as-a-Service programming paradigm which is managed and configured in a Platform-as-a-Service web tool. The tool also allows establishing interoperability between the functions of the applications. The platform is validated by developing a Cloud application that orchestrates two IoT devices, one with a movement sensor and another one with a camera. Finally, a performance study is also performed. The proposed platform obtains faster and easier deployments of the applications. The resource usages of the IoT devices are also lower with regard to a deployment process based on Docker containers. \u00c2\u00a9 2003-2012 IEEE.",
      "authors": [
        "Sebasti\u00e0 Sans\u00f3",
        "Carlos Guerrero",
        "Isaac Lera",
        "Carlos Juiz"
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/TLA.2019.8931204",
      "keywords": [
        "Service orchestration",
        "Internet of Things",
        "Cloud computing",
        "Function-as-a-Service"
      ],
      "number_of_pages": 8,
      "pages": "1155-1162",
      "publication": {
        "category": "Journal",
        "cite_score": 2.0,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "1548-0992",
        "publisher": "IEEE Computer Society",
        "sjr": 0.251,
        "snip": 0.553,
        "subject_areas": [
          "Computer Science (all)",
          "Electrical and Electronic Engineering"
        ],
        "title": "IEEE Latin America Transactions"
      },
      "publication_date": "2019-01-01",
      "selected": null,
      "title": "A Platform for Lightweight Deployment of IoTApplications Based on a Function-as-a-ServiceModel",
      "urls": [
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=8931204",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85076682153&origin=inward"
      ]
    },
    {
      "abstract": "This article describes a framework proposal for the cold start problem in Function-as-a-service (FaaS). The proposed framework has the goal to reduce the execution time and is presented as a prototype implemented that was evaluated with two different experimental scenarios and compared with a commercial proposal, the FaaS AWS Lambda from Amazon. The results show that the proposed framework may be considered a solution for the cold start problem and may improve the performance for applications that require a low response time. \u00c2\u00a9 2019 IEEE.",
      "authors": [
        "Rog\u00e9rio Dias Moreira",
        "Priscila Solis Barreto"
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/CLEI47609.2019.235112",
      "keywords": [
        "framework",
        "performance",
        "cloud computing",
        "FaaS"
      ],
      "number_of_pages": 10,
      "pages": "1-10",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-7281-5575-3",
        "issn": null,
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings - 2019 45th Latin American Computing Conference, CLEI 2019"
      },
      "publication_date": "2019-01-01",
      "selected": null,
      "title": "A Framework for Improving Cold Start Time in Function-as-a-service (FaaS)",
      "urls": [
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9073890",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85084763093&origin=inward"
      ]
    },
    {
      "abstract": "Serverless is a very promising model with many benefits to simplify the development of cloud applications. However, many applications are not easy to build on a serverless environment due to the lack of built-in key features, such as state and function coordination. In this paper we focus on the actor model. As this popular computational model challenges many aspects of the current serverless tools, the feasibility of building a serverless actor framework is unclear. Our goal is to study whether the actor model can be successfully deployed on top of a Functions as a Service (FaaS) environment like AWS Lambda. To do that, we design and build a prototype to evaluate the serverless actors requirements and performance. We conclude with a successful prototype implementation and stating the necessary run-time extensions to the serverless core to improve the support for serverless actors. \u00c2\u00a9 2019 CEUR-WS. All Rights Reserved.",
      "authors": [
        "Pons, D.B.",
        "Ollobarren, \u00c3\u0081.R.",
        "Pinto, D.A.",
        "L\u00c3\u00b3pez, P.G."
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": 5,
      "pages": "25-29",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": 0.8,
        "is_potentially_predatory": false,
        "isbn": "9788670314764",
        "issn": "16130073",
        "publisher": "CEUR-WS",
        "sjr": 0.177,
        "snip": 0.345,
        "subject_areas": [
          "Computer Science (all)"
        ],
        "title": "CEUR Workshop Proceedings"
      },
      "publication_date": "2019-01-01",
      "selected": null,
      "title": "Studying the feasibility of serverless actors",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85063259044&origin=inward"
      ]
    },
    {
      "abstract": "The proceedings contain 15 papers. The topics discussed include: evaluating methodologies for business process architecture design \u00e2\u0080\u0093 a pilot study; towards a comprehensive methodology for process mining; validation of smart contracts using process mining; towards dynamic resource management in business processes; estimating the duration of blockchain-based business processes using simulation; PANIC \u00e2\u0080\u0093 plugging data leak detection into the camunda modeler; model-driven software migration towards fine-grained cloud architectures; towards coverage criteria for serverless applications; towards performance and cost simulation in function as a service; analyzing the importance of JabRef features from the user perspective; and generalized markdown architectural decision records: capturing the essence of decisions.",
      "authors": [],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": 1,
      "pages": "45",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": 0.8,
        "is_potentially_predatory": false,
        "isbn": "9788670314764",
        "issn": "16130073",
        "publisher": "CEUR-WS",
        "sjr": 0.177,
        "snip": 0.345,
        "subject_areas": [
          "Computer Science (all)"
        ],
        "title": "CEUR Workshop Proceedings"
      },
      "publication_date": "2019-01-01",
      "selected": null,
      "title": "CEUR Workshop Proceedings",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85063272339&origin=inward",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85064115672&origin=inward"
      ]
    },
    {
      "abstract": "Serverless computing has introduced unprecedented levels of scalability and parallelism for the execution of High Throughput Computing tasks. This represents a challenge and an opportunity for different scientific workloads to be adapted to upcoming programming models that simplify the usage of such platforms. In this paper we introduce a serverless model for highly-parallel file-processing applications. We also describe a middleware implementation that supports the execution of customized execution environments based on Docker images on AWS Lambda, the leading serverless computing platform. Moreover, this middleware offers tools to manage the input/output of the serverless infrastructure and the creation of HTTP endpoints in a transparent way to the user. To test the programming model proposed and the middleware, this paper describes two case studies. The first one analyzes medical images with a high degree of parallelism. The second one presents an architecture to process video keyframes. The results from both case studies are discussed and a cost analysis of the medical image architecture comparing different Cloud options is carried out. The results show that the combination of a high-level programming model with the scalable capabilities of AWS Lambda makes it easy for end users to efficiently exploit serverless computing for the optimized and cost-effective execution of loosely-coupled tasks. \u00c2\u00a9 2019 Association for Computing Machinery.",
      "authors": [
        "P\u00c3\u00a9rez, A.",
        "Caballer, M.",
        "Molt\u00c3\u00b3, G.",
        "Calatrava, A."
      ],
      "categories": null,
      "citations": 3,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1145/3297280.3297292",
      "keywords": [
        "Containers",
        "Serverless",
        "Event-driven architectures",
        "Cloud computing"
      ],
      "number_of_pages": 8,
      "pages": "106-113",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450359337",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings of the ACM Symposium on Applied Computing"
      },
      "publication_date": "2019-01-01",
      "selected": null,
      "title": "A programming model and middleware for high throughput serverless computing applications",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85065666961&origin=inward"
      ]
    },
    {
      "abstract": "Serverless computing offers the potential to program the cloud in an autoscaling, pay-as-you go manner. In this paper we address critical gaps in first-generation serverless computing, which place its autoscaling potential at odds with dominant trends in modern computing: notably data-centric and distributed computing, but also open source and custom hardware. Put together, these gaps make current serverless offerings a bad fit for cloud innovation and particularly bad for data systems innovation. In addition to pinpointing some of the main shortfalls of current serverless architectures, we raise a set of challenges we believe must be met to unlock the radical potential that the cloud\u00e2\u0080\u0094with its exabytes of storage and millions of cores\u00e2\u0080\u0094should offer to innovative developers. \u00c2\u00a9 2019 Conference on Innovative Data Systems Research (CIDR). All rights reserved.",
      "authors": [
        "Hellerstein, J.M.",
        "Faleiro, J.",
        "Gonzalez, J.E.",
        "Schleier-Smith, J.",
        "Sreekanti, V.",
        "Tumanov, A.",
        "Wu, C."
      ],
      "categories": null,
      "citations": 45,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "CIDR 2019 - 9th Biennial Conference on Innovative Data Systems Research"
      },
      "publication_date": "2019-01-01",
      "selected": null,
      "title": "Serverless computing: One step forward, two steps back",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85084011587&origin=inward"
      ]
    },
    {
      "abstract": "Serverless computing is a popular execution model where a cloud provider is responsible for the allocation of resources. Stateless serverless functions build the basis for a serverless application. The statelessness of the functions eases the scalability of the system. A serverless application is built by connecting the serverless functions with other services. Even though the behavior of the serverless functions is easy to test in isolation, the behavior emerging by their integration is hard to predict. Therefore, integration tests are necessary. However, there are no coverage criteria available yet for this specific class of applications making test case sets comparable. Therefore, we introduce characteristics and approaches which can be used for coverage criteria. \u00c2\u00a9 2019 CEUR-WS. All rights reserved.",
      "authors": [
        "Winzinger, S."
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": null,
      "keywords": [
        "Integration testing",
        "FaaS",
        "Coverage criteria",
        "Serverless application"
      ],
      "number_of_pages": 4,
      "pages": "39-42",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": 0.8,
        "is_potentially_predatory": false,
        "isbn": "9788670314764",
        "issn": "16130073",
        "publisher": "CEUR-WS",
        "sjr": 0.177,
        "snip": 0.345,
        "subject_areas": [
          "Computer Science (all)"
        ],
        "title": "CEUR Workshop Proceedings"
      },
      "publication_date": "2019-01-01",
      "selected": null,
      "title": "Towards coverage criteria for serverless applications",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85064127854&origin=inward"
      ]
    },
    {
      "abstract": "This article describes the problems that occur when using the Function as a Service model: the complexity of the centralized description of the separate function interaction within the whole system and the possibility of dependent components interface divergence during a process of their development. We propose a domain-specific language called Anzer as a solution to these problems which enables to describe the types of data transmitted, the composition of functions, the semantics of their interaction and logic of error handling. To check the consistency and compliance of the declared and implemented types, software has been produced making it possible to automate the creation of new functions and maintain their integration with others at all stages of system development and support. The language and software in combination with each other prevent errors associated with a mismatch between input data format expected by the function and actually transmitted one. All this enables to simplify and speed up the process of developing systems based on the concept of Function as a Service. \u00c2\u00a9 2019 CEUR-WS. All rights reserved.",
      "authors": [
        "Gerasimov, N."
      ],
      "categories": null,
      "citations": 1,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": null,
      "keywords": [
        "Domain-specific language",
        "Static typing",
        "Serverless",
        "Faas",
        "Function composition"
      ],
      "number_of_pages": 7,
      "pages": "13-19",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": 0.8,
        "is_potentially_predatory": false,
        "isbn": "9788670314764",
        "issn": "16130073",
        "publisher": "CEUR-WS",
        "sjr": 0.177,
        "snip": 0.345,
        "subject_areas": [
          "Computer Science (all)"
        ],
        "title": "CEUR Workshop Proceedings"
      },
      "publication_date": "2019-01-01",
      "selected": null,
      "title": "The DSL for composing functions for FaaS platform",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85067178339&origin=inward"
      ]
    },
    {
      "abstract": "Fog/edge computing, function as a service, and programmable infrastructures, like software-defined networking or network function virtualisation, are becoming ubiquitously used in modern Information Technology infrastructures. These technologies change the characteristics and capabilities of the underlying computational substrate where services run (e.g. higher volatility, scarcer computational power, or programmability). As a consequence, the nature of the services that can be run on them changes too (smaller codebases, more fragmented state, etc.). These changes bring new requirements for service orchestrators, which need to evolve so as to support new scenarios where a close interaction between service and infrastructure becomes essential to deliver a seamless user experience. Here, we present the challenges brought forward by this new breed of technologies and where current orchestration techniques stand with regards to the new challenges. We also present a set of promising technologies that can help tame this brave new world. \u00c2\u00a9 2018 Elsevier B.V.",
      "authors": [
        "Vaquero, L.M.",
        "Cuadrado, F.",
        "Elkhatib, Y.",
        "Bernal-Bernabe, J.",
        "Srirama, S.N.",
        "Zhani, M.F."
      ],
      "categories": null,
      "citations": 20,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1016/j.future.2018.07.039",
      "keywords": [
        "Edge",
        "Large scale",
        "Serverless",
        "NVM",
        "Orchestration",
        "Churn",
        "FaaS",
        "Fog",
        "NFV",
        "SDN"
      ],
      "number_of_pages": 19,
      "pages": "20-38",
      "publication": {
        "category": "Journal",
        "cite_score": 13.3,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "0167739X",
        "publisher": "Elsevier",
        "sjr": 1.262,
        "snip": 2.72,
        "subject_areas": [
          "Hardware and Architecture",
          "Computer Networks and Communications",
          "Software"
        ],
        "title": "Future Generation Computer Systems"
      },
      "publication_date": "2019-01-01",
      "selected": null,
      "title": "Research challenges in nextgen service orchestration",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85050665394&origin=inward"
      ]
    },
    {
      "abstract": "This article is devoted to the development of a web-based application for analysis and evaluation of Heart Rate Variability (HRV) using serverless architecture. Advancements in information algorithms and computing technologies have been playing an increasingly important role in cardiology, as continuous monitoring of patients' health can be vital to their well-being. One physiological parameter that can be easily measured and that can provide indispensable insight into the state of the human body is the HRV. HRV analysis can assess not only the physiological state of the body but also provide the capability to monitor its dynamics and predict future diseases. As the research in the sphere of cardiology is constantly growing there is a multitude of new ways to assess the physiological state of patients and provide an early indicator to pathological conditions. Therefore, there is a need to bring these advances to a growing number of end-users (health-care professionals and patients) in the shortest possible time. To address this problem, this study proposes the development of a web-based application for analysis and evaluation of HRV by applying linear and nonlinear mathematical methods. The application is created using a serverless architectural approach, which allows for fast development time, as there is no need to manage server infrastructure, and for automatic scaling to dynamically match the number of requests. The developer can instead focus on implementing the logic for the HRV analysis algorithms and deliver new improvements at a faster rate. The proposed web application can be accessed by any device that is connected to the Internet and is optimized to handle both an intermittent and a consistent volume of requests. The algorithms implemented in the web application have been validated by examining two groups of subjects (young adults and older adults) using linear and non-linear models. The obtained results from the two groups can be compared with a set of reference values (only for the linear methods) and an assessment can be made whether each studied parameter is within the normal range or outside it (its value is too high or too low). To aid the assessment for HRV, the results obtained by the linear and nonlinear analysis are presented using a set of both graphs and tables. \u00c2\u00a9 Insight Society.",
      "authors": [
        "Gospodinov, M.M.",
        "Gospodinova, E."
      ],
      "categories": null,
      "citations": 1,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.18517/ijaseit.9.6.9804",
      "keywords": [
        "Heart rate variability",
        "Web-based application",
        "Serverless architecture",
        "Time-domain analysis",
        "Frequency-domain analysis",
        "Nonlinear analysis."
      ],
      "number_of_pages": 9,
      "pages": "1927-1935",
      "publication": {
        "category": "Journal",
        "cite_score": 1.9,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "20885334",
        "publisher": "INSIGHT - Indonesian Society for Knowledge and Human Development",
        "sjr": 0.216,
        "snip": 0.772,
        "subject_areas": [
          "Agricultural and Biological Sciences (all)",
          "Engineering (all)",
          "Computer Science (all)"
        ],
        "title": "International Journal on Advanced Science, Engineering and Information Technology"
      },
      "publication_date": "2019-01-01",
      "selected": null,
      "title": "Implementing a web-based application for analysis and evaluation of heart rate variability using serverless architecture",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85077998746&origin=inward"
      ]
    },
    {
      "abstract": "The proceedings contain 149 papers. The special focus in this conference is on Intelligent, Interactive Systems and Applications. The topics include: Abnormal detection methods of information security for power big data; research on data center topological structure analysis technology based on graph database; a survey of code reuse attack and defense; a survey of vulnerability defense measures; research on the user fatigue of household appliances human-computer interaction based on wearable devices and bare-hand gesture recognition; research on precision marketing model of Beijing agricultural products under big data environment; a layered secure communication model for cooperative vehicle infrastructure system; A relay protocol in AF relaying wireless energy harvesting network; information sharing technology in device-to-device cellular networks; the weakness of the self-encryption mechanism for authentication of roaming services; research on the development of intelligent industrial control; Cryptanalysis of the serverless RFID authentication and search protocols; Near ground UWB channel modeling in different terrain surface; research on visible light communication; sampling redundancy removal algorithms for stepped frequency continuous wave; The performance of chirp-BOK modulation in the time fading channel; an improved direct sequence spread spectrum signal detection algorithm; research on non-contact palmprint recognition positioning method in mobile terminal; android palmprint recognition system design and implementations; a cache-aware multicast routing for mobile social networks; research and design of expert system based on oil-gas field energy saving information platform; Toward human motion sensing: Design and performance evaluation of a minimized wearable platform using inertial and TOA sensors; the computer formula of the smarandache dual function.",
      "authors": [],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": {
        "category": "Book",
        "cite_score": 0.9,
        "is_potentially_predatory": false,
        "isbn": "9783030577957",
        "issn": "21945357",
        "publisher": "Springer Verlag",
        "sjr": 0.184,
        "snip": 0.428,
        "subject_areas": [
          "Control and Systems Engineering",
          "Computer Science (all)"
        ],
        "title": "Workshops of  the International Conference on Advanced Information Networking and Applications"
      },
      "publication_date": "2019-01-01",
      "selected": null,
      "title": "3rd International Conference on Intelligent, Interactive Systems and Applications, IISA2018",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85061097798&origin=inward"
      ]
    },
    {
      "abstract": "The need to scale up machine learning, in the presence of a rapid growth of data both in volume and in variety, has sparked broad interests to develop distributed machine learning systems, typically based on parameter servers. However, since these systems are based on a dedicated cluster of physical or virtual machines, they have posed non-trivial cluster management overhead to machine learning practitioners and data scientists. In addition, there exists an inherent mismatch between the dynamically varying resource demands during a model training job and the inflexible resource provisioning model of current cluster-based systems.In this paper, we propose SIREN, an asynchronous distributed machine learning framework based on the emerging serverless architecture, with which stateless functions can be executed in the cloud without the complexity of building and maintaining virtual machine infrastructures. With SIREN, we are able to achieve a higher level of parallelism and elasticity by using a swarm of stateless functions, each working on a different batch of data, while greatly reducing system configuration overhead. Furthermore, we propose a scheduler based on Deep Reinforcement Learning to dynamically control the number and memory size of the stateless functions that should be used in each training epoch. The scheduler learns from the training process itself, in pursuit for the minimum possible training time given a cost. With our real-world prototype implementation on AWS Lambda, extensive experimental results have shown that SIREN can reduce model training time by up to 44%, as compared to traditional machine learning training benchmarks on AWS EC2 at the same cost. \u00c2\u00a9 2019 IEEE.",
      "authors": [
        "Hao Wang",
        "Di Niu",
        "Baochun Li"
      ],
      "categories": null,
      "citations": 10,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/INFOCOM.2019.8737391",
      "keywords": [],
      "number_of_pages": 9,
      "pages": "1288-1296",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": 8.3,
        "is_potentially_predatory": false,
        "isbn": "978-1-7281-6413-7",
        "issn": "0743-166X",
        "publisher": "Institute of Electrical and Electronics Engineers Inc.",
        "sjr": 1.183,
        "snip": 1.799,
        "subject_areas": [
          "Computer Science (all)",
          "Electrical and Electronic Engineering"
        ],
        "title": "IEEE INFOCOM '99. Conference on Computer Communications. Proceedings. Eighteenth Annual Joint Conference of the IEEE Computer and Communications Societies. The Future is Now (Cat. No.99CH36320)"
      },
      "publication_date": "2019-01-01",
      "selected": null,
      "title": "Distributed Machine Learning with a Serverless Architecture",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85068210044&origin=inward",
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=8737391"
      ]
    },
    {
      "abstract": "In this paper we will discuss the changing role of a software engineer. We will examine this from four major standpoints, the software development lifecycle, the influence of open source software,...",
      "authors": [
        "Edward Meade",
        "Emma O\u2019Keeffe",
        "Niall Lyons",
        "Dean Lynch",
        "Murat Yilmaz",
        "Ulas Gulec",
        "Rory V. O\u2019Connor",
        "Paul M. Clarke"
      ],
      "categories": null,
      "citations": 1,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1007/978-3-030-28005-5_53",
      "keywords": [
        "Agile",
        "Software Engineer",
        "Continuous software engineering",
        "Open source software"
      ],
      "number_of_pages": 13,
      "pages": "682-694",
      "publication": {
        "category": "Book",
        "cite_score": 0.8,
        "is_potentially_predatory": false,
        "isbn": "9783030719050",
        "issn": "18650929",
        "publisher": "Springer Verlag",
        "sjr": 0.16,
        "snip": 0.32,
        "subject_areas": [
          "Mathematics (all)",
          "Computer Science (all)"
        ],
        "title": "International Conference on Software Process Improvement and Capability Determination"
      },
      "publication_date": "2019-01-01",
      "selected": null,
      "title": "The Changing Role of the Software Engineer",
      "urls": [
        "https://link.springer.com/content/pdf/10.1007%2F978-3-030-28005-5_53.pdf",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85072978660&origin=inward"
      ]
    },
    {
      "abstract": "Cloud platforms offer diverse evolving programming and deployment models which require not only application code adaptation, but also retraining and changing developer mindsets. Such change is costly and is better served by automated tools. Subject of the study are automated FaaSification processes which transform conventional annotated Java methods into executable Function-as-a-Service units. Given the novelty of the problem domain, a key concern is the demonstration of feasibility within arbitrary boundaries of FaaS offerings and the measurement of resulting technical and pricing metrics. We contribute a suitable tool design called Termite with corresponding implementation in Java. The design is aligned with a generic transformation pipeline in which each step from code analysis over compilation to deployment and testing can be observed and measured separately. Our results show that annotations are suitable means for fine-grained configuration despite ceding control to the build system. Smaller Java projects can be FaaS-enabled with little effort. We expect FaaSification tools to become part of build chains on a wide scale once their current engineering shortcomings in terms of tackling more complex code are solved. \u00c2\u00a9 2019 CEUR-WS. All Rights Reserved.",
      "authors": [
        "Dorodko, S.",
        "Spillner, J."
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": 9,
      "pages": "9-17",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": 0.8,
        "is_potentially_predatory": false,
        "isbn": "9788670314764",
        "issn": "16130073",
        "publisher": "CEUR-WS",
        "sjr": 0.177,
        "snip": 0.345,
        "subject_areas": [
          "Computer Science (all)"
        ],
        "title": "CEUR Workshop Proceedings"
      },
      "publication_date": "2019-01-01",
      "selected": null,
      "title": "Selective Java code transformation into AWS Lambda functions",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85063278116&origin=inward"
      ]
    },
    {
      "abstract": "The emergence of latency-sensitive and data-intensive applications requires that computational resources be moved closer to users on computing nodes at the edge of the network (edge computing)....",
      "authors": [
        "Luciano Baresi",
        "Danilo Filgueira Mendon\u00e7a",
        "Giovanni Quattrocchi"
      ],
      "categories": null,
      "citations": 2,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1007/978-3-030-33702-5_39",
      "keywords": [
        "Resource management",
        "Geo-distributed infrastructures",
        "Serverless computing",
        "Edge computing",
        "Service placement"
      ],
      "number_of_pages": 15,
      "pages": "508-522",
      "publication": {
        "category": "Book",
        "cite_score": 1.8,
        "is_potentially_predatory": false,
        "isbn": "9783030715922",
        "issn": "03029743",
        "publisher": "Springer Verlag",
        "sjr": 0.249,
        "snip": 0.628,
        "subject_areas": [
          "Databases",
          "Cryptography and Security",
          "Distributed, Parallel, and Cluster Computing",
          "Theoretical Computer Science",
          "Computer Science (all)"
        ],
        "title": "IFIP International Conference on Distributed Applications and\n  Interoperable Systems, DAIS 2017: Distributed Applications and Interoperable\n  Systems pp 83-98"
      },
      "publication_date": "2019-01-01",
      "selected": null,
      "title": "PAPS: A Framework for Decentralized Self-management at the Edge",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85076349159&origin=inward",
        "https://link.springer.com/content/pdf/10.1007%2F978-3-030-33702-5_39.pdf"
      ]
    },
    {
      "abstract": "Serverless computing is poised to fulfill the long-held promise of transparent elasticity and millisecond-level pricing. To achieve this goal, service providers impose a fine-grained computational model where every function has a maximum duration, a fixed amount of memory and no persistent local storage. We observe that the fine-grained elasticity of serverless is key to achieve high utilization for general computations such as analytics workloads, but that resource limits make it challenging to implement such applications as they need to move large amounts of data between functions that don't overlap in time. In this paper, we present Locus, a serverless analytics system that judiciously combines (1) cheap but slow storage with (2) fast but expensive storage, to achieve good performance while remaining cost-efficient. Locus applies a performance model to guide users in selecting the type and the amount of storage to achieve the desired cost-performance trade-off. We evaluate Locus on a number of analytics applications including TPC-DS, CloudSort, Big Data Benchmark and show that Locus can navigate the cost-performance trade-off, leading to 4\u00c3\u0097-500\u00c3\u0097 performance improvements over slow storage-only baseline and reducing resource usage by up to 59% while achieving comparable performance with running Apache Spark on a cluster of virtual machines, and within 2\u00c3\u0097 slower compared to Redshift. \u00c2\u00a9 2019 by The USENIX Association. All Rights Reserved.",
      "authors": [
        "Pu, Q.",
        "Venkataraman, S.",
        "Stoica, I."
      ],
      "categories": null,
      "citations": 39,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": 14,
      "pages": "193-206",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781931971492",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings of the 16th USENIX Symposium on Networked Systems Design and Implementation, NSDI 2019"
      },
      "publication_date": "2019-01-01",
      "selected": null,
      "title": "Shuffling, fast and slow: Scalable analytics on serverless infrastructure",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85072316299&origin=inward"
      ]
    },
    {
      "abstract": "With the proliferation of machine learning (ML) libraries and frameworks, and the programming languages that they use, along with operations of data loading, transformation, preparation and mining, ML model development is becoming a daunting task. Furthermore, with a plethora of cloud-based ML model development platforms, heterogeneity in hardware, increased focus on exploiting edge computing resources for low-latency prediction serving and often a lack of a complete understanding of resources required to execute ML workflows efficiently, ML model deployment demands expertise for managing the lifecycle of ML workflows efficiently and with minimal cost. To address these challenges, we propose an end-to-end data analytics, a serverless platform called Stratum. Stratum can deploy, schedule and dynamically manage data ingestion tools, live streaming apps, batch analytics tools, ML-as-a-service (for inference jobs), and visualization tools across the cloud-fog-edge spectrum. This paper describes the Stratum architecture highlighting the problems it resolves.",
      "authors": [
        "Bhattacharjee, A.",
        "Barve, Y.",
        "Khare, S.",
        "Bao, S.",
        "Gokhale, A.",
        "Damiano, T."
      ],
      "categories": null,
      "citations": 7,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": 3,
      "pages": "59-61",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781939133007",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings of the 2019 USENIX Conference on Operational Machine Learning, OpML 2019"
      },
      "publication_date": "2019-01-01",
      "selected": null,
      "title": "Stratum: A serverless framework for the lifecycle management of machine learning-based data analytics tasks",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85071451661&origin=inward"
      ]
    },
    {
      "abstract": "Digital Library",
      "authors": [
        "Leonardo Rebou\u00c3\u00a7as de Carvalho",
        "Alet\u00c3\u00a9ia Favacho de Ara\u00c3\u00bajo"
      ],
      "categories": null,
      "citations": 5,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.5220/0007677902710278",
      "keywords": [
        "Function as a Service",
        "FaaS",
        "NodeJS",
        "Automatic Converter",
        "Cloud Computing"
      ],
      "number_of_pages": 8,
      "pages": "271-278",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9789897583650",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "CLOSER 2019 - Proceedings of the 9th International Conference on Cloud Computing and Services Science"
      },
      "publication_date": "2019-01-01",
      "selected": null,
      "title": "Framework Node2FaaS: Automatic NodeJS Application Converter for Function as a Service",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85067447550&origin=inward"
      ]
    },
    {
      "abstract": "Serverless computing, also known as Functions-as-a-Service, is a recent paradigm aimed at simplifying the programming of cloud applications. The idea is that developers design applications in terms...",
      "authors": [
        "Maurizio Gabbrielli",
        "Saverio Giallorenzo",
        "Ivan Lanese",
        "Fabrizio Montesi",
        "Marco Peressotti",
        "Stefano Pio Zingaro"
      ],
      "categories": null,
      "citations": 6,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1007/978-3-030-22397-7_9",
      "keywords": [],
      "number_of_pages": 10,
      "pages": "148-157",
      "publication": {
        "category": "Book",
        "cite_score": 1.8,
        "is_potentially_predatory": false,
        "isbn": "9783030715922",
        "issn": "03029743",
        "publisher": "Springer Verlag",
        "sjr": 0.249,
        "snip": 0.628,
        "subject_areas": [
          "Databases",
          "Cryptography and Security",
          "Distributed, Parallel, and Cluster Computing",
          "Theoretical Computer Science",
          "Computer Science (all)"
        ],
        "title": "IFIP International Conference on Distributed Applications and\n  Interoperable Systems, DAIS 2017: Distributed Applications and Interoperable\n  Systems pp 83-98"
      },
      "publication_date": "2019-01-01",
      "selected": null,
      "title": "No More, No Less",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85067506100&origin=inward",
        "https://link.springer.com/content/pdf/10.1007%2F978-3-030-22397-7_9.pdf"
      ]
    },
    {
      "abstract": "Digital Library",
      "authors": [
        "Roland Pellegrini",
        "Igor Ivkic",
        "Markus Tauber"
      ],
      "categories": null,
      "citations": 1,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.5220/0007757304790487",
      "keywords": [
        "Benchmarking",
        "Function-as-a-Service",
        "Cloud Computing"
      ],
      "number_of_pages": 9,
      "pages": "479-487",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9789897583650",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "CLOSER 2019 - Proceedings of the 9th International Conference on Cloud Computing and Services Science"
      },
      "publication_date": "2019-01-01",
      "selected": null,
      "title": "Function-as-a-Service Benchmarking Framework",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85067508769&origin=inward"
      ]
    },
    {
      "abstract": "The proceedings contain 51 papers. The topics discussed include: sparker: optimizing spark for heterogeneous clusters; phase annotated learning for apache spark: workload recognition and characterization; Yodea: workload pattern assessment tool for cloud migration; cost-time performance of scaling applications on the cloud; investigating and modeling performance scalability for distributed graph analytics; scalability and locality awareness of remote procedure calls: an experimental study in edge infrastructures; an architectural framework for serverless edge computing: design and emulation tools; using quantile regression for reclaiming unused cloud resources while achieving SLA; and systematic and recomputable comparison of multi-cloud management platforms.",
      "authors": [],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9780738143767",
        "issn": "23302194",
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings of the International Conference on Cloud Computing Technology and Science, CloudCom"
      },
      "publication_date": "2018-12-26",
      "selected": null,
      "title": "Proceedings of the International Conference on Cloud Computing Technology and Science, CloudCom",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85061139142&origin=inward"
      ]
    },
    {
      "abstract": "Serverless computing platforms provide Function(s)-As-A-Service (FaaS) to end users while promising reduced hosting costs, high availability, fault tolerance, and dynamic elasticity for hosting individual functions known as microservices. Serverless Computing environments abstract infrastructure management including creation of virtual machines (VMs), containers, and load balancing from users. To conserve cloud server capacity and energy, cloud providers allow serverless computing infrastructure to go COLD, deprovisioning hosting infrastructure when demand falls, freeing capacity to be harnessed by others. In this paper, we present on a case study migration of the Precipitation Runoff Modeling System (PRMS), a Java-based environmental modeling application to the AWS Lambda serverless platform. We investigate performance and cost implications of memory reservation size, and evaluate scaling performance for increasing concurrent workloads. We then investigate the use of Keep-Alive workloads to preserve serverless infrastructure to minimize cold starts and ensure fast performance after idle periods for up to 100 concurrent client requests. We show how Keep-Alive workloads can be generated using cloud-based scheduled event triggers, enabling minimization of costs, to provide VM-like performance for applications hosted on serverless platforms for a fraction of the cost. \u00c2\u00a9 2018 IEEE.",
      "authors": [
        "Wes Lloyd",
        "Minh Vu",
        "Baojia Zhang",
        "Olaf David",
        "George Leavesley"
      ],
      "categories": null,
      "citations": 8,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/UCC-Companion.2018.00056",
      "keywords": [
        "Serverless Computing",
        "Application Migration",
        "Function-as-a-Service",
        "Resource Management and Performance"
      ],
      "number_of_pages": 6,
      "pages": "195-200",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-7281-0360-0",
        "issn": null,
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings - 11th IEEE/ACM International Conference on Utility and Cloud Computing Companion, UCC Companion 2018"
      },
      "publication_date": "2018-12-17",
      "selected": null,
      "title": "Improving Application Migration to Serverless Computing Platforms: Latency Mitigation with Keep-Alive Workloads",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85061828174&origin=inward",
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=8605779"
      ]
    },
    {
      "abstract": "As serverless technologies are emerging as a breakthrough in the cloud computing industry, the lack of proper tooling is becoming apparent. The model of computation that the serverless is imposing is as flexible as it is hard to manage and grasp. We present a novel approach towards serverless computing that tightly integrates it with the visual-Textual, functional programming language: Luna. This way we are hoping to achieve the clarity and cognitive ease of visual solutions while retaining the flexibility and expressive power of textual programming languages. We created a proof of concept of the Luna Serverless Framework in which we extend the Luna standard library and we leverage the language features to create an intuitive API for serverless function calls using AWS Lambda and to call external functions implemented in JavaScript. \u00c2\u00a9 2018 IEEE.",
      "authors": [
        "Piotr Moczurad",
        "Maciej Malawski"
      ],
      "categories": null,
      "citations": 1,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/UCC-Companion.2018.00052",
      "keywords": [
        "functional programming",
        "visual programming",
        "serverless"
      ],
      "number_of_pages": 6,
      "pages": "169-174",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-7281-0360-0",
        "issn": null,
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings - 11th IEEE/ACM International Conference on Utility and Cloud Computing Companion, UCC Companion 2018"
      },
      "publication_date": "2018-12-17",
      "selected": null,
      "title": "Visual-Textual Framework for Serverless Computation: A Luna Language Approach",
      "urls": [
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=8605775",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85061784548&origin=inward"
      ]
    },
    {
      "abstract": "Serverless computing is a new computing paradigm that promises to revolutionize the way applications are built and provisioned. In this computing kind, small pieces of software called functions are deployed in the cloud with zero administration and minimal costs for the software developer. Further, this computing kind has various applications in areas like image processing and scientific computing. Due to the above advantages, the current uptake of serverless computing is being addressed by traditional big cloud providers like Amazon, who offer serverless platforms for serverless application deployment and provisioning. However, as in the case of cloud computing, such providers attempt to lock-in their customers with the supply of complementary services which provide added-value support to serverless applications. To this end, to resolve this issue, serverless frameworks have been recently developed. Such frameworks either abstract away from serverless platform specificities, or they enable the production of a mini serverless platform on top of existing clouds. However, these frameworks differ in various features that do have an impact on the serverless application lifecycle. To this end, to assist the developers in selecting the most suitable framework, this paper attempts to review these frameworks according to a certain set of criteria that directly map to the application lifecycle. Further, based on the review results, some remaining challenges are supplied, which when confronted will make serverless frameworks highly usable and suitable for the handling of both serverless as well as mixed application kinds. \u00c2\u00a9 2018 IEEE.",
      "authors": [
        "Kyriakos Kritikos",
        "Pawe\u0142 Skrzypek"
      ],
      "categories": null,
      "citations": 21,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/UCC-Companion.2018.00051",
      "keywords": [
        "Provisioning",
        "Serverless",
        "Abstraction",
        "Review",
        "Framework",
        "Function-As-A-service"
      ],
      "number_of_pages": 8,
      "pages": "161-168",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-7281-0360-0",
        "issn": null,
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings - 11th IEEE/ACM International Conference on Utility and Cloud Computing Companion, UCC Companion 2018"
      },
      "publication_date": "2018-12-17",
      "selected": null,
      "title": "A Review of Serverless Frameworks",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85061811125&origin=inward",
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=8605774"
      ]
    },
    {
      "abstract": "Function as a Service (FaaS) is a young and rapidly evolving cloud paradigm. Due to its hardware abstraction, inherent virtualization problems come into play and need an assessment from the FaaS point of view. Especially avoidance of idling and scaling on demand cause a lot of container starts and as a consequence a lot of cold starts for FaaS users. The aim of this paper is to address the cold start problem in a benchmark and investigate influential factors on the duration of the perceived cold start. We conducted a benchmark on AWS Lambda and Microsoft Azure Functions with 49500 cloud function executions. Formulated as hypotheses, the influence of the chosen programming language, platform, memory size for the cloud function, and size of the deployed artifact are the dimensions of our benchmark. Cold starts on the platform as well as the cold starts for users were measured and compared to each other. Our results show that there is an enormous difference for the overhead the user perceives compared to the billed duration. In our benchmark, the average cold start overheads on the user's side ranged from 300ms to 24s for the chosen configurations. \u00c2\u00a9 2018 IEEE.",
      "authors": [
        "Johannes Manner",
        "Martin Endre\u00df",
        "Tobias Heckel",
        "Guido Wirtz"
      ],
      "categories": null,
      "citations": 15,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/UCC-Companion.2018.00054",
      "keywords": [
        "Cloud Functions",
        "Serverless Computing",
        "Benchmarking",
        "Cold Start",
        "Function as a Service",
        "FaaS"
      ],
      "number_of_pages": 8,
      "pages": "181-188",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-7281-0360-0",
        "issn": null,
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings - 11th IEEE/ACM International Conference on Utility and Cloud Computing Companion, UCC Companion 2018"
      },
      "publication_date": "2018-12-17",
      "selected": null,
      "title": "Cold Start Influencing Factors in Function as a Service",
      "urls": [
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=8605777",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85061767498&origin=inward"
      ]
    },
    {
      "abstract": "The number of available FaaS platforms increases with the rising popularity of a 'serverless' architecture and development paradigm. As a consequence, a high demand for benchmarking FaaS platforms exists. In response to this demand, new benchmarking approaches that focus on different objectives continuously emerge. In this paper, we call for community participation to conduct a collaborative systematic literature review with the goal to establish a community-driven knowledge base. \u00c2\u00a9 2018 IEEE.",
      "authors": [
        "J\u00f6rn Kuhlenkamp",
        "Sebastian Werner"
      ],
      "categories": null,
      "citations": 6,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/UCC-Companion.2018.00055",
      "keywords": [
        "benchmarking",
        "FaaS",
        "SLR",
        "serverless",
        "secondary study"
      ],
      "number_of_pages": 6,
      "pages": "189-194",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-7281-0360-0",
        "issn": null,
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings - 11th IEEE/ACM International Conference on Utility and Cloud Computing Companion, UCC Companion 2018"
      },
      "publication_date": "2018-12-17",
      "selected": null,
      "title": "Benchmarking FaaS Platforms: Call for Community Participation",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85061781630&origin=inward",
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=8605778"
      ]
    },
    {
      "abstract": "Serverless, otherwise known as 'Function-As-A-Service' (FaaS), is a compelling evolution of cloud computing that is highly scalable and event-driven. Serverless applications are composed of multiple independent functions, each of which can be implemented in a range of programming languages. This paper seeks to understand the impact of the choice of language runtime on the performance and subsequent cost of serverless function execution. It presents the design and implementation of a new serverless performance testing framework created to analyse performance and cost metrics for both AWS Lambda and Azure Functions. For optimum performance and cost management of serverless applications, Python is the clear choice on AWS Lambda. C#.NET is the top performer and most economical option for Azure Functions. NodeJS on Azure Functions and.NET Core 2 on AWS should be avoided or at the very least, used carefully in order to avoid their potentially slow and costly start-up times. \u00c2\u00a9 2018 IEEE.",
      "authors": [
        "David Jackson",
        "Gary Clynch"
      ],
      "categories": null,
      "citations": 12,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/UCC-Companion.2018.00050",
      "keywords": [
        "performance",
        "azure",
        "cloud",
        "FaaS",
        "Lambda",
        "aws",
        "serverless",
        "functions"
      ],
      "number_of_pages": 7,
      "pages": "154-160",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-7281-0360-0",
        "issn": null,
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings - 11th IEEE/ACM International Conference on Utility and Cloud Computing Companion, UCC Companion 2018"
      },
      "publication_date": "2018-12-17",
      "selected": null,
      "title": "An Investigation of the Impact of Language Runtime on the Performance and Cost of Serverless Functions",
      "urls": [
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=8605773",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85061785641&origin=inward"
      ]
    },
    {
      "abstract": "Emergence of cloud computing as the inevitable IT computing paradigm, the perception of the compute reference model and building of services has evolved into new dimensions. Serverless computing is an execution model in which the cloud service provider dynamically manages the allocation of compute resources of the server. The consumer is billed for the actual volume of resources consumed by them, instead paying for the pre-purchased units of compute capacity. This model evolved as a way to achieve optimum cost, minimum configuration overheads, and increases the application's ability to scale in the cloud. The prospective of the serverless compute model is well conceived by the major cloud service providers and reflected in the adoption of serverless computing paradigm. This review paper presents a comprehensive study on serverless computing architecture and also extends an experimentation of the working principle of serverless computing reference model adapted by AWS Lambda. The various research avenues in serverless computing are identified and presented. \u00c2\u00a9 2018 IEEE.",
      "authors": [
        "R. Arokia Paul Rajan"
      ],
      "categories": null,
      "citations": 4,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/ICoAC44903.2018.8939081",
      "keywords": [
        "cloud computing",
        "Google Cloud Function",
        "serverless computing",
        "FaaS",
        "Microsoft Azure Function",
        "AWS Lambda"
      ],
      "number_of_pages": 6,
      "pages": "88-93",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-7281-0354-9",
        "issn": null,
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "2018 10th International Conference on Advanced Computing, ICoAC 2018"
      },
      "publication_date": "2018-12-13",
      "selected": null,
      "title": "Serverless Architecture - A Revolution in Cloud Computing",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85078054279&origin=inward",
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=8939081"
      ]
    },
    {
      "abstract": "Personal assistant using a human operator need some time to process single request such as ticket booking, ordering something, and get services. One request can contain many queries for some information provided on the internet. Business performance values time efficiency so must be considered an alternative way to take request. Chatbot can give 24 hours service which can become an advantage besides using a human personal assistant. Chatbot acts like routing agent that can classify user context in conversation. Chatbot helped with natural language processing (NLP) to analyze the request and extract some keyword information. One important process in NLP is morphological analysis and part of speech (POS) tagging. POS help to parse the meaning of chat text based on a set of rules. The rule base is specific to some language and designed to capture all the keyword relies on chat text. Keyword in booking conversation term is like departure and destination city and also the date of flight. There is a variation from a user determining city and date. NLP in booking confirmation has a task to analyze various pattern describing ordering requests like city and date. Messenger bot would be an example of assistance that can help user connected to many services some like ticketing service through conversation interaction. The contribution of this research is to conduct some scenario that happening in ordering tickets. This research conduct that chatbot can help acts as customer service, based on the conducted scenario and show an F-measure score of 89.65% \u00c2\u00a9 2018 IEEE.",
      "authors": [
        "Handoyo, E.",
        "Arfan, M.",
        "Soetrisno, Y.A.A.",
        "Somantri, M.",
        "Sofwan, A.",
        "Sinuraya, E.W."
      ],
      "categories": null,
      "citations": 6,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1109/ICITACEE.2018.8576921",
      "keywords": [
        "conversation",
        "NLP",
        "chatbot",
        "interaction",
        "routing agent",
        "intent"
      ],
      "number_of_pages": 6,
      "pages": "325-330",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781538655276",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings - 2018 5th International Conference on Information Technology, Computer and Electrical Engineering, ICITACEE 2018"
      },
      "publication_date": "2018-12-13",
      "selected": null,
      "title": "Ticketing Chatbot Service using Serverless NLP Technology",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85060447494&origin=inward"
      ]
    },
    {
      "abstract": "As cloud computing continues to introduce new features and services, it also introduces some challenges like cost, complexity, and integration issues. Some researchers have used traditional cloud architecture for their applications, like text-to-speech (TTS), using cloud architecture. However, these existing text-to-speech approaches rely on the user providing large amounts of input text, manually moving it from one place to another. In order to resolve this issue, we have proposed a Serverless approach and prototype called Lisingo. Lisingo's primary focus is to provide a new way for users to transform their desired text into an easily accessible format. By leveraging the use of serverless cloud technology, Lisingo aims to provide a seamless text-to-speech service for users while removing unnecessary compute resources and cost. \u00c2\u00a9 2018 IEEE.",
      "authors": [
        "Imran Ghani",
        "Andrew Daniel",
        "Bransyn Luther"
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/CSCI46756.2018.00256",
      "keywords": [
        "cloud computing",
        "web service",
        "text-to-speech"
      ],
      "number_of_pages": 5,
      "pages": "1323-1327",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-7281-1361-6",
        "issn": null,
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings - 2018 International Conference on Computational Science and Computational Intelligence, CSCI 2018"
      },
      "publication_date": "2018-12-12",
      "selected": null,
      "title": "Lisingo: A Text-To-Speech Web Service-Based Application Using Serverless Cloud Computing",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85078571355&origin=inward",
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=8947889"
      ]
    },
    {
      "abstract": " Serverless computing offers the potential to program the cloud in an\nautoscaling, pay-as-you go manner. In this paper we address critical gaps in\nfirst-generation serverless computing, which place its autoscaling potential at\nodds with dominant trends in modern computing: notably data-centric and\ndistributed computing, but also open source and custom hardware. Put together,\nthese gaps make current serverless offerings a bad fit for cloud innovation and\nparticularly bad for data systems innovation. In addition to pinpointing some\nof the main shortfalls of current serverless architectures, we raise a set of\nchallenges we believe must be met to unlock the radical potential that the\ncloud---with its exabytes of storage and millions of cores---should offer to\ninnovative developers.\n",
      "authors": [
        "Hellerstein, Joseph M.",
        "Faleiro, Jose",
        "Gonzalez, Joseph E.",
        "Schleier-Smith, Johann",
        "Sreekanti, Vikram",
        "Tumanov, Alexey",
        "Wu, Chenggang"
      ],
      "categories": null,
      "citations": null,
      "comments": "8 pages, draft for CIDR 2019",
      "databases": [
        "arXiv"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": null,
      "publication_date": "2018-12-10",
      "selected": null,
      "title": "Serverless Computing: One Step Forward, Two Steps Back",
      "urls": [
        "http://arxiv.org/abs/1812.03651v1",
        "http://arxiv.org/pdf/1812.03651v1",
        "https://arxiv.org/pdf/1812.03651"
      ]
    },
    {
      "abstract": "Recent advancements in virtualization and software architecture have led to the new paradigm of serverless computing, which allows developers to deploy applications as stateless functions without worrying about the underlying infrastructure. Accordingly, a serverless platform handles the lifecycle, execution and scaling of the actual functions; these need to run only when invoked or triggered by an event. Thus, the major benefits of serverless computing are low operational concerns and efficient resource management and utilization. Serverless computing is currently offered by several public cloud service providers. However, there are certain limitations on the public cloud platforms, such as vendor lock-in and restrictions on the computation of the functions. Open source serverless frameworks are a promising solution to avoid these limitations and bring the power of serverless computing to on-premise deployments. However, these frameworks have not been evaluated before. Thus, we carry out a comprehensive feature comparison of popular open source serverless computing frameworks. We then evaluate the performance of selected frameworks: Fission, Kubeless and OpenFaaS. Specifically, we characterize the response time and ratio of successfully received responses under different loads and provide insights into the design choices of each framework. \u00c2\u00a9 2018 IEEE.",
      "authors": [
        "Sunil Kumar Mohanty",
        "Gopika Premsankar",
        "Mario di Francesco"
      ],
      "categories": null,
      "citations": 32,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/CloudCom2018.2018.00033",
      "keywords": [
        "Kubeless",
        "performance evaluation",
        "OpenFaas",
        "Fission",
        "serverless computing",
        "function-as-a-service"
      ],
      "number_of_pages": 6,
      "pages": "115-120",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-5386-0693-3",
        "issn": "2330-2186",
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings of the International Conference on Cloud Computing Technology and Science, CloudCom"
      },
      "publication_date": "2018-12-10",
      "selected": null,
      "title": "An Evaluation of Open Source Serverless Computing Frameworks",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85061113940&origin=inward",
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=8591002"
      ]
    },
    {
      "abstract": "We consider a Software Defined Networking (SDN)-enabled edge computing domain, where networking devices also have processing capabilities. In particular, we investigate the problem of dynamic allocation of stateless computations, that we call lambda functions, and propose an architectural framework through which requests for execution of lambda functions originated by mobile nodes can be appropriately routed to specific edge devices following a serverless model. In addition, we propose a detailed emulation environment to test the architecture. Our framework supports many possible distributed algorithms to dynamically adapt the choice where requests should be executed, in order to optimize a given performance target. In the paper we consider a few such policies, to test the flexibility of the architecture. We thus present extensive performance results of the considered policies. \u00c2\u00a9 2018 IEEE.",
      "authors": [
        "Claudio Cicconetti",
        "Marco Conti",
        "Andrea Passarella"
      ],
      "categories": null,
      "citations": 9,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/CloudCom2018.2018.00024",
      "keywords": [
        "serverless computing",
        "computation delegation",
        "edge computing",
        "software defined networking"
      ],
      "number_of_pages": 8,
      "pages": "48-55",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-5386-0693-3",
        "issn": "2330-2186",
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings of the International Conference on Cloud Computing Technology and Science, CloudCom"
      },
      "publication_date": "2018-12-10",
      "selected": null,
      "title": "An Architectural Framework for Serverless Edge Computing: Design and Emulation Tools",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85061159282&origin=inward",
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=8590993"
      ]
    },
    {
      "abstract": "Saving nature using Big Data Analytics is a very noble goal. Using New York taxi rides data, we decided to learn how many rides could be consolidated. It was a journey we would like to share.First, we had to choose the platform for calculation between Amazon Athena, Serverless Microservices, SQL or NoSql databases, Hadoop and Spark. Then, we had to find an optimal solution for the platform using assorted tuning and optimization techniques.Although the problem seems to be straight forward, it turned out that the solution is quite challenging because of the input size, data quality, calculation complexities and numerous EMR/Spark tuning options. We have been using New York taxi data from 2009 to 2017 to quantify the rides that can be joined together. The taxi rides were consolidated based on pickup location, pickup time and drop-off location. We have been calculating the percentage of taxi rides that can be joined. The benchmark originally set was rides within five minutes with a pickup and drop-off locations within half a kilometer. Then we started experimenting with different times and locations.We have been using parquet format, parallel Scala collections, compression, filtering, new column introduction, tuning parameters, I/O overhead tuning, bucketing, timeouts and partitioning.Over 1.2 billion rides were processed using Amazon EMR with Spark. We have been optimizing calculation time and processing price. Spark has hundreds of parameters, EMR has over fifty instances to choose from. It was challenging to process our data within reasonable time. We were able to find the optimal Spark queries (plans), tested different types of joins and compared their performances. Also, we were able to compare I/O and in-memory operations during partitioning and large files manipulation (the input file sizes were hundreds of Gigabytes).The results were amazing - we could consolidate around thirty five percent of total rides, saving tons of gas and improving environment and traffic in New York City. \u00c2\u00a9 2018 IEEE.",
      "authors": [
        "Alex Kaplunovich",
        "Yelena Yesha"
      ],
      "categories": null,
      "citations": 2,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/BigData.2018.8622378",
      "keywords": [
        "EMR",
        "Spark",
        "Best Practices",
        "Parquet",
        "AWS",
        "Analytics",
        "Tuning",
        "BigData",
        "Optimization",
        "Cloud"
      ],
      "number_of_pages": 7,
      "pages": "4501-4507",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-5386-5036-3",
        "issn": null,
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [
          "Distributed, Parallel, and Cluster Computing",
          "Information Theory"
        ],
        "title": "2018 IEEE International Conference on Big Data (Big Data),\n  Seattle, WA, USA, 2018, pp. 298-304"
      },
      "publication_date": "2018-12-10",
      "selected": null,
      "title": "Consolidating billions of Taxi rides with AWS EMR and Spark in the Cloud : Tuning, Analytics and Best Practices",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85062642846&origin=inward",
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=8622378"
      ]
    },
    {
      "abstract": "Addressing environmentally safe management of waste is becoming increasingly a challenging task. The predicament of the rate at which waste is generated due to increasing populations is also contributing to this challenge. One possible approach for effectively handling waste can be achieved by source reduction and recycling. The problem, however, improving the collection of waste can be costly particularly during the source separation process after waste is collected. It would be desirable if there exists a mechanism that can help municipalities, local governments or waste management companies to monitor in real-time sources of violations prior to the waste collection process. In this paper, we introduce recycle.io, an Internet of Things (IoT)-enabled waste management system that is based on a serverless architecture that can identify these sources of violations. Using recycle.io, it is then possible to track the violations geographically which can help local governments, for example, to improve or enforce tighter regulations for waste disposal. Our recycle.io system uses Microsoft Azure IoT Hub for device management. Throughout the paper, we demonstrate usefulness of using our approach for urban waste management in smart cities. \u00c2\u00a9 2018 IEEE.",
      "authors": [
        "Eyhab Al-Masri",
        "Ibrahim Diabate",
        "Richa Jain",
        "Ming Hoi Lam",
        "Swetha Reddy Nathala"
      ],
      "categories": null,
      "citations": 11,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/BigData.2018.8622117",
      "keywords": [
        "waste management",
        "IIoT",
        "garbage collection",
        "smart city",
        "industrial internet of things",
        "smart garbage",
        "IoT devices",
        "smart bin",
        "IoT gateways"
      ],
      "number_of_pages": 3,
      "pages": "5285-5287",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-5386-5036-3",
        "issn": null,
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [
          "Distributed, Parallel, and Cluster Computing",
          "Information Theory"
        ],
        "title": "2018 IEEE International Conference on Big Data (Big Data),\n  Seattle, WA, USA, 2018, pp. 298-304"
      },
      "publication_date": "2018-12-10",
      "selected": null,
      "title": "Recycle.io: An IoT-Enabled Framework for Urban Waste Management",
      "urls": [
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=8622117",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85062621693&origin=inward"
      ]
    },
    {
      "abstract": "Serverless computing, or Function-as-a-Service (FaaS), is emerging as a popular alternative model to on-demand cloud computing. Function services are executed by a FaaS provider; a client no longer uses cloud infrastructure directly as in traditional cloud consumption. Is serverless computing a feasible and beneficial approach to big data processing, regarding performance, scalability, and cost effectiveness? In this paper, we explore this research question using matrix multiplication as example. We define requirements for the design of serverless big data applications, present a prototype for matrix multiplication using FaaS, and discuss and synthesize insights from results of extensive experimentation. We show that serverless big data processing can lower operational and infrastructure costs without compromising system qualities; serverless computing can even outperform cluster-based distributed compute frameworks regarding performance and scalability. \u00c2\u00a9 2018 IEEE.",
      "authors": [
        "Sebastian Werner",
        "J\u00f6rn Kuhlenkamp",
        "Markus Klems",
        "Johannes M\u00fcller",
        "Stefan Tai"
      ],
      "categories": null,
      "citations": 13,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/BigData.2018.8622362",
      "keywords": [
        "big data",
        "matrix multiplication",
        "cloud",
        "serverless"
      ],
      "number_of_pages": 8,
      "pages": "358-365",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-5386-5036-3",
        "issn": null,
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [
          "Distributed, Parallel, and Cluster Computing",
          "Information Theory"
        ],
        "title": "2018 IEEE International Conference on Big Data (Big Data),\n  Seattle, WA, USA, 2018, pp. 298-304"
      },
      "publication_date": "2018-12-10",
      "selected": null,
      "title": "Serverless Big Data Processing using Matrix Multiplication as Example",
      "urls": [
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=8622362",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85062637682&origin=inward"
      ]
    },
    {
      "abstract": "The proceedings contain 8 papers. The topics discussed include: serverless data analytics in the IBM cloud; the design and implementation of a real time visual search system on JD E-commerce platform; exploratory study of privacy preserving fraud detection; NBWGuard: realizing network QoS for kubernetes; a high performance, scalable DNS service for very large scale container cloud platforms; resource fairness and prioritization of transactions in permissioned blockchain systems (industry; and BcWAN: a federated low-power WAN for the Internet of things.",
      "authors": [],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450360166",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Middleware Industry 2018 - Proceedings of the 2018 ACM/IFIP/USENIX Middleware Conference (Industrial Track)"
      },
      "publication_date": "2018-12-10",
      "selected": null,
      "title": "Middleware Industry 2018 - Proceedings of the 2018 ACM/IFIP/USENIX Middleware Conference (Industrial Track)",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85061805082&origin=inward"
      ]
    },
    {
      "abstract": "Cloud Functions, often called Function-as-a-Service (FaaS), pioneered by AWS Lambda, are an increasingly popular method of running distributed applications. As in other cloud offerings, cloud functions are heterogeneous due to variations in underlying hardware, runtime systems, as well as resource management and billing models. In this paper, we focus on performance evaluation of cloud functions, taking into account heterogeneity aspects. We developed a cloud function benchmarking framework, consisting of one suite based on Serverless Framework and one based on HyperFlow. We deployed the CPU-intensive benchmarks: Mersenne Twister and Linpack. We measured the data transfer times between cloud functions and storage, and we measured the lifetime of the runtime environment. We evaluated all the major cloud function providers: AWS Lambda, Azure Functions, Google Cloud Functions, and IBM Cloud Functions. We made our results available online and continuously updated. We report on the results of the performance evaluation, and we discuss the discovered insights into resource allocation policies. \u00c2\u00a9 2018 John Wiley & Sons, Ltd.",
      "authors": [
        "Figiela, K.",
        "Gajek, A.",
        "Zima, A.",
        "Obrok, B.",
        "Malawski, M."
      ],
      "categories": null,
      "citations": 20,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1002/cpe.4792",
      "keywords": [
        "cloud functions",
        "cloud computing",
        "performance evaluation",
        "FaaS",
        "serverless"
      ],
      "number_of_pages": null,
      "pages": null,
      "publication": {
        "category": "Journal",
        "cite_score": 3.8,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "15320626",
        "publisher": "John Wiley and Sons Ltd",
        "sjr": 0.309,
        "snip": 0.828,
        "subject_areas": [
          "Computer Networks and Communications",
          "Computational Theory and Mathematics",
          "Software",
          "Theoretical Computer Science",
          "Computer Science Applications"
        ],
        "title": "Concurrency Computation"
      },
      "publication_date": "2018-12-10",
      "selected": null,
      "title": "Performance evaluation of heterogeneous cloud functions",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85052398698&origin=inward"
      ]
    },
    {
      "abstract": "The proceedings contain 12 papers. The topics discussed include: a distributed analysis and benchmarking framework for apache OpenWhisk serverless platform; attack and vulnerability simulation framework for bitcoin-like blockchain technologies; CIDDS: a configurable and distributed DAG-based distributed ledger simulation framework; a serverless approach to publish/subscribe systems; eVIBES: configurable and interactive ethereum blockchain simulation framework; applying web-technologies for device state processing in IoT middleware; and kernel packet processing for manycore systems.",
      "authors": [],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450361095",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Middleware 2018 - Proceedings of the 2018 ACM/IFIP/USENIX Middleware Conference (Posters)"
      },
      "publication_date": "2018-12-10",
      "selected": null,
      "title": "Middleware 2018 - Proceedings of the 2018 ACM/IFIP/USENIX Middleware Conference (Posters)",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85061700486&origin=inward"
      ]
    },
    {
      "abstract": "Unexpectedly, the rise of serverless computing has also collaterally started the \u00e2\u0080\u009cdemocratization\u00e2\u0080\u009d of massive-scale data parallelism. This new trend heralded by PyWren pursues to enable untrained users to execute single-machine code in the cloud at massive scale through platforms like AWS Lambda. Inspired by this vision, this industry paper presents IBM-PyWren, which continues the pioneering work begun by PyWren in this field. It must be noted that IBM-PyWren is not, however, just a mere reimplementation of PyWren\u00e2\u0080\u0099s API atop IBM Cloud Functions. Rather, it is must be viewed as an advanced extension of PyWren to run broader MapReduce jobs. We describe the design, innovative features (API extensions, data discovering & partitioning, composability, etc.) and performance of IBM-PyWren, along with the challenges encountered during its implementation. \u00c2\u00a9 2018 Association for Computing Machinery.",
      "authors": [
        "Samp\u00c3\u00a9, J.",
        "Vernik, G.",
        "S\u00c3\u00a1nchez-Artigas, M.",
        "Garc\u00c3\u00ada-L\u00c3\u00b3pez, P."
      ],
      "categories": null,
      "citations": 20,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1145/3284028.3284029",
      "keywords": [
        "PyWren",
        "IBM cloud functions",
        "Distributed computing",
        "IBM cloud object storage",
        "Serverless computing"
      ],
      "number_of_pages": 8,
      "pages": "1-8",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450360166",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Middleware Industry 2018 - Proceedings of the 2018 ACM/IFIP/USENIX Middleware Conference (Industrial Track)"
      },
      "publication_date": "2018-12-10",
      "selected": null,
      "title": "Serverless data analytics in the IBM cloud",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85061789926&origin=inward"
      ]
    },
    {
      "abstract": "Serverless computing simplifies the life cycle of scalable web applications, through delegating most of the operational concerns to the cloud providers. One prominent serverless platform is Apache OpenWhisk which is employed by IBM Cloud. Despite the apparent benefits of serverless computing, some limitations of the serverless platform, such as the state-less nature of serverless functions, can introduce scalability bottlenecks. In this work, we propose an analysis and benchmarking approach for investigating potential bottlenecks and limitations of Apache OpenWhisk serverless platform. \u00c2\u00a9 2018 Association for Computing Machinery.",
      "authors": [
        "Kuntsevich, A.",
        "Nasirifard, P.",
        "Jacobsen, H.-A."
      ],
      "categories": null,
      "citations": 7,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1145/3284014.3284016",
      "keywords": [
        "Benchmarking",
        "Serverless",
        "Apache openwhisk",
        "Function as a service (faas)"
      ],
      "number_of_pages": 2,
      "pages": "3-4",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450361095",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Middleware 2018 - Proceedings of the 2018 ACM/IFIP/USENIX Middleware Conference (Posters)"
      },
      "publication_date": "2018-12-10",
      "selected": null,
      "title": "Demo abstract: A distributed analysis and benchmarking framework for apache openwhisk serverless platform",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85061715251&origin=inward"
      ]
    },
    {
      "abstract": "Building reliable and scalable publish/subscribe (pub/sub) systems require tremendous development efforts. The serverless paradigm simplifies the development and deployment of highly available applications by delegating most of the operational concerns to the cloud providers. The serverless paradigm describes a programming model, where the developers break the application downs into smaller microservices which run on the cloud in response to events. In this paper, we propose a design of a serverless pub/sub system based on the Amazon Web Services Lambdas and Microsoft Azure Functions. Our pub/sub system performs topic-based, content-based and function-based matchings. The function-based matching is a novel matching approach where the subscribers can define highly customizable subscription function which the broker applies to the publications in the cloud.We also provide an evaluation application for investigating the scalability of the designed brokers on different serverless platforms. \u00c2\u00a9 2018 Association for Computing Machinery.",
      "authors": [
        "Hafeez, F.",
        "Nasirifard, P.",
        "Jacobsen, H.-A."
      ],
      "categories": null,
      "citations": 3,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1145/3284014.3284019",
      "keywords": [
        "Contentbased pub/sub",
        "Serverless",
        "Topic-based pub/sub",
        "Function as a service (faas)",
        "Function-based pub/sub"
      ],
      "number_of_pages": 2,
      "pages": "9-10",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450361095",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Middleware 2018 - Proceedings of the 2018 ACM/IFIP/USENIX Middleware Conference (Posters)"
      },
      "publication_date": "2018-12-10",
      "selected": null,
      "title": "Demo abstract: A serverless approach to publish/subscribe systems",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85061741466&origin=inward"
      ]
    },
    {
      "abstract": "Counterfeiting is copying a product without having the right. It affects all manufacturing sectors, mainly, the craft sector. Authentication is a solution to prevent handicraft products from counterfeiting. According to ISO (international organization for standardization) 27001, authentication is defined as the process used to conform that a claimed characteristics or attributes that appears to be true is in fact true. With the aim of guaranteeing the authenticity of product, various methodological approaches have been devised over the past years and several authentication schemes have been proposed. Although it is a widely discussed and studied topic, authentication remains a crucial issue.More specifically, the main issue that the craft sector is facing is the lack of a structure for communicating a product information requested by the customer (e.g. tourist) due to the organization of the craft industry. As a result, several questions are emerging which authentication system for the craft industry. How to collect the product data and make it available to this system while guaranteeing its quality? How to guarantee a real time answer to the user (e.g. tourist)?Thereby, the project we are developing is oriented towards the management of data related to the product manufactured by Moroccan artisans to preserve its authenticity. Our objective is to conceive a traceability system to manage the information of handicraft product throughout its life cycle based on smartest authentication technologies and features.The Mobile Backend as a service (MBaaS) will help for sharing authentication information about goods in real time, as the request of the customer, in other way, this service will provide the answer about the product authenticity. \u00c2\u00a9 2018 IEEE.",
      "authors": [
        "H. Lahbabi",
        "A. Sekhari",
        "O. El Beqqali",
        "J. Laval"
      ],
      "categories": null,
      "citations": 1,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/SKIMA.2018.8631519",
      "keywords": [
        "Counterfeiting",
        "traceability",
        "NFC (Near field communication)",
        "Handicraft",
        "MBaaS",
        "Authentication"
      ],
      "number_of_pages": 5,
      "pages": "1-5",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-5386-9142-7",
        "issn": "2373-082X",
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "International Conference on Software, Knowledge Information, Industrial Management and Applications, SKIMA"
      },
      "publication_date": "2018-12-03",
      "selected": null,
      "title": "MBaaS-based Authentication service for handicraft products traceability system",
      "urls": [
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=8631519",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85062709252&origin=inward"
      ]
    },
    {
      "abstract": "The emergence of virtualisation and Infrastructure-as-a-Service (IaaS) have dramatically transformed the telecom industry through network function virtualisation (NFV). A recently introduced cloud-native concept, Platform as a Service (PaaS), ensures to further boost the performance, portability and cost efficiency of the NFV. The 5G-MEDIA project proposes the application of a serverless paradigm known as Function-as-a- Service (FaaS) to NFV for the media applications exploiting the 5G technologies. In addition to integration of FaaS, the 5G-MEDIA application/service development kit (SDK) supports microservice-based application development for both hypervisor-based and containerized approaches, specifically supporting Docker, unikernel and LXC. In this paper, we provide an overview of the 5G-MEDIA SDK which is built to support NFV-based next generation media applications and to achieve a development time in the order of minutes. Furthermore, implementations of FaaS Emulation and FaaS command line interface (CLI) tools are also presented. \u00c2\u00a9 2018 IEEE.",
      "authors": [
        "Ugur Acar",
        "Refik Fatih Ustok",
        "Selcuk Keskin",
        "David Breitgand",
        "Avi Weit"
      ],
      "categories": null,
      "citations": 3,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/NFV-SDN.2018.8725610",
      "keywords": [
        "SDK",
        "5G",
        "5G MEDIA",
        "NFV"
      ],
      "number_of_pages": 5,
      "pages": "1-5",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-5386-8282-1",
        "issn": null,
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "2018 IEEE Conference on Network Function Virtualization and Software Defined Networks, NFV-SDN 2018"
      },
      "publication_date": "2018-11-27",
      "selected": null,
      "title": "Programming Tools for Rapid NFV-Based Media Application Development in 5G Networks",
      "urls": [
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=8725610",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85067575694&origin=inward"
      ]
    },
    {
      "abstract": "We propose enabling cloud datacenters with Reconfigurable Networked Accelerators RNAs. RNAs are FPGA and memory compute nodes connected to the main network of the datacenter. To enable seamless integration of RNAs, we propose RESTful hardware microservices in cloud datacenters. We show how a front-end model view controller (MVC) web application can issue a call to remote RNA-accelerated RESTful microservices to decrease the latency of a single client query and increase the throughput of clients served. As a use case, we investigate just in time classification of client uploaded media (e.g., images, videos, etc.) against adult or hateful content. The system architecture is implemented using Spring MVC (Spring Boot) and AlexNet convolutional neural network CNN for image classification. Observed results show up to more than 10x improvements in throughput and energy efficiency depending on the target RNA (FPGA) device and the level of optimization of the employed hardware classifier. \u00c2\u00a9 2018 IEEE.",
      "authors": [
        "Ezzeddine, M.",
        "Morcel, R.",
        "Artail, H.",
        "Saghir, M.A.R.",
        "Akkary, H.",
        "Hajj, H."
      ],
      "categories": null,
      "citations": 1,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1109/CloudNet.2018.8549544",
      "keywords": [
        "Spark",
        "cloud functions",
        "cloud computing",
        "CNN",
        "model view controller",
        "FPGA",
        "AlexNet",
        "fog computing",
        "data center",
        "REST",
        "Spring framework",
        "MVC",
        "convolutional neural network",
        "serverless",
        "HTTP",
        "representational state transfer",
        "edge computing"
      ],
      "number_of_pages": null,
      "pages": null,
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781538668313",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings of the 2018 IEEE 7th International Conference on Cloud Networking, CloudNet 2018"
      },
      "publication_date": "2018-11-27",
      "selected": null,
      "title": "RESTful Hardware Microservices Using Reconfigurable Networked Accelerators in Cloud and Edge Datacenters",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85060228431&origin=inward"
      ]
    },
    {
      "abstract": "Deep neural networks (DNNs) have become core computation components within\nlow latency Function as a Service (FaaS) prediction pipelines: including image\nrecognition, object detection, natural language processing, speech synthesis,\nand personalized recommendation pipelines. Cloud computing, as the de-facto\nbackbone of modern computing infrastructure for both enterprise and consumer\napplications, has to be able to handle user-defined pipelines of diverse DNN\ninference workloads while maintaining isolation and latency guarantees, and\nminimizing resource waste. The current solution for guaranteeing isolation\nwithin FaaS is suboptimal -- suffering from \"cold start\" latency. A major cause\nof such inefficiency is the need to move large amount of model data within and\nacross servers. We propose TrIMS as a novel solution to address these issues.\nOur proposed solution consists of a persistent model store across the GPU, CPU,\nlocal storage, and cloud storage hierarchy, an efficient resource management\nlayer that provides isolation, and a succinct set of application APIs and\ncontainer technologies for easy and transparent integration with FaaS, Deep\nLearning (DL) frameworks, and user code. We demonstrate our solution by\ninterfacing TrIMS with the Apache MXNet framework and demonstrate up to 24x\nspeedup in latency for image classification models and up to 210x speedup for\nlarge models. We achieve up to 8x system throughput improvement.",
      "authors": [
        "Abdul Dakkak",
        "Cheng Li",
        "Simon Garcia de Gonzalo",
        "Jinjun Xiong",
        "Wen-mei Hwu"
      ],
      "categories": null,
      "citations": 3,
      "comments": "In Proceedings CLOUD 2019",
      "databases": [
        "arXiv",
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/CLOUD.2019.00067",
      "keywords": [
        "Inference",
        "cloud",
        "Machine Learning",
        "memory"
      ],
      "number_of_pages": 11,
      "pages": "372-382",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-7281-8781-5",
        "issn": "2159-6182",
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "2020 IEEE 13th International Conference on Cloud Computing (CLOUD)"
      },
      "publication_date": "2018-11-24",
      "selected": null,
      "title": "TrIMS: Transparent and Isolated Model Sharing for Low Latency Deep LearningInference in Function as a Service Environments",
      "urls": [
        "http://dx.doi.org/10.1109/CLOUD.2019.00067",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85072329545&origin=inward",
        "http://arxiv.org/pdf/1811.09732v1",
        "http://arxiv.org/abs/1811.09732v1",
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=8814494"
      ]
    },
    {
      "abstract": " Serverless computing has recently experienced significant adoption by several\napplications, especially Internet of Things (IoT) applications. In serverless\ncomputing, rather than deploying and managing dedicated virtual machines, users\nare able to deploy individual functions, and pay only for the time that their\ncode is actually executing. However, since serverless platforms are relatively\nnew, they have a completely different pricing model that depends on the memory,\nduration, and the number of executions of a sequence/workflow of functions. In\nthis paper we present an algorithm that optimizes the price of serverless\napplications in AWS Lambda. We first describe the factors affecting price of\nserverless applications which include: (1) fusing a sequence of functions, (2)\nsplitting functions across edge and cloud resources, and (3) allocating the\nmemory for each function. We then present an efficient algorithm to explore\ndifferent function fusion-placement solutions and find the solution that\noptimizes the application's price while keeping the latency under a certain\nthreshold. Our results on image processing workflows show that the algorithm\ncan find solutions optimizing the price by more than 35%-57% with only 5%-15%\nincrease in latency. We also show that our algorithm can find non-trivial\nmemory configurations that reduce both latency and price.\n",
      "authors": [
        "Elgamal, Tarek",
        "Sandur, Atul",
        "Nahrstedt, Klara",
        "Agha, Gul"
      ],
      "categories": null,
      "citations": null,
      "comments": null,
      "databases": [
        "arXiv"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": null,
      "publication_date": "2018-11-23",
      "selected": null,
      "title": "Costless: Optimizing Cost of Serverless Computing through Function Fusion and Placement",
      "urls": [
        "http://arxiv.org/pdf/1811.09721v1",
        "http://arxiv.org/abs/1811.09721v1",
        "https://arxiv.org/pdf/1811.09721"
      ]
    },
    {
      "abstract": "The serverless computing paradigm brings multiple benefits to application developers who are interested in consuming computing resources as services without the need to manage physical capacities or limits. There are several deployment technologies and languages available suitable for deploying applications to a single cloud provider. However, for multi-cloud application deployments, multiple technologies have to be used and orchestrated. In addition, the event-driven nature of serverless computing imposes further requirements on modeling such application structures in order to automate their deployment. In this paper, we tackle these issues by introducing an event-driven deployment modeling approach using the standard Topology and Orchestration Specification for Cloud Applications (TOSCA) that fully employs the suggested standard lifecycle to provision and manage multi-cloud serverless applications. To show the feasibility of our approach, we extended the existing TOSCA-based ecosystem OpenTOSCA. \u00c2\u00a9 2018 IEEE.",
      "authors": [
        "Michael Wurster",
        "Uwe Breitenb\u00fccher",
        "K\u00e1lm\u00e1n K\u00e9pes",
        "Frank Leymann",
        "Vladimir Yussupov"
      ],
      "categories": null,
      "citations": 8,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/SOCA.2018.00017",
      "keywords": [
        "TOSCA",
        "Multi-Cloud",
        "Serverless",
        "Modeling",
        "Automated Deployment"
      ],
      "number_of_pages": 8,
      "pages": "73-80",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-7281-5412-1",
        "issn": "2163-2871",
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings - IEEE 11th International Conference on Service-Oriented Computing and Applications, SOCA 2018"
      },
      "publication_date": "2018-11-20",
      "selected": null,
      "title": "Modeling and Automated Deployment of Serverless Applications Using TOSCA",
      "urls": [
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=8599581",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85061529848&origin=inward"
      ]
    },
    {
      "abstract": "Function as a Service(FaaS) has been widely prevalent in the cloud computing area with the evolution of the cloud computing paradigm and the growing demand for event-based computing models. We have analyzed the preparation load required for the actual execution of a function, from assignment of a function execution walker to loading a function on the FaaS platform, by testing the execution of a dummy function on a simple FaaS prototype. According to the analysis results, we found that the cost of first worker allocation requires 1,850ms even though the lightweight container is used, and then the worker re-allocation cost require 470ms at the same node. The result shows that the function service is not enough to be used as a high efficiency processing calculation platform. We propose a new worker scheduling algorithm to appropriately distribute the worker's preparation load related to execution of functions so that FaaS platform is suitable for high efficiency computing environment. Proposed algorithm is to distribute the worker 's allocation tasks in two steps before the request occurs, and predict the number of workers required to be allocated in advance. When applying the proposed worker scheduling algorithm in FaaS platform under development, we estimate that worker allocation request can be processed with an allocation cost of less than 3% compared to the FaaS prototype. Therefore, it is expected that the functional service will become a high efficiency computing platform through the significant improvement of the worker allocation cost. \u00c2\u00a9 2018 IEEE.",
      "authors": [
        "Youngho Kim",
        "Gyuil Cha"
      ],
      "categories": null,
      "citations": 3,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/SC2.2018.00027",
      "keywords": [
        "Scheduling",
        "Function",
        "Function as a Service",
        "Dynamic scaling"
      ],
      "number_of_pages": 4,
      "pages": "131-134",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-7281-0237-5",
        "issn": null,
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings - 8th IEEE International Symposium on Cloud and Services Computing, SC2 2018"
      },
      "publication_date": "2018-11-18",
      "selected": null,
      "title": "Design of the Cost Effective Execution Worker Scheduling Algorithm for FaaS Platform Using Two-Step Allocation and Dynamic Scaling",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85060237669&origin=inward",
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=8567385"
      ]
    },
    {
      "abstract": "We propose OverSketch, an approximate algorithm for distributed matrix multiplication in serverless computing. OverSketch leverages ideas from matrix sketching and high-performance computing to enable cost-efficient multiplication that is resilient to faults and straggling nodes pervasive in low-cost serverless architectures. We establish statistical guarantees on the accuracy of OverSketch and empirically validate our results by solving a large-scale linear program using interior-point methods and demonstrate a 34% reduction in compute time on AWS Lambda. \u00c2\u00a9 2018 IEEE.",
      "authors": [
        "Vipul Gupta",
        "Shusen Wang",
        "Thomas Courtade",
        "Kannan Ramchandran"
      ],
      "categories": null,
      "citations": 10,
      "comments": "Published in Proc. IEEE Big Data 2018. Updated version provides\n  details of distributed sketching and highlights other advantages of\n  OverSketch",
      "databases": [
        "arXiv",
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/BigData.2018.8622139",
      "keywords": [
        "sketched matrix multiplication",
        "serverless computing",
        "straggler mitigation"
      ],
      "number_of_pages": 7,
      "pages": "298-304",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-5386-5036-3",
        "issn": null,
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [
          "Distributed, Parallel, and Cluster Computing",
          "Information Theory"
        ],
        "title": "2018 IEEE International Conference on Big Data (Big Data),\n  Seattle, WA, USA, 2018, pp. 298-304"
      },
      "publication_date": "2018-11-06",
      "selected": null,
      "title": "OverSketch: Approximate Matrix Multiplication for the Cloud",
      "urls": [
        "http://arxiv.org/pdf/1811.02653v2",
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=8622139",
        "http://dx.doi.org/10.1109/BigData.2018.8622139",
        "http://arxiv.org/abs/1811.02653v2",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85062597344&origin=inward"
      ]
    },
    {
      "abstract": " Fog computing, which distributes computing resources to multiple locations\nbetween the Internet of Things (IoT) devices and the cloud, is attracting\nconsiderable attention from academia and industry. Yet, despite the excitement\nabout the potential of fog computing, few comprehensive quantitative\ncharacteristics of the properties of fog computing architectures have been\nconducted. In this paper we examine the properties of task completion latencies\nin fog computing. First, we present the results of our empirical\nbenchmarking-based study of task completion latencies. The study covered a\nrange of settings, and uniquely considered both traditional and serverless fog\ncomputing execution points. It demonstrated the range of execution point\ncharacteristics in different locations and the relative stability of latency\ncharacteristics for a given location. It also highlighted properties of\nserverless execution that are not incorporated in existing fog computing\nalgorithms. Second, we present a framework we developed for co-optimizing task\ncompletion quality and latency, which was inspired by the insights of our\nempirical study. We describe fog computing task assignment problems we\nformulated under this framework, and present the algorithms we developed for\nsolving them.\n",
      "authors": [
        "Gorlatova, Maria",
        "Inaltekin, Hazer",
        "Chiang, Mung"
      ],
      "categories": null,
      "citations": null,
      "comments": null,
      "databases": [
        "arXiv"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": null,
      "publication_date": "2018-11-06",
      "selected": null,
      "title": "Characterizing Task Completion Latencies in Fog Computing",
      "urls": [
        "https://arxiv.org/pdf/1811.02638",
        "http://arxiv.org/abs/1811.02638v1",
        "http://arxiv.org/pdf/1811.02638v1"
      ]
    },
    {
      "abstract": "Nowadays IoT infrastructure providers for smart city, smart industry, and connected vehicles are facing huge complexity and cost to manage their geo-distributed infrastructures for supporting various IoT services, especially those that require low latency. FogFlow is a distributed execution framework to dynamically orchestrate IoT services over cloud and edges, in order to reduce internal bandwidth consumption and offer low latency. By providing automated and optimized IoT service orchestration with high scalability and reliability, FogFlow helps infrastructure providers to largely reduce their operation cost. FogFlow also provides a data-centric programming model and a development tool chain for service developers and system integrators to quickly realize IoT services with low development cost and fast time-to-market. This has been proven in the labs as well as in real smart city projects done by NEC Solution Innovators. \u00c2\u00a9 2018 NEC Corporation.",
      "authors": [
        "Cheng, B.",
        "Kovacs, E.",
        "Kitazawa, A.",
        "Terasawa, K.",
        "Hada, T.",
        "Takeuchi, M."
      ],
      "categories": null,
      "citations": 1,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": null,
      "keywords": [
        "Internet of things",
        "Service orchestration",
        "Serverless computing",
        "Edge computing",
        "Dynamic data flow"
      ],
      "number_of_pages": 6,
      "pages": "48-53",
      "publication": {
        "category": "Journal",
        "cite_score": 0.4,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "18805884",
        "publisher": "NEC Media Products Ltd.",
        "sjr": 0.112,
        "snip": 0.09,
        "subject_areas": [
          "Information Systems",
          "Hardware and Architecture",
          "Electrical and Electronic Engineering",
          "Materials Science (all)"
        ],
        "title": "NEC Technical Journal"
      },
      "publication_date": "2018-11-01",
      "selected": null,
      "title": "FogFlow: Orchestrating IoT services over cloud and edges",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85059433862&origin=inward"
      ]
    },
    {
      "abstract": "Serverless computing is a new way of managing computations in the cloud. We show how it can be put to work for scientific data analysis. For this, we detail our serverless architecture for an application analyzing data from one of the instruments onboard the ESA Mars Express orbiter, and then, we compare it with a traditional server solution. \u00c2\u00a9 2018 IEEE.",
      "authors": [
        "Vazquez-Poletti, J.L.",
        "Llorente, I.M.",
        "Hinsen, K.",
        "Turk, M."
      ],
      "categories": null,
      "citations": 6,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/MCSE.2018.2875315",
      "keywords": [],
      "number_of_pages": 7,
      "pages": "73-79",
      "publication": {
        "category": "Journal",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "1558-366X",
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Computing in Science and Engineering"
      },
      "publication_date": "2018-11-01",
      "selected": null,
      "title": "Serverless Computing: From Planet Mars to the Cloud",
      "urls": [
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=8625892",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85061041174&origin=inward"
      ]
    },
    {
      "abstract": "Lambda platform is a new concept based on an event-driven server-less computation that empowers application developers to build scalable enterprise software in a virtualized environment without provisioning or managing any physical servers (a server-less solution). In reality, however, devising an effective consolidation method to host multiple Lambda functions into a single machine is challenging. The existing simple resource allocation algorithms, such as the round-robin policy used in many commercial server-less systems, suffer from lack of responsiveness to a sudden surge in the incoming workload. This will result in an unsatisfactory performance degradation that is directly experienced by the end-user of a Lambda application. In this paper, we address the problem of CPU cap management in a Lambda platform for ensuring different QoS enforcement levels in a platform with shared resources, in case of fluctuations and sudden surges in the incoming workload requests. To this end, we present a closed-loop (feedback-based) CPU cap controller, which fulfills the QoS levels enforced by the application owners. The controller adjusts the number of working threads per QoS class and dispatches the outstanding Lambda functions along with the associated events to the most appropriate working thread. The proposed solution reduces the QoS violations by an average of 6.36 times compared to the round-robin policy. It can also maintain the end-to-end response time of applications belonging to the highest priority QoS class close to the target set-point while decreasing the overall response time by up to 52%. \u00c2\u00a9 2018 IEEE.",
      "authors": [
        "Kim, Y.K.",
        "HoseinyFarahabady, M.R.",
        "Lee, Y.C.",
        "Zomaya, A.Y.",
        "Jurdak, R."
      ],
      "categories": null,
      "citations": 5,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1109/CLUSTER.2018.00041",
      "keywords": [
        "Dynamic CPU usage control",
        "FaaS (Function as a Service)",
        "Server-less computing",
        "QoS-aware resource manager"
      ],
      "number_of_pages": 11,
      "pages": "234-244",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781538683194",
        "issn": "15525244",
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings - IEEE International Conference on Cluster Computing, ICCC"
      },
      "publication_date": "2018-10-29",
      "selected": null,
      "title": "Dynamic Control of CPU Usage in a Lambda Platform",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85057218237&origin=inward"
      ]
    },
    {
      "abstract": "This review focuses on the evolution of cloud computing and distributed ledger technologies (blockchains) over the last decade. Cloud computing relies mainly on a conceptually centralized service provisioning model, while blockchain technologies originate from a peer-To-peer and a completely distributed approach. Still, noteworthy commonalities between both approaches are often overlooked by researchers. Therefore, to the best of the authors knowledge, this paper reviews both domains in parallel for the first time. We conclude that both approaches have advantages and disadvantages. The advantages of centralized service provisioning approaches are often the disadvantages of distributed ledger approaches and vice versa. It is obviously an interesting question whether both approaches could be combined in a way that the advantages can be added while the disadvantages could be avoided. We derive a software stack that could build the foundation unifying the best of these two worlds and that would avoid existing shortcomings like vendor lock-in, some security problems, and inherent platform dependencies. \u00c2\u00a9 2018 IEEE.",
      "authors": [
        "Westerlund, M.",
        "Kratzke, N."
      ],
      "categories": null,
      "citations": 7,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1109/HPCS.2018.00108",
      "keywords": [
        "Blockchain",
        "Serverless",
        "Cloud computing",
        "Distributed clouds",
        "Distributed ledger",
        "Security"
      ],
      "number_of_pages": 9,
      "pages": "655-663",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781538678787",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings - 2018 International Conference on High Performance Computing and Simulation, HPCS 2018"
      },
      "publication_date": "2018-10-29",
      "selected": null,
      "title": "Towards distributed clouds: a review about the evolution of centralized cloud computing, distributed ledger technologies, and a foresight on unifying opportunities and security implications",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85051752070&origin=inward"
      ]
    },
    {
      "abstract": "Serverless computing is an emerging new paradigm in cloud computing. Serverless denotes a special kind of software architecture in which application logic is executed in an environment without visible processes, operating systems, servers or virtual machines. Serverless enables the deployment of applications and services to the cloud as code snippets or functions as opposed to a monolithic program. While serverless is rapidly evolving, it lacks a standard definition and general consensus within the technical community but has the potential to massively alter the way in which software delivers business value. This work presents the architecture and implementation of a shared drive web application using AWS Lambda. The application is tested to compare the response time for cold and warm requests, effect on load balancing, performance on memory reservation and resource retention behavior. Additionally, the gaps and limitations in current serverless architecture are discussed. \u00c2\u00a9 2018 IEEE.",
      "authors": [
        "Saloni Gandhi",
        "Anuja Gore",
        "Sakshi Nimbarte",
        "Jibi Abraham"
      ],
      "categories": null,
      "citations": 1,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/I2CT42659.2018.9058237",
      "keywords": [
        "cloud computing",
        "AWS",
        "container",
        "cold start",
        "Lambda",
        "serverless"
      ],
      "number_of_pages": 6,
      "pages": "1-6",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-5386-5233-6",
        "issn": null,
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "2018 4th International Conference for Convergence in Technology, I2CT 2018"
      },
      "publication_date": "2018-10-27",
      "selected": null,
      "title": "Implementation and Analysis of a Serverless Shared Drive with AWS Lambda",
      "urls": [
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9058237",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85084150987&origin=inward"
      ]
    },
    {
      "abstract": "The proceedings contain 37 papers. The topics discussed include: improving prediction accuracy in LSTM network model for aircraft testing flight data; application of transfer learning in continuous time series for anomaly detection in commercial aircraft flight data; serverless performance and optimization strategies; effectiveness analysis of web based simulation for computational science and engineering on improvement EDISON platform; a medical information service platform based on distributed cloud and blockchain; search over compute: solving multiplication-intensive computational problems over FHE data; a privacy-aware and user-centric approach for query processing in cloud; efficient expression recognition based on shape-indexed features; resource and service management for fog infrastructure as a service; and evaluating bio-inspired optimization techniques for utility price estimation in fog computing.",
      "authors": [],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781538651827",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings - 3rd IEEE International Conference on Smart Cloud, SmartCloud 2018"
      },
      "publication_date": "2018-10-26",
      "selected": null,
      "title": "Proceedings - 3rd IEEE International Conference on Smart Cloud, SmartCloud 2018",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85057335096&origin=inward"
      ]
    },
    {
      "abstract": "Serverless computing has recently experienced significant adoption by several applications, especially Internet of Things (IoT) applications. In serverless computing, rather than deploying and managing dedicated virtual machines, users are able to deploy individual functions, and pay only for the time that their code is actually executing. However, since serverless platforms are relatively new, they have a completely different pricing model that depends on the memory, duration, and the number of executions of a sequence/workflow of functions. In this paper we present an algorithm that optimizes the price of serverless applications in AWS Lambda. We first describe the factors affecting price of serverless applications which include: (1) fusing a sequence of functions, (2) splitting functions across edge and cloud resources, and (3) allocating the memory for each function. We then present an efficient algorithm to explore different function fusion-placement solutions and find the solution that optimizes the application\u00e2\u0080\u0099s price while keeping the latency under a certain threshold. Our results on image processing workflows show that the algorithm can find solutions optimizing the price by more than 35%-57% with only 5%-15% increase in latency. We also show that our algorithm can find non-trivial memory configurations that reduce both latency and price. \u00c2\u00a9 2018 IEEE.",
      "authors": [
        "Elgamal, T.",
        "Sandur, A.",
        "Nahrstedt, K.",
        "Agha, G."
      ],
      "categories": null,
      "citations": 15,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/SEC.2018.00029",
      "keywords": [
        "Cost Optimization",
        "Serverless",
        "Cloud Computing",
        "Edge computing",
        "AWS Lambda"
      ],
      "number_of_pages": 13,
      "pages": "300-312",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-5386-9446-6",
        "issn": null,
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings - 2018 3rd ACM/IEEE Symposium on Edge Computing, SEC 2018"
      },
      "publication_date": "2018-10-25",
      "selected": null,
      "title": "Costless: Optimizing Cost of Serverless Computing through Function Fusion and Placement",
      "urls": [
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=8567674",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85060200056&origin=inward"
      ]
    },
    {
      "abstract": " Linear algebra operations are widely used in scientific computing and machine\nlearning applications. However, it is challenging for scientists and data\nanalysts to run linear algebra at scales beyond a single machine. Traditional\napproaches either require access to supercomputing clusters, or impose\nconfiguration and cluster management challenges. In this paper we show how the\ndisaggregation of storage and compute resources in so-called \"serverless\"\nenvironments, combined with compute-intensive workload characteristics, can be\nexploited to achieve elastic scalability and ease of management. We present numpywren, a system for linear algebra built on a serverless\narchitecture. We also introduce LAmbdaPACK, a domain-specific language designed\nto implement highly parallel linear algebra algorithms in a serverless setting.\nWe show that, for certain linear algebra algorithms such as matrix multiply,\nsingular value decomposition, and Cholesky decomposition, numpywren's\nperformance (completion time) is within 33% of ScaLAPACK, and its compute\nefficiency (total CPU-hours) is up to 240% better due to elasticity, while\nproviding an easier to use interface and better fault tolerance. At the same\ntime, we show that the inability of serverless runtimes to exploit locality\nacross the cores in a machine fundamentally limits their network efficiency,\nwhich limits performance on other algorithms such as QR factorization. This\nhighlights how cloud providers could better support these types of computations\nthrough small changes in their infrastructure.\n",
      "authors": [
        "Shankar, Vaishaal",
        "Krauth, Karl",
        "Pu, Qifan",
        "Jonas, Eric",
        "Venkataraman, Shivaram",
        "Stoica, Ion",
        "Recht, Benjamin",
        "Ragan-Kelley, Jonathan"
      ],
      "categories": null,
      "citations": null,
      "comments": null,
      "databases": [
        "arXiv"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": null,
      "publication_date": "2018-10-23",
      "selected": null,
      "title": "numpywren: serverless linear algebra",
      "urls": [
        "http://arxiv.org/abs/1810.09679v1",
        "https://arxiv.org/pdf/1810.09679",
        "http://arxiv.org/pdf/1810.09679v1"
      ]
    },
    {
      "abstract": "For predictive maintenance of equipment with Industrial Internet of Things (IIoT) technologies, existing IoT Cloud systems provide strong monitoring and data analysis capabilities for detecting and predicting status of equipment. However, we need to support complex interactions among different software components and human activities to provide an integrated analytics, as software algorithms alone cannot deal with the complexity and scale of data collection and analysis and the diversity of equipment, due to the difficulties of capturing and modeling uncertainties and domain knowledge in predictive maintenance. In this paper, we describe how we design and augment complex IoT big data cloud systems for integrated analytics of IIoT predictive maintenance. Our approach is to identify various complex interactions for solving system incidents together with relevant critical analytics results about equipment. We incorporate humans into various parts of complex IoT Cloud systems to enable situational data collection, services management, and data analytics. We leverage serverless functions, cloud services, and domain knowledge to support dynamic interactions between human and software for maintaining equipment. We use a real-world maintenance of Base Transceiver Stations to illustrate our engineering approach which we have prototyped with state-of-the art cloud and IoT technologies, such as Apache Nifi, Hadoop, Spark and Google Cloud Functions. \u00c2\u00a9 2018 IEEE.",
      "authors": [
        "Hong-Linh Truong"
      ],
      "categories": null,
      "citations": 6,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/ICII.2018.00020",
      "keywords": [
        "cloud computing",
        "predictive maintenance",
        "big data",
        "analytics",
        "IIOT",
        "services computing"
      ],
      "number_of_pages": 10,
      "pages": "109-118",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-5386-7772-8",
        "issn": null,
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings - 2018 IEEE International Conference on Industrial Internet, ICII 2018"
      },
      "publication_date": "2018-10-21",
      "selected": null,
      "title": "Integrated Analytics for IIoT Predictive Maintenance Using IoT Big Data Cloud Systems",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85059861435&origin=inward",
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=8539109"
      ]
    },
    {
      "abstract": "In recent years, the waste management and recycling industry has been facing multiple challenges such as protecting the public from harmful hazardous waste, promoting recycling and material source separation into common material streams. For instance, separating waste of hazardous wastes such as paint or batteries can be costly during the source separation process after waste is collected. What is therefore needed is a smart waste management system that is capable of identifying waste materials prior to the separation process. To overcome these challenges and more, we introduce recycle.io, a serverless Internet of Things (IoT) architecture for smart waste management systems. Using recycle.io, it is then possible to determine in real-time the types of source material violations prior to the waste collection. In this manner, waste management systems can identify sources of violations and rectify this by bringing awareness to the public or issuing fines to prevent violations from occurring. We demonstrate usefulness of our approach throughout the paper. \u00c2\u00a9 2018 IEEE.",
      "authors": [
        "Eyhab Al-Masri",
        "Ibrahim Diabate",
        "Richa Jain",
        "Ming Hoi Lam Lam",
        "Swetha Reddy Nathala"
      ],
      "categories": null,
      "citations": 7,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/ICII.2018.00034",
      "keywords": [
        "Industrial Internet",
        "IIoT",
        "Smart City",
        "Smart Bin",
        "IoT devices",
        "Garbage Collection",
        "Smart Garbage",
        "Waste Management"
      ],
      "number_of_pages": 2,
      "pages": "179-180",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-5386-7772-8",
        "issn": null,
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings - 2018 IEEE International Conference on Industrial Internet, ICII 2018"
      },
      "publication_date": "2018-10-21",
      "selected": null,
      "title": "A Serverless IoT Architecture for Smart Waste Management Systems",
      "urls": [
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=8539123",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85059850934&origin=inward"
      ]
    },
    {
      "abstract": " We introduce Microsoft Machine Learning for Apache Spark (MMLSpark), an\necosystem of enhancements that expand the Apache Spark distributed computing\nlibrary to tackle problems in Deep Learning, Micro-Service Orchestration,\nGradient Boosting, Model Interpretability, and other areas of modern\ncomputation. Furthermore, we present a novel system called Spark Serving that\nallows users to run any Apache Spark program as a distributed, sub-millisecond\nlatency web service backed by their existing Spark Cluster. All MMLSpark\ncontributions have the same API to enable simple composition across frameworks\nand usage across batch, streaming, and RESTful web serving scenarios on static,\nelastic, or serverless clusters. We showcase MMLSpark by creating a method for\ndeep object detection capable of learning without human labeled data and\ndemonstrate its effectiveness for Snow Leopard conservation.\n",
      "authors": [
        "Hamilton, Mark",
        "Raghunathan, Sudarshan",
        "Matiach, Ilya",
        "Schonhoffer, Andrew",
        "Raman, Anand",
        "Barzilay, Eli",
        "Rajendran, Karthik",
        "Banda, Dalitso",
        "Hong, Casey Jisoo",
        "Knoertzer, Manon",
        "Brodsky, Ben",
        "Thigpen, Minsoo",
        "Mahajan, Janhavi Suresh",
        "Cochrane, Courtney",
        "Eswaran, Abhiram",
        "Green, Ari"
      ],
      "categories": null,
      "citations": null,
      "comments": null,
      "databases": [
        "arXiv"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": null,
      "publication_date": "2018-10-20",
      "selected": null,
      "title": "MMLSpark: Unifying Machine Learning Ecosystems at Massive Scales",
      "urls": [
        "https://arxiv.org/pdf/1810.08744",
        "http://arxiv.org/abs/1810.08744v2",
        "http://arxiv.org/pdf/1810.08744v2"
      ]
    },
    {
      "abstract": "Under the background of massive computing resources in power grid, smart grid has become the direction and trend of power industry development. In order to ensure the safe and stable operation of smart grid, the monitoring of the grid load should be strengthened and a reasonable solution should be arranged in time when the grid load exceeded the standard. So early warning system of power network overloading under serverless architecture was proposed. The main advantages of the combination of smart grid and serverless architecture were analyzed in detail, and the technical feasibility and economic feasibility of the early warning system for grid overload under the serverless mode were analyzed by examples. \u00c2\u00a9 2018 IEEE.",
      "authors": [
        "Xinzhou Geng",
        "Qiuzhe Ma",
        "Yunman Pei",
        "Zhibo Xu",
        "Wenjing Zeng",
        "Jing Zou"
      ],
      "categories": null,
      "citations": 2,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/EI2.2018.8582355",
      "keywords": [
        "serverless architecture",
        "overload warning",
        "cloud computing",
        "smart grid"
      ],
      "number_of_pages": 6,
      "pages": "1-6",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-5386-8550-1",
        "issn": null,
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "2nd IEEE Conference on Energy Internet and Energy System Integration, EI2 2018 - Proceedings"
      },
      "publication_date": "2018-10-20",
      "selected": null,
      "title": "Research on Early Warning System of Power Network Overloading Under Serverless Architecture",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85060875166&origin=inward",
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=8582355"
      ]
    },
    {
      "abstract": "An increase of the number of vehicles which is not followed by the number of roads can lead to the increase of congestion, especially in big cities. Regulation of law no 22 Year 2009 explains that there are seven types of vehicles prioritized on the road. This research aims to build a Smart Traffic Light as a solution with the goal of making the prioritized vehicle journey smooth when crossing the road with Smart Traffic Light. The proposed system is \"Smart Traffic Light on IoT and mBaaS (Mobile Backend As a Service) using High Priority Vehicles Method\". The Smart Traffic Light has three important parts, including: (1) Smart Traffic Application; (2) Smart Traffic Controller; and (3) mBaaS. Prioritized vehicle drivers cross the road using the Smart Traffic Application when they are in an emergency situation. Smart Traffic Application and Smart Traffic Controller communicate using mBaaS. Smart Traffic Application has a vehicle track search facility as well as identification of traffic light location. A few meters before crossing, Smart Traffic Application will send the location to mBaaS and continue to be read by Smart Traffic Controller using internet. If it meets the criteria of High Priority Vehicle, then Traffic Light will be changed to green in the same path. The results show that when testing the data rate from Smart Traffic Application to Smart Traffic Controller, it takes no later than 8.15 seconds and 1.2 seconds (the fastest) with the average data transmission time of 3.39 seconds. Smart Traffic Light is able to identify the direction of the vehicle before passing through the Smart Traffic Application. \u00c2\u00a9 2018 IEEE.",
      "authors": [
        "Muhammad Izzuddin Mahali",
        "Eko Marpanaji",
        "Satriyo Agung Dewanto",
        "Bekti Wulandari",
        "Umi Rochayati",
        "Nur Hasanah"
      ],
      "categories": null,
      "citations": 3,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/EECSI.2018.8752694",
      "keywords": [
        "IoT",
        "smart traffic light",
        "mBaaS"
      ],
      "number_of_pages": 5,
      "pages": "703-707",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-5386-8403-0",
        "issn": "2407439X",
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "2018 5th International Conference on Electrical Engineering, Computer Science and Informatics (EECSI)"
      },
      "publication_date": "2018-10-16",
      "selected": null,
      "title": "Smart Traffic Light based on IoT and mBaaS using High Priority Vehicles Method",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85069177773&origin=inward",
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=8752694"
      ]
    },
    {
      "abstract": "Cloud-based data analysis is nowadays common practice because of the lower system management overhead as well as the pay-as-you-go pricing model. The pricing model, however, is not always suitable for query processing as heavy use results in high costs. For example, in query-as-a-service systems, where users are charged per processed byte, collections of queries accessing the same data frequently can become expensive. The problem is compounded by the limited options for the user to optimize query execution when using declarative interfaces such as SQL. In this paper, we show how, without modifying existing systems and without the involvement of the cloud provider, it is possible to significantly reduce the overhead, and hence the cost, of query-as-a-service systems. Our approach is based on query rewriting so that multiple concurrent queries are combined into a single query. Our experiments show the aggregated amount of work done by the shared execution is smaller than in a query-at-a-time approach. Since queries are charged per byte processed, the cost of executing a group of queries is often the same as executing a single one of them. As an example, we demonstrate how the shared execution of the TPC-H benchmark is up to 100x and 16x cheaper in Amazon Athena and bigquery than using a query-at-a-time approach while achieving a higher throughput. \u00c2\u00a9 2018 IW3C2 (International World Wide Web Conference Committee).",
      "authors": [
        "Marroqu\u00c3\u00adn, R.",
        "M\u00c3\u00bcller, I.",
        "Makreshanski, D.",
        "Alonso, G."
      ],
      "categories": null,
      "citations": 5,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1145/3267809.3267822",
      "keywords": [
        "Query Processing",
        "Serverless",
        "Data Warehouse",
        "Shared Workload Execution",
        "Cloud Computing"
      ],
      "number_of_pages": 12,
      "pages": "439-450",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450360111",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "SoCC 2018 - Proceedings of the 2018 ACM Symposium on Cloud Computing"
      },
      "publication_date": "2018-10-11",
      "selected": null,
      "title": "Pay one, get hundreds for free: Reducing cloud costs through shared query execution",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85059020022&origin=inward"
      ]
    },
    {
      "abstract": "Sprocket is a highly configurable, stage-based, scalable, serverless video processing framework that exploits intra-video parallelism to achieve low latency. Sprocket enables developers to program a series of operations over video content in a modular, extensible manner. Programmers implement custom operations, ranging from simple video transformations to more complex computer vision tasks, in a simple pipeline specification language to construct custom video processing pipelines. Sprocket then handles the underlying access, encoding and decoding, and processing of video and image content across operations in a highly parallel manner. In this paper we describe the design and implementation of the Sprocket system on the AWS Lambda serverless cloud infrastructure, and evaluate Sprocket under a variety of conditions to show that it delivers its performance goals of high parallelism, low latency, and low cost (10s of seconds to process a 3,600 second video 1000-way parallel for less than $3). \u00c2\u00a9 2018 Association for Computing Machinery.",
      "authors": [
        "Ao, L.",
        "Voelker, G.M.",
        "Izhikevich, L.",
        "Porter, G."
      ],
      "categories": null,
      "citations": 33,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1145/3267809.3267815",
      "keywords": [],
      "number_of_pages": 12,
      "pages": "263-274",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450360111",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "SoCC 2018 - Proceedings of the 2018 ACM Symposium on Cloud Computing"
      },
      "publication_date": "2018-10-11",
      "selected": null,
      "title": "Sprocket: A serverless video processing framework",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85059032967&origin=inward"
      ]
    },
    {
      "abstract": "The Energy-related Severe Accident Database (ENSAD) is the most authoritative resource for comparative risk analysis of accidents in the energy sector. Although ENSAD contains comprehensive, worldwide data, it is a non-spatial database in Microsoft Access format. Therefore, spatial characteristics of the data cannot be fully utilised as well as analysed directly. Based on these premises, a new web-based version of ENSAD with GIS-capabilities\u00e2\u0080\u0093named ENSAD v2.0\u00e2\u0080\u0093is designed and developed using state-of-the-art, open source technologies. The ENSAD v2.0 consists of two main components, i.e. a spatial database and a responsive web application. For the spatial database, the current accident data are georeferenced and migrated from Microsoft Access, using a tiered approach. The responsive web application can be accessed from desktops as well as mobile devices, and provides both a 2D and 3D mapping platform that is developed on cloud-based, serverless architecture. ENSAD v2.0 also allows assigning different user roles with specific access rights, and a public version with advanced visualisation capabilities has also been developed. Lastly, a case study was carried out using a spatial analysis to visualise the potential impact radius of a natural gas pipeline explosion and to assess its consequences in terms of economic damage and casualties. \u00c2\u00a9 2019 The Author(s). Published by Taylor & Francis Group and Science Press on behalf of the International Society for Digital Earth, supported by the CASEarth Strategic Priority Research Programme.",
      "authors": [
        "Kim, W.",
        "Burgherr, P.",
        "Spada, M.",
        "Lustenberger, P.",
        "Kalinina, A.",
        "Hirschberg, S."
      ],
      "categories": null,
      "citations": 5,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1080/20964471.2019.1586276",
      "keywords": [
        "cloud computing",
        "Energy-related severe accident database",
        "risk assessment",
        "web-based GIS",
        "resilience"
      ],
      "number_of_pages": 27,
      "pages": "368-394",
      "publication": {
        "category": "Journal",
        "cite_score": 6.5,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "20964471",
        "publisher": "Taylor and Francis Ltd.",
        "sjr": 1.254,
        "snip": 2.01,
        "subject_areas": [
          "Computers in Earth Sciences",
          "Computer Science Applications"
        ],
        "title": "Big Earth Data"
      },
      "publication_date": "2018-10-02",
      "selected": null,
      "title": "Energy-related Severe Accident Database (ENSAD): cloud-based geospatial platform",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85089733929&origin=inward"
      ]
    },
    {
      "abstract": "Current Big Data applications are characterized by a heavy use of system resources (e.g., CPU, disk) generally distributed across a cluster. To effectively improve their performance there is a critical need for an accurate analysis of both Big Data workloads and frameworks. This means to fully understand how the system resources are being used in order to identify potential bottlenecks, from resource to code bottlenecks. This paper presents BDWatchdog, a novel framework that allows real-time and scalable analysis of Big Data applications by combining time series for resource monitorization and flame graphs for code profiling, focusing on the processes that make up the workload rather than the underlying instances on which they are executed. This shift from the traditional system-based monitorization to a process-based analysis is interesting for new paradigms such as software containers or serverless computing, where the focus is put on applications and not on instances. BDWatchdog has been evaluated on a Big Data cloud-based service deployed at the CESGA supercomputing center. The experimental results show that a process-based analysis allows for a more effective visualization and overall improves the understanding of Big Data workloads. BDWatchdog is publicly available at http://bdwatchdog.dec.udc.es. \u00c2\u00a9 2018 Elsevier B.V.",
      "authors": [
        "Enes, J.",
        "Exp\u00c3\u00b3sito, R.R.",
        "Touri\u00c3\u00b1o, J."
      ],
      "categories": null,
      "citations": 4,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1016/j.future.2017.12.068",
      "keywords": [
        "Flame graphs",
        "Monitoring",
        "Big data",
        "Process-based analysis",
        "Profiling",
        "Time series"
      ],
      "number_of_pages": 18,
      "pages": "420-437",
      "publication": {
        "category": "Journal",
        "cite_score": 13.3,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "0167739X",
        "publisher": "Elsevier",
        "sjr": 1.262,
        "snip": 2.72,
        "subject_areas": [
          "Hardware and Architecture",
          "Computer Networks and Communications",
          "Software"
        ],
        "title": "Future Generation Computer Systems"
      },
      "publication_date": "2018-10-01",
      "selected": null,
      "title": "BDWatchdog: Real-time monitoring and profiling of Big Data applications and frameworks",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85041503801&origin=inward"
      ]
    },
    {
      "abstract": "Software being ubiquitous in today's systems and business operations, it's highly important to structure the high-level architecture of a software application accordingly to deliver the expected customer requirements while accounting for quality measures such as scalability, high availability and high performance. We propose TheArchitect, a rule-based system for serverless-microservices based high-level architecture generation. In the process of auto generating serverless-microservices high-level architecture, TheArchitect will preserve the highlighted quality measures. It will also provide a tool based support for the high-level architecture designing process of the software architect. Any software developer will be able to use TheArchitect to generate a proper architecture minimizing the involvement of a software architect. Furthermore, the positives of microservices and serverless technologies have made a significant impact on the software engineering community in terms of shifting from the era of building large monolith applications containing overly complex designs, to microservices and serverless based technologies. Hence TheArchitect focuses on generating best fitted microservices and serverless based high-level architecture for a given application. \u00c2\u00a9 2018 IEEE.",
      "authors": [
        "K. J. P. G. Perera",
        "I. Perera"
      ],
      "categories": null,
      "citations": 2,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/SysEng.2018.8544423",
      "keywords": [
        "Software Architecture",
        "Microservices Architecture",
        "Serverless Architecture",
        "Domain Specific Software Architecture",
        "Rule-based Systems"
      ],
      "number_of_pages": 8,
      "pages": "1-8",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-5386-4447-8",
        "issn": null,
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "4th IEEE International Symposium on Systems Engineering, ISSE 2018 - Proceedings"
      },
      "publication_date": "2018-10-01",
      "selected": null,
      "title": "A Rule-based System for Automated Generation of Serverless-Microservices Architecture",
      "urls": [
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=8544423",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85059972907&origin=inward"
      ]
    },
    {
      "abstract": "[No abstract available]",
      "authors": [
        "Franz, J.",
        "Nagasuri, T.",
        "Wartman, A.",
        "Ventrella, A.V.",
        "Esposito, F."
      ],
      "categories": null,
      "citations": 4,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1109/LANMAN.2018.8475098",
      "keywords": [],
      "number_of_pages": 2,
      "pages": "131-132",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781728114347",
        "issn": "19440367",
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "IEEE Workshop on Local and Metropolitan Area Networks"
      },
      "publication_date": "2018-09-27",
      "selected": null,
      "title": "Reunifying Families after a Disaster via Serverless Computing and Raspberry Pis",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85055845867&origin=inward"
      ]
    },
    {
      "abstract": "In the constantly changing technological landscape the concept of serverless computing in a public Cloud is a relatively new development. Over recent years the serverless abstraction has gained significant traction within the IT industry. Google, Microsoft and AWS all now provide feature equivalent serverless implementations as part of their Cloud-based offerings and solution architects throughout the industry are utilizing serverless as part of mission critical enterprise systems. Throughout this paper we examine the performance profile of the serverless ecosystem in a low latency, high availability context, present results on the integral performance of such systems and outline some practical mitigation strategies to optimize serverless architectures. We confine our investigation specifically to one aspect of the AWS implementation of serverless; known as AWS Lambda. Our results show there are opportunities to tune the performance characteristics of Lambda-based architectures and we outline considerations such as cold starts and potential latency characteristics created by a combination of factors including external systems and events. We propose a diverse set of strategies, approaches and techniques which, when successfully implemented and deployed, simultaneously play to its strengths with the ultimate goal of providing a set of design patterns aimed at increasing the capability of serverless computing to a wider set of problem domains. \u00c2\u00a9 2018 IEEE.",
      "authors": [
        "Daniel Bardsley",
        "Larry Ryan",
        "John Howard"
      ],
      "categories": null,
      "citations": 3,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/SmartCloud.2018.00012",
      "keywords": [
        "performance",
        "serverless",
        "lambdas",
        "aws",
        "architecture"
      ],
      "number_of_pages": 8,
      "pages": "19-26",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-5386-8001-8",
        "issn": null,
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings - 3rd IEEE International Conference on Smart Cloud, SmartCloud 2018"
      },
      "publication_date": "2018-09-21",
      "selected": null,
      "title": "Serverless Performance and Optimization Strategies",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85057300759&origin=inward",
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=8513710"
      ]
    },
    {
      "abstract": "Cloud Computing enables an organization to utilize computing resources such as computation power, memory, database, storage or an application via the Internet with pay-as-you-go pricing model and it reaches to the consumer through Cloud Service Provider (CSP). Out of hundreds of CSPs only a few have outperformed in the cloud industry due to their revenue, market share, Infrastructure (availability zones regions) and cost and among top ones are AWS, AZURE and GCP. The theme of the paper i.e., Compute Service is a collection of sub-services such as Virtual Machines (VM), Container Management, Microservice based application, Serverless computing, Job scheduling and Scalability. In this paper, the Illustrative comparative of vCPU vs Memory vs Price of the machine type Instance of top three service providers has been made and in addition to that comparative of machine types such as General Purpose, CPU Optimized and Memory Optimized is made again on the scale of vCPU vs Memory vs Price. The Illustrated comparison deduced through this study will help the clients of the selected region availability zone (India) to make the decision about the particular service based on performance and price. \u00c2\u00a9 2018 IEEE.",
      "authors": [
        "Abdul Wahid",
        "M. Tariq Banday"
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/ICACCI.2018.8554366",
      "keywords": [
        "vCPU",
        "EC2",
        "Compute Engine",
        "Region",
        "Instances",
        "VM",
        "Availability Zone"
      ],
      "number_of_pages": 5,
      "pages": "2364-2368",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-5386-5315-9",
        "issn": null,
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "2018 International Conference on Advances in Computing, Communications and Informatics, ICACCI 2018"
      },
      "publication_date": "2018-09-19",
      "selected": null,
      "title": "Machine Type Comparative of Leading Cloud Players Based on Performance & Pricing",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85060020496&origin=inward",
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=8554366"
      ]
    },
    {
      "abstract": " The serverless scheduling problem poses a new challenge to Cloud service\nplatform providers because it is rather a job scheduling problem than a\ntraditional resource allocation or request load balancing problem.\nTraditionally, elastic cloud applications use managed virtual resource\nallocation and employ request load balancers to orchestrate the deployment.\nWith serverless, the provider needs to solve both the load balancing and the\nallocation. This work reviews the current Apache OpenWhisk serverless event load\nbalancing and a noncooperative game-theoretic load balancing approach for\nresponse time minimization in distributed systems. It is shown by simulation\nthat neither performs well under high system utilization which inspired a\nnoncooperative online allocation heuristic that allows tuning the trade-off\nbetween for response time and resource cost of each serverless function.\n",
      "authors": [
        "Stein, Manuel"
      ],
      "categories": null,
      "citations": null,
      "comments": "in revision after submission to HotCloud'18",
      "databases": [
        "arXiv"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": null,
      "publication_date": "2018-09-17",
      "selected": null,
      "title": "The Serverless Scheduling Problem and NOAH",
      "urls": [
        "http://arxiv.org/abs/1809.06100v1",
        "http://arxiv.org/pdf/1809.06100v1",
        "https://arxiv.org/pdf/1809.06100"
      ]
    },
    {
      "abstract": "A Chatbot is an application that is designed to provide automated contextual communication. Today most chatbots are implemented on top of or as a gateway to popular messaging services, such as Facebook Messenger, Skype and Viber. Chatbots can be classified into many categories regarding their usage, such as conversational commerce, customer support, education, marketing and others. Due to their agile deployment ability on top of virtualized and serverless environments,chatbots are expected to play a pivotal role in the forthcoming 5G networks, which support virtualization capabilities at the edge of the network, making feasible the provision of diversified chatbot services customized to each user needs and requests. However, chatbot QoS might be affected under congested network conditions or in areas with poor signal reception quality. Currently, the performance of the chatbot has not been researched, while the users are experiencing only the results of the potential QoS degradation, such as loss or re-ordering of messages. This paper provides an experimental study of the chatbot apps performance/QoS under different network and reception conditions. The experiment was conducted using the 5G mobile network emulation testbed created and provided by the EU-funded TRIANGLE project. \u00c2\u00a9 2018 IEEE.",
      "authors": [
        "Vaios Koumaras",
        "Andreas Foteas",
        "Angeliki Papaioannou",
        "Marianna Kapari",
        "Christos Sakkas",
        "Harilaos Koumaras"
      ],
      "categories": null,
      "citations": 5,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/CAMAD.2018.8515004",
      "keywords": [
        "Benchmarking",
        "5G",
        "QoS",
        "QoE",
        "Chatbot"
      ],
      "number_of_pages": 6,
      "pages": "1-6",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-5386-6152-9",
        "issn": "2378-4865",
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "2018 IEEE 23rd International Workshop on Computer Aided Modeling and Design of Communication Links and Networks (CAMAD)"
      },
      "publication_date": "2018-09-17",
      "selected": null,
      "title": "5G Performance Testing of Mobile Chatbot Applications",
      "urls": [
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=8515004",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85057281068&origin=inward"
      ]
    },
    {
      "abstract": "Take your Python machine learning ideas and create serverless web applications accessible by anyone with an Internet connection. Some of the most popular serverless cloud providers are covered in this book-Amazon, Microsoft, Google, and PythonAnywhere. You will work through a series of common Python data science problems in an increasing order of complexity. The practical projects presented in this book are simple, clear, and can be used as templates to jump-start many other types of projects. You will learn to create a web application around numerical or categorical predictions, understand the analysis of text, create powerful and interactive presentations, serve restricted access to data, and leverage web plugins to accept credit card payments and donations. You will get your projects into the hands of the world in no time. Each chapter follows three steps: modeling the right way, designing and developing a local web application, and deploying onto a popular and reliable serverless cloud provider. You can easily jump to or skip particular topics in the book. You also will have access to Jupyter notebooks and code repositories for complete versions of the code covered in the book. What You'll Learn Extend your machine learning models using simple techniques to create compelling and interactive web dashboards Leverage the Flask web framework for rapid prototyping of your Python models and ideas Create dynamic content powered by regression coefficients, logistic regressions, gradient boosting machines, Bayesian classifications, and more Harness the power of TensorFlow by exporting saved models into web applications Create rich web dashboards to handle complex real-time user input with JavaScript and Ajax to yield interactive and tailored content Create dashboards with paywalls to offer subscription-based access Access API data such as Google Maps, OpenWeather, etc. Apply different approaches to make sense of text data and return customized intelligence Build an intuitive and useful recommendation site to add value to users and entice them to keep coming back Utilize the freemium offerings of Google Analytics and analyze the results Take your ideas all the way to your customer's plate using the top serverless cloud providers Who This Book Is For Those with some programming experience with Python, code editing, and access to an interpreter in working order. The book is geared toward entrepreneurs who want to get their ideas onto the web without breaking the bank, small companies without an IT staff, students wanting exposure and training, and for all data science professionals ready to take things to the next level. \u00c2\u00a9 2018 by Manuel Amunategui, Mehdi Roopaei. All rights reserved.",
      "authors": [
        "Amunategui, M.",
        "Roopaei, M."
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1007/978-1-4842-3873-8",
      "keywords": [],
      "number_of_pages": 482,
      "pages": "1-482",
      "publication": {
        "category": "Book",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781484238738",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Monetizing Machine Learning: Quickly Turn Python ML Ideas into Web Applications on the Serverless Cloud"
      },
      "publication_date": "2018-09-12",
      "selected": null,
      "title": "Monetizing machine learning: Quickly turn Python ML ideas into web applications on the serverless cloud",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85062933624&origin=inward"
      ]
    },
    {
      "abstract": " Neuroscience has been carried into the domain of big data and high\nperformance computing (HPC) on the backs of initiatives in data collection and\nan increasingly compute-intensive tools. While managing HPC experiments\nrequires considerable technical acumen, platforms and standards have been\ndeveloped to ease this burden on scientists. While web-portals make resources\nwidely accessible, data organizations such as the Brain Imaging Data Structure\nand tool description languages such as Boutiques provide researchers with a\nfoothold to tackle these problems using their own datasets, pipelines, and\nenvironments. While these standards lower the barrier to adoption of HPC and\ncloud systems for neuroscience applications, they still require the\nconsolidation of disparate domain-specific knowledge. We present Clowdr, a\nlightweight tool to launch experiments on HPC systems and clouds, record rich\nexecution records, and enable the accessible sharing of experimental summaries\nand results. Clowdr uniquely sits between web platforms and bare-metal\napplications for experiment management by preserving the flexibility of\ndo-it-yourself solutions while providing a low barrier for developing,\ndeploying and disseminating neuroscientific analysis.\n",
      "authors": [
        "Kiar, Gregory",
        "Brown, Shawn T",
        "Glatard, Tristan",
        "Evans, Alan C"
      ],
      "categories": null,
      "citations": null,
      "comments": "12 pages, 3 figures, 1 tool",
      "databases": [
        "arXiv"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": null,
      "publication_date": "2018-09-02",
      "selected": null,
      "title": "A Serverless Tool for Platform Agnostic Computational Experiment Management",
      "urls": [
        "http://arxiv.org/abs/1809.07693v1",
        "https://arxiv.org/pdf/1809.07693",
        "http://arxiv.org/pdf/1809.07693v1"
      ]
    },
    {
      "abstract": "This paper presents a review of cloud application architectures and its evolution. It reports observations being made during a research project that tackled the problem to transfer cloud applications between different cloud infrastructures. As a side effect, we learned a lot about commonalities and differences from plenty of different cloud applications which might be of value for cloud software engineers and architects. Throughout the research project, we analyzed industrial cloud standards, performed systematic mapping studies of cloud-native application-related research papers, did action research activities in cloud engineering projects, modeled a cloud application reference model, and performed software and domain-specific language engineering activities. Two primary (and sometimes overlooked) trends can be identified. First, cloud computing and its related application architecture evolution can be seen as a steady process to optimize resource utilization in cloud computing. Second, these resource utilization improvements resulted over time in an architectural evolution of how cloud applications are being built and deployed. A shift from monolithic service-oriented architectures (SOA), via independently deployable microservices towards so-called serverless architectures, is observable. In particular, serverless architectures are more decentralized and distributed, and make more intentional use of separately provided services. In other words, a decentralizing trend in cloud application architectures is observable that emphasizes decentralized architectures known from former peer-to-peer based approaches. This is astonishing because, with the rise of cloud computing (and its centralized service provisioning concept), the research interest in peer-to-peer based approaches (and its decentralizing philosophy) decreased. However, this seems to change. Cloud computing could head into the future of more decentralized and more meshed services.",
      "authors": [
        "Kratzke, Nane"
      ],
      "categories": null,
      "citations": 26,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.3390/app8081368",
      "keywords": [
        "Service-to-service",
        "Container",
        "Serverless",
        "Cloud computing",
        "Cloud-native",
        "P2P",
        "Service-oriented architecture",
        "Service-mesh",
        "Unikernel",
        "Distributed cloud",
        "Microservice",
        "SOA"
      ],
      "number_of_pages": null,
      "pages": null,
      "publication": {
        "category": "Journal",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": null,
        "publisher": "Multidisciplinary Digital Publishing Institute",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Applied Sciences (Switzerland)"
      },
      "publication_date": "2018-08-14",
      "selected": null,
      "title": "A Brief History of Cloud Application Architectures",
      "urls": [
        "https://www.mdpi.com/2076-3417/8/8/1368/pdf",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85051750704&origin=inward"
      ]
    },
    {
      "abstract": "Serverless computing has recently emerged as a new execution model for cloud computing, in which service providers offer compute runtimes, also known as Function-as-a-Service (FaaS) platforms, allowing users to develop, execute and manage application functionalities. Following the rapid adoption of FaaS technologies and the introduction of numerous self hosted FaaS systems, the need for real time monitoring and scheduling of functions in an ecosystem of providers has become critical. In this paper, we present MPSC, a framework for supporting Multi-Provider Serverless Computing. MPSC monitors the performance of serverless providers in real time, and schedules applications across these providers. In addition, MPSC also provides APIs for users to define their own scheduling algorithms. When compared to scheduling on a single cloud resource MPSC provides a 4X speedup across multiple providers in a volatile edge computing environment. \u00c2\u00a9 2018 Association for Computing Machinery.",
      "authors": [
        "Aske, A.",
        "Zhao, X."
      ],
      "categories": null,
      "citations": 4,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1145/3229710.3229742",
      "keywords": [
        "Performance",
        "Scheduling",
        "Serverless computing",
        "Edge computing",
        "Function-as-a-service"
      ],
      "number_of_pages": null,
      "pages": null,
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450365239",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "ACM International Conference Proceeding Series"
      },
      "publication_date": "2018-08-13",
      "selected": null,
      "title": "Supporting multi-provider serverless computing on the edge",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85054864645&origin=inward"
      ]
    },
    {
      "abstract": "[No abstract available]",
      "authors": [
        "Zheng, S.",
        "Yang, X."
      ],
      "categories": null,
      "citations": 4,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1145/3234200.3234232",
      "keywords": [
        "On-demand",
        "DDoS",
        "Serverless",
        "Cryptocurrency mining"
      ],
      "number_of_pages": 3,
      "pages": "15-17",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450359153",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "SIGCOMM 2018 - Proceedings of the 2018 Posters and Demos, Part of SIGCOMM 2018"
      },
      "publication_date": "2018-08-07",
      "selected": null,
      "title": "DynaShield: A cost-effective DDoS defense architecture",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85056484727&origin=inward"
      ]
    },
    {
      "abstract": " This research reports investigates an edge on-device stream processing\nplatform, which extends the serverless com- puting model to the edge to help\nfacilitate real-time data analytics across the cloud and edge in a uniform\nmanner. We investigate associated use cases and architectural design. We\ndeployed and tested our system on edge devices (Raspberry Pi and Android\nPhone), which proves that stream processing analytics can be performed at the\nedge of the network with single board computers in a real-time fashion.\n",
      "authors": [
        "Renart, Eduard Gibert",
        "Balouek-Thomert, Daniel",
        "Parashar, Manish"
      ],
      "categories": null,
      "citations": null,
      "comments": null,
      "databases": [
        "arXiv"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": null,
      "publication_date": "2018-08-03",
      "selected": null,
      "title": "Edge Based Data-Driven Pipelines (Technical Report)",
      "urls": [
        "https://arxiv.org/pdf/1808.01353",
        "http://arxiv.org/abs/1808.01353v1",
        "http://arxiv.org/pdf/1808.01353v1"
      ]
    },
    {
      "abstract": " Cloud computing offers on-demand, scalable computing and storage, and has\nbecome an essential resource for the analyses of big biomedical data. The usual\napproach to cloud computing requires users to reserve and provision virtual\nservers. An emerging alternative is to have the provider allocate machine\nresources dynamically. This type of serverless computing has tremendous\npotential for biomedical research in terms of ease-of-use, instantaneous\nscalability and cost effectiveness. In our proof of concept example, we\ndemonstrate how serverless computing provides low cost access to hundreds of\nCPUs, on demand, with little or no setup. In particular, we illustrate that the\nall-against-all pairwise comparison among all unique human proteins can be\naccomplished in approximately 2 minutes, at a cost of less than $1, using\nAmazon Web Services Lambda. This is a 250x speedup compared to running the same\ntask on a typical laptop computer.\n",
      "authors": [
        "Kumanov, Dimitar",
        "Hung, Ling-Hong",
        "Lloyd, Wes",
        "Yeung, Ka Yee"
      ],
      "categories": null,
      "citations": null,
      "comments": null,
      "databases": [
        "arXiv"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": null,
      "publication_date": "2018-07-31",
      "selected": null,
      "title": "Serverless computing provides on-demand high performance computing for biomedical research",
      "urls": [
        "http://arxiv.org/abs/1807.11659v1",
        "http://arxiv.org/pdf/1807.11659v1",
        "https://arxiv.org/pdf/1807.11659"
      ]
    },
    {
      "abstract": "Since the appearance of Amazon Lambda in 2014, all major cloud providers have embraced the 'Function as a Service' (FaaS) model, because of its enormous potential for a wide variety of applications. As expected (and also desired), the competition is fierce in the serverless world, and includes aspects such as the run-Time support for the orchestration of serverless functions. In this regard, the three major production services are currently Amazon Step Functions (December 2016), Azure Durable Functions (June 2017), and IBM Composer (October 2017), still young and experimental projects with a long way ahead. In this article, we will compare and analyze these three serverless orchestration systems under a common evaluation framework. We will study their architectures, programming and billing models, and their effective support for parallel execution, among others. Through a series of experiments, we will also evaluate the run-Time overhead of the different infrastructures for different types of workflows. \u00c2\u00a9 2018 IEEE.",
      "authors": [
        "Pedro Garc\u00eda L\u00f3pez",
        "Marc S\u00e1nchez-Artigas",
        "Gerard Par\u00eds",
        "Daniel Barcelona Pons",
        "\u00c1lvaro Ruiz Ollobarren",
        "David Arroyo Pinto"
      ],
      "categories": null,
      "citations": 10,
      "comments": "6 pages, 2 figures, title changed, 4th International Workshop on\n  Serverless Computing (UCC Companion 2018)",
      "databases": [
        "arXiv",
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/UCC-Companion.2018.00049",
      "keywords": [
        "Serverless",
        "Function Composition",
        "Cloud computing",
        "IBM Composer",
        "Amazon Step Functions",
        "Orchestration",
        "Azure Durable Functions"
      ],
      "number_of_pages": 6,
      "pages": "148-153",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-7281-0360-0",
        "issn": null,
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings - 11th IEEE/ACM International Conference on Utility and Cloud Computing Companion, UCC Companion 2018"
      },
      "publication_date": "2018-07-30",
      "selected": null,
      "title": "Comparison of FaaS Orchestration Systems",
      "urls": [
        "http://arxiv.org/pdf/1807.11248v2",
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=8605772",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85061794281&origin=inward",
        "http://dx.doi.org/10.1109/UCC-Companion.2018.00049",
        "http://arxiv.org/abs/1807.11248v2"
      ]
    },
    {
      "abstract": "Recent advances in network function virtualization have prompted the research community to consider data-centerscale deployments. However, existing tools, such as E2 and SOL, limit VNF chain allocation to rack-scale and provide limited support for management of allocated chains. We define a narrow API to let data center tenants and operators allocate and manage arbitrary VNF chain topologies, and we introduce NetPack, a new stochastic placement algorithm, to implement this API at data-center-scale. We prototyped the resulting system, dubbed Daisy, using the Sonata platform. In data-center-scale simulations on realistic scenarios and topologies that are orders of magnitude larger than prior work, we achieve in all cases an allocation density within 96% of a recently introduced, theoretically complete, constraintsolver-based placement engine, while being 82\u00c3\u0097 faster on average. In detailed emulation with real packet traces, we find that Daisy performs each of our six API calls with at most one second of throughput drop. \u00c2\u00a9 2018 Copyright held by the owner/author(s).",
      "authors": [
        "Kodirov, N.",
        "Bayless, S.",
        "Ruffy, F.",
        "Beschastnikh, I.",
        "Hoos, H.H.",
        "Hu, A.J."
      ],
      "categories": null,
      "citations": 4,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1145/3230718.3230724",
      "keywords": [
        "Management API",
        "VNF chain allocation algorithms",
        "Network Function as a Service"
      ],
      "number_of_pages": 16,
      "pages": "125-140",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450359023",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "ANCS 2018 - Proceedings of the 2018 Symposium on Architectures for Networking and Communications Systems"
      },
      "publication_date": "2018-07-23",
      "selected": null,
      "title": "VNF chain allocation and management at data center scale",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85051642113&origin=inward"
      ]
    },
    {
      "abstract": "The IoT area has grown significantly in the last few years and is expected to reach a gigantic amount of 50 billion devices by 2020. The appearance of serverless architectures, specifically highlighting FaaS, raises the question of the suitability of using them in IoT environments. Combining IoT with a serverless architectural design can effective when trying to make use of local processing power that exists in a local network of IoT devices and creating a fog layer that leverages computational capabilities that are closer to the end-user. In this approach, which is placed between the device and the serverless function, when a device requests for the execution of a serverless function will decide based on previous metrics of execution if the serverless function should be executed locally, in the fog layer of a local network of IoT devices, or if it should be executed remotely, in one of the available cloud servers. Therefore, this approach allows dynamically allocating functions to the most suitable layer. \u00c2\u00a9 2018 IEEE.",
      "authors": [
        "Duarte Pinto",
        "Jo\u00e3o Pedro Dias",
        "Hugo Sereno Ferreira"
      ],
      "categories": null,
      "citations": 8,
      "comments": null,
      "databases": [
        "arXiv",
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/EUC.2018.00008",
      "keywords": [
        "Multi Armed Bandit",
        "Ubiquitous Computing",
        "Serverless",
        "Internet of Things",
        "Fog Computing"
      ],
      "number_of_pages": 8,
      "pages": "1-8",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-5386-8297-5",
        "issn": null,
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings - 16th International Conference on Embedded and Ubiquitous Computing, EUC 2018"
      },
      "publication_date": "2018-07-10",
      "selected": null,
      "title": "Dynamic Allocation of Serverless Functions in IoT Environments",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85061457306&origin=inward",
        "http://arxiv.org/abs/1807.03755v3",
        "http://dx.doi.org/10.1109/EUC.2018.00008",
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=8588841",
        "http://arxiv.org/pdf/1807.03755v3"
      ]
    },
    {
      "abstract": "Microservices, distributed computing, event-based systems, Kappa architecture, stateless algorithms, algorithm implementation, performance evaluation, distributed computing, pool-based systems, heterogeneous distributed systems, serverless computing, functions as a service. \u00c2\u00a9 2018 Copyright held by the owner/author(s). Publication rights licensed to Association for Computing Machinery.",
      "authors": [
        "Merelo, J.J.",
        "Garc\u00c3\u00ada-Valdez, J.-M."
      ],
      "categories": null,
      "citations": 6,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1145/3205651.3208317",
      "keywords": [],
      "number_of_pages": 8,
      "pages": "1870-1877",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450357647",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "GECCO 2018 Companion - Proceedings of the 2018 Genetic and Evolutionary Computation Conference Companion"
      },
      "publication_date": "2018-07-06",
      "selected": null,
      "title": "Mapping evolutionary algorithms to a reactive, stateless architecture using a modern concurrent language",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85051456321&origin=inward"
      ]
    },
    {
      "abstract": "We introduce EMARS, an efficient resource management system for serverless cloud computing frameworks with the goal to enhance resource (focus on memory) allocation among containers. We have built our prototype on top of an open-source serverless platform, OpenLambda. It is based upon application workloads and serverless functions' memory needs. As a background motivation we analyzed the latencies and memory requirements of functions running on AWS lambda. The memory limits also lead to variations in number of containers spawned on OpenLambda. We use memory limit settings to propose a model of predictive efficient memory management. \u00c2\u00a9 2018 IEEE.",
      "authors": [
        "Aakanksha Saha",
        "Sonika Jindal"
      ],
      "categories": null,
      "citations": 7,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/CLOUD.2018.00113",
      "keywords": [
        "response time",
        "memory limit",
        "cloud computing",
        "Serverless"
      ],
      "number_of_pages": 4,
      "pages": "827-830",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-5386-7236-5",
        "issn": "2159-6190",
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "2018 IEEE 11th International Conference on Cloud Computing (CLOUD)"
      },
      "publication_date": "2018-07-02",
      "selected": null,
      "title": "EMARS: Efficient Management and Allocation of Resources in Serverless",
      "urls": [
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=8457882",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85057479232&origin=inward"
      ]
    },
    {
      "abstract": "In serverless computing, developers define a function to handle an event, and the serverless framework horizontally scales the application as needed. The downside of this function-based abstraction is it limits the type of application supported and places a bound on the function to be within the physical resource limitations of the server the function executes on. In this paper we propose a new abstraction for serverless computing: a developer supplies a process and the serverless framework seamlessly scales out the process's resource usage across the datacenter. This abstraction enables processing to not only be more general purpose, but also allows a process to break out of the limitations of a single server - making serverless computing more serverless. To realize this abstraction, we propose ServerlessOS, comprised of three key components: (i) a new disaggregation model, which leverages disaggregation for abstraction, but enables resources to move fluidly between servers for performance; (ii) a cloud orchestration layer which manages fine-grained resource allocation and placement throughout the application's lifetime via local and global decision making; and (iii) an isolation capability that enforces data and resource isolation across disaggregation, effectively extending Linux cgroup functionality to span servers. \u00c2\u00a9 2018 IEEE.",
      "authors": [
        "Zaid Al-Ali",
        "Sepideh Goodarzy",
        "Ethan Hunter",
        "Sangtae Ha",
        "Richard Han",
        "Eric Keller",
        "Eric Rozner"
      ],
      "categories": null,
      "citations": 7,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/CLOUD.2018.00064",
      "keywords": [
        "orchestration",
        "isolation",
        "cloud",
        "resource disaggregation",
        "virtualization",
        "serverless"
      ],
      "number_of_pages": 4,
      "pages": "456-459",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-5386-7236-5",
        "issn": "2159-6190",
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "2018 IEEE 11th International Conference on Cloud Computing (CLOUD)"
      },
      "publication_date": "2018-07-02",
      "selected": null,
      "title": "Making Serverless Computing More Serverless",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85057507561&origin=inward",
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=8457832"
      ]
    },
    {
      "abstract": "Serverless architectures organized around loosely-coupled function invocations represent an emerging design for many applications. Recent work mostly focuses on user-facing products and event-driven processing pipelines. In this paper, we explore a completely different part of the application space and examine the feasibility of analytical processing on big data using a serverless architecture. We present Flint, a prototype Spark execution engine that takes advantage of AWS Lambda to provide a pure pay-as-you-go cost model. With Flint, a developer uses PySpark exactly as before, but without needing an actual Spark cluster. We describe the design, implementation, and performance of Flint, along with the challenges associated with serverless analytics. \u00c2\u00a9 2018 IEEE.",
      "authors": [
        "Youngbin Kim",
        "Jimmy Lin"
      ],
      "categories": null,
      "citations": 16,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/CLOUD.2018.00063",
      "keywords": [
        "Data analytics",
        "Data science",
        "Cloud computing",
        "Serverless computing"
      ],
      "number_of_pages": 5,
      "pages": "451-455",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-5386-7236-5",
        "issn": "2159-6190",
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "2018 IEEE 11th International Conference on Cloud Computing (CLOUD)"
      },
      "publication_date": "2018-07-02",
      "selected": null,
      "title": "Serverless Data Analytics with Flint",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85057494571&origin=inward",
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=8457831"
      ]
    },
    {
      "abstract": "In this paper, we present Lowgo, a crosscloud tracing tool for capturing causal relationships in serverless applications. To do so, Lowgo records dependencies between functions, through cloud services, and across regions to facilitate debugging and reasoning about highly concurrent, multi-cloud applications. We empirically evaluate Lowgo using microbenchmarks and multi-function and multi-cloud applications. We find that Lowgo is able to capture causal dependencies with overhead that ranges from 2-12%, which is less than half that of the best-performing, cloud-specific approach. \u00c2\u00a9 2018 IEEE.",
      "authors": [
        "Wei-Tsung Lin",
        "Chandra Krintz",
        "Rich Wolski"
      ],
      "categories": null,
      "citations": 4,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/CLOUD.2018.00039",
      "keywords": [
        "cloud computing",
        "function as a service",
        "faas",
        "Azure Functions",
        "serverless computing",
        "AWS Lambda"
      ],
      "number_of_pages": 8,
      "pages": "253-260",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-5386-7236-5",
        "issn": "2159-6190",
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "2018 IEEE 11th International Conference on Cloud Computing (CLOUD)"
      },
      "publication_date": "2018-07-02",
      "selected": null,
      "title": "Tracing Function Dependencies across Clouds",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85057442397&origin=inward",
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=8457807"
      ]
    },
    {
      "abstract": "Serverless computing, also known as Function-as-a-Service (FaaS) or Cloud Functions, is a new method of running distributed applications by executing functions on the infrastructure of cloud providers. Although it frees the developers from managing servers, there are still decisions to be made regarding selection of function configurations based on the desired performance and cost. The billing model of this approach considers time of execution, measured in 100ms units, as well as the size of the memory allocated per function. In this paper, we look into the problem of scheduling scientific workflows, which are applications consisting of multiple tasks connected into a dependency graph. We discuss challenges related to workflow scheduling and propose the Serverless Deadline-Budget Workflow Scheduling (SDBWS) algorithm adapted to serverless platforms. We present preliminary experiments with a small-scale Montage workflow run on the AWS Lambda infrastructure. \u00c2\u00a9 2018 IEEE.",
      "authors": [
        "Joanna Kijak",
        "Piotr Martyna",
        "Maciej Pawlik",
        "Bartosz Balis",
        "Maciej Malawski"
      ],
      "categories": null,
      "citations": 9,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/CLOUD.2018.00065",
      "keywords": [
        "scientific workflow",
        "cloud functions",
        "task scheduling",
        "Faas",
        "serverless computing"
      ],
      "number_of_pages": 8,
      "pages": "460-467",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-5386-7236-5",
        "issn": "2159-6190",
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "2018 IEEE 11th International Conference on Cloud Computing (CLOUD)"
      },
      "publication_date": "2018-07-02",
      "selected": null,
      "title": "Challenges for Scheduling Scientific Workflows on Cloud Functions",
      "urls": [
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=8457833",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85057477896&origin=inward"
      ]
    },
    {
      "abstract": "The gaming industry has been among the most profitable industries in the world for a number of years and turns the economical gears of many countries. From big industrialized countries to small countries, they have been able to make remarkable progress in their economy by relying on gaming, and create a wonderful financial turnover. Game as a service is a new solution in the game industry for the development, deployment and operation of the game on servers instead of same running on the user's client. This concept includes the types of providing service in cloud space. The purpose of this paper is to design and implement a large-scale infrastructure for providing game development services as a comprehensive compilation solution, which is established based on service-oriented infrastructure, distributed architecture, scalability, high performance, high availability, and appropriate throughput, so that newer services such as structured security, persistence development lifecycle, realtime and batch data processing and analysis platforms and integrated communication architecture can be also achieved, in addition to more efficient operation and more than current game development technologies. \u00c2\u00a9 2018 IEEE.",
      "authors": [
        "Amini, P.",
        "Zahiri Motlagh, S.A.",
        "Nezhadpour, M."
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1109/DGRC.2018.8712040",
      "keywords": [
        "Platform as a Service (PaaS)",
        "Backend as a Service (BaaS)",
        "Game Development",
        "Infrastructure as a Service (IaaS)",
        "Gaming as a Service (GaaS)",
        "Software as a Service (Saas)",
        "Cloud Services",
        "Cloud Computing"
      ],
      "number_of_pages": 7,
      "pages": "27-33",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781728111148",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "2018 2nd National and 1st International Digital Games Research Conference: Trends, Technologies, and Applications, DGRC 2018"
      },
      "publication_date": "2018-07-02",
      "selected": null,
      "title": "A Large-Scale Infrastructure for Serious Games Services",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85066495760&origin=inward"
      ]
    },
    {
      "abstract": "There is increasing impetus towards 'Industry 4.0', a recently proposed roadmap for process automation across a broad spectrum of manufacturing industries. The proposed approach uses Evolutionary Computation to optimise real-world metrics. Features of the proposed approach are that it is generic (i.e. applicable across multiple problem domains) and decentralised, i.e. hosted remotely from the physical system upon which it operates. In particular, by virtue of being serverless, the project goal is that computation can be performed 'just in time' in a scalable fashion. We describe a case study for value-based optimisation, applicable to a wide range of manufacturing processes. In particular, value is expressed in terms of Overall Equipment Effectiveness (OEE), grounded in monetary units. We propose a novel online stopping condition that takes into account the predicted utility of further computational effort. We apply this method to scheduling problems in the (max, +) algebra, and compare against a baseline stopping criterion with no prediction mechanism. Near optimal profit is obtained by the proposed approach, across multiple problem instances. \u00c2\u00a9 2018 Copyright held by the owner/author(s).",
      "authors": [
        "Dziurzanski, P.",
        "Swan, J.",
        "Indrusiak, L.S."
      ],
      "categories": null,
      "citations": 9,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1145/3205455.3205501",
      "keywords": [
        "Serverless Clouds",
        "Genetic Algorithm",
        "Plant optimisation",
        "Stopping Condition",
        "Function as a Service",
        "FaaS",
        "Value Curve"
      ],
      "number_of_pages": 8,
      "pages": "1222-1229",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450356183",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "GECCO 2018 - Proceedings of the 2018 Genetic and Evolutionary Computation Conference"
      },
      "publication_date": "2018-07-02",
      "selected": null,
      "title": "Value-based manufacturing optimisation in serverless clouds for industry 4.0",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85050594801&origin=inward"
      ]
    },
    {
      "abstract": "Serverless or functions as a service runtimes have shown significant benefits to efficiency and cost for event-driven cloud applications. Although serverless runtimes are limited to applications requiring lightweight computation and memory, such as machine learning prediction and inference, they have shown improvements on these applications beyond other cloud runtimes. Training deep learning can be both compute and memory intensive. We investigate the use of serverless runtimes while leveraging data parallelism for large models, show the challenges and limitations due to the tightly coupled nature of such models, and propose modifications to the underlying runtime implementations that would mitigate them. For hyperparameter optimization of smaller deep learning models, we show that serverless runtimes can provide significant benefit. \u00c2\u00a9 2018 IEEE.",
      "authors": [
        "Lang Feng",
        "Prabhakar Kudva",
        "Dilma Da Silva",
        "Jiang Hu"
      ],
      "categories": null,
      "citations": 23,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/CLOUD.2018.00049",
      "keywords": [
        "cloud computing",
        "cloud cost and performance",
        "deep learning",
        "serverless computing",
        "cloud scaling"
      ],
      "number_of_pages": 8,
      "pages": "334-341",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-5386-7236-5",
        "issn": "2159-6190",
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "2018 IEEE 11th International Conference on Cloud Computing (CLOUD)"
      },
      "publication_date": "2018-07-02",
      "selected": null,
      "title": "Exploring Serverless Computing for Neural Network Training",
      "urls": [
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=8457817",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85057438808&origin=inward"
      ]
    },
    {
      "abstract": "Serverless computing provides a small runtime container to execute lines of codes without infrastructure management which is similar to Platform as a Service (PaaS) but a functional level. Amazon started the event-driven compute named Lambda functions in 2014 with a 25 concurrent limitation, but it now supports at least a thousand of concurrent invocation to process event messages generated by resources like databases, storage and system logs. Other providers, i.e., Google, Microsoft, and IBM offer a dynamic scaling manager to handle parallel requests of stateless functions in which additional containers are provisioning on new compute nodes for distribution. However, while functions are often developed for microservices and lightweight workload, they are associated with distributed data processing using the concurrent invocations. We claim that the current serverless computing environments can support dynamic applications in parallel when a partitioned task is executable on a small function instance. We present results of throughput, network bandwidth, a file I/O and compute performance regarding the concurrent invocations. We deployed a series of functions for distributed data processing to address the elasticity and then demonstrated the differences between serverless computing and virtual machines for cost efficiency and resource utilization. \u00c2\u00a9 2018 IEEE.",
      "authors": [
        "Hyungro Lee",
        "Kumar Satyam",
        "Geoffrey Fox"
      ],
      "categories": null,
      "citations": 45,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/CLOUD.2018.00062",
      "keywords": [
        "IBM OpenWhisk",
        "Microsoft Azure Functions",
        "Serverless",
        "FaaS",
        "Google Functions",
        "Amazon Lambda",
        "Event-driven Computing"
      ],
      "number_of_pages": 9,
      "pages": "442-450",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-5386-7236-5",
        "issn": "2159-6190",
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "2018 IEEE 11th International Conference on Cloud Computing (CLOUD)"
      },
      "publication_date": "2018-07-02",
      "selected": null,
      "title": "Evaluation of Production Serverless Computing Environments",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85057449197&origin=inward",
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=8457830"
      ]
    },
    {
      "abstract": "Lambda paradigm, also known as Function as a Service (FaaS), is a novel event-driven concept that allows companies to build scalable and reliable enterprise applications in an off-premise computing data-center as a serverless solution. In practice, however, an important goal for the service provider of a Lambda platform is to devise an efficient way to consolidate multiple Lambda functions in a single host. While the majority of existing resource management solutions use only operating-system level metrics (e.g., average utilization of computing and I/O resources) to allocate the available resources among the submitted workloads in a balanced way, a resource allocation schema that is oblivious to the issue of shared-resource contention can result in a significant performance variability and degradation within the entire platform. This paper proposes a predictive controller scheme that dynamically allocates resources in a Lambda platform. This scheme uses a prediction tool to estimate the future rate of every event stream and takes into account the quality of service enforcements requested by the owner of each Lambda function. This is formulated as an optimization problem where a set of cost functions are introduced (i) to reduce the total QoS violation incidents; (ii) to keep the CPU utilization level within an accepted range; and (iii) to avoid the fierce contention among collocated applications for obtaining shared resources. Performance evaluation is carried out by comparing the proposed solution with an enhanced interference-aware version of three well-known heuristics, namely spread, binpack (the two native clustering solutions employed by Docker Swarm) and best-effort resource allocation schema. Experimental results show that the proposed controller improves the overall performance (in terms of reducing the end-to-end response time) by 14.9 percent on average compared to the best result of the other heuristics. The proposed solution also increases the overall CPU utilization by 18 percent on average (for lightweight workloads), while achieves an average 87 percent (maximum 146 percent) improvement in preventing QoS violation incidents. \u00c2\u00a9 1990-2012 IEEE.",
      "authors": [
        "M. Reza HoseinyFarahabady",
        "Albert Y. Zomaya",
        "Zahir Tari"
      ],
      "categories": null,
      "citations": 8,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/TPDS.2017.2779502",
      "keywords": [
        "Serverless lambda platform",
        "dynamic resource allocation/scheduling",
        "model predictive control",
        "function as a service (FaaS)",
        "performance degradation"
      ],
      "number_of_pages": 14,
      "pages": "1442-1455",
      "publication": {
        "category": "Journal",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "2161-9883",
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "IEEE Transactions on Parallel and Distributed Systems"
      },
      "publication_date": "2018-07-01",
      "selected": null,
      "title": "A Model Predictive Controller for Managing QoS Enforcements and Microarchitecture-Level Interferences in a Lambda Platform",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85038402883&origin=inward",
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=8126823"
      ]
    },
    {
      "abstract": "Serverless is the new generation of cloud services that supports the pay-per-use policy in true spirit by charging only for the execution time of the hosted code. Amazon introduced serverless service of Lambda in 2014 and it is consider as the most popular serverless cloud service till date. This paper focuses on the serverless cloud services of Lambda and elaborates the importance of Lambda based serverless cloud services for hosting the disaster management information systems (DMIS). We have identified two repeatedly occurring phases of the life cycle of a DMIS. These phases are high activity phase and low activity phase. Our findings state that serverless cloud services are well-suited for both of these phases of a DMIS. Serverless reduce the operational cost during the low activity phase by detaching the code from running containers and it improves the scalability during the high activity phase by quickly assigning the already available containers from the container pool. However, this all comes with the price of reduced QoS for initial requests and our experimental results reflect the extent of this quality degradation. \u00c2\u00a9 2018 IEEE.",
      "authors": [
        "Tayyaba Asghar",
        "Saqib Rasool",
        "Muddesar Iqbal",
        "Zia ul Qayyum",
        "Adnan Noor Mian",
        "George Ubakanma"
      ],
      "categories": null,
      "citations": 4,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/HPCC/SmartCity/DSS.2018.00175",
      "keywords": [
        "DMIS",
        "Serverless",
        "QoS",
        "Lambda",
        "FaaS",
        "Disaster"
      ],
      "number_of_pages": 4,
      "pages": "1054-1057",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-5386-6615-9",
        "issn": null,
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings - 20th International Conference on High Performance Computing and Communications, 16th International Conference on Smart City and 4th International Conference on Data Science and Systems, HPCC/SmartCity/DSS 2018"
      },
      "publication_date": "2018-06-28",
      "selected": null,
      "title": "Feasibility of Serverless Cloud Services for Disaster Management Information Systems",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85062561736&origin=inward",
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=8622913"
      ]
    },
    {
      "abstract": "In cloud, many different service frameworks with new concepts such as Function-as-a-Service (FaaS), Serverless, and Stateless emerge recently. They are essentially certain instantiations of Micro-Service architecture, in which, a software application is implemented as a set of \u00c2\u00bbloosely-coupled services\u00c2\u00bb [32]. From design perspective, these services are considered as the most fine-grained units implementing business logics. Existing frameworks mostly focus on deployment and management of Micro-Services in cloud. However, the internal management within Micro-Service at thread level and function level does not attract enough attention. These missing pieces are critical for telecom applications, in term of programming model, scalability and performance. In this paper, we present Lite-Service, a new framework addressing device, edge and cloud operation environments in telecom industry. It adopts FaaS, Serverless and Stateless programming models to separate telecom logics from runtimes in order to improve development efficiency and reduce operation cost. The Lite-Service framework features 2 additional runtimes: function-level runtime for complex telecom function scheduling; thread-level intra-service runtime for fast response to load change. An autonomous self-adaptive scheduler and decentralized service management schemes are proposed to enhance performance and service adaptability in different telecom deployment scenarios. Empirical results show that the Lite-Service framework is effective for building and scheduling telecom applications in device, edge and cloud. \u00c2\u00a9 2018 IEEE.",
      "authors": [
        "Wei Ling",
        "Chen Tian",
        "Lin Ma",
        "Ziang Hu"
      ],
      "categories": null,
      "citations": 1,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/HPCC/SmartCity/DSS.2018.00123",
      "keywords": [
        "Autonomous",
        "Serverless",
        "Stateless",
        "FaaS"
      ],
      "number_of_pages": 10,
      "pages": "708-717",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-5386-6615-9",
        "issn": null,
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings - 20th International Conference on High Performance Computing and Communications, 16th International Conference on Smart City and 4th International Conference on Data Science and Systems, HPCC/SmartCity/DSS 2018"
      },
      "publication_date": "2018-06-28",
      "selected": null,
      "title": "Lite-Service: A Framework to Build and Schedule Telecom Applications in Device, Edge and Cloud",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85062572626&origin=inward",
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=8622861"
      ]
    },
    {
      "abstract": "State changes over time are inherent characteristics of stateful applications. So far, there are almost no attempts to make the past application history programmatically accessible or even modifiable. This is primarily due to the complexity of temporal changes and a difficult alignment with prevalent programming primitives and persistence strategies. Retroactive computing enables powerful capabilities though, including computations and predictions of alternate application timelines, post-hoc bug fixes, or retroactive state explorations. We propose an event-driven programming model that is oriented towards serverless computing and applies retroaction to the event sourcing paradigm. Our model is deliberately restrictive, but therefore keeps the complexity of retroactive operations in check. We introduce retro-, a runtime platform that implements the model and provides retroactive capabilites to its applications. While retro- only shows negligible performance overheads compared to similar solutions for running regular applications, it enables its users to execute retroactive computations on the application histories as part of its programming model. \u00c2\u00a9 2018 Copyright held by the owner/author(s).",
      "authors": [
        "Mei\u00c3\u009fner, D.",
        "Erb, B.",
        "Kargl, F.",
        "Tichy, M."
      ],
      "categories": null,
      "citations": 5,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1145/3210284.3210285",
      "keywords": [
        "Event sourcing",
        "Event processing",
        "Retroactive computing",
        "Event-driven architecture",
        "Serverless computing",
        "Retroaction"
      ],
      "number_of_pages": 12,
      "pages": "76-87",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450357821",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "DEBS 2018 - Proceedings of the 12th ACM International Conference on Distributed and Event-Based Systems"
      },
      "publication_date": "2018-06-25",
      "selected": null,
      "title": "Retro-: An event-sourced platform for serverless applications with retroactive computing support",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85050536481&origin=inward"
      ]
    },
    {
      "abstract": "Today, botnet continue to be a significant threat to Internet, and is still responsible for most large scale cyber-attacks. An obvious strategy for preventing these activities is detecting Command-and-Control (C&C) servers of the botnet. Once C&C servers have been discovered, the botnet would face the risk of the whole structure's failure, and defenders can easily trace the owner. Recently years, attackers have begun to exploit social network websites (e.g., twitter.com) as their C&C infrastructures, which turns out to be quite stealthy but still can be detected through the application-centric approach, such as monitoring the behavior of particular usernames. In this paper, we assess the efficacy and feasibility of abusing multiple different public services to construct botnets, and propose a serverless C&C channel model using a novel strategy named Service Flux, which contains three subchannels: addressing channel (AC), command channel (CC), and upload channel (UC). We implement the model based botnet prototype named SLBot, and evaluate the resilience and efficiency of it. \u00c2\u00a9 2018 IEEE.",
      "authors": [
        "Di Wu",
        "Binxing Fang",
        "Jie Yin",
        "Fangjiao Zhang",
        "Xiang Cui"
      ],
      "categories": null,
      "citations": 6,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/DSC.2018.00034",
      "keywords": [
        "C&C channel",
        "Public services",
        "Botnet"
      ],
      "number_of_pages": 8,
      "pages": "181-188",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-5386-4211-5",
        "issn": null,
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings - 2018 IEEE 3rd International Conference on Data Science in Cyberspace, DSC 2018"
      },
      "publication_date": "2018-06-18",
      "selected": null,
      "title": "SLBot: A Serverless Botnet Based on Service Flux",
      "urls": [
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=8411855",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85051024194&origin=inward"
      ]
    },
    {
      "abstract": "User eXperience (UX) and at a higher level, Customer eXperience (CX) are trending topics in the industry. More than ever, many businesses and corporations have realized that their success in growing their user base and revenue is dependent on creating a good customer and user experience through their services and products. However, traditional systems development methods and life cycle models have not had their focus on user/customer experience and with the most recent application development frameworks and possibilities to spin up rapid serverless cloud-based APIs, opportunities exist to almost entirely separate the front-end and back-end development concerns. Such a separation implies a different development paradigm, which traditional methods have not addressed completely. This paper proposes a novel systems development life cycle model that integrates UX-related practices into the development process and postpones the back-end development to begin once the maturity of a prototype with enriched user experience is achieved. The proposed method has been evaluated by a community of practice in a case study which shows the success of the proposed method in a number of areas like separation of concerns, agility, and the perceived level of user experience. \u00c2\u00a9 2018 IEEE.",
      "authors": [
        "Azi Nasiri",
        "Hamish Sadler"
      ],
      "categories": null,
      "citations": 2,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/ICE.2018.8436376",
      "keywords": [
        "Systems Development Life Cycle",
        "User Experience Engineering",
        "Software Development Process",
        "User Experience",
        "SDLC",
        "User Experience Design",
        "Software Development Method"
      ],
      "number_of_pages": 9,
      "pages": "1-9",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-5386-1470-9",
        "issn": null,
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "2018 IEEE International Conference on Engineering, Technology and Innovation, ICE/ITMC 2018 - Proceedings"
      },
      "publication_date": "2018-06-17",
      "selected": null,
      "title": "UXUP \u2014 User eXperience Centric Unified Process",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85052507970&origin=inward",
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=8436376"
      ]
    },
    {
      "abstract": "Software is ubiquitous in today's systems and business operations. Most importantly the architecture of a software system determines its quality and longevity, because the development work related to the software system will be carried out to be in line with its architecture design. Hence, it's highly important to structure the high-level software architecture accordingly to deliver the expected customer requirements while accounting for quality measures such as scalability, high availability and high performance. We propose TheArchitect, a serverless-microservices based high-level architecture generation tool, which will auto generate serverless-microservices based high-level architecture for a given business application, preserving the highlighted quality measures providing a tool based support for the software architect with respect to designing the high-level architecture. TheArchitect will provide any software developer to generate a proper architecture minimizing the involvement of an experienced software architect. Furthermore, the positives that microservices and serverless technologies has brought to the world of software engineering has made the software engineering community shift from the era of building large monolith applications containing overly complex designs, to microservices and serverless based technologies. Hence TheArchitect focuses on generating best fitted microservices and serverless based high-level architecture for a given application. \u00c2\u00a9 2018 IEEE.",
      "authors": [
        "K. J. P. G. Perera",
        "I. Perera"
      ],
      "categories": null,
      "citations": 2,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/ICIS.2018.8466390",
      "keywords": [
        "Serverless Architecture",
        "Software Architecture",
        "Microservices Architecture"
      ],
      "number_of_pages": 7,
      "pages": "204-210",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-5386-5893-2",
        "issn": null,
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings - 17th IEEE/ACIS International Conference on Computer and Information Science, ICIS 2018"
      },
      "publication_date": "2018-06-06",
      "selected": null,
      "title": "TheArchitect: A Serverless-Microservices Based High-level Architecture Generation Tool",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85055717443&origin=inward",
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=8466390"
      ]
    },
    {
      "abstract": "The proceedings contain 23 papers. The topics discussed include: Lerna: parallelizing dependent loops using speculation; chaperone - runtime system for instrumenting applications via partial binary translation; DLIRS: improving low inter-reference recency set cache replacement policy with dynamics; the quick migration of file servers; how to build an insecure system out of perfectly good cryptography; how to best share a big secret; Inkpack: a secure, data-exposure resistant storage system; seamless fail-over for PCIe switched networks; Memomania: from huge to huge-huge pages; collusion in cloud computing auctions; shared cloud object store, governed by permissioned blockchain; space efficient elephant flow detection; Hyplets - multi exception level kernel towards Linux RTOS; towards serverless NFV for 5G media applications; an intelligent recycle bin for smart cities; RestAssured: securing cloud analytics; efficient analytics on encrypted data; accelerating unmodified databases using persistent memory and flash storage tiers; PM aware storage engine for MongoDB; privacy enforcement at a large scale for GDPR compliance; Teechain: reducing storage costs on the blockchain with offline payment channels; applying deep learning to object store caching; and distributed fault-tolerant backup-placement in overloaded wireless sensor networks.",
      "authors": [],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450358491",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "SYSTOR 2018 - Proceedings of the 11th ACM International Systems and Storage Conference"
      },
      "publication_date": "2018-06-04",
      "selected": null,
      "title": "SYSTOR 2018 - Proceedings of the 11th ACM International Systems and Storage Conference",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85051362309&origin=inward"
      ]
    },
    {
      "abstract": " Fog/edge computing, function as a service, and programmable infrastructures,\nlike software-defined networking or network function virtualisation, are\nbecoming ubiquitously used in modern Information Technology infrastructures.\nThese technologies change the characteristics and capabilities of the\nunderlying computational substrate where services run (e.g. higher volatility,\nscarcer computational power, or programmability). As a consequence, the nature\nof the services that can be run on them changes too (smaller codebases, more\nfragmented state, etc.). These changes bring new requirements for service\norchestrators, which need to evolve so as to support new scenarios where a\nclose interaction between service and infrastructure becomes essential to\ndeliver a seamless user experience. Here, we present the challenges brought\nforward by this new breed of technologies and where current orchestration\ntechniques stand with regards to the new challenges. We also present a set of\npromising technologies that can help tame this brave new world.\n",
      "authors": [
        "Vaquero, Luis M.",
        "Cuadrado, Felix",
        "Elkhatib, Yehia",
        "Bernal-Bernabe, Jorge",
        "Srirama, Satish N.",
        "Zhani, Mohamed Faten"
      ],
      "categories": null,
      "citations": null,
      "comments": null,
      "databases": [
        "arXiv"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": null,
      "publication_date": "2018-06-03",
      "selected": null,
      "title": "Research Challenges in Nextgen Service Orchestration",
      "urls": [
        "http://arxiv.org/pdf/1806.00764v2",
        "https://arxiv.org/pdf/1806.00764",
        "http://arxiv.org/abs/1806.00764v2"
      ]
    },
    {
      "abstract": "Recently, the use of internet has become widespread, increasing the use of mobile phones, tablets, computers, Internet of Things (IoT) devices and other digital sources. In the health sector with the help of new generation digital medical equipment, this digital world also has tended to grow in an unpredictable way in that it has nearly 10% of the global wide data itself and continues to keep grow beyond what the other sectors have. This progress has greatly enlarged the amount of produced data which cannot be resolved with conventional methods. In this work, an efficient model for the storage of medical images using a distributed file system structure has been developed. With this work, a robust, available, scalable, and serverless solution structure has been produced, especially for storing large amounts of data in the medical field. Furthermore, the security level of the system is extreme by use of static Internet protocol (IP), user credentials, and synchronously encrypted file contents. One of the most important key features of the system is high performance and easy scalability. In this way, the system can work with fewer hardware elements and be more robust than others that use name node architecture. According to the test results, it is seen that the performance of the designed system is better than 97% from a Not Only Structured Query Language (NoSQL) system, 80% from a relational database management system (RDBMS), and 74% from an operating system (OS).",
      "authors": [
        "Erg\u00fczen, Atilla",
        "\u00dcnver, Mahmut"
      ],
      "categories": null,
      "citations": 6,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.3390/app8060913",
      "keywords": [
        "Health data",
        "Distributed file system",
        "Big data",
        "Medical imaging"
      ],
      "number_of_pages": null,
      "pages": null,
      "publication": {
        "category": "Journal",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": null,
        "publisher": "Multidisciplinary Digital Publishing Institute",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Applied Sciences (Switzerland)"
      },
      "publication_date": "2018-06-02",
      "selected": null,
      "title": "Developing a File System Structure to Solve Healthy Big Data Storage and Archiving Problems Using a Distributed File System",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85048127631&origin=inward",
        "https://www.mdpi.com/2076-3417/8/6/913/pdf"
      ]
    },
    {
      "abstract": "New architectural patterns (e.g. microservices), the massive adoption of Linux containers (e.g. Docker containers), and improvements in key features of Cloud computing such as auto-scaling, have helped developers to decouple complex and monolithic systems into smaller stateless services. In turn, Cloud providers have introduced serverless computing, where applications can be defined as a workflow of event-triggered functions. However, serverless services, such as AWS Lambda, impose serious restrictions for these applications (e.g. using a predefined set of programming languages or difficulting the installation and deployment of external libraries). This paper addresses such issues by introducing a framework and a methodology to create Serverless Container-aware ARchitectures (SCAR). The SCAR framework can be used to create highly-parallel event-driven serverless applications that run on customized runtime environments defined as Docker images on top of AWS Lambda. This paper describes the architecture of SCAR together with the cache-based optimizations applied to minimize cost, exemplified on a massive image processing use case. The results show that, by means of SCAR, AWS Lambda becomes a convenient platform for High Throughput Computing, specially for highly-parallel bursty workloads of short stateless jobs. \u00c2\u00a9 2018 Elsevier B.V.",
      "authors": [
        "P\u00c3\u00a9rez, A.",
        "Molt\u00c3\u00b3, G.",
        "Caballer, M.",
        "Calatrava, A."
      ],
      "categories": null,
      "citations": 42,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1016/j.future.2018.01.022",
      "keywords": [
        "AWS lambda",
        "Docker",
        "Serverless",
        "Cloud computing",
        "Elasticity"
      ],
      "number_of_pages": 10,
      "pages": "50-59",
      "publication": {
        "category": "Journal",
        "cite_score": 13.3,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "0167739X",
        "publisher": "Elsevier",
        "sjr": 1.262,
        "snip": 2.72,
        "subject_areas": [
          "Hardware and Architecture",
          "Computer Networks and Communications",
          "Software"
        ],
        "title": "Future Generation Computer Systems"
      },
      "publication_date": "2018-06-01",
      "selected": null,
      "title": "Serverless computing for container-based architectures",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85041484028&origin=inward"
      ]
    },
    {
      "abstract": "With the rapid development of computer electronic equipment, embedded devices have been applied in various fields of daily life. Such as intelligent home, intelligent agriculture, intelligent farming and so on. This article describes the intelligent turtle breeding system is a typical application. Different from the combination of traditional embedded devices and servers, this system is based on the combination of the Raspberry Pi and the virtualized container. It is designed as a platform of automatic detection of temperature, humidity, co2concentration, and light intensity at turtle breeding bases. Breaking through the limitations of traditional server monitoring, we use Docker to build a cloud environment and Docker Swarm as a container management technology, and adopt openFaas architecture to complete the serverless integration of virtual container cloud and embedded devices. Making the turtle aquaculture system more secure, more stable, less costly, and more resource efficient. \u00c2\u00a9 2018 IEEE.",
      "authors": [
        "Yang Song",
        "Jia Xie",
        "Qiang Huang",
        "Mantao Wang",
        "Jiahe Yu"
      ],
      "categories": null,
      "citations": 1,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/IMCEC.2018.8469537",
      "keywords": [
        "container",
        "Raspberry pi",
        "Turtle farming system"
      ],
      "number_of_pages": 4,
      "pages": "2531-2534",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-5386-1804-2",
        "issn": null,
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings of 2018 2nd IEEE Advanced Information Management, Communicates, Electronic and Automation Control Conference, IMCEC 2018"
      },
      "publication_date": "2018-05-25",
      "selected": null,
      "title": "Design and Implementation of Turtle Breeding System Based on Embedded Container Cloud",
      "urls": [
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=8469537",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85055685666&origin=inward"
      ]
    },
    {
      "abstract": "The proceedings contain 55 papers. The topics discussed include: understanding real-world timeout problems in cloud server systems; hybrid adaptive checkpointing for virtual machine fault tolerance; scheduling, isolation, and cache allocation: a side-channel defense; automatic dependency management for scientific applications on clusters; tracking causal order in AWS lambda applications; deterministic container resource management in derivative clouds; cross-layer optimization for virtual machine resource management; an online virtual machine placement algorithm in an over-committed cloud; deadline-aware scheduling and routing for inter-datacenter multicast transfers; and towards an adaptive, fully automated performance modeling methodology for cloud applications.",
      "authors": [],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781538650080",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings - 2018 IEEE International Conference on Cloud Engineering, IC2E 2018"
      },
      "publication_date": "2018-05-16",
      "selected": null,
      "title": "Proceedings - 2018 IEEE International Conference on Cloud Engineering, IC2E 2018",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85048311585&origin=inward"
      ]
    },
    {
      "abstract": "This work demonstrates how an unsupervised learning algorithm based on k-Means Clustering with Kaufman Initialization may be implemented effectively as an Amazon Web Services Lambda Function, within their serverless cloud computing service. It emphasizes the need to employ a lean and modular design philosophy, transfer data efficiently between Lambda and DynamoDB, as well as employ Lambda Functions within mobile applications seamlessly and with negligible latency. This work presents a novel application of serverless cloud computing and provides specific examples that will allow readers to develop similar algorithms. The author provides compares the computation speed and cost of machine learning implementations on traditional PC and mobile hardware (running locally) as well as implementations that employ Lambda. \u00c2\u00a9 2018 IEEE.",
      "authors": [
        "Anthony Deese"
      ],
      "categories": null,
      "citations": 2,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/CCGRID.2018.00093",
      "keywords": [
        "cloud computing",
        "Amazon Web Services Lambda",
        "serverless computing",
        "Kaufman",
        "k-Means Clustering",
        "machine learning"
      ],
      "number_of_pages": 7,
      "pages": "626-632",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-5386-5816-1",
        "issn": null,
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings - 18th IEEE/ACM International Symposium on Cluster, Cloud and Grid Computing, CCGRID 2018"
      },
      "publication_date": "2018-05-01",
      "selected": null,
      "title": "Implementation of Unsupervised k-Means Clustering Algorithm Within Amazon Web Services Lambda",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85050975533&origin=inward",
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=8411080"
      ]
    },
    {
      "abstract": "Disaggregation and rack-scale systems have the potential of drastically increasing TCO and utilization of cloud datacenters, while maintaining performance. In this paper, we present a novel rack-scale system architecture featuring software-defined remote memory disaggregation. Our hardware design and operating system extensions enable unmodified applications to dynamically attach to memory segments residing on physically remote memory pools and use such remote segments in a byte-addressable manner, as if they were local to the application. Our system features also a control plane that automates software-defined dynamic matching of compute to memory resources, as driven by datacenter workload needs. We prototyped our system on the commercially available Zynq Ultrascale+ MPSoC platform. To our knowledge, this is the first time a software-defined disaggregated system has been prototyped on commercial hardware and evaluated through industry standard software benchmarks. Our initial results-using benchmarks that are artificially highly adversarial in terms of memory bandwidth-show that disaggregated memory access exhibits a round-trip latency of only 134 clock cycles; and a throughput penalty of as low as 55%, relative to locally-attached memory. We also discuss estimations as to how our findings may translate to applications with pragmatically milder memory aggressiveness levels, as well as innovation avenues across the stack opened up by our work. \u00c2\u00a9 2017 IEEE.",
      "authors": [
        "Syrivelis, D.",
        "Reale, A.",
        "Katrinis, K.",
        "Syrigos, I.",
        "Bielski, M.",
        "Theodoropoulos, D.",
        "Pnevmatikatos, D.N.",
        "Zervas, G."
      ],
      "categories": null,
      "citations": 9,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1109/SAMOS.2017.8344644",
      "keywords": [
        "Pooled computing",
        "Cloud datacenters",
        "Rack scale systems",
        "Disaggregation",
        "Internet-scale computers",
        "Extended memory",
        "Serverless computing",
        "Software-defined systems",
        "Rack scale datacenters"
      ],
      "number_of_pages": 8,
      "pages": "300-307",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781538634370",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings - 2017 17th International Conference on Embedded Computer Systems: Architectures, Modeling, and Simulation, SAMOS 2017"
      },
      "publication_date": "2018-04-20",
      "selected": null,
      "title": "A software-defined architecture and prototype for disaggregated memory rack scale systems",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85050366113&origin=inward"
      ]
    },
    {
      "abstract": "Serverless computing is a new cloud programming and deployment paradigm that is receiving wide-spread uptake. Serverless offerings such as Amazon Web Services (AWS) Lambda, Google Functions, and Azure Functions automatically execute simple functions uploaded by developers, in response to cloud-based event triggers. The serverless abstraction greatly simplifies integration of concurrency and parallelism into cloud applications, and enables deployment of scalable distributed systems and services at very low cost. Although a significant first step, the serverless abstraction requires tools that software engineers can use to reason about, debug, and optimize their increasingly complex, asynchronous applications. Toward this end, we investigate the design and implementation of GammaRay, a cloud service that extracts causal dependencies across functions and through cloud services, without programmer intervention. We implement GammaRay for AWS Lambda and evaluate the overheads that it introduces for serverless micro-benchmarks and applications written in Python. \u00c2\u00a9 2018 IEEE.",
      "authors": [
        "Wei-Tsung Lin",
        "Chandra Krintz",
        "Rich Wolski",
        "Michael Zhang",
        "Xiaogang Cai",
        "Tongjun Li",
        "Weijin Xu"
      ],
      "categories": null,
      "citations": 7,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/IC2E.2018.00027",
      "keywords": [
        "profiling",
        "faas",
        "causal dependencies",
        "serverless",
        "AWS Lambda"
      ],
      "number_of_pages": 11,
      "pages": "50-60",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-5386-5009-7",
        "issn": null,
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings - 2018 IEEE International Conference on Cloud Engineering, IC2E 2018"
      },
      "publication_date": "2018-04-17",
      "selected": null,
      "title": "Tracking Causal Order in AWS Lambda Applications",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85048321568&origin=inward",
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=8360312"
      ]
    },
    {
      "abstract": "Serverless computing has emerged as a compelling paradigm for the development and deployment of a wide range of event based cloud applications. At the same time, cloud providers and enterprise companies are heavily adopting machine learning and Artificial Intelligence to either differentiate themselves, or provide their customers with value added services. In this work we evaluate the suitability of a serverless computing environment for the inferencing of large neural network models. Our experimental evaluations are executed on the AWS Lambda environment using the MxNet deep learning framework. Our experimental results show that while the inferencing latency can be within an acceptable range, longer delays due to cold starts can skew the latency distribution and hence risk violating more stringent SLAs. \u00c2\u00a9 2018 IEEE.",
      "authors": [
        "Vatche Ishakian",
        "Vinod Muthusamy",
        "Aleksander Slominski"
      ],
      "categories": null,
      "citations": 40,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/IC2E.2018.00052",
      "keywords": [
        "Serverless Computing",
        "AWS Lambda",
        "Deep Learningm",
        "Cloud Computing"
      ],
      "number_of_pages": 6,
      "pages": "257-262",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-5386-5009-7",
        "issn": null,
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings - 2018 IEEE International Conference on Cloud Engineering, IC2E 2018"
      },
      "publication_date": "2018-04-17",
      "selected": null,
      "title": "Serving Deep Learning Models in a Serverless Platform",
      "urls": [
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=8360337",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85048344866&origin=inward"
      ]
    },
    {
      "abstract": "Serverless computing platforms provide function(s)-as-a-Service (FaaS) to end users while promising reduced hosting costs, high availability, fault tolerance, and dynamic elasticity for hosting individual functions known as microservices. Serverless Computing environments, unlike Infrastructure-as-a-Service (IaaS) cloud platforms, abstract infrastructure management including creation of virtual machines (VMs), operating system containers, and request load balancing from users. To conserve cloud server capacity and energy, cloud providers allow hosting infrastructure to go COLD, deprovisioning containers when service demand is low freeing infrastructure to be harnessed by others. In this paper, we present results from our comprehensive investigation into the factors which influence microservice performance afforded by serverless computing. We examine hosting implications related to infrastructure elasticity, load balancing, provisioning variation, infrastructure retention, and memory reservation size. We identify four states of serverless infrastructure including: provider cold, VM cold, container cold, and warm and demonstrate how microservice performance varies up to 15x based on these states. \u00c2\u00a9 2018 IEEE.",
      "authors": [
        "Wes Lloyd",
        "Shruti Ramesh",
        "Swetha Chinthalapati",
        "Lan Ly",
        "Shrideep Pallickara"
      ],
      "categories": null,
      "citations": 87,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/IC2E.2018.00039",
      "keywords": [
        "Resource Management and Performance",
        "Serverless Computing",
        "Function-as-a-Service",
        "Provisioning Variation"
      ],
      "number_of_pages": 11,
      "pages": "159-169",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-5386-5009-7",
        "issn": null,
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings - 2018 IEEE International Conference on Cloud Engineering, IC2E 2018"
      },
      "publication_date": "2018-04-17",
      "selected": null,
      "title": "Serverless Computing: An Investigation of Factors Influencing Microservice Performance",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85048325726&origin=inward",
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=8360324"
      ]
    },
    {
      "abstract": "Serverless Computing and Function as a Service (FaaS) is gaining traction in cloud-based application architectures used by startups and matured organizations alike. Organizations that are keen to leverage modern technology to gain a disruptive edge, optimal efficiency, advanced agility and save cost are adopting these architectural styles rapidly. Cloud service provider offer and dynamically manages the allocation of machine resources in serverless computing. The serverless architectures allows the developers to focus on business logic exclusively without worrying about preparing the runtime, managing deployment and infrastructure related concerns. FaaS may be assumed as a subset of Serverless Computing, in which, instead of coding a full-fledged cloud based application, the developer just writes (often small) functions which are piece of code (in one of the multiple programming languages supported by the platform) dedicated to do a focused, often single task that are invoked by triggers. It offers dynamic allocation and scaling of the resources and innovative trigger based costing model. This paper introduces Serverless Computing, and Function as a Service (FaaS), explores its advantages and limitations, options available with popular cloud and Platform as a Service (PaaS) providers, and emerging use cases and success stories. \u00c2\u00a9 2018 IEEE.",
      "authors": [
        "Mohit Sewak",
        "Sachchidanand Singh"
      ],
      "categories": null,
      "citations": 7,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/I2CT.2018.8529465",
      "keywords": [
        "Google Cloud Functions",
        "Platform as a Service (PaaS)",
        "Amazon AWS Lambda",
        "Serverless Computing",
        "Microsoft Azure Functions",
        "IBM Cloud Functions",
        "Microservices",
        "Apache Open Whisk",
        "Functions as a Service(FaaS)"
      ],
      "number_of_pages": 5,
      "pages": "1-5",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-5386-4274-0",
        "issn": null,
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "2018 3rd International Conference for Convergence in Technology, I2CT 2018"
      },
      "publication_date": "2018-04-06",
      "selected": null,
      "title": "Winning in the Era of Serverless Computing and Function as a Service",
      "urls": [
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=8529465",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85058312968&origin=inward"
      ]
    },
    {
      "abstract": "As a key part of the serverless computing paradigm, Function-as-a-Service (FaaS) platforms enable users to run arbitrary functions without being concerned about operational issues. However, there are several performance-related issues surrounding the state-of-the-art FaaS platforms that can deter widespread adoption of FaaS, including sizeable overheads, unreliable performance, and new forms of the cost-performance trade-off. In this work we, the SPEC RG Cloud Group, identify six performance-related challenges that arise specifically in this FaaS model, and present our roadmap to tackle these problems in the near future. This paper aims at motivating the community to solve these challenges together. \u00c2\u00a9 2018 Copyright held by the owner/author(s).",
      "authors": [
        "Van Eyk, E.",
        "Iosup, A.",
        "Abad, C.L.",
        "Grohmann, J.",
        "Eismann, S."
      ],
      "categories": null,
      "citations": 27,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1145/3185768.3186308",
      "keywords": [],
      "number_of_pages": 4,
      "pages": "21-24",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450356299",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "ICPE 2018 - Companion of the 2018 ACM/SPEC International Conference on Performance Engineering"
      },
      "publication_date": "2018-04-02",
      "selected": null,
      "title": "A SPEC RG cloud group\u2019s vision on the performance challenges of FaaS cloud architectures",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85050561054&origin=inward"
      ]
    },
    {
      "abstract": "We consider the problem of scheduling small cloud functions on serverless computing platforms. Fast deployment and execution of these functions is critical, for example, for microservices architectures. However, functions that require large packages or libraries are bloated and start slowly. A solution is to cache packages at the worker nodes instead of bundling them with the functions. However, existing FaaS schedulers are vanilla load balancers, agnostic of any packages that may have been cached in response to prior function executions, and cannot reap the benefits of package caching (other than by chance). To address this problem, we propose a package-aware scheduling algorithm that tries to assign functions that require the same package to the same worker node. Our algorithm increases the hit rate of the package cache and, as a result, reduces the latency of the cloud functions. At the same time, we consider the load sustained by the workers and actively seek to avoid imbalance beyond a configurable threshold. Our preliminary evaluation shows that, even with our limited exploration of the configuration space so-far, we can achieve 66% performance improvement at the cost of a (manageable) higher node imbalance. \u00c2\u00a9 2018 Association for Computing Machinery.",
      "authors": [
        "Abad, C.L.",
        "Boza, E.F.",
        "Eyk, E.V."
      ],
      "categories": null,
      "citations": 10,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1145/3185768.3186294",
      "keywords": [
        "Load balancing",
        "Functions-as-a-service",
        "Cloud computing",
        "Scheduling",
        "Serverless computing"
      ],
      "number_of_pages": 6,
      "pages": "101-106",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450356299",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "ICPE 2018 - Companion of the 2018 ACM/SPEC International Conference on Performance Engineering"
      },
      "publication_date": "2018-04-02",
      "selected": null,
      "title": "Package-aware scheduling of FaaS functions",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85052016570&origin=inward"
      ]
    },
    {
      "abstract": "In radio frequency identification (RFID) systems, search protocols are used to find a specific item in a large number of tagged products. These protocols s",
      "authors": [
        "Mojtaba Eslamnezhad\u00a0Namin",
        "Mehdi Hosseinzadeh",
        "Nasour Bagheri",
        "Ahmad Khademzadeh"
      ],
      "categories": null,
      "citations": 3,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1007/s11235-017-0351-y",
      "keywords": [
        "Tag search",
        "Security protocols",
        "RFID",
        "Serverless search",
        "Secure search"
      ],
      "number_of_pages": 14,
      "pages": "539-552",
      "publication": {
        "category": "Journal",
        "cite_score": 4.4,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "10184864",
        "publisher": "Springer Netherlands",
        "sjr": 0.364,
        "snip": 0.892,
        "subject_areas": [
          "Electrical and Electronic Engineering"
        ],
        "title": "Telecommunication Systems"
      },
      "publication_date": "2018-04-01",
      "selected": null,
      "title": "A secure search protocol for lightweight and low-cost RFID systems",
      "urls": [
        "https://link.springer.com/content/pdf/10.1007/s11235-017-0351-y.pdf",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85023182349&origin=inward"
      ]
    },
    {
      "abstract": "A new form of cloud computing, serverless computing, is drawing attention as a new way to design micro-services architectures. In a serverless computing environment, services are developed as service functional units. The function development environment of all serverless computing framework at present is CPU based. In this paper, we propose a GPU-supported serverless computing framework that can deploy services faster than existing serverless computing framework using CPU. Our core approach is to integrate the open source serverless computing framework with NVIDIA-Docker and deploy services based on the GPU support container. We have developed an API that connects the open source framework to the NVIDIA-Docker and commands that enable GPU programming. In our experiments, we measured the performance of the framework in various environments. As a result, developers who want to develop services through the framework can deploy high-performance micro services and developers who want to run deep learning programs without a GPU environment can run code on remote GPUs with little performance degradation. \u00c2\u00a9 2018 IEEE.",
      "authors": [
        "Jaewook Kim",
        "Tae Joon Jun",
        "Daeyoun Kang",
        "Dohyeun Kim",
        "Daeyoung Kim"
      ],
      "categories": null,
      "citations": 6,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/PDP2018.2018.00090",
      "keywords": [
        "Serverless Computing",
        "Serverless Architecture",
        "GPGPU",
        "FaaS",
        "Cloud Computing"
      ],
      "number_of_pages": 8,
      "pages": "533-540",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-5386-4976-3",
        "issn": "2377-5750",
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings - 26th Euromicro International Conference on Parallel, Distributed, and Network-Based Processing, PDP 2018"
      },
      "publication_date": "2018-03-21",
      "selected": null,
      "title": "GPU Enabled Serverless Computing Framework",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85048842203&origin=inward",
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=8374513"
      ]
    },
    {
      "abstract": " Serverless architectures organized around loosely-coupled function\ninvocations represent an emerging design for many applications. Recent work\nmostly focuses on user-facing products and event-driven processing pipelines.\nIn this paper, we explore a completely different part of the application space\nand examine the feasibility of analytical processing on big data using a\nserverless architecture. We present Flint, a prototype Spark execution engine\nthat takes advantage of AWS Lambda to provide a pure pay-as-you-go cost model.\nWith Flint, a developer uses PySpark exactly as before, but without needing an\nactual Spark cluster. We describe the design, implementation, and performance\nof Flint, along with the challenges associated with serverless analytics.\n",
      "authors": [
        "Kim, Youngbin",
        "Lin, Jimmy"
      ],
      "categories": null,
      "citations": null,
      "comments": "Published in the Proceedings of the 2018 IEEE 11th International\n  Conference on Cloud Computing (CLOUD 2018)",
      "databases": [
        "arXiv"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": null,
      "publication_date": "2018-03-16",
      "selected": null,
      "title": "Serverless Data Analytics with Flint",
      "urls": [
        "http://arxiv.org/pdf/1803.06354v2",
        "https://arxiv.org/pdf/1803.06354",
        "http://arxiv.org/abs/1803.06354v2"
      ]
    },
    {
      "abstract": "Cloud adoption is gaining lots of momentum across the globe and enterprise are focussing not only migration on to cloud but also on developing cloud native application. There are lots of focuses on reducing and optimizing resources and hence developing application in a serverless fashion is going to be the key in the industry. Many organizations are working on application modernization and developing distributed application and hence microservice is the key focus area in converting their monolithic into microservices and use containers for easy portability across the platform and makes it more platform neutral. There are high elements of focus on whether to go for serverless or Microservice mode and should we use containers for deployment is the key debate among the people who are working in this area and are still not clear which way to go forward in the given situation. In this article we would like to explore and discuss about each technology in details and analyse the advantage and challenge of these emerging areas and suggest the ideal way to move forward in cloud. \u00c2\u00a9 2018 IEEE.",
      "authors": [
        "Baskaran Jambunathan",
        "Kalpana Yoganathan"
      ],
      "categories": null,
      "citations": 2,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/ICCTCT.2018.8551035",
      "keywords": [
        "dockers",
        "Serverless",
        "Containers",
        "Functions",
        "Kubernetes",
        "Lambda",
        "Microservices"
      ],
      "number_of_pages": 7,
      "pages": "1-7",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-5386-3703-6",
        "issn": null,
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings of the 2018 International Conference on Current Trends towards Converging Technologies, ICCTCT 2018"
      },
      "publication_date": "2018-03-01",
      "selected": null,
      "title": "Architecture Decision on using Microservices or Serverless Functions with Containers",
      "urls": [
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=8551035",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85059948292&origin=inward"
      ]
    },
    {
      "abstract": "Modern IT infrastructure practice is evolving at an incredible pace, with the ongoing proliferation of cloud computing, container orchestration platforms and, most recently, a trend that we're calling \u00e2\u0080\u0098serverless\u00e2\u0080\u0099. Is our security practice evolving along with it? IT infrastructure practice is evolving at an incredible pace, with the ongoing proliferation of cloud computing, container orchestration platforms and, most recently, the \u00e2\u0080\u0098serverless\u00e2\u0080\u0099 trend. But is our security practice evolving along with it? It's no longer sufficient, if indeed it ever was, to uncritically import a bunch of \u00e2\u0080\u0098best practices\u00e2\u0080\u0099 into your organisation once and then call that your security policy. Policies must evolve over time, with people at all levels of the business involved in their implementation, explains Jon Topper of The Scale Factory. \u00c2\u00a9 2018 Elsevier Ltd",
      "authors": [
        "Topper, J."
      ],
      "categories": null,
      "citations": 2,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1016/S1361-3723(18)30022-8",
      "keywords": [],
      "number_of_pages": 4,
      "pages": "5-8",
      "publication": {
        "category": "Journal",
        "cite_score": 1.6,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "13613723",
        "publisher": "Elsevier BV",
        "sjr": 0.245,
        "snip": 0.867,
        "subject_areas": [
          "Computer Science (all)",
          "Law"
        ],
        "title": "Computer Fraud and Security"
      },
      "publication_date": "2018-03-01",
      "selected": null,
      "title": "Compliance is not security",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85043573924&origin=inward"
      ]
    },
    {
      "abstract": " The rise of serverless computing provides an opportunity to rethink cloud\nsecurity. We present an approach for securing serverless systems using a novel\nform of dynamic information flow control (IFC). We show that in serverless applications, the termination channel found in\nmost existing IFC systems can be arbitrarily amplified via multiple concurrent\nrequests, necessitating a stronger termination-sensitive non-interference\nguarantee, which we achieve using a combination of static labeling of\nserverless processes and dynamic faceted labeling of persistent data. We describe our implementation of this approach on top of JavaScript for AWS\nLambda and OpenWhisk serverless platforms, and present three realistic case\nstudies showing that it can enforce important IFC security properties with low\noverhead.\n",
      "authors": [
        "Alpernas, Kalev",
        "Flanagan, Cormac",
        "Fouladi, Sadjad",
        "Ryzhyk, Leonid",
        "Sagiv, Mooly",
        "Schmitz, Thomas",
        "Winstein, Keith"
      ],
      "categories": null,
      "citations": null,
      "comments": null,
      "databases": [
        "arXiv"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": null,
      "publication_date": "2018-02-25",
      "selected": null,
      "title": "Secure Serverless Computing Using Dynamic Information Flow Control",
      "urls": [
        "http://arxiv.org/abs/1802.08984v1",
        "http://arxiv.org/pdf/1802.08984v1",
        "https://arxiv.org/pdf/1802.08984"
      ]
    },
    {
      "abstract": "The landscape of cloud computing has significantly changed over the last decade. Not only have more providers and service offerings crowded the space, but also cloud infrastructure that was traditionally limited to single provider data centers is now evolving. In this paper, we firstly discuss the changing cloud infrastructure and consider the use of infrastructure from multiple providers and the benefit of decentralising computing away from data centers. These trends have resulted in the need for a variety of new computing architectures that will be offered by future cloud infrastructure. These architectures are anticipated to impact areas, such as connecting people and devices, data-intensive computing, the service space and self-learning systems. Finally, we lay out a roadmap of challenges that will need to be addressed for realising the potential of next generation cloud systems. \u00c2\u00a9 2017 Elsevier B.V.",
      "authors": [
        "Varghese, B.",
        "Buyya, R."
      ],
      "categories": null,
      "citations": 299,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1016/j.future.2017.09.020",
      "keywords": [
        "Fog computing",
        "Multi-cloud",
        "Cloud computing",
        "Serverless computing",
        "Cloud security",
        "Cloudlet"
      ],
      "number_of_pages": 13,
      "pages": "849-861",
      "publication": {
        "category": "Journal",
        "cite_score": 13.3,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "0167739X",
        "publisher": "Elsevier",
        "sjr": 1.262,
        "snip": 2.72,
        "subject_areas": [
          "Hardware and Architecture",
          "Computer Networks and Communications",
          "Software"
        ],
        "title": "Future Generation Computer Systems"
      },
      "publication_date": "2018-02-01",
      "selected": null,
      "title": "Next generation cloud computing: New trends and research directions",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85030685680&origin=inward"
      ]
    },
    {
      "abstract": "[No abstract available]",
      "authors": [
        "Savage, N."
      ],
      "categories": null,
      "citations": 18,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1145/3171583",
      "keywords": [],
      "number_of_pages": 2,
      "pages": "15-16",
      "publication": {
        "category": "Journal",
        "cite_score": 11.3,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "00010782",
        "publisher": "Association for Computing Machinery (ACM)",
        "sjr": 0.967,
        "snip": 4.595,
        "subject_areas": [
          "Computer Science (all)"
        ],
        "title": "Communications of the ACM"
      },
      "publication_date": "2018-02-01",
      "selected": null,
      "title": "Going Serverless",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85041557419&origin=inward"
      ]
    },
    {
      "abstract": "Video has become a mainstream media source on the web, and live video streaming is growing as a prominent player in the modern marketplace for both businesses and individuals. Due to elasticity and on-demand nature that cloud computing provides, more and more video service providers (VSP) utilize cloud infrastructures to provide cloud-based video applications. In this work, we propose Cloud Live Video Streaming (CLVS) -A new approach to efficiently stream live video that is based on Amazon S3 pricing model. In the design of CLVS, when a source video is being recorded by a mobile device, on which then it is segmented and encoded. Next, those video segments are pushed into a designated Amazon S3 bucket. On end-user devices, the client program of CLVS directly retrieves the most recent video segment from the S3 bucket, then performs decoding and video playing back. By using Amazon S3 service, our CLVS employs what is referred to as a 'serverless' design by eliminating the needs for an intermediary and persistently running streaming server. Thus, VSPs do not have to pay for the idle time found on the traditional streaming servers, but still are able to continually provide live video streams to end viewers. We implement a prototype of CLVS and optimize its performance by using multithreaded prefetching and caching techniques. In experiments, we compare our CLVS with an existing video streaming software - Wowza Streaming Engine. Experiment results indicate that CLVS not only outperforms Wowza in many aspects of video streaming performance, but also financially costs less. \u00c2\u00a9 2018 IEEE.",
      "authors": [
        "Yun Tian",
        "Ryan Babcock",
        "Carol Taylor",
        "Yanqing Ji"
      ],
      "categories": null,
      "citations": 5,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/CCWC.2018.8301615",
      "keywords": [
        "Cloud Storage Service",
        "Cloud computing",
        "Live Video Streaming"
      ],
      "number_of_pages": 8,
      "pages": "321-328",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-5386-4650-2",
        "issn": null,
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "2018 IEEE 8th Annual Computing and Communication Workshop and Conference, CCWC 2018"
      },
      "publication_date": "2018-01-08",
      "selected": null,
      "title": "A new live video streaming approach based on Amazon S3 pricing model",
      "urls": [
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=8301615",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85047474325&origin=inward"
      ]
    },
    {
      "abstract": "Cloud computing providers offer a variety of pricing models, complicating the client decision, as no single model is the cheapest in all scenarios. In addition, small to mediumsized organizations frequently lack personnel that can navigate the intricacies of each pricing model, and as a result, end up opting for a sub-optimal strategy, leading to overpaying for computing resources or not being able to meet performance goals. In this paper, we: (1) present the results of a study that shows that, in Ecuador, a considerable percentage of companies choose conservative pricing strategies, (2) present a case study that shows that the conservative pricing strategy is suboptimal under certain workloads, and (3) propose a set of models, a tool and a process that can be used by tenants to properly plan and budget their cloud computing costs. Our tool is based on M (t)/M/ queuing theory models and is easy to configure and use. Note that, even though we are motivated by our study of adoption of cloud computing technologies in Ecuador, our tool and process are widely applicable and not restricted to the Ecuadorian context. \u00c2\u00a9 2017 IEEE.",
      "authors": [
        "Boza, E.F.",
        "Abad, C.L.",
        "Villavicencio, M.",
        "Quimba, S.",
        "Plaza, J.A."
      ],
      "categories": null,
      "citations": 8,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1109/ETCM.2017.8247460",
      "keywords": [
        "on-demand",
        "queuing theory",
        "reserved",
        "budget",
        "simulation",
        "Cloud",
        "serverless"
      ],
      "number_of_pages": 6,
      "pages": "1-6",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781538638941",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "2017 IEEE 2nd Ecuador Technical Chapters Meeting, ETCM 2017"
      },
      "publication_date": "2018-01-04",
      "selected": null,
      "title": "Reserved, on demand or serverless: Model-based simulations for cloud budget planning",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85045722661&origin=inward"
      ]
    },
    {
      "abstract": "Serverless computing is an emerging trend in the cloud, which represents a new paradigm for deploying applications and services. In the serverless computing framework, cloud users can deploy...",
      "authors": [
        "Weizhong Qiang",
        "Zezhao Dong",
        "Hai Jin"
      ],
      "categories": null,
      "citations": 1,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1007/978-3-030-01701-9_25",
      "keywords": [
        "Intel SGX",
        "Serverless computing",
        "Cloud security",
        "WebAssembly",
        "Runtime security"
      ],
      "number_of_pages": 20,
      "pages": "451-470",
      "publication": {
        "category": "Book",
        "cite_score": 0.7,
        "is_potentially_predatory": false,
        "isbn": "9783030017002",
        "issn": "18678211",
        "publisher": "Springer Verlag",
        "sjr": 0.142,
        "snip": 0.187,
        "subject_areas": [
          "Computer Networks and Communications"
        ],
        "title": "Lecture Notes of the Institute for Computer Sciences, Social-Informatics and Telecommunications Engineering, LNICST"
      },
      "publication_date": "2018-01-01",
      "selected": null,
      "title": "Se-Lambda: Securing Privacy-Sensitive Serverless Applications Using SGX Enclave",
      "urls": [
        "https://link.springer.com/content/pdf/10.1007%2F978-3-030-01701-9_25.pdf",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85059698281&origin=inward"
      ]
    },
    {
      "abstract": "Cloud-native applications add a layer of abstraction to the underlying distributed computing system, defining a high-level, self-scaling and self-managed architecture of different microservices...",
      "authors": [
        "Juan J. Merelo Guerv\u00f3s",
        "J. Mario Garc\u00eda-Valdez"
      ],
      "categories": null,
      "citations": 5,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1007/978-3-319-99253-2_32",
      "keywords": [
        "Functions as a service",
        "Kappa architecture",
        "Algorithm implementation",
        "Cloud computing",
        "Performance evaluation",
        "Distributed computing",
        "Pool-based systems",
        "Heterogeneous distributed systems",
        "Serverless computing",
        "Stateless algorithms",
        "Microservices",
        "Event-based systems"
      ],
      "number_of_pages": 12,
      "pages": "399-410",
      "publication": {
        "category": "Book",
        "cite_score": 1.8,
        "is_potentially_predatory": false,
        "isbn": "9783030715922",
        "issn": "03029743",
        "publisher": "Springer Verlag",
        "sjr": 0.249,
        "snip": 0.628,
        "subject_areas": [
          "Databases",
          "Cryptography and Security",
          "Distributed, Parallel, and Cluster Computing",
          "Theoretical Computer Science",
          "Computer Science (all)"
        ],
        "title": "IFIP International Conference on Distributed Applications and\n  Interoperable Systems, DAIS 2017: Distributed Applications and Interoperable\n  Systems pp 83-98"
      },
      "publication_date": "2018-01-01",
      "selected": null,
      "title": "Introducing an Event-Based Architecture for Concurrent and Distributed Evolutionary Algorithms",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85053624183&origin=inward",
        "https://link.springer.com/content/pdf/10.1007%2F978-3-319-99253-2_32.pdf"
      ]
    },
    {
      "abstract": "Cloud offerings have over the years been transformed from bare-metal to virtual machines, to containers, and most recently to serverless functions. Each of these execution context abstractions has been accompanied by a new layer of centralized management, but these extra management layers have led to a confusing and fragile system, that wastes developer time on managing execution contexts with little contribution to the application. We argue that it is time to revisit ideas of Single System Image (SSI) concepts to simplify the management of Cloud execution contexts. An SSI abstraction for Cloud provides easy and convenient developer access to resources without recourse to programming multiple levels of execution contexts. We propose a novel set of design principles inspired by earlier distributed operating system and SSI research. We also present a first corresponding service, realizing fully decentralized resource management, folding multiple layers of centralized management stacks into a single layer spanning across datacenter resources. As a result, developers never see individual execution environments, but deal with processes and IPC familiar from local development machines. \u00c2\u00a9 2018 USENIX Association. All rights reserved.",
      "authors": [
        "John, W.",
        "Hal\u00c3\u00a9n, J.",
        "Cai, X.",
        "Fu, C.",
        "Holmberg, T.",
        "Katardjiev, V.",
        "Mecklin, T.",
        "Sedaghat, M.",
        "Sk\u00c3\u00b6ldstr\u00c3\u00b6m, P.",
        "Turull, D.",
        "Yadhav, V.",
        "Kempf, J."
      ],
      "categories": null,
      "citations": 1,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "10th USENIX Workshop on Hot Topics in Cloud Computing, HotCloud 2018, co-located with USENIX ATC 2018"
      },
      "publication_date": "2018-01-01",
      "selected": null,
      "title": "Making cloud easy: Design considerations and first components of a distributed operating system for cloud",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85084162283&origin=inward"
      ]
    },
    {
      "abstract": "In this excerpt from Software Engineering Radio, Nate Taggart, cofounder and CEO of Stackery, discusses serverless\u2014the ability to purchase function as a service in which the cloud provider assumes responsibility for providing a server and an execution environment on demand to run a piece of code. To hear the full interview, visit www.se-radio.net or access our archives via RSS at feeds.feedburner.com/se-radio.",
      "authors": [
        "Kishore Bhatia"
      ],
      "categories": null,
      "citations": 1,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/MS.2018.2801544",
      "keywords": [
        "Nate Taggart",
        "Software Engineering Radio",
        "software development",
        "software engineering",
        "serverless"
      ],
      "number_of_pages": 4,
      "pages": "101-104",
      "publication": {
        "category": "Journal",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "1937-4194",
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "IEEE Software"
      },
      "publication_date": "2018-01-01",
      "selected": null,
      "title": "Nate Taggart on Serverless",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85049753975&origin=inward",
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=8405632"
      ]
    },
    {
      "abstract": "Under the impact of the innovating Information and Communication Technologies (ICT) in the smart city context and the needs of information sharing and digital services, a smart city system aims to improve the life quality of its citizens by offering a set of public services. The aim of this research work, is to propose a smart city approach that exploits These technologies in the delivery of public services to allow greater real-time interaction with citizens, this research contributes to the domain of smart city public services delivery by treating the scalability problem faced by these systems; we propose a service providing framework based on the backend as a service approach on cloud to improve the quality of the smart city digital services according to the citizen's needs while enhancing the scalability of the system in large workloads. For illustrating the functioning of the approach we have used information about the city of Biskra administrative institutions as an application example of the system. \u00c2\u00a9 2018 IEEE.",
      "authors": [
        "Hoadjli Abir",
        "Rezeg Khaled"
      ],
      "categories": null,
      "citations": 2,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/ISIICT.2018.8613725",
      "keywords": [
        "cloud backend",
        "citizen-centric",
        "smart city",
        "scalability",
        "backend as a service"
      ],
      "number_of_pages": 7,
      "pages": "1-7",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-5386-6225-0",
        "issn": null,
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "2018 Fifth International Symposium on Innovation in Information and Communication Technology (ISIICT)"
      },
      "publication_date": "2018-01-01",
      "selected": null,
      "title": "A Smart City System using Backend as a Service Approach: Biskra City Case Study",
      "urls": [
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=8613725",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85062189103&origin=inward"
      ]
    },
    {
      "abstract": "With the increasing amount of data the importance of data analysis has grown. A large amount of this data has shifted to cloud-based storage. The cloud offers storage and computation power. The Cookery framework is a tool developed to build application in the cloud for scientists without a complete understanding of programming. In this paper with present the cookery systems and how it can be used to authenticate and use standard online 3rd party services to easily create data analytics pipeline. Cookery framework is not limited to work with standard web services, it can also integrate and work with the emerging AWS Lambda. The combination of AWS Lambda and Cookery, which makes it possible for people, who do not have any program experience, to create data processing pipeline using cloud services in short time. \u00c2\u00a9 2018 IEEE.",
      "authors": [
        "Mikolaj Branowski",
        "Adam Belloum"
      ],
      "categories": null,
      "citations": 2,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/eScience.2018.00102",
      "keywords": [
        "OAuth",
        "Function-as-a-Service (FaaS)",
        "IFTTT",
        "Cloud",
        "AWS Lambda"
      ],
      "number_of_pages": 2,
      "pages": "368-369",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-5386-9157-1",
        "issn": null,
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings - IEEE 14th International Conference on eScience, e-Science 2018"
      },
      "publication_date": "2018-01-01",
      "selected": null,
      "title": "Cookery: A Framework for Creating Data Processing Pipeline Using Online Services",
      "urls": [
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=8588721",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85061356107&origin=inward"
      ]
    },
    {
      "abstract": "Currently, there are many challenges in the transportation scope that researchers are attempting to resolve, and one of them is transportation planning. The main contribution of this paper is the design and implementation of an ITS (Intelligent Transportation Systems) smart sensor prototype that incorporates and combines the Internet of Things (IoT) approaches using the Serverless and Microservice Architecture, to help the transportation planning for Bus Rapid Transit (BRT) systems. The ITS smart sensor prototype can detect several Bluetooth signals of several devices (e.g., from mobile phones) that people use while travelling by the BRT system (e.g., in Bogota city). From that information, the ITS smart-sensor prototype can create an O/D (origin/destiny) matrix for several BRT routes, and this information can be used by the Administrator Authorities (AA) to produce a suitable transportation planning for the BRT systems. In addition, this information can be used by the center of traffic management and the AA from ITS cloud services using the Serverless and Microservice architecture. \u00c2\u00a9 2009-2012 IEEE.",
      "authors": [
        "Luis Felipe Herrera-Quintero",
        "Julian Camilo Vega-Alfonso",
        "Klaus Bodo Albert Banse",
        "Eduardo Carrillo Zambrano"
      ],
      "categories": null,
      "citations": 30,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/MITS.2018.2806620",
      "keywords": [],
      "number_of_pages": 11,
      "pages": "17-27",
      "publication": {
        "category": "Journal",
        "cite_score": 8.7,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "1941-1197",
        "publisher": "Institute of Electrical and Electronics Engineers Inc.",
        "sjr": 0.831,
        "snip": 2.366,
        "subject_areas": [
          "Automotive Engineering",
          "Mechanical Engineering",
          "Computer Science Applications"
        ],
        "title": "IEEE Intelligent Transportation Systems Magazine"
      },
      "publication_date": "2018-01-01",
      "selected": null,
      "title": "Smart ITS Sensor for the Transportation Planning Based on IoT Approaches Using Serverless and Microservices Architecture",
      "urls": [
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=8344774",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85046034361&origin=inward"
      ]
    },
    {
      "abstract": "Context:The term \u201cserverless\u201d defines applications that use elements of Function as a Service or Backend as a Service cloud models in their architectures. Serverless promises infrastructure and...",
      "authors": [
        "Vitalii Ivanov",
        "Kari Smolander"
      ],
      "categories": null,
      "citations": 4,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1007/978-3-030-03673-7_4",
      "keywords": [
        "Design science research",
        "DevOps",
        "Continuous integration",
        "Serverless",
        "Continuous delivery"
      ],
      "number_of_pages": 17,
      "pages": "48-64",
      "publication": {
        "category": "Book",
        "cite_score": 1.8,
        "is_potentially_predatory": false,
        "isbn": "9783030715922",
        "issn": "03029743",
        "publisher": "Springer Verlag",
        "sjr": 0.249,
        "snip": 0.628,
        "subject_areas": [
          "Databases",
          "Cryptography and Security",
          "Distributed, Parallel, and Cluster Computing",
          "Theoretical Computer Science",
          "Computer Science (all)"
        ],
        "title": "IFIP International Conference on Distributed Applications and\n  Interoperable Systems, DAIS 2017: Distributed Applications and Interoperable\n  Systems pp 83-98"
      },
      "publication_date": "2018-01-01",
      "selected": null,
      "title": "Implementation of a DevOps Pipeline for Serverless Applications",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85057252284&origin=inward",
        "https://link.springer.com/content/pdf/10.1007%2F978-3-030-03673-7_4.pdf"
      ]
    },
    {
      "abstract": "Serverless architecture has been gaining popularity in the last three years. Function as a Service (FaaS) is a concrete realization of the Serverless architecture and has several advantages and...",
      "authors": [
        "Huan Chen",
        "Liang-Jie Zhang"
      ],
      "categories": null,
      "citations": 7,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1007/978-3-319-94478-4_17",
      "keywords": [],
      "number_of_pages": 8,
      "pages": "243-250",
      "publication": {
        "category": "Book",
        "cite_score": 1.8,
        "is_potentially_predatory": false,
        "isbn": "9783030715922",
        "issn": "03029743",
        "publisher": "Springer Verlag",
        "sjr": 0.249,
        "snip": 0.628,
        "subject_areas": [
          "Databases",
          "Cryptography and Security",
          "Distributed, Parallel, and Cluster Computing",
          "Theoretical Computer Science",
          "Computer Science (all)"
        ],
        "title": "IFIP International Conference on Distributed Applications and\n  Interoperable Systems, DAIS 2017: Distributed Applications and Interoperable\n  Systems pp 83-98"
      },
      "publication_date": "2018-01-01",
      "selected": null,
      "title": "FBaaS: Functional Blockchain as a Service",
      "urls": [
        "https://link.springer.com/content/pdf/10.1007%2F978-3-319-94478-4_17.pdf",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85049359816&origin=inward"
      ]
    },
    {
      "abstract": "The Function as a Service (FaaS) subtype of serverless computing provides the means for abstracting away from servers on which developed software is meant to be executed. It essentially offers an...",
      "authors": [
        "Timon Back",
        "Vasilios Andrikopoulos"
      ],
      "categories": null,
      "citations": 12,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1007/978-3-319-99819-0_11",
      "keywords": [
        "Function as a Service (FaaS)",
        "Cost evaluation",
        "Microbenchmark",
        "Performance evaluation"
      ],
      "number_of_pages": 15,
      "pages": "146-160",
      "publication": {
        "category": "Book",
        "cite_score": 1.8,
        "is_potentially_predatory": false,
        "isbn": "9783030715922",
        "issn": "03029743",
        "publisher": "Springer Verlag",
        "sjr": 0.249,
        "snip": 0.628,
        "subject_areas": [
          "Databases",
          "Cryptography and Security",
          "Distributed, Parallel, and Cluster Computing",
          "Theoretical Computer Science",
          "Computer Science (all)"
        ],
        "title": "IFIP International Conference on Distributed Applications and\n  Interoperable Systems, DAIS 2017: Distributed Applications and Interoperable\n  Systems pp 83-98"
      },
      "publication_date": "2018-01-01",
      "selected": null,
      "title": "Using a Microbenchmark to Compare Function as a Service Solutions",
      "urls": [
        "https://link.springer.com/content/pdf/10.1007%2F978-3-319-99819-0_11.pdf",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85053874400&origin=inward"
      ]
    },
    {
      "abstract": "Major chat platforms, such as Facebook Messenger, have recently added support for chatbots, thus making chatbots more accessible for the end users. This paper presents a case study on building and...",
      "authors": [
        "Jyri Lehv\u00e4",
        "Niko M\u00e4kitalo",
        "Tommi Mikkonen"
      ],
      "categories": null,
      "citations": 4,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1007/978-3-319-74433-9_6",
      "keywords": [
        "AWS",
        "Serverless computing",
        "Facebook Messenger",
        "Microservices",
        "Internet Bot",
        "Chatbot",
        "AWS Lambda"
      ],
      "number_of_pages": 12,
      "pages": "75-86",
      "publication": {
        "category": "Book",
        "cite_score": 1.8,
        "is_potentially_predatory": false,
        "isbn": "9783030715922",
        "issn": "03029743",
        "publisher": "Springer Verlag",
        "sjr": 0.249,
        "snip": 0.628,
        "subject_areas": [
          "Databases",
          "Cryptography and Security",
          "Distributed, Parallel, and Cluster Computing",
          "Theoretical Computer Science",
          "Computer Science (all)"
        ],
        "title": "IFIP International Conference on Distributed Applications and\n  Interoperable Systems, DAIS 2017: Distributed Applications and Interoperable\n  Systems pp 83-98"
      },
      "publication_date": "2018-01-01",
      "selected": null,
      "title": "Case Study: Building a Serverless Messenger Chatbot",
      "urls": [
        "https://link.springer.com/content/pdf/10.1007%2F978-3-319-74433-9_6.pdf",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85042739764&origin=inward"
      ]
    },
    {
      "abstract": "Due to the shared responsibility model of clouds, tenants have to manage the security of their workloads and data. Developing security solutions using VMs or containers creates further problems as these resources also need to be secured. In this paper, we advocate for taking a serverless approach by proposing six serverless design patterns to build security services in the cloud. For each design pattern, we describe the key advantages and present applications and services utilizing the pattern. Using the proposed patterns as building blocks, we introduce a threat-intelligence platform that collects logs from various sources, alerts malicious activities, and takes actions against such behaviors. We also discuss the limitations of serverless design and how future implementations can overcome those limitations. \u00c2\u00a9 2018 USENIX Association. All rights reserved.",
      "authors": [
        "Hong, S.",
        "Srivastava, A.",
        "Shambrook, W.",
        "Dumitras, T."
      ],
      "categories": null,
      "citations": 6,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "10th USENIX Workshop on Hot Topics in Cloud Computing, HotCloud 2018, co-located with USENIX ATC 2018"
      },
      "publication_date": "2018-01-01",
      "selected": null,
      "title": "Go serverless: Securing cloud via serverless design patterns",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85084162285&origin=inward"
      ]
    },
    {
      "abstract": "Cloud Functions, often called Function-as-a-Service (FaaS), pioneered by AWS Lambda, are an increasingly popular method of running distributed applications. As in other cloud offerings, cloud...",
      "authors": [
        "Maciej Malawski",
        "Kamil Figiela",
        "Adam Gajek",
        "Adam Zima"
      ],
      "categories": null,
      "citations": 19,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1007/978-3-319-75178-8_34",
      "keywords": [
        "Cloud functions performance evaluation",
        "Cloud computing",
        "FaaS"
      ],
      "number_of_pages": 12,
      "pages": "415-426",
      "publication": {
        "category": "Book",
        "cite_score": 1.8,
        "is_potentially_predatory": false,
        "isbn": "9783030715922",
        "issn": "03029743",
        "publisher": "Springer Verlag",
        "sjr": 0.249,
        "snip": 0.628,
        "subject_areas": [
          "Databases",
          "Cryptography and Security",
          "Distributed, Parallel, and Cluster Computing",
          "Theoretical Computer Science",
          "Computer Science (all)"
        ],
        "title": "IFIP International Conference on Distributed Applications and\n  Interoperable Systems, DAIS 2017: Distributed Applications and Interoperable\n  Systems pp 83-98"
      },
      "publication_date": "2018-01-01",
      "selected": null,
      "title": "Benchmarking Heterogeneous Cloud Functions",
      "urls": [
        "https://link.springer.com/content/pdf/10.1007%2F978-3-319-75178-8_34.pdf",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85042508451&origin=inward"
      ]
    },
    {
      "abstract": "Compared to the traditional Cloud solution which consists of hiring resources from a single Cloud provider, Multi Cloud is a rather more efficient solution; because it combines the diverse benefits from them, thus, the different platforms complement each other on behalf the client applications. Moreover, Serverless Function technology is a powerful Cloud tool that hides the unnecessary infrastructure management details, hence, allowing the developers to solely focus on their own functional code. Nevertheless, as far as we found, Serverless Functions are always limited to the provider offering them and they are not adopted in a Multi Cloud context. In this paper, we tackled this limit by suggesting a distributed architecture which extends the Serverless technology advantages to a wider scope, permitting the client to get at time the Multi Cloud and Serverless strengths. \u00c2\u00a9 2018 The Authors. Published by Elsevier Ltd.",
      "authors": [
        "Soltani, B.",
        "Ghenai, A.",
        "Zeghib, N."
      ],
      "categories": null,
      "citations": 8,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1016/j.procs.2018.07.152",
      "keywords": [
        "container cluster manager",
        "container",
        "Serverless architecture",
        "Multi Cloud",
        "Peer to Peer"
      ],
      "number_of_pages": 8,
      "pages": "121-128",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Procedia Computer Science"
      },
      "publication_date": "2018-01-01",
      "selected": null,
      "title": "Towards Distributed Containerized Serverless Architecture in Multi Cloud Environment",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85051385904&origin=inward"
      ]
    },
    {
      "abstract": "The purpose of this research is building a next-generation knowledge management system based on the most recent developments in the industry of serverless computing. Such approach reimagines a conventional way people build software by abstracting away the complexity of maintaining highly available, highly scalable systems. The software combines many ways to parse rich media and text content such as image, audio, video to build a contextual search index. Copyright \u00c2\u00a9 2018 for the individual papers by the papers'authors.",
      "authors": [
        "Holubiev, V.",
        "Ihnatiuk, B.",
        "Voytyuk, I."
      ],
      "categories": null,
      "citations": 3,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": null,
      "keywords": [
        "Rich media content",
        "Serverless system",
        "Contextual search"
      ],
      "number_of_pages": 4,
      "pages": "211-214",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": 0.8,
        "is_potentially_predatory": false,
        "isbn": "9788670314764",
        "issn": "16130073",
        "publisher": "CEUR-WS",
        "sjr": 0.177,
        "snip": 0.345,
        "subject_areas": [
          "Computer Science (all)"
        ],
        "title": "CEUR Workshop Proceedings"
      },
      "publication_date": "2018-01-01",
      "selected": null,
      "title": "Next-generation serverless system for contextual search based on rich media content",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85060026357&origin=inward"
      ]
    },
    {
      "abstract": "In the late-1950s, leasing time on an IBM 704 cost hundreds of dollars per minute. Today, cloud computing, that is, using IT as a service, on-demand and pay-per-use, is a widely used computing paradigm that offers large economies of scale. Born from a need to make platform as a service (PaaS) more accessible, fine-grained, and affordable, serverless computing has garnered interest from both industry and academia. This article aims to give an understanding of these early days of serverless computing: what it is, where it comes from, what is the current status of serverless technology, and what are its main obstacles and opportunities. \u00c2\u00a9 1997-2012 IEEE.",
      "authors": [
        "Erwin van Eyk",
        "Lucian Toader",
        "Sacheendra Talluri",
        "Laurens Versluis",
        "Alexandru U\u021b\u0103",
        "Alexandru Iosup"
      ],
      "categories": null,
      "citations": 34,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/MIC.2018.053681358",
      "keywords": [
        "workflows",
        "cloud computing",
        "internet computing",
        "internet",
        "serverless",
        "function-as-a-service"
      ],
      "number_of_pages": 10,
      "pages": "8-17",
      "publication": {
        "category": "Journal",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "1941-0131",
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "IEEE Internet Computing"
      },
      "publication_date": "2018-01-01",
      "selected": null,
      "title": "Serverless is More: From PaaS to Present Cloud Computing",
      "urls": [
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=8481652",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85051747032&origin=inward"
      ]
    },
    {
      "abstract": "Cloud services provide a means to ease information storage and sharing. In the case of Small and Medium Enterprises, this represents a great opportunity to deploy platforms for data exchange without...",
      "authors": [
        "Alejandro Sanchez-Gomez",
        "Jesus Diaz",
        "David Arroyo"
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1007/978-3-319-67180-2_66",
      "keywords": [
        "Serverless software",
        "Data redundancy solutions",
        "Multi-cloud integration",
        "Client-side encryption",
        "Zero-trust security model",
        "Cloud storage"
      ],
      "number_of_pages": 10,
      "pages": "683-692",
      "publication": {
        "category": "Book",
        "cite_score": 0.9,
        "is_potentially_predatory": false,
        "isbn": "9783030577957",
        "issn": "21945357",
        "publisher": "Springer Verlag",
        "sjr": 0.184,
        "snip": 0.428,
        "subject_areas": [
          "Control and Systems Engineering",
          "Computer Science (all)"
        ],
        "title": "Workshops of  the International Conference on Advanced Information Networking and Applications"
      },
      "publication_date": "2018-01-01",
      "selected": null,
      "title": "Encrypted Cloud: A Software Solution for the Secure Use of Free-Access Cloud Storage Services",
      "urls": [
        "https://link.springer.com/content/pdf/10.1007%2F978-3-319-67180-2_66.pdf",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85028635720&origin=inward"
      ]
    },
    {
      "abstract": "The adoption of cloud computing facilities and programming models differs vastly between different application domains. Scalable web applications, low-latency mobile backends and on-demand...",
      "authors": [
        "Josef Spillner",
        "Cristian Mateos",
        "David A. Monge"
      ],
      "categories": null,
      "citations": 35,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1007/978-3-319-73353-1_11",
      "keywords": [],
      "number_of_pages": 15,
      "pages": "154-168",
      "publication": {
        "category": "Book",
        "cite_score": 0.8,
        "is_potentially_predatory": false,
        "isbn": "9783030719050",
        "issn": "18650929",
        "publisher": "Springer Verlag",
        "sjr": 0.16,
        "snip": 0.32,
        "subject_areas": [
          "Mathematics (all)",
          "Computer Science (all)"
        ],
        "title": "International Conference on Software Process Improvement and Capability Determination"
      },
      "publication_date": "2018-01-01",
      "selected": null,
      "title": "FaaSter, Better, Cheaper: The Prospect of Serverless Scientific Computing and HPC",
      "urls": [
        "https://link.springer.com/content/pdf/10.1007%2F978-3-319-73353-1_11.pdf",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85040242305&origin=inward"
      ]
    },
    {
      "abstract": "The proceedings contain 29 papers. The special focus in this conference is on High Performance Computing. The topics include: Faaster, better, cheaper: the prospect of serverless scientific computing and HPC; AccaSim: An HPC simulator for workload management; Sherlockfog: Finding opportunities for MPI applications in fog and edge computing; ioT workload distribution impact between edge and cloud computing in a smart grid application; model-R: A framework for scalable and reproducible ecological niche modeling; task scheduling for processing big graphs in heterogeneous commodity clusters; Exploring application-level message-logging in scalable HPC programs; accelerated numerical optimization with explicit consideration of model constraints; parallel processing of intra-cranial electroencephalogram readings on distributed memory systems; power consumption characterization of synthetic benchmarks in multicores; support vector machine acceleration for intel Xeon phi manycore processors; performance improvements of a parallel multithreading self-gravity algorithm; A fast GPU convolution/superposition method for radiotherapy dose calculation; eeny meeny miny moe: Choosing the fault tolerance technique for my cloud workflow; energy aware multiobjective scheduling in a federation of heterogeneous datacenters; markov decision process to dynamically adapt spots instances ratio on the autoscaling of scientific workflows in the cloud; experimental analysis of secret sharing schemes for cloud storage based on rns; bi-objective heterogeneous consolidation in cloud computing; scaling the deployment of virtual machines in unacloud; distributed cosmic ray detection using cloud computing; Initial experiences from TUPAC supercomputer; RomeoLAB: A high performance training platform for HPC, GPU and deeplearning; Analysis and characterization of GPU benchmarks for kernel concurrency efficiency.",
      "authors": [],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": {
        "category": "Book",
        "cite_score": 0.8,
        "is_potentially_predatory": false,
        "isbn": "9783030719050",
        "issn": "18650929",
        "publisher": "Springer Verlag",
        "sjr": 0.16,
        "snip": 0.32,
        "subject_areas": [
          "Mathematics (all)",
          "Computer Science (all)"
        ],
        "title": "International Conference on Software Process Improvement and Capability Determination"
      },
      "publication_date": "2018-01-01",
      "selected": null,
      "title": "4th Latin American Conference on High Performance Computing, CARLA 2017",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85040222085&origin=inward"
      ]
    },
    {
      "abstract": "Since 2009 when Bitcoin was introduced, followed by the evolution of permissioned and permissionless blockchain networks as we know of them today, the technology of distributed ledgers is...",
      "authors": [
        "Sofia Terzi",
        "Ioannis Stamelos"
      ],
      "categories": null,
      "citations": 2,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1007/978-3-030-00623-5_26",
      "keywords": [
        "Agile",
        "Software development",
        "Smart contracts",
        "Blockchain",
        "Software processes"
      ],
      "number_of_pages": 8,
      "pages": "355-362",
      "publication": {
        "category": "Book",
        "cite_score": 0.8,
        "is_potentially_predatory": false,
        "isbn": "9783030719050",
        "issn": "18650929",
        "publisher": "Springer Verlag",
        "sjr": 0.16,
        "snip": 0.32,
        "subject_areas": [
          "Mathematics (all)",
          "Computer Science (all)"
        ],
        "title": "International Conference on Software Process Improvement and Capability Determination"
      },
      "publication_date": "2018-01-01",
      "selected": null,
      "title": "Permissioned Blockchains and Smart Contracts into Agile Software Processes",
      "urls": [
        "https://link.springer.com/content/pdf/10.1007%2F978-3-030-00623-5_26.pdf",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85054781484&origin=inward"
      ]
    },
    {
      "abstract": "Digital Library",
      "authors": [
        "Roland Pellegrini",
        "Igor Ivkic",
        "Markus Tauber"
      ],
      "categories": null,
      "citations": 2,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.5220/0006817606660669",
      "keywords": [
        "Benchmarking",
        "Cloud computing",
        "Framework",
        "Cloud security",
        "Function-as-a-Service"
      ],
      "number_of_pages": 4,
      "pages": "666-669",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9789897582950",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "CLOSER 2018 - Proceedings of the 8th International Conference on Cloud Computing and Services Science"
      },
      "publication_date": "2018-01-01",
      "selected": null,
      "title": "Towards a Security-Aware Benchmarking Framework for Function-as-a-Service",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85048880857&origin=inward"
      ]
    },
    {
      "abstract": "The proceedings contain 16 papers. The special focus in this conference is on Service-Oriented and Cloud Computing. The topics include: Using a microbenchmark to compare function as a service solutions; APIComposer: Data-driven composition of REST APIs; iaaS service selection revisited; An innovative MapReduce-based approach of Dijkstra\u00e2\u0080\u0099s algorithm for SDN routing in hybrid cloud, edge and IoT scenarios; little boxes: A dynamic optimization approach for enhanced cloud infrastructures; Cloud topology and orchestration using TOSCA: A systematic literature review; true concurrent management of multi-component applications; runtime evolution of multi-tenant service networks; devOps service observability by-design: Experimenting with Model-View-Controller; Re-architecting OO software into microservices: A quality-centred approach; an encoder-decoder architecture for the prediction of web service QoS; Trustworthy detection and arbitration of SLA violations in the cloud; distributed complex event processing in multiclouds; a Multi-level policy engine to manage identities and control accesses in cloud computing environment.",
      "authors": [],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": {
        "category": "Book",
        "cite_score": 1.8,
        "is_potentially_predatory": false,
        "isbn": "9783030715922",
        "issn": "03029743",
        "publisher": "Springer Verlag",
        "sjr": 0.249,
        "snip": 0.628,
        "subject_areas": [
          "Databases",
          "Cryptography and Security",
          "Distributed, Parallel, and Cluster Computing",
          "Theoretical Computer Science",
          "Computer Science (all)"
        ],
        "title": "IFIP International Conference on Distributed Applications and\n  Interoperable Systems, DAIS 2017: Distributed Applications and Interoperable\n  Systems pp 83-98"
      },
      "publication_date": "2018-01-01",
      "selected": null,
      "title": "7th IFIP WG 2.14 European Conference on Service-Oriented and Cloud Computing, ESOCC 2018",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85053884751&origin=inward"
      ]
    },
    {
      "abstract": "The proceedings contain 26 papers. The special focus in this conference is on Web Engineering. The topics include: Towards an Acceptance Testing Approach for Internet of Things Systems; ABC Algorithm for URL Extraction; Towards a UML and IFML Mapping to GraphQL; accessing Government Open Data Through Chatbots; using Ontologies for Official Statistics: The Istat Experience; ontology Population from Raw Text Corpus for Open-Source Intelligence; named Entity Recognition in Twitter Using Images and Text; online Expectation Maximization for Language Characterization of Streaming Text; analysing Cultural Events on Twitter; semantic Discovery in the Web of Things; harvesting Knowledge from Social Networks: Extracting Typed Relationships Among Entities; novel Comment Spam Filtering Method on Youtube: Sentiment Analysis and Personality Recognition; mining Communication Data in a Music Community: A Preliminary Analysis; measuring Personal Branding in Social Media: Towards an Influence Indication Score; big Web Data: Warehousing and Analytics: Recent Trends and Future Challenges; model-Based Development of JavaScript Web Applications; Liquid Web Applications: ICWE2017 Tutorial; challenges When Moving from Monolith to Microservice Architecture; IoT Application Deployment Using Request-Response Pattern with MQTT; wireless Brain-Computer Interface for Wheelchair Control by Using Fast Machine Learning and Real-Time Hyper-Dimensional Classification; case Study: Building a Serverless Messenger Chatbot; four Key Factors to Design a Web of Things Architecture; liquid Transfer of User Identity; engineering Task-Automation Systems for Domain Specificity.",
      "authors": [],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": {
        "category": "Book",
        "cite_score": 1.8,
        "is_potentially_predatory": false,
        "isbn": "9783030715922",
        "issn": "03029743",
        "publisher": "Springer Verlag",
        "sjr": 0.249,
        "snip": 0.628,
        "subject_areas": [
          "Databases",
          "Cryptography and Security",
          "Distributed, Parallel, and Cluster Computing",
          "Theoretical Computer Science",
          "Computer Science (all)"
        ],
        "title": "IFIP International Conference on Distributed Applications and\n  Interoperable Systems, DAIS 2017: Distributed Applications and Interoperable\n  Systems pp 83-98"
      },
      "publication_date": "2018-01-01",
      "selected": null,
      "title": "17th International Conference on Web Engineering, ICWE 2017",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85042790395&origin=inward"
      ]
    },
    {
      "abstract": "Serverless Computing is emerging as an undeniable paradigm for the deployment of (multi)cloud applications. It is mainly characterized by the use of stateless loosely-coupled functions that are composed together to perform useful actions. This approach, contrarily to monolithic one, makes easier the maintenance and the evolution of the applications, since the functions can be independently revised and reprogrammed. However, one principle in Serverless computing is that function execution should be within a short duration (five minutes max in most Cloud provider platforms), after which the function is abruptly terminated even if it has not completed its task. Moreover, the max duration cannot be extended without a negative effect on the platform performance. This leads to prevent functions requiring longer time from being adopted as Serverless functions. This paper deals with this drawback. It proposes a distributed migration-based approach which promotes the execution of long-duration Serverless functions: each running function that reaches the maximum duration limit is repeatedly transferred to another cloud platform where it is carried on. In this aim, the migration-based system architecture, the migration technique and the migration algorithm are described. The proposed approach use is illustrated by a case study: a generic machine learning application built over the scientific platform ANTDROID. Copyright \u00c2\u00a9 by the paper\u00e2\u0080\u0099s authors.",
      "authors": [
        "Soltani, B.",
        "Ghenai, A.",
        "Zeghib, N."
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": 9,
      "pages": "42-50",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": 0.8,
        "is_potentially_predatory": false,
        "isbn": "9788670314764",
        "issn": "16130073",
        "publisher": "CEUR-WS",
        "sjr": 0.177,
        "snip": 0.345,
        "subject_areas": [
          "Computer Science (all)"
        ],
        "title": "CEUR Workshop Proceedings"
      },
      "publication_date": "2018-01-01",
      "selected": null,
      "title": "A migration-based approach to execute long-duration multi-cloud serverless functions",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85063272403&origin=inward"
      ]
    },
    {
      "abstract": "The proceedings contain 76 papers. The topics discussed include: FastTrack: foreground app-aware I/O management for improving user experience of android smartphones; mainstream: dynamic stem-sharing for multi-tenant video processing; SOCK: rapid task provisioning with serverless-optimized containers; DynaMix: dynamic mobile device integration for efficient cross-device resource sharing; the design and implementation of hyperupcalls; aiql: enabling efficient attack investigation from system monitoring data; application memory isolation on ultra-low-power MCUs; peeking behind the curtains of serverless platforms; KylinX: a dynamic library operating system for simplified and efficient cloud virtualization; and throwhammer: rowhammer attacks over the network and defenses.",
      "authors": [],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781939133021",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings of the 2018 USENIX Annual Technical Conference, USENIX ATC 2018"
      },
      "publication_date": "2018-01-01",
      "selected": null,
      "title": "Proceedings of the 2018 USENIX Annual Technical Conference, USENIX ATC 2018",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85085266048&origin=inward"
      ]
    },
    {
      "abstract": "Serverless computing is in the spotlight recently as a new form of cloud computing. And one of the most interested software domain in recent years is deep learning applications. Now serverless computing environment is still just CPU-based. This is because GPU devices are not shared by different processes at the same time unlike CPU. To support deep learning applications in serverless computing with low cost, it is essential to support GPU resource sharing. Nvidia supports MPS with execution resource provisioning on the latest Volta architecture GPU. In order to apply MPS and resource provisioning to GPU-based servlerless computing, it is necessary to know the accurate GPU usage of long-term deep learning functions. In this paper, we propose a technique to predict GPU usage of long-term deep learning training function without watching complete execution of it. The proposed technique is composed of sliding window method and coverage based usage estimation. Through the proposed technique, deep learning training functions can be effectively applied to serverless computing with GPU sharing. \u00c2\u00a9 2018 IADIS Press. All Rights Reserved.",
      "authors": [
        "Kim, C.-Y.",
        "Cha, G.-I."
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": null,
      "keywords": [
        "Deep Learning",
        "GPGPU Sharing",
        "Serverless Computing",
        "Micro Service Architecture"
      ],
      "number_of_pages": 8,
      "pages": "101-108",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9789898533821",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings of the International Conferences on WWW/Internet 2018 and Applied Computing 2018"
      },
      "publication_date": "2018-01-01",
      "selected": null,
      "title": "GPU usage estimation of deep learning training function for serverless computing",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85060311900&origin=inward"
      ]
    },
    {
      "abstract": "In the serverless model, users upload application code to a cloud platform and the cloud provider undertakes the deployment, execution and scaling of the application, relieving users from all operational aspects. Although very popular, current serverless offerings offer poor support for the management of local application state, the main reason being that managing state and keeping it consistent at large scale is very challenging. As a result, the serverless model is inadequate for executing stateful, latency-sensitive applications. In this paper we present a high-level programming model for developing stateful functions and deploying them in the cloud. Our programming model allows functions to retain state as well as call other functions. In order to deploy stateful functions in a cloud infrastructure, we translate functions and their data exchanges into a stateful data ow graph. With this paper we aim at demonstrating that using a modified version of an open-source data ow engine as a runtime for stateful functions, we can deploy scalable and stateful services in the cloud with surprisingly low latency and high throughput. \u00c2\u00a9 2019 VLDB Endowment.",
      "authors": [
        "Akhter, A.",
        "Fragkoulis, M.",
        "Katsifodimos, A."
      ],
      "categories": null,
      "citations": 3,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.14778/3352063.3352092",
      "keywords": [],
      "number_of_pages": 4,
      "pages": "1890-1893",
      "publication": {
        "category": "Journal",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [
          "Distributed, Parallel, and Cluster Computing"
        ],
        "title": "Proceedings of the VLDB Endowment"
      },
      "publication_date": "2018-01-01",
      "selected": null,
      "title": "Stateful functions as a service in action",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85074473135&origin=inward"
      ]
    },
    {
      "abstract": "Application runtimes are undergoing a fundamental transformation in the cloud, from general-purpose operating systems (OSes) in virtual machines (VMs) to lightweight, minimal OSes in microcontainers. On one hand, such transformation is helping reduce application footprint in the cloud to increase agility, density and to minimize attack surface. On the other hand it makes it challenging to implement system and application management tasks. Inspired from the on-demand Function as a Service (FaaS) model in serverless computing, in RECap we are designing a cloud-native solution to deliver systems and application management tasks through specially-managed Capsule containers. Capsule containers are dynamically attached to the running containers for the duration of their implemented function and are safely removed from application context afterwards. More generally, RECap framework allows us to design disaggregated on-demand managed service delivery for containers in the cloud. In this paper, we describe the motivation and the emerging opportunity for RECap in the cloud. We discuss its core design principles, performance, security and manageability trade-offs. We present current design of RECap for the Kubernetes platform. \u00c2\u00a9 2018 USENIX Association. All rights reserved.",
      "authors": [
        "Nadgowda, S.",
        "Suneja, S.",
        "Isci, C."
      ],
      "categories": null,
      "citations": 2,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "10th USENIX Workshop on Hot Topics in Cloud Computing, HotCloud 2018, co-located with USENIX ATC 2018"
      },
      "publication_date": "2018-01-01",
      "selected": null,
      "title": "RECap: Run-escape capsule for on-demand managed service delivery in the cloud",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85084160215&origin=inward"
      ]
    },
    {
      "abstract": "Serverless computing has emerged as a new compelling paradigm for the deployment of applications and services. It represents an evolution of cloud programming models, abstractions, and platforms, and...",
      "authors": [
        "Ioana Baldini",
        "Paul Castro",
        "Kerry Chang",
        "Perry Cheng",
        "Stephen Fink",
        "Vatche Ishakian",
        "Nick Mitchell",
        "Vinod Muthusamy",
        "Rodric Rabbah",
        "Aleksander Slominski",
        "Philippe Suter"
      ],
      "categories": null,
      "citations": 179,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1007/978-981-10-5026-8_1",
      "keywords": [],
      "number_of_pages": 20,
      "pages": "1-20",
      "publication": {
        "category": "Book",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9789811050268",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Research Advances in Cloud Computing"
      },
      "publication_date": "2017-12-28",
      "selected": null,
      "title": "Serverless Computing: Current Trends and Open Problems",
      "urls": [
        "https://link.springer.com/content/pdf/10.1007%2F978-981-10-5026-8_1.pdf",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85043519408&origin=inward"
      ]
    },
    {
      "abstract": "Mobile enterprise applications are primarily developed for existing backend enterprise systems and some usage scenarios require storing of large files on the mobile devices. These files range from large PDFs to media files in various formats (MPEG videos).These files needs to be used offline, sometimes updated and shared among users. In this paper, we enhanced a Mobile Backend as a service (M)BaaS platform that allows resource-limited mobile devices to access large objects from the cloud. Simba [1] is a framework that has support for both table and objects data models, three consistency semantics, resembling strong, causal and eventual consistency. We studied the Simba (MBaaS) framework in detail and found that Simba can be enhanced mainly in three areas of data storage, support for large files and how to handle the scenario of poorly written Mobile apps not to affect the singleton Simba Content Service daemon. Based on our findings, we propose enhanced (M)BaaS framework, a system with improved sync protocol supporting the streaming access to large objects and novel techniques to improve the access speed and sync efficiency for large files for mobile cloud storage services. The Simba client data storage is improved with a storage system capable of supporting both file system and database workloads efficiently using a single, versatile data structure: Variable- Transmission tree (VT-tree), instead of the current implementation of using LevelDB, which is a key value store (KVS) based on a log-structured merge (LSM) tree. The required modifications for the Sync protocol at the client and server side are also discussed. \u00c2\u00a9 2017 Association for Computing Machinery.",
      "authors": [
        "Faniband, Y.P.",
        "Ishak, I.",
        "Sidi, F.",
        "Jabar, M.A."
      ],
      "categories": null,
      "citations": 1,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1145/3176653.3176719",
      "keywords": [
        "Mobile back-end as a service",
        "Mobile cloud computing",
        "Consistency",
        "Mobile apps",
        "Distributed Systems"
      ],
      "number_of_pages": 5,
      "pages": "383-387",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450363518",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "ACM International Conference Proceeding Series"
      },
      "publication_date": "2017-12-27",
      "selected": null,
      "title": "Enhancing mobile backend as a service framework to support synchronization of large object",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85045517105&origin=inward"
      ]
    },
    {
      "abstract": "The proceedings contain 52 papers. The topics discussed include: self-regulated multi-criteria decision analysis: an autonomous brokerage-based approach for service provider ranking in the cloud; traffic-aware virtual machine placement in cloudlet mesh with adaptive bandwidth; re-designing cloud platforms for massive scale using a P2P architecture; a tale of two systems: using containers to deploy HPC applications on supercomputers and clouds; virtual network function placement: towards minimizing network latency and lead time; online phase detection and characterization of cloud applications; PCAD: cloud performance anomaly detection with data packet counts; decentralized search for shortest path approximation in large-scale complex networks; supporting internet-of-things analytics in a fog computing platform; ELLIS: dynamically scaling distributed dataflows to meet runtime targets; a preliminary review of enterprise serverless cloud computing (function-as-a-service) platforms; resource cages: a new abstraction of the hypervisor for performance isolation considering IDS offloading; a framework and task allocation analysis for infrastructure independent energy-efficient scheduling in cloud data centers; on the performance and cost of cloud-assisted multi-path bulk data transfer; quantifying the financial value of cloud investments: a systematic literature review; and on edge cloud service provision with distributed home servers.",
      "authors": [],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9780738143767",
        "issn": "23302194",
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings of the International Conference on Cloud Computing Technology and Science, CloudCom"
      },
      "publication_date": "2017-12-27",
      "selected": null,
      "title": "Proceedings of the International Conference on Cloud Computing Technology and Science, CloudCom",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85044295102&origin=inward"
      ]
    },
    {
      "abstract": "In the modern Era of technology, Chatbots is the next big thing in the era of conversational services. Chatbots is a virtual person who can effectively talk to any human being using interactive textual skills. Currently, there are many cloud base Chatbots services which are available for the development and improvement of the chatbot sector such as IBM Watson, Microsoft bot, AWS Lambda, Heroku and many others. A virtual person is based on machine learning and Artificial Intelligence (AI) concepts and due to dynamic nature, there is a drawback in the design and development of these chatbots as they have built-in AI, NLP, programming and conversion services. This paper gives an overview of cloud-based chatbots technologies along with programming of chatbots and challenges of programming in current and future Era of chatbot. \u00c2\u00a9 2017 IEEE.",
      "authors": [
        "A M Rahman",
        "Abdullah Al Mamun",
        "Alma Islam"
      ],
      "categories": null,
      "citations": 49,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/R10-HTC.2017.8288910",
      "keywords": [
        "Machine Learning (ML)",
        "Chatbot",
        "NLP",
        "Artificial Intelligence (AI)"
      ],
      "number_of_pages": 4,
      "pages": "75-78",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-5386-2176-9",
        "issn": "2572-7621",
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "5th IEEE Region 10 Humanitarian Technology Conference 2017, R10-HTC 2017"
      },
      "publication_date": "2017-12-21",
      "selected": null,
      "title": "Programming challenges of chatbot: Current and future prospective",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85047404762&origin=inward",
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=8288910"
      ]
    },
    {
      "abstract": "In the present work a feasibility study of a novel peer-to-peer architecture for live video streaming is proposed. It leverages both recent web technologies for peer implementation and overlay management, and the use of online social networks as integral part of the architecture itself. The key points of the architecture are: (1) the use of WebRTC to setup and manage a P2P overlay, and to deliver audio/video streams; (2) the implementation of P2P clients as HTML5/Javascript web applications, without involving other centralized entities acting as servers, according to a nearly serverless model; (3) the use of online social networks to retrieve user information and relationships between them, in order to improve overlay and stream management, and as a place to announce their setup and broadcasting, and to increase the audience; (4) the use of social networks to implement the WebRTC signaling. In this paper, after a brief excursus of the involved technologies, the proposed architecture will be introduced, and a first prototype will be presented with the aim of demonstrating the feasibility of the project. The authors will also introduce the elements of the architecture on which future efforts for subsequent enhancements and extensions will be focused. \u00c2\u00a9 2017 Association for Computing Machinery.",
      "authors": [
        "Tommasi, F.",
        "De Donno, A.",
        "Consalvo, F.I."
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1145/3175536.3175548",
      "keywords": [
        "Social networks",
        "Web-based applications",
        "Serverless architectures",
        "Live video streaming",
        "WebRTC",
        "P2P overlay"
      ],
      "number_of_pages": 6,
      "pages": "207-212",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450354356",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "ACM International Conference Proceeding Series"
      },
      "publication_date": "2017-12-20",
      "selected": null,
      "title": "Exploring a social-aware WebRTC-based P2P architecture for live video streaming",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85044316840&origin=inward"
      ]
    },
    {
      "abstract": "In line with cloud computing emergence as the dominant enterprise computing paradigm, our conceptualization of the cloud computing reference architecture and service construction has also evolved. For example, to address the need for cost reduction and rapid provisioning, virtualization has moved beyond hardware to containers. More recently, serverless computing or Function-as-a-Service has been presented as a means to introduce further cost-efficiencies, reduce configuration and management overheads, and rapidly increase an application's ability to speed up, scale up and scale down in the cloud. The potential of this new computation model is reflected in the introduction of serverless computing platforms by the main hyperscale cloud service providers. This paper provides an overview and multi-level feature analysis of seven enterprise serverless computing platforms. It reviews extant research on these platforms and identifies the emergence of AWS Lambda as a de facto base platform for research on enterprise serverless cloud computing. The paper concludes with a summary of avenues for further research. \u00c2\u00a9 2017 IEEE.",
      "authors": [
        "Theo Lynn",
        "Pierangelo Rosati",
        "Arnaud Lejeune",
        "Vincent Emeakaroha"
      ],
      "categories": null,
      "citations": 51,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/CloudCom.2017.15",
      "keywords": [
        "Google Cloud Functions",
        "IBM OpenWhisk",
        "Serverless Computing",
        "Azure Functions",
        "FAAS",
        "Iron.io",
        "Auth0 Webtask",
        "Gestal Laser",
        "Function-as-a-Service",
        "AWS Lambda"
      ],
      "number_of_pages": 8,
      "pages": "162-169",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-5386-0693-3",
        "issn": "2330-2186",
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings of the International Conference on Cloud Computing Technology and Science, CloudCom"
      },
      "publication_date": "2017-12-11",
      "selected": null,
      "title": "A Preliminary Review of Enterprise Serverless Cloud Computing (Function-as-a-Service) Platforms",
      "urls": [
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=8241104",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85044332447&origin=inward"
      ]
    },
    {
      "abstract": "Building scalable, highly available publish/subscribe (pub/sub) systems can require sophisticated algorithms and a tremendous amount of engineering e?ort. This paper demonstrates a way to build a pub/sub broker on top of the OpenWhisk serverless platform that performs topic-based and contentbased matching. This approach radically simplifes the design and signifcantly reduces the amount of code while still achieving scalability targets. Furthermore, we present a publisher/subscriber client application to interact with the broker as well as an evaluator application that enforces heavy workload on the broker to measure the scalability and latency of the pub/sub system and discover the potential bottlenecks. \u00c2\u00a9 2017 held by the owner/author(s).",
      "authors": [
        "Nasirifard, P.",
        "Slominski, A.",
        "Muthusamy, V.",
        "Ishakian, V.",
        "Jacobsen, H.-A."
      ],
      "categories": null,
      "citations": 1,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1145/3155016.3155024",
      "keywords": [
        "Content-based pub/sub",
        "Serverless",
        "Function as a service(FaaS)",
        "Topic-based pub/sub",
        "OpenWhisk"
      ],
      "number_of_pages": 2,
      "pages": "23-24",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450352017",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Middleware 2017 - Proceedings of the 2017 Middleware Posters and Demos 2017: Proceedings of the Posters and Demos Session of the 18th International Middleware Conference"
      },
      "publication_date": "2017-12-11",
      "selected": null,
      "title": "Demo: A serverless topic-based and content-based pub/sub broker",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85046077467&origin=inward"
      ]
    },
    {
      "abstract": "The proceedings contain 2 papers. The topics discussed include: the SPEC cloud group's research vision on FaaS and serverless architectures; and self-contained web components through serverless computing.",
      "authors": [],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": 1,
      "pages": "13",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450354349",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "WOSC 2017 - Proceedings of the 2nd International Workshop on Serverless Computing, Part of Middleware 2017"
      },
      "publication_date": "2017-12-11",
      "selected": null,
      "title": "WOSC 2017 - Proceedings of the 2nd International Workshop on Serverless Computing, Part of Middleware 2017",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85058350763&origin=inward"
      ]
    },
    {
      "abstract": "Traditionally, active storage techniques have been proposed to move computation tasks to storage nodes in order to exploit data locality. However, we argue in this paper that active storage is ill-suited for cloud storage for two reasons: 1. Lack of elasticity: Computing can only scale out with the number of storage nodes; and 2. Resource Contention: Sharing compute resources can produce interferences in the storage system. Serverless computing is now emerging as a promising alternative for ensuring painless scalability, and also, for simplifying the development of disaggregated computing tasks. Here we present an innovative data-driven serverless computing middleware for object storage. It is a lightweight compute solution that allows users to create small, stateless functions that intercept and operate on data flows in a scalable manner without the need to manage a server or a runtime environment. We demonstrate through different use cases how our solution scales with minimal overhead, while getting rid of the resource contention problems incurred by active storage tasks. \u00c2\u00a9 2017 ACM.",
      "authors": [
        "Samp\u00c3\u00a9, J.",
        "Sanchez-Artigas, M.",
        "Garcia-Lopez, P.",
        "Paris, G."
      ],
      "categories": null,
      "citations": 10,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1145/3135974.3135980",
      "keywords": [
        "Data flow interception",
        "Openstack swift",
        "Serverless functions",
        "Cloud computing",
        "Programmability",
        "Data management",
        "Object storage"
      ],
      "number_of_pages": 13,
      "pages": "121-133",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450347204",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Middleware 2017 - Proceedings of the 2017 International Middleware Conference"
      },
      "publication_date": "2017-12-11",
      "selected": null,
      "title": "Data-driven serverless functions for object storage",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85041214629&origin=inward"
      ]
    },
    {
      "abstract": "Cloud computing enables an entire ecosystem of developing, composing, and providing IT services. An emerging class of cloud-based software architectures, serverless, focuses on providing software architects the ability to execute arbitrary functions with small overhead in server management, as Function-as-a-service (FaaS). However useful, serverless and FaaS suffer from a community problem that faces every emerging technology, which has indeed also hampered cloud computing a decade ago: lack of clear terminology, and scattered vision about the field. In this work, we address this community problem. We clarify the term serverless, by reducing it to cloud functions as programming units, and a model of executing simple and complex (e.g., workflows of) functions with operations managed primarily by the cloud provider. We propose a research vision, where 4 key directions (perspectives) present 17 technical opportunities and challenges. \u00c2\u00a9 2017 Copyright held by the owner/author(s).",
      "authors": [
        "Van Eyk, E.",
        "Iosup, A.",
        "Seif, S.",
        "Th\u00c3\u00b6mmes, M."
      ],
      "categories": null,
      "citations": 36,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.475/123_4",
      "keywords": [
        "Software architecture",
        "Serverless",
        "Cloud computing",
        "FaaS",
        "Vision"
      ],
      "number_of_pages": 4,
      "pages": "1-4",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450354349",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "WOSC 2017 - Proceedings of the 2nd International Workshop on Serverless Computing, Part of Middleware 2017"
      },
      "publication_date": "2017-12-11",
      "selected": null,
      "title": "The spec cloud group\u2019s research vision on faas and serverless architectures",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85053870919&origin=inward"
      ]
    },
    {
      "abstract": "Web Components are an essential building block for modularizing large and complex web applications into smaller pieces. Due to the web\u00e2\u0080\u0099s nature, functionality encapsulated into Web Components consist of presentation and business logic. The former executes inside the user agent and the latter on the server-side. Many Web Components are not self-contained because they require to integrate their business logic into your backend or to use externally hosted third-party services. In this paper, we describe an approach of how to utilize Serverless Computing to enable self-contained web components by deploying Web Component business logic as cloud-hosted functions. \u00c2\u00a9 2017 Copyright held by the owner/author(s).",
      "authors": [
        "Ast, M.",
        "Gaedke, M."
      ],
      "categories": null,
      "citations": 3,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1145/3154847.3154849",
      "keywords": [
        "Micro Services",
        "Serverless Computing",
        "Web Services",
        "End-User Development",
        "Web Components",
        "Function as a Service"
      ],
      "number_of_pages": 6,
      "pages": "28-33",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450354349",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "WOSC 2017 - Proceedings of the 2nd International Workshop on Serverless Computing, Part of Middleware 2017"
      },
      "publication_date": "2017-12-11",
      "selected": null,
      "title": "Self-contained web components through serverless computing",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85058329527&origin=inward"
      ]
    },
    {
      "abstract": "The proceedings contain 12 papers. The topics discussed include: a software-defined hybrid cache with reduced energy; realizing an elastic MEMcached via cached data migration; a shared multi-stakeholder platform for IoT; Drowsy-DC, data-center power management inspired by smartphones; abstractions for supercomputing platforms to facilitate consolidation of services; improving server utilization via resource-adaptive batch VMS; programming application-defined multipath TCP schedulers; HyperPubSub: a decentralized, permissioned, publish/subscribe service using blockchains; combat state-aware interest management for online games; VIBES: fast blockchain simulations for large-scale peer-to-peer networks; MoCA+: incorporating user modeling into mobile contextual advertising; and a serverless topic-based and content-based pub/sub broker.",
      "authors": [],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450352017",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Middleware 2017 - Proceedings of the 2017 Middleware Posters and Demos 2017: Proceedings of the Posters and Demos Session of the 18th International Middleware Conference"
      },
      "publication_date": "2017-12-11",
      "selected": null,
      "title": "Middleware 2017 - Proceedings of the 2017 Middleware Posters and Demos 2017: Proceedings of the Posters and Demos Session of the 18th International Middleware Conference",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85046069894&origin=inward"
      ]
    },
    {
      "abstract": "The proceedings contain 20 papers. The topics discussed include: HyperDrive: exploring hyperparameters with pop scheduling; sieve: actionable insights from monitored metrics in distributed systems; Rafiki: a middleware for parameter tuning of NoSQL datastores for dynamic metagenomics workloads; Rivulet: a fault-tolerant platform for smart-home applications; binary compatible graphics support in Android for running iOS apps; Sense-Aid: a framework for enabling network as a service for participatory sensing; ORCA: an ORChestration automata for configuring VNFs; improving spark application throughput via memory aware task co-location: a mixture of experts approach; Swayam: distributed autoscaling to meet SLAs of machine learning inference services with resource efficiency; data-driven serverless functions for object storage; a programming model for application-defined multipath TCP scheduling; POLM2: automatic profiling for object lifetime-aware memory management for hotspot big data applications; SPECTRE: supporting consumption policies in window-based parallel complex event processing; efficient covering for top-k filtering in content-based publish/subscribe systems; StreamApprox: approximate computing for stream analytics; X-Search: revisiting private web search using Intel SGX; rectify: black-box intrusion recovery in PaaS Clouds; scheduler activations for interference-resilient SMP virtual machine scheduling; DoubleDecker: a cooperative disk caching framework for derivative clouds; and Ginja: one-dollar cloud-based disaster recovery for databases.",
      "authors": [],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450347204",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Middleware 2017 - Proceedings of the 2017 International Middleware Conference"
      },
      "publication_date": "2017-12-11",
      "selected": null,
      "title": "Middleware 2017 - Proceedings of the 2017 International Middleware Conference",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85041240118&origin=inward"
      ]
    },
    {
      "abstract": "The rural areas of most of the developing nations suffer from lack of proper schools, poor road infrastructure, scarcity of pharmacies and hospitals and reliable public transport service amongst many other things. These conditions have a major impact on the people residing in such areas in a negative way. The illiterate, visually impaired, handicapped and old aged people suffer the most because they do not have access to quality healthcare in such areas. The system presented in the paper utilizes the mobile internet, serverless technology and cloud computing to serve these people. The system acts as a picture centered real-time messaging system to enable the people to order medication online and get it delivered to their residences. \u00c2\u00a9 2017 IEEE.",
      "authors": [
        "Sandesh Chinchole",
        "Aditya Kulkarni",
        "Laksh Matai",
        "Chintan Kotadiya"
      ],
      "categories": null,
      "citations": 1,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/ISS1.2017.8389457",
      "keywords": [
        "Serverless Architecture",
        "Healthcare",
        "Real-Time System",
        "Cloud Computing"
      ],
      "number_of_pages": 5,
      "pages": "475-479",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-5386-1960-5",
        "issn": null,
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings of the International Conference on Intelligent Sustainable Systems, ICISS 2017"
      },
      "publication_date": "2017-12-07",
      "selected": null,
      "title": "A real-time cloud-based messaging system for delivering medication to the rural areas",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85050015205&origin=inward",
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=8389457"
      ]
    },
    {
      "abstract": "Cloud applications are increasingly built from a mixture of runtime technologies. Hosted functions and service-oriented web hooks are among the most recent ones which are natively supported by cloud platforms. They are collectively referred to as serverless computing by application engineers due to the transparent on-demand instance activation and microbilling without the need to provision infrastructure explicitly. This half-day tutorial explains the use cases for serverless computing and the drivers and existing software solutions behind the programming and deployment model also known as Function-as-a-Service in the overall cloud computing stack. Furthermore, it presents practical open source tools for deriving functions from legacy code and for the management and execution of functions in private and public clouds. \u00c2\u00a9 2017 Copyright held by the owner/author(s).",
      "authors": [
        "Spillner, J."
      ],
      "categories": null,
      "citations": 8,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1145/3147213.3149452",
      "keywords": [
        "Serverless",
        "Tutorial",
        "FaaS",
        "Microservices",
        "Hosted functions"
      ],
      "number_of_pages": 2,
      "pages": "185-186",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450351492",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "UCC 2017 - Proceedings of the10th International Conference on Utility and Cloud Computing"
      },
      "publication_date": "2017-12-05",
      "selected": null,
      "title": "Practical tooling for serverless computing",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85051691674&origin=inward"
      ]
    },
    {
      "abstract": "With the rapid development of economy, \"Parking difficult\" issue has currently become one of the many challenges facing of the countries. The arrival of the era of big data, make shared parking is not stuck in the conceptual stage, to be implemented. The paper presents a time-shared parking mechanism and elaborates it in detail from the aspect of ideas, forms, characteristics, demand forecasting model and implementing countermeasures etc. It develops Time shared parking management system based on BaaS cloud infrastructure in JAVA, which can fully dig the idle parking spaces and make it be shared. The system provides user the query, navigation and other functions and it has a practical application value. \u00c2\u00a9 2017 IEEE.",
      "authors": [
        "Ma, J.",
        "Zhang, L.",
        "Xu, Y."
      ],
      "categories": null,
      "citations": 1,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1109/CIAPP.2017.8167274",
      "keywords": [
        "Backend as a Service",
        "Big Data",
        "Cloud infrastructure",
        "Time shared parking management system",
        "Shared parking"
      ],
      "number_of_pages": 4,
      "pages": "533-536",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781538620304",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "2017 2nd IEEE International Conference on Computational Intelligence and Applications, ICCIA 2017"
      },
      "publication_date": "2017-12-04",
      "selected": null,
      "title": "Time-shared parking mechanism and application based on baas cloud infrastructure",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85043452673&origin=inward"
      ]
    },
    {
      "abstract": "Computing/infrastructure as a service continues to evolve with bare metal, virtual machines, containers and now serverless granular computing service offerings. Granular computing enables developers to decompose their applications into smaller logical units or functions, and run them on small, low cost and short lived computation containers without having to worry about setting up servers - hence the term serverless computing. While serverless environments can be used very cost effectively for large scale parallel processing data analytics applications, it is less clear if network intensive packet processing applications can also benefit from these new computing services as they do not share the same characteristics. This paper examines the architectural constraints as well as current serverless implementations to develop a position on this topic and influence the next generation of computing services. We support our position through measurement and experimentation on Amazon's AWS Lambda service with a few popular network functions. \u00c2\u00a9 2017 Copyright held by the owner/author(s).",
      "authors": [
        "Singhvi, A.",
        "Banerjee, S.",
        "Harchol, Y.",
        "Akella, A.",
        "Peek, M.",
        "Rydin, P."
      ],
      "categories": null,
      "citations": 10,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1145/3152434.3152450",
      "keywords": [],
      "number_of_pages": 7,
      "pages": "157-163",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450355698",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "HotNets 2017 - Proceedings of the 16th ACM Workshop on Hot Topics in Networks"
      },
      "publication_date": "2017-11-30",
      "selected": null,
      "title": "Granular computing and network intensive applications: Friends or foes?",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85041227831&origin=inward"
      ]
    },
    {
      "abstract": "Web users today rely on centralized services for applications such as email, file transfer and chat. Unfortunately, these services create a significant privacy risk: even with a benevolent provider, a single breach can put millions of users' data at risk. One alternativewould be for users to host their own servers, but this would be highly expensive for most applications: a single VMdeployed in a high-availability mode can cost many dollars per month. In this paper, we propose Deploy It Yourself (DIY), a new model for hosting applications based on serverless computing platforms such as Amazon Lambda. DIY allows users to run a highly available service with much stronger privacy guarantees than current centralized providers, and at a dramatically lower cost than traditional server hosting. DIY only relies on the security of container isolation and a key manager as opposed to the large codebase of a high-level application such as Gmail (and all the Google teams using Gmail data).With attestation technology such as SGX, DIY's execution could also be verified remotely.We show that a DIY email server that sends 500 messages/day costs $0.26/month, which is 50\u00c3\u0097 cheaper than a highly available EC2 server.We also implement a DIY chat service and show that it performs well. Finally, we argue that DIY applications are simple enough to operate that cloud providers could offer a simple \"app store\" for using them. \u00c2\u00a9 2017 Copyright held by the owner/author(s).",
      "authors": [
        "Palkar, S.",
        "Zaharia, M."
      ],
      "categories": null,
      "citations": 1,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1145/3152434.3152459",
      "keywords": [],
      "number_of_pages": 7,
      "pages": "1-7",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450355698",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "HotNets 2017 - Proceedings of the 16th ACM Workshop on Hot Topics in Networks"
      },
      "publication_date": "2017-11-30",
      "selected": null,
      "title": "DIY hosting for online privacy",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85041237405&origin=inward"
      ]
    },
    {
      "abstract": "Tomorrow's immersive applications will leverage Mixed Reality interfaces accessing a multitude of services from distributed clouds. They will face extreme latency constraints, massive datasets, spontaneous collaboration, and constant service churn. This paper outlines our experience evolving an application designed to support collaborative work in Urban Design (UD) practices. The application, UD Co-Spaces, recently weathered significant churn as a core service was discontinued and replaced by a service with a subtly different API. A \"dumb pipes\" approach, where services communicate through a simple message queue, facilitated this evolution with relatively little disruption to the rest of the system. We show how this strategy can be used to reintroduce new features to the system, and is sustainable as the system's interfaces evolve to use Virtual, Augmented and Mixed Reality environments. \u00c2\u00a9 2017 IEEE.",
      "authors": [
        "Wei, T.",
        "Coady, Y.",
        "MacDonald, J.",
        "Booth, K.",
        "Salter, J.",
        "Girling, C."
      ],
      "categories": null,
      "citations": 1,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1109/PACRIM.2017.8121899",
      "keywords": [
        "Computer supported collaborative work",
        "Serverless systems",
        "Virtual reality",
        "Software evolution"
      ],
      "number_of_pages": 5,
      "pages": "1-5",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781538607008",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "2017 IEEE Pacific Rim Conference on Communications, Computers and Signal Processing, PACRIM 2017 - Proceedings"
      },
      "publication_date": "2017-11-27",
      "selected": null,
      "title": "Dumb pipes for smart systems: How tomorrow's applications can salvage yesterday's plumbing",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85043452291&origin=inward"
      ]
    },
    {
      "abstract": " The Cloud computing paradigm has revolutionised the computer science horizon\nduring the past decade and has enabled the emergence of computing as the fifth\nutility. It has captured significant attention of academia, industries, and\ngovernment bodies. Now, it has emerged as the backbone of modern economy by\noffering subscription-based services anytime, anywhere following a\npay-as-you-go model. This has instigated (1) shorter establishment times for\nstart-ups, (2) creation of scalable global enterprise applications, (3) better\ncost-to-value associativity for scientific and high performance computing\napplications, and (4) different invocation/execution models for pervasive and\nubiquitous applications. The recent technological developments and paradigms\nsuch as serverless computing, software-defined networking, Internet of Things,\nand processing at network edge are creating new opportunities for Cloud\ncomputing. However, they are also posing several new challenges and creating\nthe need for new approaches and research strategies, as well as the\nre-evaluation of the models that were developed to address issues such as\nscalability, elasticity, reliability, security, sustainability, and application\nmodels. The proposed manifesto addresses them by identifying the major open\nchallenges in Cloud computing, emerging trends, and impact areas. It then\noffers research directions for the next decade, thus helping in the realisation\nof Future Generation Cloud Computing.\n",
      "authors": [
        "Buyya, Rajkumar",
        "Srirama, Satish Narayana",
        "Casale, Giuliano",
        "Calheiros, Rodrigo",
        "Simmhan, Yogesh",
        "Varghese, Blesson",
        "Gelenbe, Erol",
        "Javadi, Bahman",
        "Vaquero, Luis Miguel",
        "Netto, Marco A. S.",
        "Toosi, Adel Nadjaran",
        "Rodriguez, Maria Alejandra",
        "Llorente, Ignacio M.",
        "di Vimercati, Sabrina De Capitani",
        "Samarati, Pierangela",
        "Milojicic, Dejan",
        "Varela, Carlos",
        "Bahsoon, Rami",
        "de Assuncao, Marcos Dias",
        "Rana, Omer",
        "Zhou, Wanlei",
        "Jin, Hai",
        "Gentzsch, Wolfgang",
        "Zomaya, Albert Y.",
        "Shen, Haiying"
      ],
      "categories": null,
      "citations": null,
      "comments": "51 pages, 3 figures",
      "databases": [
        "arXiv"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": null,
      "publication_date": "2017-11-24",
      "selected": null,
      "title": "A Manifesto for Future Generation Cloud Computing: Research Directions for the Next Decade",
      "urls": [
        "http://arxiv.org/abs/1711.09123v2",
        "http://arxiv.org/pdf/1711.09123v2",
        "https://arxiv.org/pdf/1711.09123"
      ]
    },
    {
      "abstract": "It is widely acknowledged that the proliferation of Unmanned Aerial Vehicles (UAVs) may lead to serious concerns regarding avionics safety, particularly when end-users are not adhering to air safety regulations. There are, however, domains in which UAVs may help to increase the safety of airplanes and the management of flights and airport resources that often require substantial human resources. For instance, Paris Charles de Gaulle airport (CDG) has more than 7,000 staff and supports 30,000 direct jobs for more than 60 million passengers per year (as of 2016). Indeed, these new systems can be used beneficially for several purposes, even in sensitive areas like airports. Among the considered applications are those that suggest using UAVs to enhance safety of on-ground airplanes; for instance, by collecting (once the aircraft has landed) data recorded by different systems during the flight (like the sensors of the Aircraft Data Networks - ADN) or by examining the state of airplane structure. In this paper, our proposal is to use UAVs, under the control of the airport authorities, to inventory and track various tagged assets, such as luggage, supplies required for the flights, and maintenance tools. The aim of our proposal is to make airport management systems more efficient for operations requiring inventory and tracking, along with increasing safety (sensitive assets such as refueling tanks, or sensitive pieces of luggage can be tracked), thus raising financial profit. \u00c2\u00a9 2017 IEEE.",
      "authors": [
        "Mtita, C.",
        "Laurent, M.",
        "Sauveron, D.",
        "Akram, R.N.",
        "Markantonakis, K.",
        "Chaumette, S."
      ],
      "categories": null,
      "citations": 1,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1109/DASC.2017.8102113",
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781538603659",
        "issn": "21557195",
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "AIAA/IEEE Digital Avionics Systems Conference - Proceedings"
      },
      "publication_date": "2017-11-08",
      "selected": null,
      "title": "Serverless protocols for inventory and tracking with a UAV",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85041015105&origin=inward"
      ]
    },
    {
      "abstract": "The proceedings contain 18 papers. The topics discussed include: can we crowdsource language design?; assessing user preferences in programming language design; replacing phrase structure grammar with dependency grammar in the design and implementation of programming languages; generating chat bots from web API specifications; ChimpCheck: property-based randomized test generation for interactive apps; unbounded superoptimization; the serverless trilemma: function composition for serverless computing; encoding the building blocks of communication; iota: a calculus for internet of things automation; error messages are classifiers: a process to design and evaluate error messages; you can have it all: abstraction and good cache performance; you can have it all: abstraction and good cache performance; infra: structure all the way down: structured data as a visual programming language; selfie and the basics; systems level liveness with extempore; some were meant for C: the endurance of an unmanageable language; concept analysis in programming language research: done well it is all right; and how can our publication models best serve our research?.",
      "authors": [],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450355308",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Onward! 2017 - Proceedings of the 2017 ACM SIGPLAN International Symposium on New Ideas, New Paradigms, and Reflections on Programming and Software, co-located with SPLASH 2017"
      },
      "publication_date": "2017-10-25",
      "selected": null,
      "title": "Onward! 2017 - Proceedings of the 2017 ACM SIGPLAN International Symposium on New Ideas, New Paradigms, and Reflections on Programming and Software, co-located with SPLASH 2017",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85037071039&origin=inward"
      ]
    },
    {
      "abstract": "The field of serverless computing has recently emerged in support of highly scalable, event-driven applications.Aserverless application is a set of stateless functions, along with the events that should trigger their activation. A serverless runtime allocates resources as events arrive, avoiding the need for costly pre-allocated or dedicated hardware. While an attractive economic proposition, serverless computing currently lags behind the state of the art when it comes to function composition. This paper addresses the challenge of programming a composition of functions, where the composition is itself a serverless function. We demonstrate that engineering function composition into a serverless application is possible, but requires a careful evaluation of trade-offs. To help in evaluating these tradeoffs, we identify three competing constraints: functions should be considered as black boxes; function composition should obey a substitution principle with respect to synchronous invocation; and invocations should not be double-billed. Furthermore, we argue that, if the serverless runtime is limited to a reactive core, i.e. one that deals only with dispatching functions in response to events, then these constraints Permission to make digital or hard copies of all or part of this work for personal or classroom use is granted without fee provided that copies are not made or distributed for profit or commercial advantage and that copies bear this notice and the full citation on the first page. Copyrights for components of this work owned by others than ACM must be honored. Abstracting with credit is permitted. To copy otherwise, or republish, to post on servers or to redistribute to lists, requires prior specific permission and/or a fee. Request permissions from [email protected] Onward!'17, October 25-27, 2017, Vancouver, Canada. \u00c2\u00a9 2017 Association for Computing Machinery.",
      "authors": [
        "Baldini, I.",
        "Cheng, P.",
        "Fink, S.J.",
        "Mitchell, N.",
        "Muthusamy, V.",
        "Rabbah, R.",
        "Suter, P.",
        "Tardieu, O."
      ],
      "categories": null,
      "citations": 41,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1145/3133850.3133855",
      "keywords": [
        "Functional",
        "Cloud",
        "Serverless",
        "Composition"
      ],
      "number_of_pages": 15,
      "pages": "89-103",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450355308",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Onward! 2017 - Proceedings of the 2017 ACM SIGPLAN International Symposium on New Ideas, New Paradigms, and Reflections on Programming and Software, co-located with SPLASH 2017"
      },
      "publication_date": "2017-10-25",
      "selected": null,
      "title": "The serverless trilemma: Function composition for serverless computing",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85037140321&origin=inward"
      ]
    },
    {
      "abstract": " Serverless computing has emerged as a compelling paradigm for the development\nand deployment of a wide range of event based cloud applications. At the same\ntime, cloud providers and enterprise companies are heavily adopting machine\nlearning and Artificial Intelligence to either differentiate themselves, or\nprovide their customers with value added services. In this work we evaluate the\nsuitability of a serverless computing environment for the inferencing of large\nneural network models. Our experimental evaluations are executed on the AWS\nLambda environment using the MxNet deep learning framework. Our experimental\nresults show that while the inferencing latency can be within an acceptable\nrange, longer delays due to cold starts can skew the latency distribution and\nhence risk violating more stringent SLAs.\n",
      "authors": [
        "Ishakian, Vatche",
        "Muthusamy, Vinod",
        "Slominski, Aleksander"
      ],
      "categories": null,
      "citations": null,
      "comments": null,
      "databases": [
        "arXiv"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": null,
      "publication_date": "2017-10-23",
      "selected": null,
      "title": "Serving deep learning models in a serverless platform",
      "urls": [
        "http://arxiv.org/abs/1710.08460v2",
        "https://arxiv.org/pdf/1710.08460",
        "http://arxiv.org/pdf/1710.08460v2"
      ]
    },
    {
      "abstract": "A cloud platform records a wealth of information regarding program execution. Most cloud service providers offer dashboard monitoring tools that visualize resource usage and billing information, and support debugging. In this paper, we present a tool that visualizes cloud execution logs for a different goal-To facilitate program understanding and generate documentations for an application using runtime data. Our tool introduces a new timeline visualization, a new method and user interface to summarize multiple JSON objects and present the result, and interaction techniques that facilitate navigating among functions. Together, these features explain a serverless cloud application's composition, performance, dataflow and data schema. We report some initial user feedback from several expert developers that were involved in the tool's design and development process. \u00c2\u00a9 2017 IEEE.",
      "authors": [
        "Kerry Shih-Ping Chang",
        "Stephen J. Fink"
      ],
      "categories": null,
      "citations": 2,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/VLHCC.2017.8103476",
      "keywords": [
        "log visualization",
        "cloud computing",
        "function as a service",
        "serverless computing",
        "program understanding"
      ],
      "number_of_pages": 5,
      "pages": "261-265",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-5386-0444-1",
        "issn": "1943-6106",
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings of IEEE Symposium on Visual Languages and Human-Centric Computing, VL/HCC"
      },
      "publication_date": "2017-10-11",
      "selected": null,
      "title": "Visualizing serverless cloud application logs for program understanding",
      "urls": [
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=8103476",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85040987025&origin=inward"
      ]
    },
    {
      "abstract": "It's being very important to listen to social media streams whether it's Twitter, Facebook, Messenger, LinkedIn, email or even company own application. As many customers may be using this streams to reach out to company because they need help. The company have setup social marketing team to monitor this stream. But due to huge volumes of users it's very difficult to analyses each and every social message and take a relevant action to solve users grievances, which lead to many unsatisfied customers or may even lose a customer. This papers proposes a system architecture which will try to overcome the above shortcoming by analyzing messages of each ejabberd users to check whether it's actionable or not. If it's actionable then an automated Chatbot will initiates conversation with that user and help the user to resolve the issue by providing a human way interactions using LUIS and cognitive services. To provide a highly robust, scalable and extensible architecture, this system is implemented on AWS public cloud. \u00c2\u00a9 2017 IEEE.",
      "authors": [
        "D'Silva, G.M.",
        "Thakare, S.",
        "More, S.",
        "Kuriakose, J."
      ],
      "categories": null,
      "citations": 18,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1109/I-SMAC.2017.8058261",
      "keywords": [
        "API Gateway",
        "Machine Learning",
        "LUIS",
        "Chatbot",
        "Cognitive Services",
        "Ejabberd",
        "AWS Lambda"
      ],
      "number_of_pages": 7,
      "pages": "658-664",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781509032433",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings of the International Conference on IoT in Social, Mobile, Analytics and Cloud, I-SMAC 2017"
      },
      "publication_date": "2017-10-04",
      "selected": null,
      "title": "Real world smart chatbot for customer care using a software as a service (SaaS) architecture",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85034580276&origin=inward"
      ]
    },
    {
      "abstract": "[No abstract available]",
      "authors": [
        "Wong, W."
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": 5,
      "pages": "33-37",
      "publication": {
        "category": "Journal",
        "cite_score": 0.0,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "00134872",
        "publisher": "Penton Publishing Co.",
        "sjr": 0.1,
        "snip": 0.0,
        "subject_areas": [
          "Electrical and Electronic Engineering",
          "Strategy and Management"
        ],
        "title": "Electronic Design"
      },
      "publication_date": "2017-10-01",
      "selected": null,
      "title": "VM, containers, and serverless programming for embedded developers",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85044576437&origin=inward"
      ]
    },
    {
      "abstract": "Serverless architectures represent a new approach to designing applications in the cloud without having to explicitly provision or manage servers. The developer specifies functions with welldefined entry and exit points, and the cloud provider handles all other aspects of execution. In this paper, we explore a novel application of serverless architectures to information retrieval and describe a search engine built in this manner with Amazon Web Services: postings lists are stored in the DynamoDB NoSQL store and the postings traversal algorithm for query evaluation is implemented in the Lambda service. The result is a search engine that scales elastically with a pay-per-request model, in contrast to a server-based model that requires paying for running instances even if there are no requests. We empirically assess the performance and economics of our serverless architecture. While our implementation is currently too slow for interactive searching, analysis shows that the pay-per-request model is economically compelling, and future infrastructure improvements will increase the attractiveness of serverless designs over time. \u00c2\u00a9 2017 Copyright held by the owner/author(s).",
      "authors": [
        "Crane, M.",
        "Lin, J."
      ],
      "categories": null,
      "citations": 9,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1145/3121050.3121086",
      "keywords": [],
      "number_of_pages": 4,
      "pages": "241-244",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450344906",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "ICTIR 2017 - Proceedings of the 2017 ACM SIGIR International Conference on the Theory of Information Retrieval"
      },
      "publication_date": "2017-10-01",
      "selected": null,
      "title": "An exploration of serverless architectures for information retrieval",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85033220490&origin=inward"
      ]
    },
    {
      "abstract": "In the past, the Information-centric networking (ICN) community has focused on issues mainly pertaining to traditional content delivery (e.g., routing and forwarding scalability, congestion control and in-network caching). However, to keep up with future Internet architectural trends the wider area of future Internet paradigms, there is a pressing need to support edge/fog computing environments, where cloud functionality is available more proximate to where the data is generated and needs processing. With this goal in mind, we propose Named Function as a Service (NFaaS), a framework that extends the Named Data Networking architecture to support in-network function execution. In contrast to existing works, NFaaSbuilds on very lightweight VMs and allows for dynamic execution of custom code. Functions can be downloaded and run by any node in the network. Functions can move between nodes according to user demand, making resolution of moving functions a first-class challenge. NFaaSincludes a Kernel Store component, which is responsible not only for storing functions, but also for making decisions on which functions to run locally. NFaaSincludes a routing protocol and a number of forwarding strategies to deploy and dynamically migrate functions within the network.We validate our design through extensive simulations, which show that delay-sensitive functions are deployed closer to the edge, while less delay-sensitive ones closer to the core. \u00c2\u00a9 2017 Association for Computing Machinery.",
      "authors": [
        "Kr\u00c3\u00b3l, M.",
        "Psaras, I."
      ],
      "categories": null,
      "citations": 52,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1145/3125719.3125727",
      "keywords": [
        "Information Centric Networking",
        "Mobile Edge Computing",
        "Networks",
        "Network architectures",
        "Function Migration"
      ],
      "number_of_pages": 11,
      "pages": "134-144",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450351225",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "ICN 2017 - Proceedings of the 4th ACM Conference on Information Centric Networking"
      },
      "publication_date": "2017-09-26",
      "selected": null,
      "title": "NFaaS: Named function as a service",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85032464637&origin=inward"
      ]
    },
    {
      "abstract": "Distributed computing remains inaccessible to a large number of users, in spite of many open source platforms and extensive commercial offerings. While distributed computation frameworks have moved beyond a simple map-reduce model, many users are still left to struggle with complex cluster management and configuration tools, even for running simple embarrassingly parallel jobs. We argue that stateless functions represent a viable platform for these users, eliminating cluster management overhead, fulfilling the promise of elasticity. Furthermore, using our prototype implementation, Py-Wren, we show that this model is general enough to implement a number of distributed computing models, such as BSP, efficiently. Extrapolating from recent trends in network bandwidth and the advent of disaggregated storage, we suggest that stateless functions are a natural fit for data processing in future computing environments. \u00c2\u00a9 2017 Association for Computing Machinery.",
      "authors": [
        "Jonas, E.",
        "Pu, Q.",
        "Venkataraman, S.",
        "Stoica, I.",
        "Recht, B."
      ],
      "categories": null,
      "citations": 137,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1145/3127479.3128601",
      "keywords": [
        "PyWren",
        "AWS lambda",
        "Serverless",
        "Distributed computing"
      ],
      "number_of_pages": 7,
      "pages": "445-451",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450350280",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "SoCC 2017 - Proceedings of the 2017 Symposium on Cloud Computing"
      },
      "publication_date": "2017-09-24",
      "selected": null,
      "title": "Occupy the cloud: Distributed computing for the 99%",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85032457554&origin=inward"
      ]
    },
    {
      "abstract": "As compute evolves from bare metal to virtualized environments to containers towards serverless, the efficiency gains have enabled a wide variety of use cases. Organizations have used containers to run long running services, batch processing at scale, control planes, Internet of Things, and Artificial Intelligence workloads. Further, methodologies for software as a service, such as twelve-factor app, emphasize a clean contract with the underlying operating system and maximum portability between execution environments.1 In this paper, we address a set of capabilities required of a container orchestration platform to embody the design principles as illustrated by twelve factor app design. This paper also provides a non-exhaustive and prescriptive guide to identifying and implementing key mechanisms required in a container orchestration platform. We will cover capabilities such as cluster state management and scheduling, high availability and fault tolerance, security, networking, service discovery, continuous deployment, monitoring, and governance. \u00c2\u00a9 2017 IEEE.",
      "authors": [
        "Khan, A."
      ],
      "categories": null,
      "citations": 19,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1109/MCC.2017.4250933",
      "keywords": [
        "cyclomatic complexity",
        "code review",
        "monitoring",
        "Docker",
        "cluster management",
        "scheduling",
        "high availability",
        "container security",
        "container orchestration",
        "continuous delivery and deployment",
        "tracing",
        "microservices",
        "dynamic port mapping",
        "application load balancing",
        "twelve-factor",
        "service discovery",
        "containers",
        "fault tolerant"
      ],
      "number_of_pages": 7,
      "pages": "42-48",
      "publication": {
        "category": "Journal",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "IEEE Cloud Computing"
      },
      "publication_date": "2017-09-01",
      "selected": null,
      "title": "Key Characteristics of a Container Orchestration Platform to Enable a Modern Application",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85038634613&origin=inward"
      ]
    },
    {
      "abstract": "The term 'cloud-native' refers to a set of technologies and design patterns that have become the standard for building large-scale cloud applications. In this editorial we describe basic properties of successful cloud applications including dynamic scalability, extreme fault tolerance, seamless upgradeability and maintenance and security. To make it possible to build applications that meet these requirements we describe the microservice architecture and serverless computing foundation that are central to cloud-native design. \u00c2\u00a9 2017 IEEE.",
      "authors": [
        "Gannon, D.",
        "Barga, R.",
        "Sundaresan, N."
      ],
      "categories": null,
      "citations": 23,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1109/MCC.2017.4250939",
      "keywords": [
        "cloud computing",
        "distributed computing",
        "microservices",
        "cloud-native",
        "serverless"
      ],
      "number_of_pages": 6,
      "pages": "16-21",
      "publication": {
        "category": "Journal",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "IEEE Cloud Computing"
      },
      "publication_date": "2017-09-01",
      "selected": null,
      "title": "Cloud-Native Applications",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85038610210&origin=inward"
      ]
    },
    {
      "abstract": "Node.js executes server-side JavaScript-based code. By design Node.js and JavaScript support global variables, monkeypatching, and shared cache of loaded modules. This paper discusses four attacks that exploit these weaknesses, which are: leakage of global variables, manipulation of global variables, manipulation of local variables, and manipulation of the dependency tree. In addition, it describes the static code analysis that we implemented for T.J. Watson Libraries for Analysis (WALA) to detect the identified attacks and the evaluation of the analysis. The analysis is integrated into OpenWhisk, an open source serverless cloud platform. \u00c2\u00a9 2017 Association for Computing Machinery.",
      "authors": [
        "Pfretzschner, B.",
        "Othmane, L.B."
      ],
      "categories": null,
      "citations": 1,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1145/3098954.3120928",
      "keywords": [
        "Dependency-based attack",
        "Software security",
        "Cloud computing",
        "Node.js"
      ],
      "number_of_pages": null,
      "pages": null,
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450352574",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "ACM International Conference Proceeding Series"
      },
      "publication_date": "2017-08-29",
      "selected": null,
      "title": "Identification of dependency-based attacks on node.js",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85030311301&origin=inward"
      ]
    },
    {
      "abstract": "This whitepaper summarizes issues raised during the First International\nWorkshop on Serverless Computing (WoSC) 2017 held June 5th 2017 and especially\nin the panel and associated discussion that concluded the workshop. We also\ninclude comments from the keynote and submitted papers. A glossary at the end\n(section 8) defines many technical terms used in this report.",
      "authors": [
        "Geoffrey C. Fox",
        "Vatche Ishakian",
        "Vinod Muthusamy",
        "Aleksander Slominski"
      ],
      "categories": null,
      "citations": null,
      "comments": "Technical Report",
      "databases": [
        "arXiv"
      ],
      "doi": "10.13140/RG.2.2.15007.87206",
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": null,
      "publication_date": "2017-08-27",
      "selected": null,
      "title": "Status of Serverless Computing and Function-as-a-Service(FaaS) in Industry and Research",
      "urls": [
        "http://arxiv.org/pdf/1708.08028v1",
        "http://arxiv.org/abs/1708.08028v1",
        "http://dx.doi.org/10.13140/RG.2.2.15007.87206"
      ]
    },
    {
      "abstract": "The existing RFID authentication protocols were short of scalability. Taking advantage of combined public key(CPK), a CPK-ECC based authentication protocol was proposed considering the design demand of authentication protocols for large-scale RFID system. The protocol implements mutual and serverless authentication by adoption of the elliptic curve encryption scheme and the improved digital signature algorithm. Based on the security analysis, the protocol can resist the existing security and privacy attacks effectively. Compared with other ECC-based protocols, the serverless protocol has better scalability and performance, suitable for large-scale RFID systems. \u00c2\u00a9 2017, Editorial Board of Journal on Communications. All right reserved.",
      "authors": [
        "Pan, Y.-M.",
        "Shan, Z.",
        "Dai, Q.",
        "Yue, F."
      ],
      "categories": null,
      "citations": 1,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.11959/j.issn.1000-436x.2017174",
      "keywords": [
        "",
        "\u00e8\u00ae\u00a4\u00e8\u00af\u0081\u00e5\u008d\u008f\u00e8\u00ae\u00ae",
        "\u00e5\u00b0\u0084\u00e9\u00a2\u0091\u00e8\u00af\u0086\u00e5\u0088\u00ab",
        "\u00e6\u0089\u00a9\u00e5\u00b1\u0095\u00e6\u0080\u00a7",
        "\u00e6\u0097\u00a0\u00e5\u0090\u008e\u00e7\u00ab\u00af\u00e6\u009c\u008d\u00e5\u008a\u00a1\u00e5\u0099\u00a8",
        "\u00e7\u00bb\u0084\u00e5\u0090\u0088\u00e5\u0085\u00ac\u00e9\u0092\u00a5"
      ],
      "number_of_pages": 7,
      "pages": "165-171",
      "publication": {
        "category": "Journal",
        "cite_score": 1.2,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "1000436X",
        "publisher": "Posts &Telecom Press",
        "sjr": 0.182,
        "snip": 0.441,
        "subject_areas": [
          "Information Systems",
          "Computer Networks and Communications",
          "Signal Processing"
        ],
        "title": "Tongxin Xuebao/Journal on Communications"
      },
      "publication_date": "2017-08-25",
      "selected": null,
      "title": "\u00e5\u00a4\u00a7\u00e8\u00a7\u0084\u00e6\u00a8\u00a1RFID\u00e7\u00b3\u00bb\u00e7\u00bb\u009f\u00e4\u00b8\u00ad\u00e5\u009f\u00ba\u00e4\u00ba\u008eCPK-ECC\u00e7\u009a\u0084\u00e5\u008f\u008c\u00e5\u0090\u0091\u00e8\u00ae\u00a4\u00e8\u00af\u0081\u00e5\u008d\u008f\u00e8\u00ae\u00ae",
      "urls": [
        "http://www.infocomm-journal.com/txxb/CN/article/downloadArticleFile.do?attachType=PDF&id=166331",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85028865934&origin=inward"
      ]
    },
    {
      "abstract": " It is widely acknowledged that the proliferation of Unmanned Aerial Vehicles\n(UAVs) may lead to serious concerns regarding avionics safety, particularly\nwhen end-users are not adhering to air safety regulations. There are, however,\ndomains in which UAVs may help to increase the safety of airplanes and the\nmanagement of flights and airport resources that often require substantial\nhuman resources. For instance, Paris Charles de Gaulle airport (CDG) has more\nthan 7,000 staff and supports 30,000 direct jobs for more than 60 million\npassengers per year (as of 2016). Indeed, these new systems can be used\nbeneficially for several purposes, even in sensitive areas like airports. Among\nthe considered applications are those that suggest using UAVs to enhance safety\nof on-ground airplanes; for instance, by collecting (once the aircraft has\nlanded) data recorded by different systems during the flight (like the sensors\nof the Aircraft Data Networks - ADN) or by examining the state of airplane\nstructure. In this paper, our proposal is to use UAVs, under the control of the\nairport authorities, to inventory and track various tagged assets, such as\nluggage, supplies required for the flights, and maintenance tools. The aim of\nour proposal is to make airport management systems more efficient for\noperations requiring inventory and tracking, along with increasing safety\n(sensitive assets such as refueling tanks, or sensitive pieces of luggage can\nbe tracked), thus raising financial profit.\n",
      "authors": [
        "Mtita, Collins",
        "Laurent, Maryline",
        "Sauveron, Damien",
        "Akram, Raja Naeem",
        "Markantonakis, Konstantinos",
        "Chaumette, Serge"
      ],
      "categories": null,
      "citations": null,
      "comments": "11 pages, Conference, The 36th IEEE/AIAA Digital Avionics Systems\n  Conference (DASC'17)",
      "databases": [
        "arXiv"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": null,
      "publication_date": "2017-08-17",
      "selected": null,
      "title": "Serverless Protocols for Inventory and Tracking with a UAV",
      "urls": [
        "http://arxiv.org/abs/1708.05417v1",
        "http://arxiv.org/pdf/1708.05417v1",
        "https://arxiv.org/pdf/1708.05417"
      ]
    },
    {
      "abstract": "Lambda architecture is a novel event-driven serverless paradigm that allows companies to build scalable and reliable enterprise applications. As an attractive alternative to traditional service oriented architecture (SOA), Lambda architecture can be used in many use cases including BI tools, in-memory graph databases, OLAP, and streaming data processing. In practice, an important aim of Lambda's service providers is devising an efficient way to co-locate multiple Lambda functions with different attributes into a set of available computing resources. However, previous studies showed that consolidated workloads can compete fiercely for shared resources, resulting in severe performance variability/degradation. This paper proposes a resource allocation mechanism for a Lambda platform based on the model predictive control framework. Performance evaluation is carried out by comparing the proposed solution with multiple resource allocation heuristics, namely enhanced versions of spread and binpack, and best-effort approaches. Results confirm that the proposed controller increases the overall resource utilization by 37% on average and achieves a significant improvement in preventing QoS violation incidents compared to others. \u00c2\u00a9 2017 IEEE.",
      "authors": [
        "MohammadReza HoseinyFarahabady",
        "Javid Taheri",
        "Zahir Tari",
        "Albert Y. Zomaya"
      ],
      "categories": null,
      "citations": 7,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/ICPP.2017.42",
      "keywords": [
        "Dynamic Resource Allocation",
        "Performance degradation",
        "Lambda Platform Processing",
        "Shared Resource Interference"
      ],
      "number_of_pages": 10,
      "pages": "332-341",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-5386-1043-5",
        "issn": "2332-5690",
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings of the International Conference on Parallel Processing"
      },
      "publication_date": "2017-08-14",
      "selected": null,
      "title": "A Dynamic Resource Controller for a Lambda Architecture",
      "urls": [
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=8025307",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85030622746&origin=inward"
      ]
    },
    {
      "abstract": "Today, web performance is primarily governed by round-trip latencies between end devices and cloud services. To improve performance, services need to minimize the delay of accessing data. In this paper, we propose a novel approach to low latency that relies on existing content delivery and web caching infrastructure. The main idea is to enable application-independent caching of query results and records with tunable consistency guarantees, in particular bounded staleness. QUAESTOR (Query Store) employs two key concepts to incorporate both expiration-based and invalidationbased web caches: (1) an Expiring Bloom Filter data structure to indicate potentially stale data, and (2) statistically derived cache expiration times to maximize cache hit rates. Through a distributed query invalidation pipeline, changes to cached query results are detected in real-time. The proposed caching algorithms offer a new means for data-centric cloud services to trade latency against staleness bounds, e.g. in a database-as-a-service. QUAESTOR is the core technology of the backend-as-a-service platform Baqend, a cloud service for low-latency websites. We provide empirical evidence for QUAESTOR's scalability and performance through both simulation and experiments. The results indicate that for read-heavy workloads, up to tenfold speed-ups can be achieved through QUAESTOR's caching. \u00c2\u00a9 2017 VLDB.",
      "authors": [
        "Gessert, F.",
        "Schaarschmidt, M.",
        "Wingerath, W.",
        "Witt, E.",
        "Yoneki, E.",
        "Ritter, N."
      ],
      "categories": null,
      "citations": 7,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.14778/3137765.3137773",
      "keywords": [],
      "number_of_pages": 12,
      "pages": "1670-1681",
      "publication": {
        "category": "Journal",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [
          "Distributed, Parallel, and Cluster Computing"
        ],
        "title": "Proceedings of the VLDB Endowment"
      },
      "publication_date": "2017-08-01",
      "selected": null,
      "title": "Quaestor: Query web caching for database-as-a-service providers",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85036617437&origin=inward"
      ]
    },
    {
      "abstract": "With the increased use of Internet, governments and large companies store and share massive amounts of personal data in such a way that leaves no space for transparency. When a user needs to achieve...",
      "authors": [
        "Sinic\u0103 Alboaie",
        "Doina Cosovan"
      ],
      "categories": null,
      "citations": 10,
      "comments": "DAIS 2017",
      "databases": [
        "arXiv",
        "Scopus"
      ],
      "doi": "10.1007/978-3-319-59665-5_6",
      "keywords": [
        "Data self-sovereignty",
        "Distributed storage",
        "Privacy enhancing technique",
        "Privacy",
        "Privacy by design",
        "Executable choreography",
        "Private data",
        "Privacy by default"
      ],
      "number_of_pages": 16,
      "pages": "83-98",
      "publication": {
        "category": "Book",
        "cite_score": 1.8,
        "is_potentially_predatory": false,
        "isbn": "9783030715922",
        "issn": "03029743",
        "publisher": "Springer Verlag",
        "sjr": 0.249,
        "snip": 0.628,
        "subject_areas": [
          "Databases",
          "Cryptography and Security",
          "Distributed, Parallel, and Cluster Computing",
          "Theoretical Computer Science",
          "Computer Science (all)"
        ],
        "title": "IFIP International Conference on Distributed Applications and\n  Interoperable Systems, DAIS 2017: Distributed Applications and Interoperable\n  Systems pp 83-98"
      },
      "publication_date": "2017-06-26",
      "selected": null,
      "title": "Private Data System Enabling Self-Sovereign Storage Managed by Executable Choreographies",
      "urls": [
        "https://link.springer.com/content/pdf/10.1007%2F978-3-319-59665-5_6.pdf",
        "http://arxiv.org/pdf/1708.09332v1",
        "http://arxiv.org/abs/1708.09332v1",
        "http://dx.doi.org/10.1007/978-3-319-59665-5_6",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85020509539&origin=inward"
      ]
    },
    {
      "abstract": " Serverless computing has emerged as a new compelling paradigm for the\ndeployment of applications and services. It represents an evolution of cloud\nprogramming models, abstractions, and platforms, and is a testament to the\nmaturity and wide adoption of cloud technologies. In this chapter, we survey\nexisting serverless platforms from industry, academia, and open source\nprojects, identify key characteristics and use cases, and describe technical\nchallenges and open problems.\n",
      "authors": [
        "Baldini, Ioana",
        "Castro, Paul",
        "Chang, Kerry",
        "Cheng, Perry",
        "Fink, Stephen",
        "Ishakian, Vatche",
        "Mitchell, Nick",
        "Muthusamy, Vinod",
        "Rabbah, Rodric",
        "Slominski, Aleksander",
        "Suter, Philippe"
      ],
      "categories": null,
      "citations": null,
      "comments": null,
      "databases": [
        "arXiv"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": null,
      "publication_date": "2017-06-10",
      "selected": null,
      "title": "Serverless Computing: Current Trends and Open Problems",
      "urls": [
        "http://arxiv.org/abs/1706.03178v1",
        "https://arxiv.org/pdf/1706.03178",
        "http://arxiv.org/pdf/1706.03178v1"
      ]
    },
    {
      "abstract": "We present the design of a novel performance-oriented serverless computing platform implemented in. NET, deployed in Microsoft Azure, and utilizing Windows containers as function execution environments. Implementation challenges such as function scaling and container discovery, lifecycle, and reuse are discussed in detail. We propose metrics to evaluate the execution performance of serverless platforms and conduct tests on our prototype as well as AWS Lambda, Azure Functions, Google Cloud Functions, and IBM's deployment of Apache OpenWhisk. Our measurements show the prototype achieving greater throughput than other platforms at most concurrency levels, and we examine the scaling and instance expiration trends in the implementations. Additionally, we discuss the gaps and limitations in our current design, propose possible solutions, and highlight future research. \u00c2\u00a9 2017 IEEE.",
      "authors": [
        "Garrett McGrath",
        "Paul R. Brenner"
      ],
      "categories": null,
      "citations": 106,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/ICDCSW.2017.36",
      "keywords": [
        "IBM OpenWhisk",
        "Google Cloud Functions",
        "Azure Functions",
        "serverless computing",
        "FaaS",
        "Apache OpenWhisk",
        "serverless performance",
        "Function-as-a-Service",
        "AWS Lambda"
      ],
      "number_of_pages": 6,
      "pages": "405-410",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-5386-3293-2",
        "issn": "2332-5666",
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings - IEEE 37th International Conference on Distributed Computing Systems Workshops, ICDCSW 2017"
      },
      "publication_date": "2017-06-05",
      "selected": null,
      "title": "Serverless Computing: Design, Implementation, and Performance",
      "urls": [
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=7979855",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85027531918&origin=inward"
      ]
    },
    {
      "abstract": "The following topics are dealt with: distributed systems; cyberphysical systems; mobile computing and online social networking; Internet of Things; Big Data; data privacy; data security; joint cloud computing; process-oriented systems; event-based systems; data-driven systems; big graph processing; and serverless computing.",
      "authors": [],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "IEEE"
      ],
      "doi": "10.1109/ICDCSW.2017.8",
      "keywords": [],
      "number_of_pages": null,
      "pages": "v-x",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-5386-3293-2",
        "issn": "2332-5666",
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings - IEEE 37th International Conference on Distributed Computing Systems Workshops, ICDCSW 2017"
      },
      "publication_date": "2017-06-05",
      "selected": null,
      "title": "Table of contents",
      "urls": [
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=7979758"
      ]
    },
    {
      "abstract": "Microservices are usually fast to deploy because each microservice is small, and thus each can be installed and started quickly. Unfortunately, lean microservices that depend on large libraries will start slowly and harm elasticity. In this paper, we explore the challenges of lean microservices that rely on large libraries in the context of Python packages and the OpenLambda serverless computing platform. We analyze the package types and compressibility of libraries distributed via the Python Package Index and propose PipBench, a new tool for evaluating package support. We also propose Pipsqueak, a package-aware compute platform based on OpenLambda. \u00c2\u00a9 2017 IEEE.",
      "authors": [
        "Edward Oakes",
        "Leon Yang",
        "Kevin Houck",
        "Tyler Harter",
        "Andrea C. Arpaci-Dusseau",
        "Remzi H. Arpaci-Dusseau"
      ],
      "categories": null,
      "citations": 18,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/ICDCSW.2017.32",
      "keywords": [
        "cloud computing",
        "python",
        "software repository",
        "distributed computing",
        "distributed cache",
        "serverless computing",
        "distributed systems"
      ],
      "number_of_pages": 6,
      "pages": "395-400",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-5386-3293-2",
        "issn": "2332-5666",
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings - IEEE 37th International Conference on Distributed Computing Systems Workshops, ICDCSW 2017"
      },
      "publication_date": "2017-06-05",
      "selected": null,
      "title": "Pipsqueak: Lean Lambdas with Large Libraries",
      "urls": [
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=7979853",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85027530583&origin=inward"
      ]
    },
    {
      "abstract": "Exploding data volumes and acquisition rates, plus ever more complex research processes, place significant strain on research data management processes. It is increasingly common for data to flow through pipelines comprised of dozens of different management, organization, and analysis steps distributed across multiple institutions and storage systems. To alleviate the resulting complexity, we propose a home automation approach to managing data throughout its lifecycle, in which users specify via high-level rules the actions that should be performed on data at different times and locations. To this end, we have developed Ripple, a responsive storage architecture that allows users to express data management tasks via a rules notation. Ripple monitors storage systems for events, evaluates rules, and uses serverless computing techniques to execute actions in response to these events. We evaluate our solution by applying Ripple to the data lifecycles of two real-world projects, in astronomy and light source science, and show that it can automate many mundane and cumbersome data management processes. \u00c2\u00a9 2017 IEEE.",
      "authors": [
        "Ryan Chard",
        "Kyle Chard",
        "Jason Alt",
        "Dilworth Y. Parkinson",
        "Steve Tuecke",
        "Ian Foster"
      ],
      "categories": null,
      "citations": 22,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/ICDCSW.2017.30",
      "keywords": [
        "Software defined cyberinfrastructure",
        "Serverless",
        "Responsive storage"
      ],
      "number_of_pages": 6,
      "pages": "389-394",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-5386-3293-2",
        "issn": "2332-5666",
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings - IEEE 37th International Conference on Distributed Computing Systems Workshops, ICDCSW 2017"
      },
      "publication_date": "2017-06-05",
      "selected": null,
      "title": "Ripple: Home Automation for Research Data Management",
      "urls": [
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=7979852",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85027527060&origin=inward"
      ]
    },
    {
      "abstract": "Calvin is an IoT framework for application development, deployment and execution in heterogeneous environments, that includes clouds, edge resources, and embedded or constrained resources. Inside Calvin, all the distributed resources are viewed as one environment by the application. The framework provides multi-tenancy and simplifies development of IoT applications, which are represented using a dataflow of application components (named actors) and their communication. The idea behind Calvin poses similarity with the serverless architecture and can be seen as Actor as a Service instead of Function as a Service. This makes Calvin very powerful as it does not only scale actors quickly but also provides an easy actor migration capability. In this work, we propose Calvin Constrained, an extension to the Calvin framework to cover resource-constrained devices. Due to limited memory and processing power of embedded devices, the constrained side of the framework can only support a limited subset of the Calvin features. The current implementation of Calvin Constrained supports actors implemented in C as well as Python, where the support for Python actors is enabled by using MicroPython as a statically allocated library, by this we enable the automatic management of state variables and enhance code re-usability. As would be expected, Python-coded actors demand more resources over C-coded ones. We show that the extra resources needed are manageable on current off-the-shelve micro-controller-equipped devices when using the Calvin framework. \u00c2\u00a9 2017 IEEE.",
      "authors": [
        "Amardeep Mehta",
        "Rami Baddour",
        "Fredrik Svensson",
        "Harald Gustafsson",
        "Erik Elmroth"
      ],
      "categories": null,
      "citations": 11,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/ICDCS.2017.181",
      "keywords": [
        "IoT",
        "Dataflow Application Development Model",
        "Distributed Cloud",
        "Serverless Architecture"
      ],
      "number_of_pages": 11,
      "pages": "1063-1073",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": 5.3,
        "is_potentially_predatory": false,
        "isbn": "978-1-5386-1793-9",
        "issn": "1063-6927",
        "publisher": "Institute of Electrical and Electronics Engineers Inc.",
        "sjr": 0.602,
        "snip": 1.084,
        "subject_areas": [
          "Hardware and Architecture",
          "Computer Networks and Communications",
          "Software"
        ],
        "title": "Proceedings. 18th International Conference on Distributed Computing Systems (Cat. No.98CB36183)"
      },
      "publication_date": "2017-06-05",
      "selected": null,
      "title": "Calvin Constrained \u2014 A Framework for IoT Applications in Heterogeneous Environments",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85027276378&origin=inward",
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=7980047"
      ]
    },
    {
      "abstract": "Linux containers present a lightweight solution to package applications into images and instantiate them in isolated environments. Such images may include vulnerabilities that can be exploited at runtime. A vulnerability scanning service can detect these vulnerabilities by periodically scanning the containers and their images for potential threats. When a threat is detected, an event may be generated to (1) quarantine or terminate the compromised container(s) and optionally (2) remedy the vulnerability by rebuilding a secure image. We believe that such event-driven process is a great fit to be implemented in a serverless architecture. In this paper we explore the design of an automated threat mitigation architecture based on OpenWhisk and Kubernetes. \u00c2\u00a9 2017 IEEE.",
      "authors": [
        "Nilton Bila",
        "Paolo Dettori",
        "Ali Kanso",
        "Yuji Watanabe",
        "Alaa Youssef"
      ],
      "categories": null,
      "citations": 17,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/ICDCSW.2017.66",
      "keywords": [
        "serverless architecture",
        "Linux containers",
        "Docker",
        "OpenWhisk",
        "Kubernetes",
        "security analysis"
      ],
      "number_of_pages": 4,
      "pages": "401-404",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-5386-3293-2",
        "issn": "2332-5666",
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings - IEEE 37th International Conference on Distributed Computing Systems Workshops, ICDCSW 2017"
      },
      "publication_date": "2017-06-05",
      "selected": null,
      "title": "Leveraging the Serverless Architecture for Securing Linux Containers",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85027499774&origin=inward",
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=7979854"
      ]
    },
    {
      "abstract": "In this tutorial, we will present serverless computing, survey existing serverless platforms from industry, academia, and open source projects, identify key characteristics and use cases, and describe technical challenges and open problems. Our tutorial will involve a hands-on experience of using the serverless technologies available from different cloud providers (e.g. IBM, Amazon, Google and Microsoft). We expect our users to have basic knowledge of programming and basic knowledge of cloud computing.",
      "authors": [
        "Paul Castro",
        "Vatche Ishakian",
        "Vinod Muthusamy",
        "Aleksander Slominski"
      ],
      "categories": null,
      "citations": 21,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/ICDCS.2017.305",
      "keywords": [],
      "number_of_pages": 2,
      "pages": "2658-2659",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": 5.3,
        "is_potentially_predatory": false,
        "isbn": "978-1-5386-1793-9",
        "issn": "1063-6927",
        "publisher": "Institute of Electrical and Electronics Engineers Inc.",
        "sjr": 0.602,
        "snip": 1.084,
        "subject_areas": [
          "Hardware and Architecture",
          "Computer Networks and Communications",
          "Software"
        ],
        "title": "Proceedings. 18th International Conference on Distributed Computing Systems (Cat. No.98CB36183)"
      },
      "publication_date": "2017-06-05",
      "selected": null,
      "title": "Serverless Programming (Function as a Service)",
      "urls": [
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=7980271",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85027280573&origin=inward"
      ]
    },
    {
      "abstract": "Large Internet companies like Amazon, Netflix, and LinkedIn are using the microservice architecture pattern to deploy large applications in the cloud as a ",
      "authors": [
        "Mario Villamizar",
        "Oscar Garc\u00e9s",
        "Lina Ochoa",
        "Harold Castro",
        "Lorena Salamanca",
        "Mauricio Verano",
        "Rubby Casallas",
        "Santiago Gil",
        "Carlos Valencia",
        "Angee Zambrano",
        "Mery Lang"
      ],
      "categories": null,
      "citations": 32,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1007/s11761-017-0208-y",
      "keywords": [
        "Microservice architecture",
        "Software architecture",
        "Cloud computing",
        "Service-oriented architectures",
        "Serverless architectures",
        "Scalable applications",
        "Amazon Web Services",
        "Microservices",
        "Software engineering",
        "AWS Lambda"
      ],
      "number_of_pages": 15,
      "pages": "233-247",
      "publication": {
        "category": "Journal",
        "cite_score": 4.6,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "18632386",
        "publisher": "Springer London",
        "sjr": 0.381,
        "snip": 1.212,
        "subject_areas": [
          "Information Systems",
          "Management Information Systems",
          "Hardware and Architecture",
          "Software"
        ],
        "title": "Service Oriented Computing and Applications"
      },
      "publication_date": "2017-06-01",
      "selected": null,
      "title": "Cost comparison of running web applications in the cloud using monolithic, microservice, and AWS Lambda architectures",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85018282953&origin=inward",
        "https://link.springer.com/content/pdf/10.1007/s11761-017-0208-y.pdf"
      ]
    },
    {
      "abstract": " New cloud programming and deployment models pose challenges to software\napplication engineers who are looking, often in vain, for tools to automate any\nnecessary code adaptation and transformation. Function-as-a-Service interfaces\nare particular non-trivial targets when considering that most cloud\napplications are implemented in non-functional languages. Among the most widely\nused of these languages is Python. This starting position calls for an\nautomated approach to transform monolithic Python code into modular FaaS units\nby partially automated decomposition. Hence, this paper introduces and\nevaluates Lambada, a Python module to dynamically decompose, convert and deploy\nunmodified Python code into AWS Lambda functions. Beyond the tooling in the\nform of a measured open source prototype implementation, the paper contributes\na description of the algorithms and code rewriting rules as blueprints for\ntransformations of other scripting languages.\n",
      "authors": [
        "Spillner, Josef"
      ],
      "categories": null,
      "citations": null,
      "comments": "14 pages, 2 tables, 5 figures, repeatable, unreviewed",
      "databases": [
        "arXiv"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": null,
      "publication_date": "2017-05-23",
      "selected": null,
      "title": "Transformation of Python Applications into Function-as-a-Service Deployments",
      "urls": [
        "https://arxiv.org/pdf/1705.08169",
        "http://arxiv.org/pdf/1705.08169v1",
        "http://arxiv.org/abs/1705.08169v1"
      ]
    },
    {
      "abstract": "The serverless paradigm has been rapidly adopted by developers of cloud-native applications, mainly because it relieves them from the burden of provisioning, scaling and operating the underlying infrastructure. In this paper, we propose a novel computing paradigm - Deviceless Edge Computing that extends the serverless paradigm to the edge of the network, enabling IoT and Edge devices to be seamlessly integrated as application execution infrastructure. We also discuss open challenges to realize Deviceless Edge Computing, based on our experience in prototyping a deviceless platform. \u00c2\u00a9 2017 Copyright is held by the owner/author(s).",
      "authors": [
        "Glikson, A.",
        "Nastic, S.",
        "Dustdar, S."
      ],
      "categories": null,
      "citations": 30,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1145/3078468.3078497",
      "keywords": [
        "Function as a service",
        "Edge Computing",
        "Serverless computing"
      ],
      "number_of_pages": null,
      "pages": null,
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450350358",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "SYSTOR 2017 - Proceedings of the 10th ACM International Systems and Storage Conference"
      },
      "publication_date": "2017-05-22",
      "selected": null,
      "title": "Deviceless Edge Computing: Extending serverless computing to the edge of the network",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85020729531&origin=inward"
      ]
    },
    {
      "abstract": "From the inception of the cloud, running multi-tenant workloads has put strain on the Linux kernel's abstractions. After years of having its abstractions bypassed via virtualization, the kernel has responded with a native container abstraction that is eagerly being applied in the cloud. In this paper, we point out that history is repeating itself: with the introduction of serverless computing, even the native container abstraction is ill-suited. We show that bypassing the kernel with unikernels can yield at least a factor of 6 better latency and throughput. Facing a more complex kernel than ever and a relatively undemanding computing model, we must revisit the question of whether the kernel should try to adapt, we should continue bypassing the kernel, or if it is finally time to try a new native OS for this important future cloud workload. \u00c2\u00a9 2017 ACM.",
      "authors": [
        "Koller, R.",
        "Williams, D."
      ],
      "categories": null,
      "citations": 28,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1145/3102980.3103008",
      "keywords": [],
      "number_of_pages": 5,
      "pages": "169-173",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450350686",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings of the Workshop on Hot Topics in Operating Systems - HOTOS"
      },
      "publication_date": "2017-05-07",
      "selected": null,
      "title": "Will Serverless End the Dominance of Linux in the Cloud?",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85027993116&origin=inward"
      ]
    },
    {
      "abstract": "The public cloud is moving to a Platform-as-a-Service model where services such as data management, machine learning or image classification are provided by the cloud operator while applications are written in high-level languages and leverage these services. Managed languages such as Java, Python or Scala are widely used in this setting. However, while these languages can increase productivity, they are often associated with problems such as unpredictable garbage collection pauses or warm-up overheads. We argue that the reason for these problems is that current language runtime systems were not initially designed for the cloud setting. To address this, we propose seven tenets for designing future language runtime systems for cloud data centers. We then outline the design of a general substrate for building such runtime systems, based on these seven tenets. \u00c2\u00a9 2017 ACM.",
      "authors": [
        "Maas, M.",
        "Asanovi, K.",
        "Kubiatowicz, J."
      ],
      "categories": null,
      "citations": 8,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1145/3102980.3103003",
      "keywords": [
        "Serverless Computing",
        "Data Centers",
        "Managed Language Runtime Systems",
        "JIT Compilation",
        "Platform-as-a-Service",
        "FPGAs",
        "Garbage Collection",
        "Resource Disaggregation",
        "Cloud 3.0"
      ],
      "number_of_pages": 6,
      "pages": "138-143",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450350686",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings of the Workshop on Hot Topics in Operating Systems - HOTOS"
      },
      "publication_date": "2017-05-07",
      "selected": null,
      "title": "Return of the Runtimes: Rethinking the Language Runtime System for the Cloud 3.0 Era",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85027969636&origin=inward"
      ]
    },
    {
      "abstract": "AWS Lambda (Amazon Web Services) is the most popular serverless architecture provided by Amazon. It currently supports three platforms: JavaScript, Python, and Java Virtual Machine (JVM). The JVM could be the most complicate platform among the three as there are many languages that target the JVM platform besides Java. In addition, the complex hierarchy of dependencies, versioning, and the class loader are major issues that could cause conflict in a project. Deployment in the context of a serverless architecture means deployment as a function that represents a single service rather than as an application that is comprised of many services. AWS Lambda requires a deployment artifact to be self-contained which means all resources and dependencies must be packaged into a single jar file, and this file could be larger than AWS Lambda's allowable limit. Developers usually use build tool plugins to make self-contained artifacts, and those tools are generally unaware of what class and resource files a function needs. As a result, the artifact is not optimized. This paper demonstrates that optimization of an artifact can in general improve its resource usage and runtime performance. This paper also reports the result of an anecdotal experiment regarding the overhead of calling functions remotely in order to support design decisions in the development of AWS Lambda. \u00c2\u00a9 2017 IEEE.",
      "authors": [
        "Hussachai Puripunpinyo",
        "M.H. Samadzadeh"
      ],
      "categories": null,
      "citations": 4,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/INFCOMW.2017.8116416",
      "keywords": [
        "Java",
        "Performance",
        "Serverless Architecture",
        "Optimization",
        "Deployment",
        "JVM",
        "AWS Lambda"
      ],
      "number_of_pages": 6,
      "pages": "438-443",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-5386-2785-3",
        "issn": null,
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "2017 IEEE Conference on Computer Communications Workshops, INFOCOM WKSHPS 2017"
      },
      "publication_date": "2017-05-01",
      "selected": null,
      "title": "Effect of optimizing Java deployment artifacts on AWS Lambda",
      "urls": [
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=8116416",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85041303997&origin=inward"
      ]
    },
    {
      "abstract": " Software developers are faced with the issue of either adapting their\nprogramming model to the execution model (e.g. cloud platforms) or finding\nappropriate tools to adapt the model and code automatically. A recent execution\nmodel which would benefit from automated enablement is Function-as-a-Service.\nAutomating this process requires a pipeline which includes steps for code\nanalysis, transformation and deployment. In this paper, we outline the design\nand runtime characteristics of Podilizer, a tool which implements the pipeline\nspecifically for Java source code as input and AWS Lambda as output. We\ncontribute technical and economic metrics about this concrete 'FaaSification'\nprocess by observing the behaviour of Podilizer with two representative Java\nsoftware projects.\n",
      "authors": [
        "Spillner, Josef",
        "Dorodko, Serhii"
      ],
      "categories": null,
      "citations": null,
      "comments": "12 pages, 3 figures, 7 tables, repeatable, unreviewed",
      "databases": [
        "arXiv"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": null,
      "publication_date": "2017-02-17",
      "selected": null,
      "title": "Java Code Analysis and Transformation into AWS Lambda Functions",
      "urls": [
        "http://arxiv.org/abs/1702.05510v1",
        "https://arxiv.org/pdf/1702.05510",
        "http://arxiv.org/pdf/1702.05510v1"
      ]
    },
    {
      "abstract": " Virtual Network Functions as a Service (VNFaaS) is currently under attentive\nstudy by telecommunications and cloud stakeholders as a promising business and\ntechnical direction consisting of providing network functions as a service on a\ncloud (NFV Infrastructure), instead of delivering standalone network\nappliances, in order to provide higher scalability and reduce maintenance\ncosts. However, the functioning of such NFVI hosting the VNFs is fundamental\nfor all the services and applications running on top of it, forcing to\nguarantee a high availability level. Indeed the availability of an VNFaaS\nrelies on the failure rate of its single components, namely the servers, the\nvirtualization software, and the communication network. The proper assignment\nof the virtual machines implementing network functions to NFVI servers and\ntheir protection is essential to guarantee high availability. We model the High\nAvailability Virtual Network Function Placement (HA-VNFP) as the problem of\nfinding the best assignment of virtual machines to servers guaranteeing\nprotection by replication. We propose a probabilistic approach to measure the\nreal availability of a system and design both efficient and effective\nalgorithms that can be used by stakeholders for both online and offline\nplanning.\n",
      "authors": [
        "Casazza, Marco",
        "Fouilhoux, Pierre",
        "Bouet, Mathieu",
        "Secci, Stefano"
      ],
      "categories": null,
      "citations": null,
      "comments": null,
      "databases": [
        "arXiv"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": null,
      "publication_date": "2017-01-27",
      "selected": null,
      "title": "Securing Virtual Network Function Placement with High Availability Guarantees",
      "urls": [
        "https://arxiv.org/pdf/1701.07993",
        "http://arxiv.org/pdf/1701.07993v1",
        "http://arxiv.org/abs/1701.07993v1"
      ]
    },
    {
      "abstract": " Cloud providers typically charge for their services. There are diverse\npricing models which often follow a pay-per-use paradigm. The consumers'\npayments are expected to cover all cost which incurs to the provider for\nprocessing, storage, bandwidth, data centre operation and engineering efforts,\namong others. In contrast, the consumer management interfaces are free of\ncharge as they are expected to cause only a minority of the load compared to\nthe actual computing services. With new service models and more complex and\npowerful management abilities, it is time to rethink this decision. The paper\nshows how to exploit the control plane of AWS Lambda to implement stateful\nservices practically for free and under some circumstances even guaranteed for\nfree which if widely deployed would cause a monetary loss for the provider. It\nalso elaborates on the consistency model for AWS Lambda.\n",
      "authors": [
        "Spillner, Josef"
      ],
      "categories": null,
      "citations": null,
      "comments": "14 pages, 10 figures, unreviewed",
      "databases": [
        "arXiv"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": null,
      "publication_date": "2017-01-20",
      "selected": null,
      "title": "Exploiting the Cloud Control Plane for Fun and Profit",
      "urls": [
        "https://arxiv.org/pdf/1701.05945",
        "http://arxiv.org/pdf/1701.05945v1",
        "http://arxiv.org/abs/1701.05945v1"
      ]
    },
    {
      "abstract": "Rapid expansion in cloud event technologies such as Amazon Web Service's Lambda, IBM Bluemix's OpenWhisk, Google Cloud Platform's Cloud Functions, and Microsoft Azure's Functions motivates study of software development in these services and their potential as a disruptive force in commercial cloud technologies. In addition to discussing the current state of cloud event services, this paper presents two real world applications utilizing these platforms: Lambdefy, a library designed to make traditional web application run effectively in AWS Lambda, and a performant media management service designed by Trek10, capable of resizing thousands of images per second. Furthermore, we discuss how cloud event technologies enable and/or limit these applications, motivate new software design paradigms in a cloud event environment, and highlight compelling use case scenarios and barriers to entry for cloud event services. AWS cloud technologies are exclusively used due to their maturity and the recent release of the other platforms, while Node.js and the Serverless Framework are utilized for deployment and application development. \u00c2\u00a9 2016 IEEE.",
      "authors": [
        "McGrath, G.",
        "Judson, B.",
        "Brenner, P.",
        "Short, J.",
        "Ennis, S."
      ],
      "categories": null,
      "citations": 24,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1109/CLOUD.2016.58",
      "keywords": [
        "Cloud events",
        "AWS",
        "Serverless",
        "Containers",
        "OpenWhisk",
        "Google cloud platform",
        "Microsoft azure",
        "Cloud functions",
        "Lambda",
        "Microservices",
        "IBM bluemix"
      ],
      "number_of_pages": 7,
      "pages": "400-406",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781728187808",
        "issn": "21596182",
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "IEEE International Conference on Cloud Computing, CLOUD"
      },
      "publication_date": "2017-01-17",
      "selected": null,
      "title": "Cloud event programming paradigms: Applications and analysis",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85014142155&origin=inward"
      ]
    },
    {
      "abstract": "Digital Library",
      "authors": [
        "Bernd Pr\u00c3\u00bcnster",
        "Florian Reimair",
        "Andreas Reiter"
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.5220/0006469103750383",
      "keywords": [
        "Serverless Services",
        "P2P Networks",
        "Decentralisation",
        "Personal Mesh Network",
        "Distributed Services"
      ],
      "number_of_pages": 9,
      "pages": "375-383",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9789897582592",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "ICETE 2017 - Proceedings of the 14th International Joint Conference on e-Business and Telecommunications"
      },
      "publication_date": "2017-01-01",
      "selected": null,
      "title": "The Net Rat - Rethinking Connected Services for Increased Security",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85029443249&origin=inward"
      ]
    },
    {
      "abstract": "In this paper, we present a serverless workflow execution system (DEWE v3[equation]) with Function-as-a-Service (FaaS aka serverless computing) as the target execution environment. DEWE v3 is...",
      "authors": [
        "Qingye Jiang",
        "Young Choon Lee",
        "Albert Y. Zomaya"
      ],
      "categories": null,
      "citations": 9,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1007/978-3-319-69035-3_51",
      "keywords": [
        "Scientific workflow",
        "Function-as-a-service",
        "Serverless computing"
      ],
      "number_of_pages": 16,
      "pages": "706-721",
      "publication": {
        "category": "Book",
        "cite_score": 1.8,
        "is_potentially_predatory": false,
        "isbn": "9783030715922",
        "issn": "03029743",
        "publisher": "Springer Verlag",
        "sjr": 0.249,
        "snip": 0.628,
        "subject_areas": [
          "Databases",
          "Cryptography and Security",
          "Distributed, Parallel, and Cluster Computing",
          "Theoretical Computer Science",
          "Computer Science (all)"
        ],
        "title": "IFIP International Conference on Distributed Applications and\n  Interoperable Systems, DAIS 2017: Distributed Applications and Interoperable\n  Systems pp 83-98"
      },
      "publication_date": "2017-01-01",
      "selected": null,
      "title": "Serverless Execution of Scientific Workflows",
      "urls": [
        "https://link.springer.com/content/pdf/10.1007%2F978-3-319-69035-3_51.pdf",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85034113864&origin=inward"
      ]
    },
    {
      "abstract": "The exponential increase of the data generated by pervasive and mobile devices requires disrupting approaches for the realization of emerging mobile and IoT applications. Although cloud computing...",
      "authors": [
        "Luciano Baresi",
        "Danilo Filgueira Mendon\u00e7a",
        "Martin Garriga"
      ],
      "categories": null,
      "citations": 15,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1007/978-3-319-67262-5_15",
      "keywords": [
        "Low-latency applications",
        "Serverless architectures",
        "Mobile Edge Computing",
        "Edge computing"
      ],
      "number_of_pages": 15,
      "pages": "196-210",
      "publication": {
        "category": "Book",
        "cite_score": 1.8,
        "is_potentially_predatory": false,
        "isbn": "9783030715922",
        "issn": "03029743",
        "publisher": "Springer Verlag",
        "sjr": 0.249,
        "snip": 0.628,
        "subject_areas": [
          "Databases",
          "Cryptography and Security",
          "Distributed, Parallel, and Cluster Computing",
          "Theoretical Computer Science",
          "Computer Science (all)"
        ],
        "title": "IFIP International Conference on Distributed Applications and\n  Interoperable Systems, DAIS 2017: Distributed Applications and Interoperable\n  Systems pp 83-98"
      },
      "publication_date": "2017-01-01",
      "selected": null,
      "title": "Empowering Low-Latency Applications Through a Serverless Edge Computing Architecture",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85030724329&origin=inward",
        "https://link.springer.com/content/pdf/10.1007%2F978-3-319-67262-5_15.pdf"
      ]
    },
    {
      "abstract": "The proceedings contain 53 papers. The special focus in this conference is on Service-Oriented Computing. The topics include: Confidence-aware reputation bootstrapping in composite service environments; compound trace clustering to generate accurate and simple sub-process models; an approach to modeling and discovering event correlation for service collaboration; energy efficient scheduling of application components via brownout and approximate markov decision process; predicting the available bandwidth on intra cloud network links for deadline constrained workflow scheduling in public clouds; inferring calling relationship based on external observation for microservice architecture; a QoS-aware resource allocation controller for function as a service (FaaS) platform; probabilistic qualitative preference matching in long-term IaaS composition; an embedding based factorization machine approach for web service QoS prediction; RISE: Resolution of identity through similarity establishment on unstructured job descriptions; a deep learning approach for long term QoS-compliant service composition; an artifact-driven approach to monitor business processes through real-world objects; benchFoundry: A benchmarking framework for cloud storage services; automated analysis of cloud offerings for optimal service provisioning; middleware for dynamic upgrade activation and compensations in multi-tenant SaaS; risk-based proactive process adaptation; a debt-aware learning approach for resource adaptations in cloud elasticity management; large-scale and adaptive service composition using deep reinforcement learning; ECHO: An adaptive orchestration platform for hybrid dataflows across cloud and edge; ensuring and assessing architecture conformance to microservice decomposition patterns; social-sensor cloud service for scene reconstruction; polly: A language-based approach for custom change detection of web service data; design and evaluation of a self-service delivery framework.",
      "authors": [],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": {
        "category": "Book",
        "cite_score": 1.8,
        "is_potentially_predatory": false,
        "isbn": "9783030715922",
        "issn": "03029743",
        "publisher": "Springer Verlag",
        "sjr": 0.249,
        "snip": 0.628,
        "subject_areas": [
          "Databases",
          "Cryptography and Security",
          "Distributed, Parallel, and Cluster Computing",
          "Theoretical Computer Science",
          "Computer Science (all)"
        ],
        "title": "IFIP International Conference on Distributed Applications and\n  Interoperable Systems, DAIS 2017: Distributed Applications and Interoperable\n  Systems pp 83-98"
      },
      "publication_date": "2017-01-01",
      "selected": null,
      "title": "15th International Conference on Service-Oriented Computing, ICSOC 2017",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85034044606&origin=inward"
      ]
    },
    {
      "abstract": "Function as a Service (FaaS) is a recent event-driven serverless paradigm that allows enterprises to build their applications in a fault tolerant distributed manner. Having been considered as an...",
      "authors": [
        "MohammadReza HoseinyFarahabady",
        "Young Choon Lee",
        "Albert Y. Zomaya",
        "Zahir Tari"
      ],
      "categories": null,
      "citations": 7,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1007/978-3-319-69035-3_17",
      "keywords": [
        "Function as a service (FaaS)",
        "Serverless lambda platform",
        "Microservices",
        "Dynamic resource allocation"
      ],
      "number_of_pages": 15,
      "pages": "241-255",
      "publication": {
        "category": "Book",
        "cite_score": 1.8,
        "is_potentially_predatory": false,
        "isbn": "9783030715922",
        "issn": "03029743",
        "publisher": "Springer Verlag",
        "sjr": 0.249,
        "snip": 0.628,
        "subject_areas": [
          "Databases",
          "Cryptography and Security",
          "Distributed, Parallel, and Cluster Computing",
          "Theoretical Computer Science",
          "Computer Science (all)"
        ],
        "title": "IFIP International Conference on Distributed Applications and\n  Interoperable Systems, DAIS 2017: Distributed Applications and Interoperable\n  Systems pp 83-98"
      },
      "publication_date": "2017-01-01",
      "selected": null,
      "title": "A QoS-Aware Resource Allocation Controller for Function as a Service (FaaS) Platform",
      "urls": [
        "https://link.springer.com/content/pdf/10.1007%2F978-3-319-69035-3_17.pdf",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85034097445&origin=inward"
      ]
    },
    {
      "abstract": "Reactive security monitoring, self-driving cars, the Internet of Things (IoT) and many other novel applications require systems for both writing events arriving at very high and fluctuating rates to persistent storage as well as supporting analytical ad-hoc queries. As standard database systems are not capable to deliver the required write performance, log-based systems, key-value stores and other write-optimized data stores have emerged recently. However, the drawbacks of these systems are a fair query performance and the lack of suitable instant recovery mechanisms in case of system failures. In this paper, we present ChronicleDB, a novel database system with a well-designed storage layout to achieve high write-performance under fluctuating data rates and powerful indexing capabilities to support ad-hoc queries. In addition, ChronicleDB offers low-cost fault tolerance and instant recovery within milliseconds. Unlike previous work, ChronicleDB is designed either as a serverless library to be tightly integrated in an application or as a standalone database server. Our results of an experimental evaluation with real and synthetic data reveal that ChronicleDB clearly outperforms competing systems with respect to both write and query performance. \u00c2\u00a9 2017, Copyright is with the authors.",
      "authors": [
        "Seidemann, M.",
        "Seeger, B."
      ],
      "categories": null,
      "citations": 7,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.5441/002/edbt.2017.14",
      "keywords": [],
      "number_of_pages": 12,
      "pages": "144-155",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9783893180738",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Advances in Database Technology - EDBT"
      },
      "publication_date": "2017-01-01",
      "selected": null,
      "title": "ChronicleDB: A high-Performance event store",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85032512404&origin=inward"
      ]
    },
    {
      "abstract": " Before chatbots there were simply bots: The invention of a chatbot brought us to the new era of technology, the era of conversation service. A chatbot is a virtual person that can effectively talk to any human being with the help of interactive conversion textual skill. Now a days there are many cloud-based platforms available for developing and deploying the chatbot such as Microsoft bot framework, IBM Watson, Kore, AWS lambda, Microsoft Azure bot service, Chatfuel, Heroku and many more but all those techniques has some drawbacks such as built-in Artificial Intelligence, NLP, conversion service, programming etc. This paper represents the comparison between all cloud-based chatbot technologies with some constraint such as built-in AI, setup time, completion time, complexity etc. Finally, by the comparison, we will get to know that which cloud platform is efficient and suitable for developing chatbot. ",
      "authors": [
        "Amit Patil",
        "Marimuthu K",
        "Nagaraja Rao A",
        "Niranchana R"
      ],
      "categories": null,
      "citations": 14,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.14419/ijet.v6i3.7628",
      "keywords": [
        "Cloud Platform",
        "Chatbot techniques",
        "NLP etc.",
        "Artificial Intelligence"
      ],
      "number_of_pages": 5,
      "pages": "57-61",
      "publication": {
        "category": "Journal",
        "cite_score": 0.1,
        "is_potentially_predatory": true,
        "isbn": null,
        "issn": "2227-524X",
        "publisher": "Science Publishing Corporation Inc",
        "sjr": 0.11,
        "snip": 0.501,
        "subject_areas": [
          "Engineering (all)",
          "Biotechnology",
          "Chemical Engineering (all)",
          "Computer Science (miscellaneous)",
          "Hardware and Architecture",
          "Environmental Engineering"
        ],
        "title": "International Journal of Engineering and Technology(UAE)"
      },
      "publication_date": "2017-01-01",
      "selected": null,
      "title": "Comparative study of cloud platforms to develop a Chatbot",
      "urls": [
        "https://www.sciencepubco.com/index.php/ijet/article/download/7628/2755",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85021732697&origin=inward"
      ]
    },
    {
      "abstract": "Time series - such as public transport time schedules and their actual departure times - may deliver insights about the public transport network to third parties. Today, however, public transport data is published in a way in which analytical processing is too expensive. In previous work, the Linked Connections(LC) framework was introduced as a cost-efficient publishing alternative to the de-facto GTFS standard and route planning APIs. We study whether this server interface can also be used by Linked Data agents to solve analytical queries over longer periods of time. In this work, we created a serverless Linked Data client in Javascript for the analysis of time series on top of public transport data sources, called tripscore.eu. In this example, it calculates the quality of experience for your journey for the last 5 weeks using the public transport agencies it can discover. We have made the code to this proof of concept available as open source in different reusable components. As the user-perceived performance is quite slow, we formulate opportunities to achieve better response times. We could, on the one hand, suggest the data publisher to publish summaries over longer periods of time. On the other hand, we could also, as reusers, create a private summary of the data on our server and expose this to our user agents. Still an open issue is how this client would discover new public transport agencies reliably, for which we started working on a metadata profile for transport datasets.",
      "authors": [
        "Chaves-Fraga, D.",
        "Rojas, J.",
        "Vandenberghe, P.-J.",
        "Colpaert, P.",
        "Corcho, O."
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": null,
      "keywords": [
        "Decentralization",
        "Route planning",
        "Linked Data",
        "Time series"
      ],
      "number_of_pages": null,
      "pages": null,
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": 0.8,
        "is_potentially_predatory": false,
        "isbn": "9788670314764",
        "issn": "16130073",
        "publisher": "CEUR-WS",
        "sjr": 0.177,
        "snip": 0.345,
        "subject_areas": [
          "Computer Science (all)"
        ],
        "title": "CEUR Workshop Proceedings"
      },
      "publication_date": "2017-01-01",
      "selected": null,
      "title": "The tripscore Linked Data client: Calculating specific summaries over large time series",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85030788045&origin=inward"
      ]
    },
    {
      "abstract": "Contemporary solutions for cloud-supported, edge-data analytics mostly apply analytics techniques in a rigid bottom-up approach, regardless of the data's origin. Typically, data are generated at the edge of the infrastructure and transmitted to the cloud, where traditional data analytics techniques are applied. Currently, developers are forced to resort to ad hoc solutions specifically tailored for the available infrastructure (for example, edge devices) when designing, developing, and operating the data analytics applications. Here, a novel approach implements cloud-supported, real-time data analytics in edge-computing applications. The authors introduce their serverless edge-data analytics platform and application model and discuss their main design requirements and challenges, based on real-life healthcare use case scenarios.",
      "authors": [
        "Stefan Nastic",
        "Thomas Rausch",
        "Ognjen Scekic",
        "Schahram Dustdar",
        "Marjan Gusev",
        "Bojana Koteska",
        "Magdalena Kostoska",
        "Boro Jakimovski",
        "Sasko Ristov",
        "Radu Prodan"
      ],
      "categories": null,
      "citations": 63,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/MIC.2017.2911430",
      "keywords": [
        "IoT",
        "cloud computing",
        "Internet/Web technologies",
        "Internet of Things",
        "security and privacy",
        "real-time data analysis",
        "edge computing"
      ],
      "number_of_pages": 8,
      "pages": "64-71",
      "publication": {
        "category": "Journal",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "1941-0131",
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "IEEE Internet Computing"
      },
      "publication_date": "2017-01-01",
      "selected": null,
      "title": "A Serverless Real-Time Data Analytics Platform for Edge Computing",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85029365106&origin=inward",
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=7994559"
      ]
    },
    {
      "abstract": "Cloud providers offer a range of fully managed infrastructure services that enable a \u201cserverless\u201d architecture and development paradigm. Following this paradigm, software services can be built on...",
      "authors": [
        "J\u00f6rn Kuhlenkamp",
        "Markus Klems"
      ],
      "categories": null,
      "citations": 16,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1007/978-3-319-69035-3_48",
      "keywords": [
        "Performance",
        "Tracing",
        "Cloud computing",
        "Deployment costs"
      ],
      "number_of_pages": 16,
      "pages": "657-672",
      "publication": {
        "category": "Book",
        "cite_score": 1.8,
        "is_potentially_predatory": false,
        "isbn": "9783030715922",
        "issn": "03029743",
        "publisher": "Springer Verlag",
        "sjr": 0.249,
        "snip": 0.628,
        "subject_areas": [
          "Databases",
          "Cryptography and Security",
          "Distributed, Parallel, and Cluster Computing",
          "Theoretical Computer Science",
          "Computer Science (all)"
        ],
        "title": "IFIP International Conference on Distributed Applications and\n  Interoperable Systems, DAIS 2017: Distributed Applications and Interoperable\n  Systems pp 83-98"
      },
      "publication_date": "2017-01-01",
      "selected": null,
      "title": "Costradamus: A Cost-Tracing System for Cloud-Based Software Services",
      "urls": [
        "https://link.springer.com/content/pdf/10.1007%2F978-3-319-69035-3_48.pdf",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85034023216&origin=inward"
      ]
    },
    {
      "abstract": "One of the latest developments in cloud computing is usually called 'serverless' computing, despite the fact that servers are still where processing takes place. The economic benefits of serverless computing heavily depend on the execution behavior and volumes of the application workload. Serverless has the potential to be a great abstraction offering economic advantages for simple workflows, however it's important to model the economic impact of your architecture and operation choices. \u00c2\u00a9 2014 IEEE.",
      "authors": [
        "Adam Eivy",
        "Joe Weinman"
      ],
      "categories": null,
      "citations": 57,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/MCC.2017.32",
      "keywords": [
        "cloud computing",
        "frameworks",
        "pap-per-use resources",
        "cloud economics",
        "serverless"
      ],
      "number_of_pages": 7,
      "pages": "6-12",
      "publication": {
        "category": "Journal",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "2372-2568",
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "IEEE Cloud Computing"
      },
      "publication_date": "2017-01-01",
      "selected": null,
      "title": "Be Wary of the Economics of \"Serverless\" Cloud Computing",
      "urls": [
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=7912239",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85019193701&origin=inward"
      ]
    },
    {
      "abstract": "The proceedings contain 17 papers. The special focus in this conference is on Service-Oriented and Cloud Computing . The topics include: Microservices identification through interface analysis; a performance survey of lightweight virtualization techniques; low-level exploitation mitigation by diverse microservices; a formal approach for the verification of AWS IAM access control policies; foundations for designing, defining, validating and executing access control policies in cloud environments.; secure and scalable remote access tunnels for the IIoT; an algorithm portfolio approach to cloud resource management; a fuzzy load balancer for adaptive fault tolerance management in cloud platforms; data preparation as a service based on apache spark.; human-in-the-loop simulation of cloud services; toward automatic semantic API descriptions to support services composition; on abstraction-based deadlock-analysis in service-oriented systems with recursion; IoT-based compliance checking of multi-party business processes modeled with commitments.; empowering low-latency applications through a serverless edge computing architecture; uStorage - a storage architecture to provide block-level storage through object-based storage and heart disorder detection with menard algorithm on apache spark.",
      "authors": [],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": 237,
      "pages": "1-237",
      "publication": {
        "category": "Book",
        "cite_score": 1.8,
        "is_potentially_predatory": false,
        "isbn": "9783030715922",
        "issn": "03029743",
        "publisher": "Springer Verlag",
        "sjr": 0.249,
        "snip": 0.628,
        "subject_areas": [
          "Databases",
          "Cryptography and Security",
          "Distributed, Parallel, and Cluster Computing",
          "Theoretical Computer Science",
          "Computer Science (all)"
        ],
        "title": "IFIP International Conference on Distributed Applications and\n  Interoperable Systems, DAIS 2017: Distributed Applications and Interoperable\n  Systems pp 83-98"
      },
      "publication_date": "2017-01-01",
      "selected": null,
      "title": "6th IFIP WG 2.14 European Conference on Service-Oriented and Cloud Computing , ESOCC 2017",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85030692810&origin=inward"
      ]
    },
    {
      "abstract": "Data deduplication is a technique that removes redundancy of data on the storage. For cloud storage services, enabling deduplication over encrypted data is of vital importance to achieve both cost savings and keeping data confidentiality simultaneously. Recently proposed solutions are not sufficient because of lacking desired level of security and efficiency. In this paper, we propose SEED, a novel scheme for serverless and efficient encrypted deduplication. Without aid of any additional servers, SEED provides strong confidentiality to the outsourced data. In addition, its non-interactive file encryption with support of lazy encryption greatly reduces latency in file uploading process. Security analysis and performance evaluations show the superior efficiency and effectiveness of SEED for cloud storage services. \u00c2\u00a9 2016 IEEE.",
      "authors": [
        "Youngjoo Shin",
        "Dongyoung Koo",
        "Joobeom Yun",
        "Junbeom Hur"
      ],
      "categories": null,
      "citations": 1,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/CloudCom.2016.0084",
      "keywords": [
        "bilinear pairing",
        "data confidentiality",
        "cloud storage",
        "Data deduplication"
      ],
      "number_of_pages": 6,
      "pages": "482-487",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-5386-0693-3",
        "issn": "2330-2186",
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings of the International Conference on Cloud Computing Technology and Science, CloudCom"
      },
      "publication_date": "2016-12-12",
      "selected": null,
      "title": "SEED: Enabling Serverless and Efficient Encrypted Deduplication for Cloud Storage",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85012977485&origin=inward",
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=7830725"
      ]
    },
    {
      "abstract": "The proceedings contain 6 papers. The topics discussed include: a microservice architecture for the Intranet of Things and energy in smart buildings; situational data-analytics for the web-of-things; building a Chatbot with serverless computing; FRED: a hosted data flow platform for the IoT; orchestrating the internet of things dynamically; and dynamic sets - a programming abstraction for ubiquitous computing and the Internet of Things.",
      "authors": [],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450346696",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings of the 1st International Workshop on Mashups of Things and APIs, MOTA 2016"
      },
      "publication_date": "2016-12-12",
      "selected": null,
      "title": "Proceedings of the 1st International Workshop on Mashups of Things and APIs, MOTA 2016",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85010379951&origin=inward"
      ]
    },
    {
      "abstract": "Chatbots are emerging as the newest platform used by millions of consumers worldwide due in part to the commoditization of natural language services, which provide provide developers with many building blocks to create chatbots inexpensively. However, it is still difficult to build and deploy chatbots. Developers need to handle the coordination of the cognitive services to build the chatbot interface, integrate the chatbot with external services, and worry about extensibility, scalability, and maintenance. In this work, we present the architecture and prototype of a chatbot using a serverless platform, where developers compose stateless functions together to perform useful actions. We describe our serverless architecture based on function sequences, and how we used these functions to coordinate the cognitive microservices in the Watson Developer Cloud to allow the chatbot to interact with external services. The serverless model improves the extensibility of our chatbot, which currently supports 6 abilities: location based weather reports, jokes, date, reminders, and a simple music tutor. \u00c2\u00a9 is held by the owner/author(s).",
      "authors": [
        "Yan, M.",
        "Castro, P.",
        "Cheng, P.",
        "Ishakian, V."
      ],
      "categories": null,
      "citations": 63,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1145/3007203.3007217",
      "keywords": [
        "Serverless",
        "Bots",
        "Cloud computing",
        "FaaS"
      ],
      "number_of_pages": null,
      "pages": null,
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450346696",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings of the 1st International Workshop on Mashups of Things and APIs, MOTA 2016"
      },
      "publication_date": "2016-12-12",
      "selected": null,
      "title": "Building a chatbot with serverless computing",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85010402842&origin=inward"
      ]
    },
    {
      "abstract": "Lack of bus information for example bus timetable, status of the bus and messy advertisement on bulletin board at the bus stop will give negative impact to tourist. Therefore, a real-time update bus information bulletin board provides all information needed so that passengers can save their bus information searching time. Supported with Android or iOS, Beacon Bus Information System (BBIS) provides bus information between Batu Pahat and Kluang area. BBIS is a system that implements physical web technology and interaction on demand. It built on Backend-as-a-Service, a cloud solution and Firebase non relational database as data persistence backend and syncs between user client in the real-time. People walk through bus stop with smart device and do not require any application. Bluetooth Beacon is used to achieve smart device's best performance of data sharing. Intellij IDEA 15 is one of the tools that that used to develop the BBIS system. Multi-language included front end and backend supported Integration development environment (IDE) helped to speed up integration process. \u00c2\u00a9 Published under licence by IOP Publishing Ltd.",
      "authors": [
        "Kasim, S.",
        "Hafit, H.",
        "Juin, K.P.",
        "Afif, Z.A.",
        "Hashim, R.",
        "Ruslai, H.",
        "Jahidin, K.",
        "Arshad, M.S."
      ],
      "categories": null,
      "citations": 4,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1088/1757-899X/160/1/012097",
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": 0.7,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "17578981",
        "publisher": "IOP Publishing Ltd.",
        "sjr": 0.198,
        "snip": 0.484,
        "subject_areas": [
          "Engineering (all)",
          "Materials Science (all)"
        ],
        "title": "IOP Conference Series: Materials Science and Engineering"
      },
      "publication_date": "2016-12-07",
      "selected": null,
      "title": "BBIS: Beacon Bus Information System",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85012263424&origin=inward"
      ]
    },
    {
      "abstract": "We present an approach to model the deployment costs, including compute and IO costs, of Microservice-based applications deployed to a public cloud. Our model, which we dubbed CostHat, supports both, Microservices deployed on traditional IaaS or PaaS clouds, and services that make use of novel cloud programming paradigms, such as AWS Lambda. CostHat is based on a network model, and allows for what-if and cost sensitivity analysis. Further, we have used this model to implement tooling that warns cloud developers directly in the Integrated Development Environment (IDE) about certain classes of potentially costly code changes. We illustrate our work based on a case study, and evaluate the CostHat model using a standalone Python implementation. We show that, once instantiated, cost calculation in CostHat is computationally inexpensive on standard hardware (below 1 ms even for applications consisting of thousand services and endpoints). This enables its use in real-time for developer tooling which continually re-evaluates the costs of an application in the background, while the developer is working on the code. Copyright \u00c2\u00a9 2016 ACM.",
      "authors": [
        "Leitner, P.",
        "Cito, J.",
        "St\u00c3\u00b6ckli, E."
      ],
      "categories": null,
      "citations": 30,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1145/2996890.2996901",
      "keywords": [],
      "number_of_pages": 10,
      "pages": "165-174",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450346160",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings - 9th IEEE/ACM International Conference on Utility and Cloud Computing, UCC 2016"
      },
      "publication_date": "2016-12-06",
      "selected": null,
      "title": "Modelling and managing deployment costs of microservice-based cloud applications",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85009074858&origin=inward"
      ]
    },
    {
      "abstract": "We present an approach to model the deployment costs, including compute and IO costs, of Microservice-based applications deployed to a public cloud. Our model, which we dubbed CostHat, supports both, Microservices deployed on traditional IaaS or PaaS clouds, and services that make use of novel cloud programming paradigms, such as AWS Lambda. CostHat is based on a network model, and allows for what-if and cost sensitivity analysis. Further, we have used this model to implement tooling that warns cloud developers directly in the Integrated Development Environment (IDE) about certain classes of potentially costly code changes. We illustrate our work based on a case study, and evaluate the CostHat model using a standalone Python implementation. We show that, once instantiated, cost calculation in CostHat is computationally inexpensive on standard hardware (below 1 ms even for applications consisting of thousand services and endpoints). This enables its use in real-time for developer tooling which continually re-evaluates the costs of an application in the background, while the developer is working on the code.",
      "authors": [
        "Philipp Leitner",
        "J\u00fcrgen Cito",
        "Emanuel St\u00f6ckli"
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "IEEE"
      ],
      "doi": null,
      "keywords": [
        "cloud computing",
        "what-if analysis",
        "microservices",
        "deployment costs",
        "graph model"
      ],
      "number_of_pages": 10,
      "pages": "165-174",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-5090-4467-2",
        "issn": null,
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "2016 IEEE/ACM 9th International Conference on Utility and Cloud Computing (UCC)"
      },
      "publication_date": "2016-12-06",
      "selected": null,
      "title": "Modelling and Managing Deployment Costs of Microservice-Based Cloud Applications",
      "urls": [
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=7881628"
      ]
    },
    {
      "abstract": "EdgeScale is a new platform that leverages serveless cloud computing to enable storage and processing on a hierarchy of data centers positioned over the geographic span of a network between the end-user device and the traditional wide-area cloud datacenter. EdgeScale applications are structured as lightweight stateless handlers that can be rapidely instantiated on demand. EdgeScale provides a scalable and persistent storage service that automatically migrates application state across the data center hierarchy to optimize access latency and reduce bandwidth consumption. \u00c2\u00a9 2016 IEEE.",
      "authors": [
        "Lara, E.D.",
        "Gomes, C.S.",
        "Langridge, S.",
        "Mortazavi, S.H.",
        "Roodi, M."
      ],
      "categories": null,
      "citations": 11,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1109/SEC.2016.37",
      "keywords": [
        "Cloudlets",
        "Serverless computing",
        "Edge computing"
      ],
      "number_of_pages": 2,
      "pages": "109-110",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781509033218",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings - 1st IEEE/ACM Symposium on Edge Computing, SEC 2016"
      },
      "publication_date": "2016-12-05",
      "selected": null,
      "title": "Poster abstract: Hierarchical serverless computing for the mobile edge",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85010782720&origin=inward"
      ]
    },
    {
      "abstract": "Additional digital layer is an important aspect in the Smart grid architecture. We gather the data using this layer and the whole grid is controlled accordingly. Energy cost can be estimated and the demand can be predicted. Estimation of health issues of electrical equipment can be done from the control room by gathering the data from remote locations. In the case of computer-aided digital relay model if we choose the pilot relay action by remote data then that would be the good application of this digital layer. In this paper, we have suggested an alternative method- to gather and analyze the remote data using the serverless cloud computing framework. The prime objective is to design a cheaper and technically easier simulation strategy with this new framework. At the end, we have tried to create a mathematical model to estimate the cost and quality of service. The system is simulated using MATLAB, Amazon Web Service (AWS) products and a batch program. \u00c2\u00a9 2016 IEEE.",
      "authors": [
        "Shitikantha Dash",
        "Dipak Kumar Dash"
      ],
      "categories": null,
      "citations": 4,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/POWERI.2016.8077240",
      "keywords": [
        "Serverless Cloud computing architecture",
        "Cloud computing",
        "Smart grid"
      ],
      "number_of_pages": 6,
      "pages": "1-6",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-4673-8963-1",
        "issn": null,
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "2016 IEEE 7th Power India International Conference, PIICON 2016"
      },
      "publication_date": "2016-11-25",
      "selected": null,
      "title": "Serverless cloud computing framework for smart grid architecture",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85039933773&origin=inward",
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=8077240"
      ]
    },
    {
      "abstract": "Performance evaluation of mobile applications has received considerable attention as a prominent activity for improving services quality. Because many data stored on mobile device are synchronized with distributed data centers, the system availability is a critical attribute that requires investigation. Mobile backend-as-a-service (MBaaS) allows developers to link the backend of their applications to cloud storage, as well as providing device management and integration with social networking services. The OpenMobster platform offers a complete synchronization service for mobile applications, but its availability is an inherent critical issue, because one failure can result in losses for companies that use this environment. Analytical models can be used to assess availability of this type of environment and perhaps mitigate downtimes. This paper proposes a hierarchical model to assess the availability of the MBaaS OpenMobster platform focusing on two scenarios: the basic architecture and the automatic recovery process. The designed models were validated through testbed measurements by automatically injecting and repairing the infrastructure. Taking into account the three layers: hardware, operating system, and the MBaaS OpenMobster, we observed OpenMobster being the most critical service component. We have applied failover strategy on the Java virtual machine, and we obtained 10% of reduction in annual downtime. This work may guide systems' administrators in planning their maintenance policies. Copyright \u00c3\u00af\u00c2\u00bf\u00c2\u00bd 2015 John Wiley & Sons, Ltd. Copyright \u00c3\u00af\u00c2\u00bf\u00c2\u00bd 2015 John Wiley & Sons, Ltd.",
      "authors": [
        "Costa, I.",
        "Araujo, J.",
        "Dantas, J.",
        "Campos, E.",
        "Silva, F.A.",
        "Maciel, P."
      ],
      "categories": null,
      "citations": 16,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1002/qre.1927",
      "keywords": [
        "MBaaS",
        "analytical models",
        "mobile cloud computing",
        "availability evaluation"
      ],
      "number_of_pages": 15,
      "pages": "2191-2205",
      "publication": {
        "category": "Journal",
        "cite_score": 3.7,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "07488017",
        "publisher": "John Wiley and Sons Ltd",
        "sjr": 0.913,
        "snip": 1.354,
        "subject_areas": [
          "Safety, Risk, Reliability and Quality",
          "Management Science and Operations Research"
        ],
        "title": "Quality and Reliability Engineering International"
      },
      "publication_date": "2016-11-01",
      "selected": null,
      "title": "Availability Evaluation and Sensitivity Analysis of a Mobile Backend-as-a-service Platform",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=84991795121&origin=inward"
      ]
    },
    {
      "abstract": "RFID technology suffers from a recurring issue: the reader-to-reader collision. Numerous protocols have been proposed to attempt to reduce them, but, remaining reading errors still heavily impact the performances and fairness of dense RFID deployments. This paper introduces a new Distributed Efficient & Fair Anticollision for RFID (DEFAR) protocol. It reduces both monochannel and multichannel collisions as well as interference by a factor of almost 90% in comparison with the best state of the art protocols. The fairness of the medium access among the readers is improved to a 99% level. Such improvements are achieved applying a TDMA-based 'serverless' approach and assigning different priorities to readers depending on their behavior over precedent rounds. A distributed reservation phase is organized between readers with at least one winning reader afterwards. Then, multiple reading phases occur within a single frame in order to obtain fast coverage and high throughput. The use of different reader priorities based on reading behaviors of previous frames also contributes to improve both fairness and efficiency. Simulation results show the robustness of the proposed solution in terms of different metrics such collision avoidance, fairness and coverage and in comparison with a centralized literature solution. \u00c2\u00a9 2016 IEEE.",
      "authors": [
        "Nathalie Mitton",
        "Abdoul Aziz Mbacke",
        "Herve Rivano"
      ],
      "categories": null,
      "citations": 4,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/WiMOB.2016.7763249",
      "keywords": [
        "mobile systems",
        "distributed systems",
        "resource allocation",
        "reader anticollision problem",
        "RFID Radio Frequency Identification",
        "MAC layer"
      ],
      "number_of_pages": 8,
      "pages": "1-8",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-5090-0725-7",
        "issn": "21619646",
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "2016 IEEE 12th International Conference on Wireless and Mobile Computing, Networking and Communications (WiMob)"
      },
      "publication_date": "2016-10-17",
      "selected": null,
      "title": "Distributed efficient & fair anticollision for RFID protocol",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85000389507&origin=inward",
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=7763249"
      ]
    },
    {
      "abstract": "In the last few years, there is a change of backend paradigm for modern mobile applications (Apps). Traditionally, one has to develop a complete system, from the mobile front-end to the backend. This practice has evolved much with the recent introduction of the cloud-based backend to the mobile service development community. This paper discusses and studies selected Mobile-Backend-as-a-Service (mBaaS) services, with the focus on the use of these services for a crowd-sourced-based app. Five metrics have been selected to evaluation and compare three mBaaS platforms-Kinvey, App42 and Backendless. The five metrics are Availability, Processing Services, Computing services, Portability and Reconfiguration as well as Usability and Learnability. Both qualitative and quantitative comparison and evaluation have been carried out to produce the outcome of the study. \u00c2\u00a9 2016 IEEE.",
      "authors": [
        "Danial Johan Mohd Ridzuan Tan",
        "Grace Yam Wen Tzi",
        "Sian Lun Lau"
      ],
      "categories": null,
      "citations": 1,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/IC3e.2016.8009038",
      "keywords": [],
      "number_of_pages": 6,
      "pages": "46-51",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-4673-9061-3",
        "issn": null,
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "2016 IEEE Conference on e-Learning, e-Management and e-Services, IC3e 2016"
      },
      "publication_date": "2016-10-10",
      "selected": null,
      "title": "A study on cloud-based backend for crowd-sourced sensor data collection apps",
      "urls": [
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=8009038",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85029360250&origin=inward"
      ]
    },
    {
      "abstract": "Radio-frequency identification (RFID) technology's potential relies on advances made by researchers for addressing the technology's security and privacy vulnerabilities, and making data collection and storage in an RFID system safe. Privacy and security are key concerns, as paramount as efficiency and reliability, in raising the confidence of end users towards RFID technologies. This study proposes two complementary lightweight and efficient serverless security protocols in the presence of untrusted RFID readers. The first one is used for mass authentication of RFID tags and supports mutual authentication with key establishment. The second one is an RFID tag search protocol that helps interacting with one specific tag surrounded by a huge number of other tags. The originality of both protocols holds that no shared parameters are required between tags and readers for mutual authentication support, they refer to the same basic material, and they have low resource demands in storage, bandwidth, energy and computation for both RFID readers and tags. Finally, the authors' protocols have been formally verified under the computational model using CryptoVerif tool. \u00c2\u00a9 The Institution of Engineering and Technology 2016.",
      "authors": [
        "Mtita, C.",
        "Laurent, M.",
        "Delort, J."
      ],
      "categories": null,
      "citations": 14,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1049/iet-ifs.2015.0428",
      "keywords": [],
      "number_of_pages": 10,
      "pages": "262-271",
      "publication": {
        "category": "Journal",
        "cite_score": 2.5,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "17518709",
        "publisher": "John Wiley & Sons Inc.",
        "sjr": 0.308,
        "snip": 0.931,
        "subject_areas": [
          "Information Systems",
          "Computer Networks and Communications",
          "Software"
        ],
        "title": "IET Information Security"
      },
      "publication_date": "2016-09-01",
      "selected": null,
      "title": "Efficient serverless radio-frequency identification mutual authentication and secure tag search protocols with untrusted readers",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=84982133248&origin=inward"
      ]
    },
    {
      "abstract": "The industry of video games is one of the fastest growing sectors in the worldwide economy. One of the key factors to increase engagement and player retention, was the use of various common game concepts such as leaderboards and achievements. The massive use of this approach and the impressive growth of players led to the concept of gamification as a service, later materialized in Game Backend as a Service (GBaaS). Instead of replicating the implementation of the game features in each version of the game for several platforms, GBaaS adhere to a service oriented architecture providing cross-platform game services that lets you easily integrate popular gaming features such as achievements, leaderboards, remote storage and real-time multiplayer in games. This chapter surveys several GBaaS based on the features they offer and on their openness for the integration with computer programming environments. \u00c2\u00a9 2017 by IGI Global. All rights reserved.",
      "authors": [
        "de Queir\u00c3\u00b3s, R.A.P."
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.4018/978-1-5225-1034-5.ch001",
      "keywords": [],
      "number_of_pages": 13,
      "pages": "1-13",
      "publication": {
        "category": "Book",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781522510352",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Gamification-Based E-Learning Strategies for Computer Programming Education"
      },
      "publication_date": "2016-08-23",
      "selected": null,
      "title": "A survey on game backend services",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85018257396&origin=inward"
      ]
    },
    {
      "abstract": "We developed a tele-rehabilitation system to improve community rehabilitation for patients who are discharged early from hospital. The developed tele-rehabilitation system consists of devices designed to reduce the physical and economic burden on users while promoting optimum user movement. A Backend-as-a-Service cloud computing service was used for the communication between terminals. A non-contact sensor, Kinect, was used to measure movement. In addition, we used a three-dimensional (3D) display to present 3D images using binocular parallax, to encourage smooth movement of patients. We used this system for stroke patients and found improvements in task-performance time, smoothness of movements, and range of motion in all patients. No major issues occurred during the tele-rehabilitation. These results demonstrated the high operability and efficacy of our cloud service-based 3D virtual reality tele-rehabilitation system. \u00c2\u00a9 2016 IEEE.",
      "authors": [
        "Norio Kato",
        "Toshiaki Tanaka",
        "Shunichi Sugihara",
        "Koichi Shimizu",
        "Nobuki Kudo"
      ],
      "categories": null,
      "citations": 4,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/ICCSE.2016.7581595",
      "keywords": [
        "3D display",
        "Virtual Reality",
        "BaaS",
        "Tele-rehabilitation"
      ],
      "number_of_pages": 6,
      "pages": "285-290",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-5090-2219-9",
        "issn": null,
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "ICCSE 2016 - 11th International Conference on Computer Science and Education"
      },
      "publication_date": "2016-08-23",
      "selected": null,
      "title": "Trial operation of a cloud service-based three-dimensional virtual reality tele-rehabilitation system for stroke patients",
      "urls": [
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=7581595",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=84994137517&origin=inward"
      ]
    },
    {
      "abstract": "Today's computer systems must meet and maintain service availability, performance, and security requirements. Each of these demands requires redundancy and some form of isolation. When service requirements are implemented separately, the system architecture cannot easily share common components of redundancy and isolation. We will present these service traits collectively as cyber resilience with a system called Self-Cleansing Intrusion Tolerance (SCIT). Further, we will demonstrate that SCIT provides an effective resilient cloud implementation making cost effective utilization of cloud's excess capacity and economies of scale. Lastly, we will introduce the notion of serverless applications utilizing AWS Lambda and how a stateless architecture can drastically reduce operational costs by utilizing cloud function services. \u00c2\u00a9 2016 IEEE.",
      "authors": [
        "Brandon Wagner",
        "Arun Sood"
      ],
      "categories": null,
      "citations": 9,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/QRS-C.2016.56",
      "keywords": [
        "Security Economics",
        "AWS Spot",
        "Cyber Resilience",
        "SCIT",
        "GCP Preemptive"
      ],
      "number_of_pages": 7,
      "pages": "368-374",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-5090-3714-8",
        "issn": null,
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings - 2016 IEEE International Conference on Software Quality, Reliability and Security-Companion, QRS-C 2016"
      },
      "publication_date": "2016-08-01",
      "selected": null,
      "title": "Economics of Resilient Cloud Services",
      "urls": [
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=7573771",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=84991818120&origin=inward"
      ]
    },
    {
      "abstract": " Computer systems today must meet and maintain service availability,\nperformance, and security requirements. Each of these demands requires\nredundancy and some form of isolation. When service requirements are\nimplemented separately, the system architecture cannot easily share common\ncomponents of redundancy and isolation. We will present these service traits\ncollectively as cyber resilience with a system called Self Cleansing Intrusion\nTolerance or SCIT. Further, we will demonstrate that SCIT provides an effective\nresilient cloud implementation making cost effective utilization of cloud\nexcess capacity and economies of scale. Lastly, we will introduce the notion of\nserverless applications utilizing AWS Lambda and how a stateless architecture\ncan drastically reduce operational costs by utilizing cloud function services.\n",
      "authors": [
        "Wagner, Brandon",
        "Sood, Arun"
      ],
      "categories": null,
      "citations": null,
      "comments": "To appear in 1st IEEE International Workshop on Cyber Resilience\n  Economics, August 2016",
      "databases": [
        "arXiv"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": null,
      "publication_date": "2016-07-28",
      "selected": null,
      "title": "Economics of Resilient Cloud Services",
      "urls": [
        "http://arxiv.org/pdf/1607.08508v1",
        "https://arxiv.org/pdf/1607.08508",
        "http://arxiv.org/abs/1607.08508v1"
      ]
    },
    {
      "abstract": "Large Internet companies like Amazon, Netflix, and LinkedIn are using the microservice architecture pattern to deploy large applications in the cloud as a set of small services that can be developed, tested, deployed, scaled, operated and upgraded independently. However, aside from gaining agility, independent development, and scalability, infrastructure costs are a major concern for companies adopting this pattern. This paper presents a cost comparison of a web application developed and deployed using the same scalable scenarios with three different approaches: 1) a monolithic architecture, 2) a microservice architecture operated by the cloud customer, and 3) a microservice architecture operated by the cloud provider. Test results show that microservices can help reduce infrastructure costs in comparison to standard monolithic architectures. Moreover, the use of services specifically designed to deploy and scale microservices reduces infrastructure costs by 70% or more. Lastly, we also describe the challenges we faced while implementing and deploying microservice applications. \u00c2\u00a9 2016 IEEE.",
      "authors": [
        "Villamizar, M.",
        "Garces, O.",
        "Ochoa, L.",
        "Castro, H.",
        "Salamanca, L.",
        "Verano, M.",
        "Casallas, R.",
        "Gil, S.",
        "Valencia, C.",
        "Zambrano, A.",
        "Lang, M."
      ],
      "categories": null,
      "citations": 83,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1109/CCGrid.2016.37",
      "keywords": [
        "cloud computing",
        "service oriented architectures",
        "software engineering",
        "software architecture",
        "microservice architecture",
        "microservices",
        "Amazon Web Services",
        "scalable applications",
        "AWS Lambda"
      ],
      "number_of_pages": 4,
      "pages": "179-182",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781509024520",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings - 2016 16th IEEE/ACM International Symposium on Cluster, Cloud, and Grid Computing, CCGrid 2016"
      },
      "publication_date": "2016-07-18",
      "selected": null,
      "title": "Infrastructure Cost Comparison of Running Web Applications in the Cloud Using AWS Lambda and Monolithic and Microservice Architectures",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=84983458085&origin=inward"
      ]
    },
    {
      "abstract": "The proceedings contain 100 papers. The topics discussed include: Tyrex: size-based resource allocation in MapReduce frameworks; demand-aware power management for power-constrained HPC systems; service level and performance aware dynamic resource allocation in overbooked data centers; SHMEMPMI - shared memory based PMI for improved performance and scalability; DiBA: distributed power budget allocation for large-scale computing clusters; KOALA-F: a resource manager for scheduling frameworks in clusters; in-memory caching orchestration for Hadoop; increasing the performance of data centers by combining remote GPU virtualization with Slurm; CVSS: a cost-efficient and QoS-aware video streaming using cloud services; AMRZone: a runtime AMR data sharing framework for scientific applications; evaluation of in-situ analysis strategies at scale for power efficiency and scalability; a distributed system for storing and processing data from earth-observing satellites: system design and performance evaluation of the visualisation tool; and infrastructure cost comparison of running web applications in the cloud using AWS lambda and monolithic and microservice architectures.",
      "authors": [],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781509024520",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings - 2016 16th IEEE/ACM International Symposium on Cluster, Cloud, and Grid Computing, CCGrid 2016"
      },
      "publication_date": "2016-07-18",
      "selected": null,
      "title": "Proceedings - 2016 16th IEEE/ACM International Symposium on Cluster, Cloud, and Grid Computing, CCGrid 2016",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=84983438087&origin=inward"
      ]
    },
    {
      "abstract": "A basic reason for backend systems in mobile application architectures is the centralized management of state. Mobile clients synchronize local states with the backend in order to maintain an up-to-date view of the application state. As not all mobile social applications require strong consistency guarantees, we survey an alternative approach using special data structures for mobile applications. These data structures only provide eventual consistency, but allow for conflict-free replication between peers. Our analysis collects the requirements of social mobile applications for being suitable for this approach. Based on exemplary mobile social applications, we also point out the benefits of serverless architecture or architectures with a thin backend layer. \u00c2\u00a9 2016 ACM.",
      "authors": [
        "Kraft, R.",
        "Erb, B.",
        "M\u00c3\u00b6dinger, D.",
        "Kargl, F."
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1145/2944789.2944868",
      "keywords": [
        "Social applications",
        "Replication",
        "Mobile systems",
        "CRDTs"
      ],
      "number_of_pages": 6,
      "pages": "49-54",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450343442",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "HotPOST 2016 - Proceedings of the 8th MobiHoc International Workshop on Hot Topics in Planet-Scale mObile computing and online Social Networking"
      },
      "publication_date": "2016-07-05",
      "selected": null,
      "title": "Using conflict-free replicated data types for serverless mobile social applications",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=84982788024&origin=inward"
      ]
    },
    {
      "abstract": "The proceedings contain 10 papers. The topics discussed include: STRAIGHT: stochastic geometry and user history based mobility estimation; a first view on mobile video popularity as time series; leveraging contact pattern to predict future contact pattern in mobile networks; enhancing opportunistic networking using location based social networks; asynchronous reputation systems in device-to-device ecosystems; WI-FAB: attribute-based WLAN access control, without pre-shared keys and backend infrastructures; analyzing social relations for recommending academic conferences; optimal advertisement allocation in online social media feeds; using conflict-free replicated data types for serverless mobile social applications; and opinion dynamics on online-offline interacting networks: media influence and antagonistic interaction.",
      "authors": [],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450343442",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "HotPOST 2016 - Proceedings of the 8th MobiHoc International Workshop on Hot Topics in Planet-Scale mObile computing and online Social Networking"
      },
      "publication_date": "2016-07-05",
      "selected": null,
      "title": "HotPOST 2016 - Proceedings of the 8th MobiHoc International Workshop on Hot Topics in Planet-Scale mObile computing and online Social Networking",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=84980434635&origin=inward"
      ]
    },
    {
      "abstract": "Like many software projects, data pipelines built by Business Intelligence teams often start out as quickly built monoliths, but over time they can be made simpler and more maintainable by splitting them into a series of tightly defined services. In this talk we'll look at the challenges we've faced scaling Data Analytics at Hootsuite, then move into a live coding session, where we'll stitch together a data pipeline as a series of Scala apps, deployed to AWS Lambda, connected using Airbnb's open source Airflow tool. \u00c2\u00a9 2016 ACM.",
      "authors": [
        "Podeswa, Y."
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1145/2959689.2959871",
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450344647",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Applicative 2016"
      },
      "publication_date": "2016-06-01",
      "selected": null,
      "title": "Let's build a Service Oriented Data Pipeline",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85055344898&origin=inward"
      ]
    },
    {
      "abstract": "This paper discusses using hard drives that integrate a key-value interface and network access in the actual drive hardware (Kinetic storage platform) to supply file system functionality in a large scale environment. Taking advantage of higher-level functionality to handle metadata on the drives themselves, a serverless system architecture is proposed. Skipping path component traversal during the lookup operation is the key technique discussed in this paper to avoid performance degradation with highly decentralized metadata. Scalability implications are reviewed based on a fuse file system implementation. \u00c2\u00a9 2016 IEEE.",
      "authors": [
        "Paul Hermann Lensing",
        "Toni Cortes",
        "Jim Hughes",
        "Andr\u00e9 Brinkmann"
      ],
      "categories": null,
      "citations": 15,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/CCGrid.2016.28",
      "keywords": [
        "direct lookup",
        "object storage",
        "distributed",
        "kinetic",
        "file system",
        "key-value storage",
        "metadata scaling"
      ],
      "number_of_pages": 10,
      "pages": "366-375",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-5090-2454-4",
        "issn": null,
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings - 2016 16th IEEE/ACM International Symposium on Cluster, Cloud, and Grid Computing, CCGrid 2016"
      },
      "publication_date": "2016-05-16",
      "selected": null,
      "title": "File System Scalability with Highly Decentralized Metadata on Independent Storage Devices",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=84983405916&origin=inward",
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=7515711"
      ]
    },
    {
      "abstract": "Modern web frameworks and backend-as-a-service providers make it possible for real-time updates to a NoSQL data model to be reflected in the user interfaces of multiple subscribing end-user applications. However, it remains difficult for users to dynamically discover and instantly make use of the data provided by the plethora of REST APIs in existence across various cloud providers today. This paper presents a reference architecture built on the idea of a scalable NoSQL database that allows multiple subscribers to receive instant notifications of database changes through the use of a \"livequery\". By keeping one WebSocket connection open between each client web browser and an Object Synchronization Server, this paper shows how data from multiple disparate REST APIs can be organized and transmitted to interested clients via the database. An example is given featuring a collaborative rich-text editor that makes use of a Named-Entity Recognition microservice. Copyright \u00c2\u00a9 2016 held by owner/author(s).",
      "authors": [
        "Gadea, C.",
        "Trifan, M.",
        "Ionescu, D.",
        "Ionescu, B."
      ],
      "categories": null,
      "citations": 6,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1145/2904111.2904115",
      "keywords": [
        "Collaborative editing",
        "Real-time web",
        "Docker",
        "Cloud computing",
        "Named entity recognition",
        "Microservices"
      ],
      "number_of_pages": null,
      "pages": null,
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450342940",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "3rd Workshop on CrossCloud Infrastructures and Platforms, CrossCloud 2016 - Colocated with EuroSys 2016"
      },
      "publication_date": "2016-04-18",
      "selected": null,
      "title": "A reference architecture for real-time microservice API consumption",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=84971539091&origin=inward"
      ]
    },
    {
      "abstract": "This report analyses security threat of a covert channels to popular P2P networks and their support protocols, like Kademlia, Mainline DHT. This kind of a threat was almost unattended by majority of researchers, despite its considerable potential dangerousness. Using a new, comprehensive approach to the analysis of the covert channels, based on previously proposed generalized model of covert channel, this report presents an example of working covert channel. Aforementioned covert channel uses the resources of the Mainline DHT protocol to send and receive covert data and can't be detected or blocked by any known security filters. \u00c2\u00a9 2016 IEEE.",
      "authors": [
        "Antineskul, A.V.",
        "Bezukladnikov, I.I."
      ],
      "categories": null,
      "citations": 1,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1109/EIConRusNW.2016.7448137",
      "keywords": [
        "Information security",
        "P2P",
        "Covert channels",
        "Mainline DHT"
      ],
      "number_of_pages": 5,
      "pages": "124-128",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781509004454",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings of the 2016 IEEE North West Russia Section Young Researchers in Electrical and Electronic Engineering Conference, EIConRusNW 2016"
      },
      "publication_date": "2016-04-05",
      "selected": null,
      "title": "The building of covert channels in serverless P2P filesharing networks",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=84966534243&origin=inward"
      ]
    },
    {
      "abstract": "The relationship between biodiversity and each ecosystem service or bundle of ecosystem services (e.g. win-win, win-lose or win-neutral) is an active field of research that requires structured and consistent information. The application of that research for conservation and decision-making can be hampered by the ambiguity found in the definition of the nursery function under the ecosystem service perspective. In this paper, we review how the role of nursery habitats is included in the ecosystem services literature, covering conceptual, biophysical and economic reflections. The role of ecosystems as nurseries is mostly analyzed in coastal environments. The main observation is that there is no consensus on the consideration of the nursery function as a service (e.g. which species or habitats) or on how to assess it (e.g. which indicators or valuation methods). After that review, we analyze three different interpretations given to the nursery function, namely the ecological, conservationist and economic point of view; and we distinguish between different types of assessment that may consider the nursery function. We conclude that the nursery function can be considered an ecosystem service on its own right when it is linked to a concrete human benefit and not when it is represented with indicators of general biodiversity or ecosystem condition. Thus, the analysis of the delivery of ecosystem services should be differentiated from the analysis of ecological integrity. Only with this distinction science may be able to quantify the link between biodiversity and ecosystem services and policy may be effective in halting biodiversity loss. Similar considerations could apply for other biodiversity constituents that may be treated as ecosystem services. \u00c2\u00a9 2015 The Authors, Published by Elsevier Ltd.",
      "authors": [
        "Liquete, C.",
        "Cid, N.",
        "Lanzanova, D.",
        "Grizzetti, B.",
        "Reynaud, A."
      ],
      "categories": null,
      "citations": 48,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1016/j.ecolind.2015.11.058",
      "keywords": [
        "Ecosystem services",
        "Nursery habitats",
        "Fisheries",
        "Biodiversity",
        "Ecosystem assessments",
        "Conservation"
      ],
      "number_of_pages": 9,
      "pages": "249-257",
      "publication": {
        "category": "Journal",
        "cite_score": 7.5,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "1470160X",
        "publisher": "Elsevier",
        "sjr": 1.315,
        "snip": 1.644,
        "subject_areas": [
          "Decision Sciences (all)",
          "Ecology",
          "Ecology, Evolution, Behavior and Systematics"
        ],
        "title": "Ecological Indicators"
      },
      "publication_date": "2016-04-01",
      "selected": null,
      "title": "Perspectives on the link between ecosystem services and biodiversity: The assessment of the nursery function",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=84952361011&origin=inward"
      ]
    },
    {
      "abstract": "Scientific workflows consisting of a high number of dependent tasks represent an important class of complex scientific applications. Recently, a new type of serverless infrastructures has emerged, represented by such services as Google Cloud Functions or AWS Lambda. In this paper we take a look at such serverless infrastructures, which are designed mainly for processing background tasks of Web applications. We evaluate their applicability to more compute- and data-intensive scientific workflows and discuss possible ways to repurpose serverless architectures for execution of scientific workflows. A prototype workflow executor function has been developed using Google Cloud Functions and coupled with the HyperFlow workflow engine. The function can run workflow tasks on the Google infrastructure, and features such capabilities as data staging to/from Google Cloud Storage and execution of custom application binaries. We have successfully deployed and executed the Montage astronomic workflow, often used as a benchmark, and we report on initial results of performance evaluation. Our findings indicate that the simple mode of operation makes this approach easy to use, although there are costs involved in preparing portable application binaries for execution in a remote environment. While our evaluation uses a preproduction (alpha) version of the Google Cloud Functions platform, we find the presented approach highly promising. We also discuss possible future steps related to execution of scientific workflows in serverless infrastructures, and the implications with regard to resource management for scientific applications in general. Copyright held by the author(s).",
      "authors": [
        "Malawski, M."
      ],
      "categories": null,
      "citations": 8,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": null,
      "keywords": [
        "Scientific workflows",
        "Cloud",
        "Serverless infrastructures"
      ],
      "number_of_pages": 9,
      "pages": "25-33",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": 0.8,
        "is_potentially_predatory": false,
        "isbn": "9788670314764",
        "issn": "16130073",
        "publisher": "CEUR-WS",
        "sjr": 0.177,
        "snip": 0.345,
        "subject_areas": [
          "Computer Science (all)"
        ],
        "title": "CEUR Workshop Proceedings"
      },
      "publication_date": "2016-01-01",
      "selected": null,
      "title": "Towards serverless execution of scientific workflows - HyperFlow case study",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85016263878&origin=inward"
      ]
    },
    {
      "abstract": "We present OpenLambda, a new, open-source platform for building next-generation web services and applications in the burgeoning model of serverless computation. We describe the key aspects of serverless computation, and present numerous research challenges that must be addressed in the design and implementation of such systems. We also include a brief study of current web applications, so as to better motivate some aspects of serverless application construction. \u00c2\u00a9 2016 USENIX Association. All rights reserved.",
      "authors": [
        "Hendrickson, S.",
        "Sturdevant, S.",
        "Harter, T.",
        "Venkataramani, V.",
        "Arpaci-Dusseau, A.C.",
        "Arpaci-Dusseau, R.H."
      ],
      "categories": null,
      "citations": 169,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "8th USENIX Workshop on Hot Topics in Cloud Computing, HotCloud 2016"
      },
      "publication_date": "2016-01-01",
      "selected": null,
      "title": "Serverless computation with OpenLambda",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85084164509&origin=inward"
      ]
    },
    {
      "abstract": "This paper presents the factors that could potentially affect the reliability of a serverless smart exit sign system, namely an evacuation guidance system based on a wireless sensor network (WSN) without a central server. Serverless smart exit sign system dynamically changes the directions of signs to indicate the shortest safe evacuation paths. Thus, the reliability of these systems is critical. Nevertheless, no research has been conducted to test the reliability of serverless smart exit sign systems. As a first step, we conducted a literature review to analyze the factors that could degrade the network performance of serverless smart exit sign systems. The identified factors were grouped into three categories: physical obstacles, environmental factors, and WSN properties. We plan to develop a prototype of a serverless smart exit sign system and then to conduct experiments to validate the influence of these factors on its network performance.",
      "authors": [
        "Hyunoh Kim",
        "Ghang Lee",
        "Jehyun Cho"
      ],
      "categories": null,
      "citations": 1,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.22260/isarc2016/0060",
      "keywords": [
        "Serverless Evacuation System",
        "Smart Exit Sign System",
        "Wireless Sensor Network"
      ],
      "number_of_pages": 9,
      "pages": "496-504",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": null,
        "publisher": "IAARC",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "ISARC 2016 - 33rd International Symposium on Automation and Robotics in Construction"
      },
      "publication_date": "2016-01-01",
      "selected": null,
      "title": "Derivation of the Factors Influencing the Network Performance of Serverless Smart Exit Sign Systems Based on Wireless Sensor Networks ",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=84994353610&origin=inward",
        ".././publications/fulltext/ISARC2016-Paper092.pdf"
      ]
    },
    {
      "abstract": "The proceedings contain 10 papers. The topics discussed include: using scientific workflows for science and engineering optimization; using simple PID controllers to prevent and mitigate faults in scientific workflows; towards serverless execution of scientific workflows - HyperFlow case study; energy-efficient mapping of big data workflows under deadline constraints; online input data reduction in scientific workflows; lessons learned from applying big data paradigms to large scale scientific workflows; integrating domain-data steering with code-profiling tools to debug data-intensive workflows; and applications of the FACEIT data science portal and workflow engine for operational food quality prediction and assessment: mussel farm monitoring in the bay of Napoli, Italy.",
      "authors": [],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": 0.8,
        "is_potentially_predatory": false,
        "isbn": "9788670314764",
        "issn": "16130073",
        "publisher": "CEUR-WS",
        "sjr": 0.177,
        "snip": 0.345,
        "subject_areas": [
          "Computer Science (all)"
        ],
        "title": "CEUR Workshop Proceedings"
      },
      "publication_date": "2016-01-01",
      "selected": null,
      "title": "CEUR Workshop Proceedings",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85016237270&origin=inward"
      ]
    },
    {
      "abstract": "Rapid expansion in cloud event technologies such as Amazon Web Service's Lambda, IBM Bluemix's OpenWhisk, Google Cloud Platform's Cloud Functions, and Microsoft Azure's Functions motivates study of software development in these services and their potential as a disruptive force in commercial cloud technologies. In addition to discussing the current state of cloud event services, this paper presents two real world applications utilizing these platforms: Lambdefy, a library designed to make traditional web application run effectively in AWS Lambda, and a performant media management service designed by Trek10, capable of resizing thousands of images per second. Furthermore, we discuss how cloud event technologies enable and/or limit these applications, motivate new software design paradigms in a cloud event environment, and highlight compelling use case scenarios and barriers to entry for cloud event services. AWS cloud technologies are exclusively used due to their maturity and the recent release of the other platforms, while Node.js and the Serverless Framework are utilized for deployment and application development.",
      "authors": [
        "Garrett McGrath",
        "Jared Short",
        "Stephen Ennis",
        "Brenden Judson",
        "Paul Brenner"
      ],
      "categories": null,
      "citations": 19,
      "comments": null,
      "databases": [
        "IEEE"
      ],
      "doi": "10.1109/CLOUD.2016.0060",
      "keywords": [
        "Cloud Functions",
        "IBM Bluemix",
        "AWS",
        "Microsoft Azure",
        "Serverless",
        "cloud events",
        "OpenWhisk",
        "Google Cloud Platform",
        "micro-services",
        "Lambda",
        "containers"
      ],
      "number_of_pages": 7,
      "pages": "400-406",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-5386-7236-5",
        "issn": "2159-6190",
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "2018 IEEE 11th International Conference on Cloud Computing (CLOUD)"
      },
      "publication_date": "2016-01-01",
      "selected": null,
      "title": "Cloud Event Programming Paradigms: Applications and Analysis",
      "urls": [
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=7820297"
      ]
    },
    {
      "abstract": "Dynamic environments pose a challenge for traditional access control models where permissions are granted or revoked merely based on predefined and static access policies making them incapable of dynamically adapting to changing conditions. Risk adaptive access control models have been gaining more attention in the research community as an alternative approach to overcome the limitations of traditional access control models. Radio Frequency Identification (RFID) is an emerging technology widely utilized in both physical and logical access control systems because of its contactless nature, low cost, high read/write speed and long distance operation. Serverless RFID system architecture offers better availability assurance and lower implementation cost, while access rights management is easier in server-based architecture. In this study, we continue to build on our previous research on the privacy and security of RFID access control systems without a backend database in order to overcome its limitations. We propose a hybrid design for a risk adaptive RFID access control system; that is, dynamically alternating between two access control modes, online (server-based) and offline (serverless), to adapt to the level of risk depending on rule-based risk scenarios and current risk value. The proposed design combines features of both serverless and risk adaptive access control systems. \u00c2\u00a9 2015 John Wiley & Sons, Ltd.",
      "authors": [
        "Al-Zewairi, M.",
        "Alqatawna, J.",
        "Atoum, J."
      ],
      "categories": null,
      "citations": 3,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1002/sec.1303",
      "keywords": [
        "Risk adaptive",
        "Access control",
        "Security",
        "RFID"
      ],
      "number_of_pages": 10,
      "pages": "3826-3835",
      "publication": {
        "category": "Journal",
        "cite_score": 4.2,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "19390114",
        "publisher": "Hindawi Limited",
        "sjr": 0.446,
        "snip": 1.155,
        "subject_areas": [
          "Information Systems",
          "Computer Networks and Communications"
        ],
        "title": "Security and Communication Networks"
      },
      "publication_date": "2015-12-01",
      "selected": null,
      "title": "Risk adaptive hybrid RFID access control system",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=84973548636&origin=inward"
      ]
    },
    {
      "abstract": "High performance computing fault tolerance depends on scalable parallel file system performance. For more than a decade scalable bandwidth has been available from the object storage systems that underlie modern parallel file systems, and recently we have seen demonstrations of scalable parallel metadata using dynamic partitioning of the namespace over multiple metadata servers. But even these scalable parallel file systems require significant numbers of dedicated servers, and some workloads still experience bottlenecks. We envision exascale parallel file systems that do not have any dedicated server machines. Instead a parallel job instantiates a file system namespace service in client middleware that operates on only scalable object storage and communicates with other jobs by sharing or publishing namespace snapshots. Experiments shows that our serverless file system design, DeltaFS, performs metadata operations orders of magnitude faster than traditional file system architectures. \u00c2\u00a9 2015 ACM.",
      "authors": [
        "Zheng, Q.",
        "Ren, K.",
        "Gibson, G.",
        "Settlemyer, B.W.",
        "Grider, G."
      ],
      "categories": null,
      "citations": 32,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1145/2834976.2834984",
      "keywords": [],
      "number_of_pages": 6,
      "pages": "1-6",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450340083",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings of PDSW 2015: 10th Parallel Data Storage Workshop - Held in conjunction with SC 2015: The International Conference for High Performance Computing, Networking, Storage and Analysis"
      },
      "publication_date": "2015-11-15",
      "selected": null,
      "title": "DeltaFS: Exascale file systems scale better without dedicated servers",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=84959330947&origin=inward"
      ]
    },
    {
      "abstract": "This paper presents a field experimentation and demonstration addressing serverless information services that provide both group messaging with ordering guarantees and robust file/media object sharing in a tactical edge communication environment. These serverless information services constitute the main functional components of our real time image and ordered annotation sharing application, called Tactigram. The purpose of Tactigram is to integrate serverless services in useful tool demonstrating the utility of real time information exchange to the warfighter. We show how a Group Communication Service (GCS) framework provides for quick exchange of small data, and tactical torrents (SISTO) provide for file sharing used by Tactigram. The demonstration was conducted as part of the Agile Bloodhound 2014 (AB14) field event. In accordance with AB14 use case scenarios, Android devices were used to exchange images and annotations over Soldier Radio Waveform (SRW) and WiFi MANETs in fully distributed manner. While the results obtained constitute a very preliminary evaluation of serverless group communication, the field test environment was very useful in highlighting critical design points (e.g., on-the-move dynamics) where enhancements of the protocol are needed. \u00c2\u00a9 2015 IEEE.",
      "authors": [
        "Carrie Spiker",
        "Rodolfo Santiago",
        "Thomas Goff",
        "Claudiu Danilov",
        "Jae H. Kim",
        "Brian Adamson",
        "David Shur",
        "Kyriakos Manousakis"
      ],
      "categories": null,
      "citations": 2,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/MILCOM.2015.7357430",
      "keywords": [
        "Multicast communication",
        "Serverless networks",
        "Communication networks",
        "Distributed networking",
        "Wireless networks",
        "P2P networks",
        "Content distribution networks",
        "Tactical torrents",
        "Group communications"
      ],
      "number_of_pages": 6,
      "pages": "127-132",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-5090-0073-9",
        "issn": null,
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings - IEEE Military Communications Conference MILCOM"
      },
      "publication_date": "2015-10-26",
      "selected": null,
      "title": "Experiment and field demonstration of serverless group communication",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=84959280960&origin=inward",
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=7357430"
      ]
    },
    {
      "abstract": "We propose a server less data movement architecture in which we bypass data transfer nodes, the file system stack, and the host system stack and directly move the data from one disk array controller to another in order to obtain the highest end-to-end performance. Under the current data movement architecture, separate data transfer nodes arbitrate data transfer by input/output to parallel file systems over local-area networks and parallel file systems read/write actual data from/to disks through disk controllers. Our new architecture embeds parallel file system servers and data transfer processes into a disk controller to eliminate the data path between a data transfer process and a parallel file system. This prevents the network between those two entities from being a bottleneck in end-to-end data transfer. In addition, we propose a parallel data-layout-aware data transfer, where multiple embedded data transfer processes send segments of a file concurrently while considering data layout in disks to improve data transfer performance. Our experimental results show that our proposed architecture is feasible and outperforms the traditional architecture significantly. \u00c2\u00a9 2015 IEEE.",
      "authors": [
        "Jung, E.-S.",
        "Kettimuthu, R."
      ],
      "categories": null,
      "citations": 3,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1109/IPDPSW.2015.69",
      "keywords": [
        "Process control",
        "Servers",
        "Layout",
        "Data transfer",
        "Switches",
        "Arrays"
      ],
      "number_of_pages": 8,
      "pages": "557-564",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "0769555101",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings - 2015 IEEE 29th International Parallel and Distributed Processing Symposium Workshops, IPDPSW 2015"
      },
      "publication_date": "2015-09-29",
      "selected": null,
      "title": "High-Performance Serverless Data Transfer over Wide-Area Networks",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=84962234927&origin=inward"
      ]
    },
    {
      "abstract": "Small and inexpensive computing devices are becoming potential players in the Internet arena as they are used for collecting or generating information and later relay them to the designated servers. The information gathered must be adequately protected against all kinds of attacks during storage and communication. However, smart constrained devices have limited resources and unable to run most of the classical protocols that provide robust security. This article presents a lightweight mutual authentication protocol for resource constrained computing devices with high mobility. Our solution is novel as it facilitates resource constrained devices to autonomously perform mutual authentication and establish a session key with other parties without sharing common parameters. Our proposed protocol is lightweight, symmetric and requires few space for storing keys and parameters locally. The protocol is formally verified using AVISPA tool. \u00c2\u00a9 2015 IEEE.",
      "authors": [
        "Mtita, C.",
        "Laurent, M.",
        "Daragon, P."
      ],
      "categories": null,
      "citations": 1,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1109/NTMS.2015.7266521",
      "keywords": [
        "Symmetric Protocol",
        "Lightweight security",
        "Validation",
        "Low energy footprint",
        "Mutual Authentication",
        "Constrained Computing Devices",
        "Security"
      ],
      "number_of_pages": null,
      "pages": null,
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781479987849",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "2015 7th International Conference on New Technologies, Mobility and Security - Proceedings of NTMS 2015 Conference and Workshops"
      },
      "publication_date": "2015-09-14",
      "selected": null,
      "title": "Serverless lightweight mutual authentication protocol for small mobile computing devices",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=84960883345&origin=inward"
      ]
    },
    {
      "abstract": "One of the important features of an RFID system is its ability to search for a particular tag among a group of tags. In order to ensure privacy and security of the tags, the search has to be conducted in a secure fashion. To our knowledge not much work has been done in this secure search area of RFID. The minimal work that has been done do not comply with the EPC C1G2 (Class-1 Gen-2) standard since most of them use expensive hash operations or sophisticated encryption schemes that cannot be implemented in the low-cost passive tags that are highly resource constrained. Our work aims to fill this gap by proposing a protocol that is based on simple XOR encryption and 128 bit pseudo random number generators (PRNG), operations that can be easily implemented on low-cost passive tags. Thus, our protocol enables large scale implementations and achieves EPC C1G2 compliance while meeting the security requirements. The protocol provides additional protection by hiding the pseudo-random number during all transmissions using a blind-factor. \u00c2\u00a9 2015 IEEE.",
      "authors": [
        "Sundaresan, S.",
        "Doss, R.",
        "Piramuthu, S.",
        "Zhou, W."
      ],
      "categories": null,
      "citations": 24,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1109/TDSC.2014.2302305",
      "keywords": [
        "RFID",
        "tag search",
        "secure search",
        "serverless search",
        "security protocols"
      ],
      "number_of_pages": 13,
      "pages": "230-242",
      "publication": {
        "category": "Journal",
        "cite_score": 13.9,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "15455971",
        "publisher": "Institute of Electrical and Electronics Engineers Inc.",
        "sjr": 1.274,
        "snip": 3.236,
        "subject_areas": [
          "Computer Science (all)",
          "Electrical and Electronic Engineering"
        ],
        "title": "IEEE Transactions on Dependable and Secure Computing"
      },
      "publication_date": "2015-03-01",
      "selected": null,
      "title": "Secure tag search in RFID systems using mobile readers",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=84925234421&origin=inward"
      ]
    },
    {
      "abstract": "In last decade, classic IT-infrastructures in modern enterprises have been changed sufficiently by cloud computing. However, cloud approach can be used effectively in other applications. In this paper, we explore applicability of cloud paradigm in mobile robotics. First approach is using some classic cloud architectures, such as Infrastructure-as-a-Service, Platform-as-a-Service and Software-as-a-Service, with heterogeneous distributed mobile robotic system - for example, it can be used to offload a time consuming computations from mobile platforms to remote nodes or services. Second approach is using some special 'robotic' types of clouds, such as Robot-as-a-Service and Function-as-a-Service to leverage abilities of a single robotics platform in mobile robotic system as services to robotic system's users or other mobile robotic platforms. We explore both approaches and give them some architectural examples. \u00c2\u00a9 2015 IEEE.",
      "authors": [
        "A.A. Dyumin",
        "L.A. Puzikov",
        "M.M. Rovnyagin",
        "G.A. Urvanov",
        "I.V. Chugunkov"
      ],
      "categories": null,
      "citations": 16,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/EIConRusNW.2015.7102233",
      "keywords": [
        "cloud robotics",
        "mobile robotics",
        "software architectures",
        "cloud computing"
      ],
      "number_of_pages": 6,
      "pages": "65-70",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-4799-7305-7",
        "issn": null,
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings of the 2015 IEEE North West Russia Section Young Researchers in Electrical and Electronic Engineering Conference, ElConRusNW 2015"
      },
      "publication_date": "2015-02-02",
      "selected": null,
      "title": "Cloud computing architectures for mobile robotics",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=84933574830&origin=inward",
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=7102233"
      ]
    },
    {
      "abstract": "One of the weakest points of scientific research is the loss of data. A tiny fraction of the information generated onsite is published or released to public knowledge, and many useful studies end up stored in papers or emails without being utilized. Live ANDES is a mobile-cloud shared workspace designed to address this problem, promoting citizen science, data collection and analysis for wildlife conservation. It works by gathering geo-localized data provided by the scientific community, amateur naturalists, park rangers and people at large through web and mobile applications. Live ANDES offers filters, visualization and download options to work with existing data. Researchers can use this new information to identify species, ranges of distribution, and detect key habitat factors and potential threats to their conservation. Live ANDES is implemented using the Backend as a Service pattern on Microsoft Azure to manage the processing of the large amounts of data generated from sightings. It includes an API for mobile and desktop clients hosted in an Azure Virtual Machine, cloud storage and connection with external services to complement the existing information about recorded sightings. This paper discusses Live ANDES software design, architecture and a study case, in order to demonstrate an actual application of data management in the cloud and its impact on conservation. \u00c2\u00a9 2015 IEEE.",
      "authors": [
        "Cristian Bonacic",
        "Andres Neyem",
        "Andrea Vasquez"
      ],
      "categories": null,
      "citations": 3,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/eScience.2015.64",
      "keywords": [
        "eScience in the cloud",
        "Wildlife conservation",
        "Mobile shared workspaces",
        "Backend as a Service",
        "Digital repositories",
        "Cloud workspaces",
        "Data management",
        "Data Science"
      ],
      "number_of_pages": 9,
      "pages": "215-223",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-4673-9325-6",
        "issn": null,
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings - 11th IEEE International Conference on eScience, eScience 2015"
      },
      "publication_date": "2015-01-01",
      "selected": null,
      "title": "Live ANDES: Mobile-Cloud Shared Workspace for Citizen Science and Wildlife Conservation",
      "urls": [
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=7304294",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=84959060226&origin=inward"
      ]
    },
    {
      "abstract": "Sub-microsecond network and memory latencies require fast user-level access to local and remote storage. While user-level access to local storage has been demonstrated recently, it does currently not extend to serverless parallel systems in datacenter environments. We propose direct user-level access to remote storage in a distributed setting, unifying fast data access and high-performance remote memory access programming. We discuss a minimal hardware extension of the IOMMU to enable direct remote storage access. In order to maintain optimal performance in the system, we use epoch-based accesses to allow fine-tuning of atomicity, consistency, isolation, and durability semantics. We also address the problem of user-managed coherent caching. Finally, we briefly discuss the design of DiDAFS, a Distributed Direct Access File System that enables efficient data analytics use-cases such as buffered producer-consumer synchronization and key-value stores as well as deeper integration of storage into high performance computing applications. \u00c2\u00a9 HotOS 2015.",
      "authors": [
        "Hoefler, T.",
        "Ross, R.B.",
        "Roscoe, T."
      ],
      "categories": null,
      "citations": 5,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "15th Workshop on Hot Topics in Operating Systems, HotOS 2015"
      },
      "publication_date": "2015-01-01",
      "selected": null,
      "title": "Distributing the data plane for remote storage access",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85092042975&origin=inward"
      ]
    },
    {
      "abstract": "This paper proposes a novel analytical approach to the analysis of the queuing delay and medium access distribution of carrier sense multiple access with collision avoidance (CSMA-CA) protocols over multihop personal area networks (MPANs). The proposed approach considers a general case without restrictions on the topology, traffic generation patterns, or multipath routing policy, and it accounts for heterogeneous traffic patterns, all possible packet loss scenarios, and the effect of the length of the backoff on the channel assessment. This paper uses statistical theorems to derive the moment generating function (mgf) of the time required to service a packet and then uses this function as a service distribution in a GI/G/1 queuing model to derive the interdeparture and total queuing delays. From these functions, the end-to-end delay, jitter, throughput, and failure transmission probability over a path are derived. In addition to determining these metrics, this paper exploits the statistical features of the mgf to determine the rare-event probability of the service function. The proposed approach is exemplified using the state-of-the-art IEEE 802.15.4 CSMA-CA protocol, and its accuracy is demonstrated through comparison with simulations. \u00c2\u00a9 1967-2012 IEEE.",
      "authors": [
        "Mohammed Baz",
        "Paul D. Mitchell",
        "Dave A. J. Pearce"
      ],
      "categories": null,
      "citations": 11,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/TVT.2014.2354475",
      "keywords": [
        "IEEE 802.15.4",
        "queuing delay",
        "Carrier sense multiple access with collision avoidance (CSMA-CA)",
        "medium access control (MAC)",
        "multihop"
      ],
      "number_of_pages": 19,
      "pages": "2972-2990",
      "publication": {
        "category": "Journal",
        "cite_score": 10.9,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "1939-9359",
        "publisher": "Institute of Electrical and Electronics Engineers Inc.",
        "sjr": 1.365,
        "snip": 2.086,
        "subject_areas": [
          "Automotive Engineering",
          "Applied Mathematics",
          "Aerospace Engineering",
          "Electrical and Electronic Engineering"
        ],
        "title": "IEEE Transactions on Vehicular Technology"
      },
      "publication_date": "2015-01-01",
      "selected": null,
      "title": "Analysis of Queuing Delay and Medium Access Distribution Over Wireless Multihop PANs",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=84937597174&origin=inward",
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=6891336"
      ]
    },
    {
      "abstract": "Radio frequency identification (RFID) has spread into many fields. Its security and privacy has received more and more attention. Based on traditional authentication protocols, some other branches related to practical applications have been introduced including server-less authentication and searching protocols. The server-less searching protocol is extended from server-less authentication protocol and both of them are executedwithout the support from the backend servers. Through analyzing some proposed protocols, we found that the probabilistic tracking attack is one of the major threats on the serverless RFID security protocols. The probability of being tracked and the cost on computation are related with the probability of the undesired tag\u2019s response. Based on the analysis, a practical conclusion is given which can be used in most of the server-less RFID systems.",
      "authors": [
        "Ping Huang",
        "Haibing Mu",
        "Fei Zeng"
      ],
      "categories": null,
      "citations": 1,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.2498/cit.1002549",
      "keywords": [
        "RFID",
        "security",
        "authentication",
        "searching",
        "server-less"
      ],
      "number_of_pages": 8,
      "pages": "295-302",
      "publication": {
        "category": "Journal",
        "cite_score": 1.4,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "13301136",
        "publisher": "The University of Zagreb Computing Centre (SRCE)",
        "sjr": 0.169,
        "snip": 0.356,
        "subject_areas": [
          "Computer Science (all)"
        ],
        "title": "CIT. Journal of Computing and Information Technology"
      },
      "publication_date": "2015-01-01",
      "selected": null,
      "title": "Analysis on the Performance of Server-less RFID Searching Protocol",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=84951268177&origin=inward",
        "http://cit.fer.hr/index.php/CIT/article/download/2549/1751"
      ]
    },
    {
      "abstract": "Hash based Server/Serverless Adaptive and Mutual Authentication\nProtocol of RFID",
      "authors": [
        "Guowei, Wang ",
        "Zongpu, Jia ",
        "Weiping, Peng "
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.2174/1874110X01509010483",
      "keywords": [
        "",
        "Authentication protocol",
        "RFID",
        "Peng  Weiping",
        "Jia  Zongpu",
        "Server/Serverless Adaptive",
        "Hash",
        "Wang  Guowei",
        "Hash based Server/Serverless Adaptive and Mutual Authentication\nProtocol of RFID"
      ],
      "number_of_pages": 8,
      "pages": "483-490",
      "publication": {
        "category": "Journal",
        "cite_score": null,
        "is_potentially_predatory": true,
        "isbn": null,
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "The Open Cybernetics & Systemics Journal"
      },
      "publication_date": "2015-01-01",
      "selected": null,
      "title": "Hash based Server/Serverless Adaptive and Mutual Authentication\nProtocol of RFID",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=84988530053&origin=inward",
        "http://benthamopen.com/contents/pdf/TOCSJ/TOCSJ-9-483.pdf"
      ]
    },
    {
      "abstract": "With the rapid developments of the IoT (Internet of Things) and the cloud computing, cloud-based RFID systems attract more attention. Users can reduce their cost of deploying and maintaining the RFID system by purchasing cloud services. However, the security threats of cloud-based RFID systems are more serious than those of traditional RFID systems. In cloud-based RFID systems, the connection between the reader and the cloud database is not secure and cloud service provider is not trusted. Therefore, the users have to encrypt their data stored in the cloud database to prevent the leakage of privacy. In addition, the reader's location privacy should be protected to avoid its leak to the cloud provider. In this paper, a cloud-based RFID mutual authentication protocol without leaking location privacy to the cloud is proposed. It provides real-time mutual authentication between the reader and the tag and protects the reader's location privacy by introducing the location privacy cloud. Compared with traditional backend-server-based schemes and serverless schemes, the proposed scheme has obvious advantages in deployment cost, scalability, real-time authentication, and the tag's computational complexity. \u00c2\u00a9 2015 Qingkuan Dong et al.",
      "authors": [
        "Dong, Q.",
        "Tong, J.",
        "Chen, Y."
      ],
      "categories": null,
      "citations": 11,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1155/2015/937198",
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": {
        "category": "Journal",
        "cite_score": 3.3,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "15501329",
        "publisher": "SAGE Publications Inc.",
        "sjr": 0.324,
        "snip": 0.742,
        "subject_areas": [
          "Engineering (all)",
          "Computer Networks and Communications"
        ],
        "title": "International Journal of Distributed Sensor Networks"
      },
      "publication_date": "2015-01-01",
      "selected": null,
      "title": "Cloud-Based RFID Mutual Authentication Protocol without Leaking Location Privacy to the Cloud",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=84946925470&origin=inward"
      ]
    },
    {
      "abstract": "The proposed 6-Hop P2P (6-Hop) is an improved overlay network topology that intends to enhance the current P2P that houses a file sharing and media broadcasting (FSMB) application. A P2P system provides a serverless platform for the current FSMB application. It allows media files in each peer to be located by other peers in the network using any word in the file name. The current FSMB application is a closed system where only registered peers can join the overlay network. However, the current broadcasting system has shown some aspects of inefficiency. Two principle weaknesses identified are as follow: query messages flood the overlay network which taking up the bandwidth of the network; and, the search service is not reliable. When a new peer joins the P2P-based FSMB system, registered peers will randomly join clusters in the network. When a peer queries a specific or part of a file name, the current P2P examine all the peers and all the files in each peer. This has resulted in low recall rate and heavy query messages in the overlay network. The proposed 6-Hop P2P is an overlay network that adopts small-world characteristics attempting to improve the recall rate and to reduce the amount of query messages. The proposed P2P is designed using the 'similarity interest' value to reduce unnecessary routing and to cut down the number of hops required by the search. It also rewires peers base on recall-rate learning algorithm to form clusters relying on the 'interest' bit value of QRP table. This paper presents the proposed 6-Hop model and the work-in-progress results with a short discussion on its prototype. \u00c2\u00a9 2014 IEEE.",
      "authors": [
        "Tong Ming Lim",
        "Angela Lee Siew Hoong",
        "Teck Min Chin"
      ],
      "categories": null,
      "citations": 1,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/PIC.2014.6972369",
      "keywords": [
        "structured p2p",
        "unstructured p2p",
        "p2p",
        "hybrid bee",
        "clustered p2p"
      ],
      "number_of_pages": 5,
      "pages": "419-423",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-4799-2031-0",
        "issn": null,
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "PIC 2014 - Proceedings of 2014 IEEE International Conference on Progress in Informatics and Computing"
      },
      "publication_date": "2014-05-16",
      "selected": null,
      "title": "The 6-hop peer-to-peer system",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=84919371768&origin=inward",
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=6972369"
      ]
    },
    {
      "abstract": "Mobile phone is now becoming a necessary gadget in our daily life. Mobile applications have been proposed to advance the function of mobile phone. Location service application is a kind of mobile application that provides location information such as current location of the mobile phone. GPS is the popular technology for location service on mobile phone because many models of mobile phone are embedded with GPS sensor. Although GPS can provide high accuracy over outdoor scenario, GPS cannot provide good accuracy in indoor environment because the GPS signal from GPS satellites is blocked by the structure of building. The indoor localization systems have been proposed to address the above-mentioned problem. Many indoor localization systems require costly back-end server to process location. Moreover, the devices need to connect to the back-end servers to request the service. In this paper, we propose a serverless indoor localization system for mobile phone platform. The proposed system does not need any support from back-end server. The localization is processed on mobile phone. The system is developed as an Android application, utilizing Wi-Fi signal to determine the current location of mobile phone and uses mobile ad hoc network to disseminate the current location to other users in the system. The proposed system achieves accuracy up to 83.43% when the system is deployed in the two-floors building, which is the experimental site. \u00c2\u00a9 2014 IEEE.",
      "authors": [
        "Kornkanok Khaoampai",
        "Kamonluk Suksen",
        "Kulit Na Nakorn",
        "Kultida Rojviboonchai"
      ],
      "categories": null,
      "citations": 4,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/JCSSE.2014.6841863",
      "keywords": [
        "Ad hoc network",
        "Indoor Localization",
        "Wi-Fi"
      ],
      "number_of_pages": 6,
      "pages": "176-181",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-4799-5821-4",
        "issn": null,
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "2014 11th Int. Joint Conf. on Computer Science and Software Engineering: \"Human Factors in Computer Science and Software Engineering\" - e-Science and High Performance Computing: eHPC, JCSSE 2014"
      },
      "publication_date": "2014-05-14",
      "selected": null,
      "title": "DecaFriend: Serverless indoor localization system on mobile phone platform",
      "urls": [
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=6841863",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=84904557149&origin=inward"
      ]
    },
    {
      "abstract": "The growing ubiquity and pervasiveness of sensors and smart devices, with the consequent availability of a large amount of \u00c2\u00ablocal\u00c2\u00bb and contextualized information, are giving rise to a wealth of \u00c2\u00abcontext- aware\u00c2\u00bb applications and services. In this work we consider an opportunistic communication scheme called Floating Content (FC), which was specifically designed for serverless distributed context-aware applications. So far, the performance analysis of FC, and in particular of content lifetime and availability, was based on simplified system models and fluid system analysis. The resulting performance estimates did not account for the effects of propagation characteristics, mobility patterns, and communication protocols, all factors known to significantly affect the performance of opportunistic communication schemes. This article studies the main issues related to the performance of FC service in a realistic office setting through a first experimental evaluation of a mobile app for Android devices. Our experimental results confirm the feasibility of FC service for supporting practical context-aware mobile applications in office settings. \u00c2\u00a9 2014 IEEE.",
      "authors": [
        "Shahzad Ali",
        "Gianluca Rizzo",
        "Vincenzo Mancuso",
        "Vittorio Cozzolino",
        "Marco Ajmone Marsan"
      ],
      "categories": null,
      "citations": 11,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/MCOM.2014.6829944",
      "keywords": [],
      "number_of_pages": 6,
      "pages": "49-54",
      "publication": {
        "category": "Journal",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "1558-1896",
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "IEEE Communications Magazine"
      },
      "publication_date": "2014-01-01",
      "selected": null,
      "title": "Experimenting with floating content in an office setting",
      "urls": [
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=6829944",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=84903159268&origin=inward"
      ]
    },
    {
      "abstract": "With the rapid growth of RFID applications, security has become an important issue. Security protocols work as a kernel for RFID technology. In this paper, we propose a serverless protocol to protect...",
      "authors": [
        "Zhijun Ge",
        "Yongsheng Hao"
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1007/978-3-642-37829-4_60",
      "keywords": [
        "Security",
        "Authentication protocol",
        "Radio frequency identification (RFID)",
        "Desynchronizing attack"
      ],
      "number_of_pages": 10,
      "pages": "723-732",
      "publication": {
        "category": "Book",
        "cite_score": 0.9,
        "is_potentially_predatory": false,
        "isbn": "9783030577957",
        "issn": "21945357",
        "publisher": "Springer Verlag",
        "sjr": 0.184,
        "snip": 0.428,
        "subject_areas": [
          "Control and Systems Engineering",
          "Computer Science (all)"
        ],
        "title": "Workshops of  the International Conference on Advanced Information Networking and Applications"
      },
      "publication_date": "2014-01-01",
      "selected": null,
      "title": "Analysis and Improvement of Anonymous Authentication Protocol for Low-Cost RFID Systems",
      "urls": [
        "https://link.springer.com/content/pdf/10.1007%2F978-3-642-37829-4_60.pdf",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=84927625203&origin=inward"
      ]
    },
    {
      "abstract": "The design of secure authentication protocols for radio frequency identification (RFID) system is still a quite challenging problem. Many authentication protocols for RFID have been proposed, but...",
      "authors": [
        "Miaolei Deng",
        "Weidong Yang",
        "Weijun Zhu"
      ],
      "categories": null,
      "citations": 10,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1007/978-3-319-01273-5_119",
      "keywords": [
        "Authentication protocols",
        "Security",
        "Attack",
        "RFID"
      ],
      "number_of_pages": 7,
      "pages": "1055-1061",
      "publication": {
        "category": "Book",
        "cite_score": 0.5,
        "is_potentially_predatory": false,
        "isbn": "9789813369764",
        "issn": "18761100",
        "publisher": "Springer Verlag",
        "sjr": 0.134,
        "snip": 0.204,
        "subject_areas": [
          "Industrial and Manufacturing Engineering"
        ],
        "title": "Lecture Notes in Electrical Engineering"
      },
      "publication_date": "2014-01-01",
      "selected": null,
      "title": "Weakness in a Serverless Authentication Protocol for Radio Frequency Identification",
      "urls": [
        "https://link.springer.com/content/pdf/10.1007%2F978-3-319-01273-5_119.pdf",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=84893736777&origin=inward"
      ]
    },
    {
      "abstract": "The problems of serverless connections between clients and audiovisual data transmission in peer-to-peer videoconferencing web application are discussed. The serverless connections based on the...",
      "authors": [
        "Anton I. Saveliev",
        "Irina V. Vatamaniuk",
        "Andrey L. Ronzhin"
      ],
      "categories": null,
      "citations": 5,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1007/978-3-319-10353-2_15",
      "keywords": [
        "peer-to-peer protocols",
        "data exchange in web applications",
        "audio/video stream distribution",
        "peer-to-peer videoconferencing",
        "media transfer protocols",
        "group video chat"
      ],
      "number_of_pages": 11,
      "pages": "164-174",
      "publication": {
        "category": "Book",
        "cite_score": 1.8,
        "is_potentially_predatory": false,
        "isbn": "9783030715922",
        "issn": "03029743",
        "publisher": "Springer Verlag",
        "sjr": 0.249,
        "snip": 0.628,
        "subject_areas": [
          "Databases",
          "Cryptography and Security",
          "Distributed, Parallel, and Cluster Computing",
          "Theoretical Computer Science",
          "Computer Science (all)"
        ],
        "title": "IFIP International Conference on Distributed Applications and\n  Interoperable Systems, DAIS 2017: Distributed Applications and Interoperable\n  Systems pp 83-98"
      },
      "publication_date": "2014-01-01",
      "selected": null,
      "title": "Architecture of Data Exchange with Minimal Client-Server Interaction at Multipoint Video Conferencing",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=84905915933&origin=inward",
        "https://link.springer.com/content/pdf/10.1007%2F978-3-319-10353-2_15.pdf"
      ]
    },
    {
      "abstract": "From the leading publisher of Android books, Apress' Expert Android gives you advanced techniques for customizing views, controls, and layouts. You'll learn to develop apps in record time using JSON, Advanced Form Processing, and the BaaS (Backend As A Service) platform Parse. The book also includes extensive coverage on OpenGL, Search, and Telephony. With these advanced and time saving technologies you'll be able to release compelling mobile applications in Google Play and the Amazon Appstore at a rapid pace. In Expert Android, you'll learn to: Borrow, reuse, or build custom Android UI components Create 3D experiences using OpenGL ES 2.0 Write collaborative applications in the Parse cloud and communicate with your app user community through Parse Push Technology Reduce the time-to-market while creating rock solid apps for multiple devices Whether you are an individual or enterprise developer, in Expert Android you'll find the advanced techniques and practices to take your mobile apps to the next level. Regardless of the Android release, this book serves as your definitive, capstone reference for your Apress Android experience. Copyright \u00c2\u00a9 2013 by Satya Komatineni and Dave MacLean. All rights are reserved.",
      "authors": [
        "Komatineni, S.",
        "MacLean, D."
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1007/978-1-4302-4951-1",
      "keywords": [],
      "number_of_pages": 406,
      "pages": "1-406",
      "publication": {
        "category": "Book",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781430249511",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Expert Android"
      },
      "publication_date": "2013-11-01",
      "selected": null,
      "title": "Expert android",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=84933507152&origin=inward"
      ]
    },
    {
      "abstract": "One of the important aspects of decision making and management in distributed systems is collecting accurate information about the available resources of the peers. The previously proposed approaches for collecting such information completely depend on the system's architecture. In the server-oriented architecture, servers assume the main role of collecting comprehensive information from the peers and the system. Next, based on the information about the features of the basic activities and the system, an exact description of the peers' status is produced. Accurate decisions are then made using this description. However, the amount of information gathered in this architecture is too large, and it requires massive processing. On the other hand, updating the information takes time, causing delays and undermining the validity of the information. In addition, due to the limitations imposed by the servers, such architecture is not scalable and dynamic enough. The peer-to-peer architecture was introduced to address these concerns. However, due to a lack of complete knowledge of the peers and the system, the decisions are made without a precise description of the peers' status and are only based on the hardware data collected from the peers. Such an abstract and general image of the peers is not adequate for the purpose of decision making. In this paper, a 4-dimensional model is presented for the purpose of information collection and the exact description of the peer's status, including the features of the peer, the basic activity, the time, and the specications of the system. The proposed model is for a server-oriented architecture, but it also adapts to the peer-to-peer serverless architecture. Based on this model, a new approach is introduced for information collection and an exact description of the peers' status in a peer-to-peer system based on the Latin square concept. We evaluate the model in the server-oriented and serverless situations. The workload is considered as the basic activity in our evaluation. Our evaluation demonstrates that in a server-oriented situation, increasing the size of the system has a direct relation with time. However, a serverless situation does not follow this behavior.",
      "authors": [
        "Mirtaheri, S.L.",
        "Mousavi Khaneghah, E.",
        "Sharifi, M.",
        "Minaei-Bidgoli, B.",
        "Raahemi, B.",
        "Ardestani, A.S."
      ],
      "categories": null,
      "citations": 5,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.3906/elk-1108-27",
      "keywords": [
        "Peer-to-peer systems",
        "Server-oriented",
        "Serverless",
        "Distributed systems",
        "Workload",
        "Latin square"
      ],
      "number_of_pages": 19,
      "pages": "1646-1664",
      "publication": {
        "category": "Journal",
        "cite_score": 1.8,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "13000632",
        "publisher": "Turkiye Klinikleri Journal of Medical Sciences",
        "sjr": 0.225,
        "snip": 0.572,
        "subject_areas": [
          "Computer Science (all)",
          "Electrical and Electronic Engineering"
        ],
        "title": "Turkish Journal of Electrical Engineering and Computer Sciences"
      },
      "publication_date": "2013-10-21",
      "selected": null,
      "title": "Four-dimensional model for describing the status of peers in peer-to-peer distributed systems",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=84885602146&origin=inward"
      ]
    },
    {
      "abstract": "Over the recent years peer-to-peer (p2p) systems have become increasingly popular. As of today most of the internet IP traffic is already transmitted in this format and still it is said to double in volume till 2014. Most p2p systems, however, are not pure serverless solutions, nor is the searching in those networks highly efficient, usually achieved by simple flooding. In order to confront with the growing traffic we must consider more elaborate search mechanisms and far less centralized environments. An effective proposal to this problem is to solve it in the domain of ant colony optimization metaheuristics. In this paper we present an overview of ACO algorithms that offer the best potential in this field, under the strict requirements and limitations of a pure p2p network. We design several experiments to serve as an evaluation platform for the mentioned algorithms to conclude the features of a high quality approach. Finally, we consider two hybrid extensions to the classical algorithms, in order to examine their contribution to the overall quality robustness. \u00c2\u00a9 2013 Elsevier B.V. All rights reserved.",
      "authors": [
        "Krynicki, K.",
        "Jaen, J.",
        "Mocholi, J.A."
      ],
      "categories": null,
      "citations": 11,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1016/j.asoc.2013.07.022",
      "keywords": [
        "Semantic search",
        "Peer-to-peer",
        "Ant colony optimization"
      ],
      "number_of_pages": 19,
      "pages": "4813-4831",
      "publication": {
        "category": "Journal",
        "cite_score": 11.2,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "15684946",
        "publisher": "Elsevier BV",
        "sjr": 1.29,
        "snip": 2.472,
        "subject_areas": [
          "Software"
        ],
        "title": "Applied Soft Computing Journal"
      },
      "publication_date": "2013-09-24",
      "selected": null,
      "title": "On the performance of ACO-based methods in p2p resource discovery",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=84886601622&origin=inward"
      ]
    },
    {
      "abstract": "Radio frequency identification (RFID) has been applied to a variety of domains. RFID tag search problem becomes significant when the total number of tags is very large and only the data of a particular tag or a small group of tags are required. This paper proposes a lightweight serverless RFID tag search protocol in conformity with EPC C1G2 standards. The computation operations in the protocol are only PRNG and XOR. The security analysis shows that the protocol achieves authentication, data confidentiality, untraceability and data integrity.",
      "authors": [
        "Tian, Yun",
        "Chen, Gong Liang",
        "Li, Jian Hua"
      ],
      "categories": null,
      "citations": 2,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.4028/www.scientific.net/AMR.684.531",
      "keywords": [
        "Radio Frequency Identification (RFID)",
        "Tag Search",
        "Light Weight",
        "EPC C1G2",
        "Security"
      ],
      "number_of_pages": 4,
      "pages": "531-534",
      "publication": {
        "category": "Book",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9783037856680",
        "issn": "10226680",
        "publisher": "Trans Tech Publications",
        "sjr": 0.121,
        "snip": 0.181,
        "subject_areas": [
          "Engineering (all)"
        ],
        "title": "Advanced Materials Research"
      },
      "publication_date": "2013-06-03",
      "selected": null,
      "title": "A Lightweight Serverless RFID Tag Search Protocol",
      "urls": [
        "https://www.scientific.net/AMR.684.531.pdf",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=84878340835&origin=inward"
      ]
    },
    {
      "abstract": "The proceedings contain 145 papers. The special focus in this conference is on Nanoscience and Nanotechnology, Structural and Materials Science, Building Materials, Chemical and Materials Engineering, Environmental Engineering and Materials Science, Electrical and Electrical Materials, Mechatronics, MEMS/NEMS, Information and Computational Materials Science, Material Science and Technology, Construction technology and Materials Science. The topics include: Nanostructured doped silica films application as sensitive layers for chemical sensors; development of nanoemulsion formulations of ginger extract; fabrication of ZnO nanowall-based hydrogen gas nanosensor; effects of grooved surface with nano-ridges on amplification of hydrophobic property; new two-step preparation and characterization of submicron ZnO rods arrays; progress on chitosan nanoparticles as drug delivery carriers; effect of SiO2 particle size on optical properties of TiO2-SiO2 nanocomposite thin films; high performance transparent conducting Sb-doped SnO2 films fabricated by spray pyrolysis; solvents-induced structure transitions in copolymer films; experimental study of suffusion in granular soils; structural performance of disaster relief housing units subjected to cyclic loading; assessment of shear behaviors of a web panel with free lower boundary; rigid-body contact using finite particle method; non-coaxial plasticity constitutive modeling of sands; influence of bentonite content on the static liquefaction behavior of sand; preparation of coal gangue cement mortar; application of the phase change material in building energy efficiency; the effect of fly ash on lime mortar on elevated temperature; retrofitting bond of damaged concrete surface in harbour structures; kinetic study of methyl orange adsorption from solution by IOCZ; to recognize sources of pollution in dapeng bay by sediment quality in southern Taiwan; research for biodegradation and bioaugmentation of drilling wastewater; a software for estimating cosmic radiation exposure of aircraft crew; experimental analysis for piezoelectric transducers applications into roads pavements; two-diode model analysis and experimental verification for photovoltaic cells; generation of dense lying Ga(As)Sb quantum dots for efficient quantum dot lasers; preparation of 100 GHz InP transferred electron devices; optimum patch dimension ratio of T-shaped microstrip antenna; fabrication of simple GaAs solar cell by Zn diffusion method; synthesizable digital phase locked loop implementation; study on the desulphidation in basic electrode welding; the effect of directional flow of metallic melt on the structure of cast metal; the effect of substrate on continuous electrohydrodynamic printing; a new intelligent fault recognition method for gearbox; new estimation method of sample properties in dynamic AFM; review and prospect for the land seismic data acquisition system; a smart access control system based on ARM; design and realization of new vehicle attitude measurement system; a fabrication for ameliorating pyroelectric harvesting converters; single camera stereo with planar mirrors; a novel closed-loop time-delayed filter for unstable system; the algorithm to measure crack width with incircle; evaluation method for band selection algorithms of hyperspectral image; a detection model of customer alive in information management application; application of web data mining in on-line education; a lightweight serverless RFID tag search protocol; UML modeling of diagram document online approval process; development of an internet of civil infrastructure framework; research on the technology of XML faceted search based on user's cognitive; double sideband suppressed carrier performance with optical balanced detection; management and compilation for shop drawing; research on vehicle schedule problem for drop and pull transport of port; the research of test system of notebook use reliability; concepts of risk in construction projects; building the model of near-level coal deposit; stagnant nonuniform acoustic wave; comparison of three short term wind power forecasting methods and probabilistic reactive power optimization of distribution network considering stochastic wind speed and load.",
      "authors": [],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": {
        "category": "Book",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9783037856680",
        "issn": "10226680",
        "publisher": "Trans Tech Publications",
        "sjr": 0.121,
        "snip": 0.181,
        "subject_areas": [
          "Engineering (all)"
        ],
        "title": "Advanced Materials Research"
      },
      "publication_date": "2013-06-03",
      "selected": null,
      "title": "2nd International Conference on Applied Materials and Electronics Engineering, AMEE 2013",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=84878299858&origin=inward"
      ]
    },
    {
      "abstract": "The fast advance in networked and ubiquitous computing leads to remarkable innovation also in data storage technologies. The classical local/remote storage dichotomy has been enriched due the introduction of new hardware and networking technologies such as plenty of different kinds of solid-state storage devices (e.g., USB pen drives) as well as several advanced distributed serverless storage facilities such as peer-to-peer file sharing networks and cloud-based storage services (SaaS). Such sample technologies can be considered as the endpoints of a wide range of storage facilities that, although characterized by important technological differences, share several crucial security issues. Indeed, such kind of storage, (here referred to as 'nomadic') could undermine data security and privacy within large organizations even if they adopt strong security policies. This paper faces the problem of enforcing security policies within a security domain whose nodes are not permanently connected each other, mainly concerning of the protection of data stored on nomadic data stores. The authors survey some solutions available in literature that could potentially fit this scenario with the aim of defining a framework to secure such storage facilities in terms of file system engineering. To this end, two practical scenarios leveraging on nomadic storage facilities are discussed: (1)the deployment of USB storage devices to asynchronously share sensitive data, and (2) facing assurance requirements in managing large projects conducted by cooperating independent communities of software developers (such as the so called Open Source Community) by means of Distributed Revision Control Systems. \u00c2\u00a9 2013 IEEE.",
      "authors": [
        "Ilsun You",
        "Luigi Catuogno",
        "Aniello Castiglione",
        "Giuseppe Cattaneo"
      ],
      "categories": null,
      "citations": 3,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/ISIE.2013.6563880",
      "keywords": [
        "Secure File System",
        "Trusted File System",
        "Pervasive Computing",
        "Privacy Preservation and Policy Administration",
        "Security Policies",
        "Mobility and Digital Ecosystems"
      ],
      "number_of_pages": 6,
      "pages": "1-6",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-4673-5192-8",
        "issn": "2163-5137",
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "2013 IEEE International Symposium on Industrial Electronics"
      },
      "publication_date": "2013-05-28",
      "selected": null,
      "title": "On asynchronous enforcement of security policies in \u201cNomadic\u201d storage facilities",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=84881638426&origin=inward",
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=6563880"
      ]
    },
    {
      "abstract": "RFID has very huge potential in today's social and business developments. RFID-based identification is an example of emerging technology which requires authentication Security and Privacy are one of the important issues in the design of practical RFID protocols. In this paper, we focus on RFID authentication protocol RFID mutual authentication is used to ensure that only an authorized RFID reader can access the data of RFID tag while the RFID tag is confirmed that it releases data to the authenticated RFID reader. In this paper, we will propose two mutual authentication protocols for RFID tags: server-based authentication protocol and serverless authentication protocol. The two protocols both enable RFID reader and tag to carry out the authentication based on their synchronized secret information. In the first protocol based on a server, the synchronized secret information will be monitored by a component of the database server. In the second protocol without a server, mutual authentication does not need to rely on a back-end database. It enables RFID tags to be anonymous to RFID reader so that privacy can be preserved. \u00c2\u00a9 2013 CRL Publishing Ltd.",
      "authors": [
        "Han, S.",
        "Dillon, T.",
        "Potdar, V.",
        "Chang, E."
      ],
      "categories": null,
      "citations": 3,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": 9,
      "pages": "91-99",
      "publication": {
        "category": "Journal",
        "cite_score": 1.2,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "02676192",
        "publisher": "Tech Science Press",
        "sjr": 0.19,
        "snip": 0.382,
        "subject_areas": [
          "Theoretical Computer Science",
          "Computer Science (all)",
          "Control and Systems Engineering"
        ],
        "title": "Computer Systems Science and Engineering"
      },
      "publication_date": "2013-03-01",
      "selected": null,
      "title": "RFID mutual authentication protocols for tags and readers with and without a server",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=84879221174&origin=inward"
      ]
    },
    {
      "abstract": "This paper proposes an endpoint video combiner architecture in a multipoint control unit (MCU) system for high definition multiparty video conferencing. The proposed architecture addresses the current reliability, computational and quality drawbacks of a conventional centralized based video combiner architecture. This is achieved by redesigning the MCU video to move away the video combiner from the bridge and into the client endpoints. Moreover, the proposed architecture represents a serverless system and is able to scale a large number of clients at high resolutions in a multipoint video conferencing session. In order to realize this design, this paper also proposes a custom robust sustainable session management protocol which allows a dynamic multi-port management between the MCU video and client endpoints. In addition, the proposed custom session management protocol includes recommendation for a session protection structure. Experimental results suggest that the proposed architecture exhibits significant computational frame rate performance gains of up to 762.95% in comparison with the conventional centralized video combiner architecture based on a series of four and eight high definition combined video assessments. Moreover, reliability analysis suggests that the proposed architecture is also able to consistently sustain a high frame rate performance within a long duration high definition multipoint video conferencing session. \u00c2\u00a9 2012 Elsevier Ltd.",
      "authors": [
        "Baskaran, V.M.",
        "Chang, Y.C.",
        "Loo, J.",
        "Wong, K."
      ],
      "categories": null,
      "citations": 5,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1016/j.jnca.2012.05.008",
      "keywords": [
        "Video combiner",
        "High definition multiparty video conferencing",
        "Multipoint control unit (MCU)"
      ],
      "number_of_pages": 17,
      "pages": "336-352",
      "publication": {
        "category": "Journal",
        "cite_score": 14.5,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "10848045",
        "publisher": "Academic Press Inc.",
        "sjr": 1.145,
        "snip": 2.637,
        "subject_areas": [
          "Hardware and Architecture",
          "Computer Networks and Communications",
          "Computer Science Applications"
        ],
        "title": "Journal of Network and Computer Applications"
      },
      "publication_date": "2013-01-01",
      "selected": null,
      "title": "Software-based serverless endpoint video combiner architecture for high-definition multiparty video conferencing",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=84870725685&origin=inward"
      ]
    },
    {
      "abstract": "In this paper, we analyze the security of the mutual authentication and search protocols recently proposed by Tan et al.[20]. Our security analysis clearly highlights important security pitfalls in...",
      "authors": [
        "Masoumeh Safkhani",
        "Pedro Peris-Lopez",
        "Nasour Bagheri",
        "Majid Naderi",
        "Julio Cesar Hernandez-Castro"
      ],
      "categories": null,
      "citations": 10,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1007/978-3-642-36140-1_1",
      "keywords": [
        "Mutual Authentication",
        "Search Protocol",
        "RFID",
        "Cryptanalysis"
      ],
      "number_of_pages": 19,
      "pages": "1-19",
      "publication": {
        "category": "Book",
        "cite_score": 1.8,
        "is_potentially_predatory": false,
        "isbn": "9783030715922",
        "issn": "03029743",
        "publisher": "Springer Verlag",
        "sjr": 0.249,
        "snip": 0.628,
        "subject_areas": [
          "Databases",
          "Cryptography and Security",
          "Distributed, Parallel, and Cluster Computing",
          "Theoretical Computer Science",
          "Computer Science (all)"
        ],
        "title": "IFIP International Conference on Distributed Applications and\n  Interoperable Systems, DAIS 2017: Distributed Applications and Interoperable\n  Systems pp 83-98"
      },
      "publication_date": "2013-01-01",
      "selected": null,
      "title": "On the Security of Tan <Emphasis Type=\"Italic\">et al.</Emphasis> Serverless RFID Authentication and Search Protocols",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=84873327006&origin=inward",
        "https://link.springer.com/content/pdf/10.1007%2F978-3-642-36140-1_1.pdf"
      ]
    },
    {
      "abstract": "Peer-to-peer(P2P) trading applications have much lower costs than conventional client-server systems because they avoid the use of third party service providers. However, a P2P trading application has to be secure and equitable to the peers involved in transactions. This cannot be achieved without the use of some kind of reliable security service provider of trust data. We discuss using a community trust store to host trust related information to support a community based P2P local trading application. It is managed collectively by the peers and is hosted in cloud storage. Community trust stores provide trust data and community assurance to the peers. The trust store only supports mutual authentication, community voting and reputation services. The P2P messaging systems supports all other forms of communication and interaction. \u00c2\u00a9 2013 SDIWC.",
      "authors": [
        "Fauzi, A.H.",
        "Taylor, H."
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": null,
      "keywords": [
        "Serverless",
        "Generic requirement",
        "P2P",
        "Security",
        "E-trading"
      ],
      "number_of_pages": 13,
      "pages": "74-86",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "3rd International Conference on Digital Information Processing and Communications, ICDIPC 2013"
      },
      "publication_date": "2013-01-01",
      "selected": null,
      "title": "Securing a cloud-based community trust store for local P2P E-Commerce",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=84978716330&origin=inward"
      ]
    },
    {
      "abstract": "RFID tag search system can be used to find a particular tag among numerous tags. In 2011, Chun et al. proposed an RFID tag search protocol preserving privacy of mobile reader holders. Chun et al....",
      "authors": [
        "Eun-Jun Yoon"
      ],
      "categories": null,
      "citations": 6,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1007/978-3-642-35606-3_68",
      "keywords": [
        "DoS attack",
        "RFID",
        "Passive tag",
        "Serverless search",
        "Privacy"
      ],
      "number_of_pages": 6,
      "pages": "575-580",
      "publication": {
        "category": "Book",
        "cite_score": 1.8,
        "is_potentially_predatory": false,
        "isbn": "9783030715922",
        "issn": "03029743",
        "publisher": "Springer Verlag",
        "sjr": 0.249,
        "snip": 0.628,
        "subject_areas": [
          "Databases",
          "Cryptography and Security",
          "Distributed, Parallel, and Cluster Computing",
          "Theoretical Computer Science",
          "Computer Science (all)"
        ],
        "title": "IFIP International Conference on Distributed Applications and\n  Interoperable Systems, DAIS 2017: Distributed Applications and Interoperable\n  Systems pp 83-98"
      },
      "publication_date": "2012-12-31",
      "selected": null,
      "title": "Cryptanalysis of an RFID Tag Search Protocol Preserving Privacy of Mobile Reader",
      "urls": [
        "https://link.springer.com/content/pdf/10.1007%2F978-3-642-35606-3_68.pdf",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=84871552488&origin=inward"
      ]
    },
    {
      "abstract": "Lower echelon forces face significant barriers in utilizing increasingly available networked resources. Network access at the tactical edge continues to present significant problems of limited bandwidth, disruption, and other constraints. Simultaneously, there is an ever-increasing set of video streams, imagery, intelligence, and live reports available on both tactical edge and upper echelon networks. Systems and applications supporting warfighters must therefore address both the problems of highly constrained networks and the problem of the potentially overwhelming volume of dynamic resources and content. These challenging issues continue to defy easy solution, and so, in this paper, we propose a novel design for server-less information services for stressed and discontinuously available, low bandwidth tactical networks. We design SISTO as a middleware software solution. SISTO is characterized by three major capabilities: a) Semantics-based service and resource discovery with powerful search and browse capabilities, enabling users and service-oriented applications to be notified of opportunistically available information and services, and locate necessary resources, b) Efficient, distributed content distribution mechanisms adapted from peer-to-peer file sharing and torrent protocol for downloading and sharing large data objects such as imagery, video clips, maps, and intelligence datasets over poorly connected, low bandwidth, wireless networks, while opportunistically taking advantage of temporarily available high performing connectivity and c) Server-less proxies and gateways for enterprise applications, enabling tactical edge warfighters to connect to and participate in data sharing, and other capabilities without server infrastructure, while interoperating with users at higher echelons using standard enterprise applications and tools. We plan to implement SISTO in the near future, and report on how it performs relative to the design goals stated in this paper. \u00c2\u00a9 2012 IEEE.",
      "authors": [
        "Shur, D.",
        "Samtani, S.",
        "Fecko, M.",
        "Manousakis, K.",
        "Kaul, V.",
        "Regli, W.C.",
        "Kopena, J."
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1109/MILCOM.2012.6415879",
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781467317290",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings - IEEE Military Communications Conference MILCOM"
      },
      "publication_date": "2012-12-01",
      "selected": null,
      "title": "SISTO: A proposal for serverless information services for tactical operations",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=84874318623&origin=inward"
      ]
    },
    {
      "abstract": "RFID system is characterized by Wireless transmission and the lack of resource, which gives rise to severe security and privacy concerns. In this paper, we propose a serverless protocol that can prevent the major attacks like tracking et al. Furthermore, the protocol can recover the disabled tags that are desynchronized with the reader because of the desynchronizing attack. Our scheme makes use of pseudo random number generators (PRNG) and one way hash functions to ensure the security and privacy requirements of RFID systems. Compared with some renowned RFID protocols, our protocol is much efficient in the search process of the reader, and will be very suitable for the portable reader. \u00c2\u00a9 2012 IEEE.",
      "authors": [
        "Ge Zhi-jun",
        "Hao Yong-sheng"
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/ICCT.2012.6511283",
      "keywords": [
        "index information",
        "PRNG",
        "privacy",
        "serverless protocol",
        "RFID security"
      ],
      "number_of_pages": 5,
      "pages": "640-644",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-4673-2099-3",
        "issn": null,
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "International Conference on Communication Technology Proceedings, ICCT"
      },
      "publication_date": "2012-11-09",
      "selected": null,
      "title": "An efficient authentication protocol for serverless RFID systems",
      "urls": [
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=6511283",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=84878127506&origin=inward"
      ]
    },
    {
      "abstract": "Radio Frequency Identification (RFID) is a technology that enables the non-contact, automatic and unique identification of objects using radio waves. Its use for commercial applications has recently become attractive with RFID technology seen as the replacement for the optical barcode system that is currently in widespread use. RFID has many advantages over the traditional barcode and these advantages have the potential to significantly increase the efficiency of decentralised business environments such as logistics and supply chain management. One of the important features of an RFID system is its ability to search for a particular tag among a group of tags. In order to ensure the privacy and security of the tags, the search has to be conducted in a secure fashion. To our knowledge not much work has been done in this secure search area of RFID. The limited work that has been done does not comply with the EPC Class-1 Gen-2 standards since most of them use expensive hash operations or sophisticated encryption schemes that cannot be implemented on low-cost passive tags that are highly resource constrained. Our work aims to fill this gap by proposing a serverless ultra-lightweight secure search protocol that does not use the expensive hash functions or any complex encryption schemes but achieves compliance with EPC Class-1 Gen-2 standards while meeting the required security requirements. Our protocol is based on XOR encryption and random numbers - operations that are easily implemented on low-cost RFID tags. Our protocol also provides additional protection using a blind-factor to prevent tracking attacks. Since our protocol is EPC Class-1 Gen-2 compliant it makes it possible to implement it on low-cost passive RFID tags. \u00c2\u00a9 2012 IEEE.",
      "authors": [
        "Saravanan Sundaresan",
        "Robin Doss",
        "Wanlei Zhou"
      ],
      "categories": null,
      "citations": 5,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/ICCISci.2012.6297097",
      "keywords": [],
      "number_of_pages": 6,
      "pages": "580-585",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-4673-1936-2",
        "issn": null,
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "2012 International Conference on Computer and Information Science, ICCIS 2012 - A Conference of World Engineering, Science and Technology Congress, ESTCON 2012 - Conference Proceedings"
      },
      "publication_date": "2012-06-12",
      "selected": null,
      "title": "A serverless ultra-lightweight secure search protocol for EPC Class-1 Gen-2 UHF RFID tags",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=84867877867&origin=inward",
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=6297097"
      ]
    },
    {
      "abstract": "Radio Frequency Identification has various applications in both personal and business areas. In RFID system, messages transmit by radio waves, and common wireless attacks are performed by malicious attackers. Attackers could trace the specific tags, location of expensive objects, and personal privacy information may be infringed. RFID tags would be transferred from old owner to new owner several times in its life-time. The privacy of owners should be protected during ownership transfer phase. There are many schemes for authentication and ownership transfer. In server-based schemes, the reader needs always connect to server during querying the tags. The whole system may be limited by network connectivity, connecting latency and scalability. We improved the serverless-based scheme and proposed a new authentication and ownership transfer scheme in serverless environment. The proposed scheme achieves security and privacy with efficient performance and scalability. \u00c2\u00a9 2012 ICIC International.",
      "authors": [
        "Lin, I.-C.",
        "Hsu, H.-H."
      ],
      "categories": null,
      "citations": 1,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": null,
      "keywords": [
        "Ownership",
        "Serverless environment",
        "Authentication",
        "Scalability"
      ],
      "number_of_pages": 5,
      "pages": "1429-1433",
      "publication": {
        "category": "Journal",
        "cite_score": 0.8,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "1881803X",
        "publisher": "ICIC Express Letters Office",
        "sjr": 0.19,
        "snip": 0.273,
        "subject_areas": [
          "Control and Systems Engineering",
          "Computer Science (all)"
        ],
        "title": "ICIC Express Letters"
      },
      "publication_date": "2012-06-01",
      "selected": null,
      "title": "A secure rfid authentication and ownership transfer protocol in serverless environment",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=84859406264&origin=inward"
      ]
    },
    {
      "abstract": "Serverless distributed computing, especially Mobile Ad-hoc NETworks (MANETs) have received significant attention from the research community. Peer-to-peer overlay networks have the potential to accommodate largescale, decentralised applications that can be integrated into a MANET architecture to enable peer-to-peer communication among different mobile peers. These overlay architectures must be very resilient and their utilisation, reliability and availability must satisfy the needs of mobile computing. One must also heed the fact that the wireless nature of the medium introduces security vulnerabilities. The aim of the work described in this paper is twofold. First, we describe our peer-to-peer distributed hash table (DHT) architecture entitled Reliable Overlay Based Utilisation of Services and Topology (ROBUST). This is designed to be efficiently applied to MANETs. We additionally propose security extensions to protect the ROBUST signalling messages against malicious activities. We evaluate the ROBUST performance as well as the security extensions under varying levels of mobility and network sizes by building a custom DHT module for the network simulator ns-2. The outcome of the results show negligible overhead introduced by the extensions giving credence to their application in security sensitive scenarios. \u00c2\u00a9 2012 ACADEMY PUBLISHER.",
      "authors": [
        "Millar, G.P.",
        "Panaousis, E.A.",
        "Politis, C."
      ],
      "categories": null,
      "citations": 6,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.4304/jnw.7.2.288-299",
      "keywords": [
        "Peer-to-peer",
        "Distributed hash tables",
        "Security",
        "Mobile ad-hoc networks"
      ],
      "number_of_pages": 12,
      "pages": "288-299",
      "publication": {
        "category": "Journal",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "17962056",
        "publisher": "Academy Publisher",
        "sjr": 0.147,
        "snip": 0.36,
        "subject_areas": [
          "Computer Networks and Communications"
        ],
        "title": "Journal of Networks"
      },
      "publication_date": "2012-03-12",
      "selected": null,
      "title": "Distributed hash tables for peer-to-peer mobile ad-hoc networks with security extensions",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=84857877161&origin=inward"
      ]
    },
    {
      "abstract": "We present a succinct yet powerful interface library to the SQLite database system. The single file, serverless approach of SQLite along with the natural integration of relational data within Prolog, render the library a useful addition to the existing database libraries in modern open-source engines. We detail the architecture and predicates of the library and provide example deployment scenarios. Finally, this paper discusses the strengths of the system and highlights possible extensions.",
      "authors": [
        "Canisius, S.",
        "Angelopoulos, N.",
        "Wessels, L."
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": 8,
      "pages": "2-9",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "22nd Workshop on Logic-Based Programming Environments, WLPE 2012"
      },
      "publication_date": "2012-01-01",
      "selected": null,
      "title": "Exploring file based databases via an SQLite interface",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=84897496148&origin=inward"
      ]
    },
    {
      "abstract": "Recently, a new type of Radio Frequency IDentification (RFID) system with mobile readers is introduced. In such a system, it is more desirable for mobile readers to identify tags without a back-end server, and thus it is frequently referred as a serverless mobile RFID system. In this paper, we formalize a serverless mobile RFID system model and propose a new encryption-based system that preserves the privacy of both tags and readers in the model. In addition, we define a new adversary model for the system model and show the security of the proposed system. Throughout comparisons between ours and the other alternatives, we show that our proposed system provides a stronger reader privacy and robustness against a reader forgery attack than the competitors. \u00c2\u00a9 1996-2012 Tsinghua University Press.",
      "authors": [
        "Jiwhan Lim",
        "Sangjin Kim",
        "Heekuck Oh",
        "Donghyun Kim"
      ],
      "categories": null,
      "citations": 12,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/TST.2012.6314529",
      "keywords": [
        "encryption-based",
        "designated query protocol",
        "Radio Frequency IDentification (RFID)",
        "reader privacy",
        "serverless"
      ],
      "number_of_pages": 16,
      "pages": "521-536",
      "publication": {
        "category": "Journal",
        "cite_score": 4.1,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "1007-0214",
        "publisher": "Tsing Hua University",
        "sjr": 0.428,
        "snip": 1.221,
        "subject_areas": [
          "Multidisciplinary"
        ],
        "title": "Tsinghua Science and Technology"
      },
      "publication_date": "2012-01-01",
      "selected": null,
      "title": "A designated query protocol for serverless mobile RFID systems with reader and tag privacy",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=84876481081&origin=inward",
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=6314529"
      ]
    },
    {
      "abstract": "For wireless multihop networks, various location-dependent routing protocols in which a destination of a message is specied by its location have been proposed.",
      "authors": [
        "Hiroaki Higaki"
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.2316/P.2011.757-047",
      "keywords": [
        "High mobility",
        "Serverless",
        "Mobile ad-hoc networks",
        "Location-dependent information",
        "Location-based routing"
      ],
      "number_of_pages": 4,
      "pages": "361-364",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": true,
        "isbn": "9780889869073",
        "issn": "10272658",
        "publisher": "ACTA Press",
        "sjr": 0.101,
        "snip": 0.133,
        "subject_areas": [
          "Hardware and Architecture",
          "Computer Networks and Communications",
          "Software"
        ],
        "title": "Proceedings of the IASTED International Conference on Parallel and Distributed Computing and Systems"
      },
      "publication_date": "2011-12-01",
      "selected": null,
      "title": "Location-based Information Management without Stationary Server Nodes",
      "urls": [
        "http://actapress.com/pdfviewer.aspx?paperID=453081",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=84856643493&origin=inward"
      ]
    },
    {
      "abstract": "The extension of businesses to incorporate the provision of function as a service in supplement to standalone products is an ongoing movement in manufacturing industry. In short, this means that the development intent should be guided by the need of 'performance in use' that the customer wants, e.g. thrust rather than an engine. By this, the established knowledge base challenges the development team. This paper embarks from the assumption that there are three main challenges, i.e. (1) innovation activities, (2) customer data acquisition and (3) the transformation of data into design information. The purpose is to discuss knowledge sharing activities to contribute to product-service innovation. In this study it has been found that contemporary data acquisition activities filter out important dimensions of knowledge. Thus, does not provide a sound base for service provisions. Copyright \u00c2\u00a9 2002-2012 The Design Society. All rights reserved.",
      "authors": [
        "Ericson, A.",
        "Larsson, A.C.",
        "Larsson, T.C."
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": null,
      "keywords": [
        "Product-service systems",
        "Product development",
        "User oriented design",
        "Knowledge sharing",
        "Innovation"
      ],
      "number_of_pages": 10,
      "pages": "143-152",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781904670230",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "ICED 11 - 18th International Conference on Engineering Design - Impacting Society Through Engineering Design"
      },
      "publication_date": "2011-12-01",
      "selected": null,
      "title": "Expanding the social dimension: Towards a knowledge base for product-service innovation",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=84858817991&origin=inward"
      ]
    },
    {
      "abstract": " Upcoming and future astronomy research facilities will systematically\ngenerate terabyte-sized data sets moving astronomy into the Petascale data era.\nWhile such facilities will provide astronomers with unprecedented levels of\naccuracy and coverage, the increases in dataset size and dimensionality will\npose serious computational challenges for many current astronomy data analysis\nand visualization tools. With such data sizes, even simple data analysis tasks\n(e.g. calculating a histogram or computing data minimum/maximum) may not be\nachievable without access to a supercomputing facility. To effectively handle such dataset sizes, which exceed today's single machine\nmemory and processing limits, we present a framework that exploits the\ndistributed power of GPUs and many-core CPUs, with a goal of providing data\nanalysis and visualizing tasks as a service for astronomers. By mixing shared\nand distributed memory architectures, our framework effectively utilizes the\nunderlying hardware infrastructure handling both batched and real-time data\nanalysis and visualization tasks. Offering such functionality as a service in a\n\"software as a service\" manner will reduce the total cost of ownership, provide\nan easy to use tool to the wider astronomical community, and enable a more\noptimized utilization of the underlying hardware infrastructure.\n",
      "authors": [
        "Hassan, A. H.",
        "Fluke, C. J.",
        "Barnes, D. G."
      ],
      "categories": null,
      "citations": null,
      "comments": "4 Pages, 1 figures, To appear in the proceedings of ADASS XXI, ed.\n  P.Ballester and D.Egret, ASP Conf. Series",
      "databases": [
        "arXiv"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": null,
      "publication_date": "2011-11-29",
      "selected": null,
      "title": "Unleashing the Power of Distributed CPU/GPU Architectures: Massive Astronomical Data Analysis and Visualization case study",
      "urls": [
        "http://arxiv.org/pdf/1111.6661v1",
        "http://arxiv.org/abs/1111.6661v1",
        "https://arxiv.org/pdf/1111.6661"
      ]
    },
    {
      "abstract": "This paper presents empirical analysis of serverless, multi-user chat in multicast-capable tactical environments. The implemented group communications middleware is based on serverless XMPP messaging. We compare the effectiveness and performance of serverless messaging over multicast, as well as typical client server TCP messaging. The experiments are performed using the Common Open Research Emulator in conjunction with the Extendable Mobile Ad-Hoc Network Emulator, to provide a higher-fidelity emulation than previous work. \u00c2\u00a9 2011 IEEE.",
      "authors": [
        "Robert N. Lass",
        "Duc N. Nguyen",
        "David W. Millar",
        "William C. Regli",
        "Joseph Macker",
        "R. Brian Adamson"
      ],
      "categories": null,
      "citations": 1,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/MILCOM.2011.6127544",
      "keywords": [],
      "number_of_pages": 6,
      "pages": "1639-1644",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-4244-8179-8",
        "issn": "2155-7578",
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings - IEEE Military Communications Conference MILCOM"
      },
      "publication_date": "2011-11-07",
      "selected": null,
      "title": "An evaluation of serverless group chat",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=84856962378&origin=inward",
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=6127544"
      ]
    },
    {
      "abstract": "In this paper we discuss the adaptation of TCP transport-oriented clientserver messaging protocols to many-to-many peer-to-peer networking environments more suitable for deployment in dynamic wireless networks capable of multicast forwarding. We describe four main issues in adapting such protocols: exposing a network server for receiving TCP session data; the creation of server-side semantic proxies to process the messages and adapt to a serverless environment; service discovery to enable the discovery of necessary services on the network and to maintain the network state; and finally support for multicast interfaces for the transportation of messages amongst peers. We show that our system, called GUMP, can be used to support such protocol adaptations and to illustrate we use GUMP to implement an XMPP proxy allowing existing off-the-shelf XMPP client software to dynamically create and operate multi-user chat sessions in a serverless network environment. We then present two sets of results that show how appropriate discovery systems and transport protocols can dramatically increase the success of protocols, such as XMPP, within a mobile wireless networked environment. Specifically, we first demonstrate that a GUMP supported discovery system, INDI, can significantly increase the success rates and decrease latency of discovering services through profiles, caching and retrying schemes. Second, we show that success rates for XMPP transmission of messages can be vastly improved through the use of multicast as apposed to TCP within the mobile environment. These two factors provide strong empirical support for the justification of GUMP in its ability to adapt between a clientserver and serverless world. \u00c2\u00a9 2010 Elsevier Ltd. All rights reserved.",
      "authors": [
        "Dean, J.",
        "Harrison, A.",
        "Lass, R.N.",
        "MacKer, J.",
        "Millar, D.",
        "Taylor, I."
      ],
      "categories": null,
      "citations": 5,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1016/j.jnca.2011.03.021",
      "keywords": [
        "NORM",
        "Multicast",
        "SLP",
        "XMPP",
        "WS-Notification",
        "JmDNS",
        "Peer-to-Peer",
        "Serverless chat"
      ],
      "number_of_pages": 14,
      "pages": "1366-1379",
      "publication": {
        "category": "Journal",
        "cite_score": 14.5,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "10848045",
        "publisher": "Academic Press Inc.",
        "sjr": 1.145,
        "snip": 2.637,
        "subject_areas": [
          "Hardware and Architecture",
          "Computer Networks and Communications",
          "Computer Science Applications"
        ],
        "title": "Journal of Network and Computer Applications"
      },
      "publication_date": "2011-07-01",
      "selected": null,
      "title": "Client/server messaging protocols in serverless environments",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=79956070006&origin=inward"
      ]
    },
    {
      "abstract": "An RFID system generally consists of tags, readers, and backend servers with the readers charged with authenticating/identifying the tags with the help of the servers. Two important enhancements have been suggested for widespread adoption of RFIDs, namely the use of low cost (5\u00c2\u00a2 or less) passive RFID tags and serverless system design to overcome the need for persistent connection between the readers and the servers. Unfortunately, the low cost tags lack computation and storage capabilities to implement sophisticated security protocols to provide tag privacy and anonymous mutual authentication between the readers and the tags. Although several schemes (including some serverless schemes) have been proposed for authentication between tags and readers, they invariably have stringent computation and storage requirements and cannot be implemented in passive tags. In this paper, we propose SAMA, a novel serverless and anonymous mutual authentication scheme for a system consisting of passive tags and readers. Our scheme uses non-linear feedback shift registers and only logical operations to provide robust and anonymous mutual authentication. We perform security analyses and performance evaluation of SAMA and demonstrate its effectiveness and efficiency in comparison with other popular schemes in the literature. Our scheme requires only three message communications between the tag and the reader. Additionally, it requires only 1393 gates and 70 clock cycles at the tag. \u00c2\u00a9 2011 IEEE.",
      "authors": [
        "Sowmya Myneni",
        "Satyajayant Misra",
        "Guoliang Xue"
      ],
      "categories": null,
      "citations": 6,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/icc.2011.5963436",
      "keywords": [
        "non-linear feedback shift register (NLFSR)",
        "RFID",
        "security",
        "mutual authentication",
        "serverless"
      ],
      "number_of_pages": 5,
      "pages": "1-5",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-61284-231-8",
        "issn": "1550-3607",
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "2011 IEEE International Conference on Communications (ICC)"
      },
      "publication_date": "2011-06-05",
      "selected": null,
      "title": "SAMA: Serverless Anonymous Mutual Authentication for Low-Cost RFID Tags",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=80052138222&origin=inward",
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=5963436"
      ]
    },
    {
      "abstract": "So far, conventional RFID protocols provide the security and privacy protections by utilizing the central database model where readers should maintain the persistent connection between the readers and the central database. Recently, severless RFID protocols [4], [5] have been proposed to provide more flexible RFID service by removing the need of this connection. In this paper, we first point out the tracing vulnerability of the existing serverless RFID protocols. To address this vulnerability, we suggest a novel method which generates a unique access list for each reader based on groups of tags and multiple pseudonyms. We then propose untraceable and serverless RFID authentication and search protocols with this method. In comparison with [4], our protocols provide more resilient protection to the tracing vulnerability. Moreover, our protocols show less computation overhead than [4]. \u00c2\u00a9 2011 IEEE.",
      "authors": [
        "Zeen Kim",
        "Jangseong Kim",
        "Kwangjo Kim",
        "Imsung Choi",
        "Taeshik Shon"
      ],
      "categories": null,
      "citations": 14,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/ISPAW.2011.66",
      "keywords": [],
      "number_of_pages": 6,
      "pages": "278-283",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-0-7695-4429-8",
        "issn": null,
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings - 9th IEEE International Symposium on Parallel and Distributed Processing with Applications Workshops, ISPAW 2011 - ICASE 2011, SGH 2011, GSDP 2011"
      },
      "publication_date": "2011-05-26",
      "selected": null,
      "title": "Untraceable and Serverless RFID Authentication and Search Protocols",
      "urls": [
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=5951988",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=80052000677&origin=inward"
      ]
    },
    {
      "abstract": "The purpose of this paper is to reduce the Denial of Service (DoS) attacks on peer-to-peer networks by hiding the position of the file and to prove the effectiveness through the fuzzy logic. In general to protect the files in the serverless distributed file systems from the attacker, we have to maintain large number of copies of the original file that leads to storage overhead. This paper presents location hiding approach that needs only minimum number of copies of file. The location hiding approach uses Location Key and routing guard. We use chord protocol to implement peer-to-peer system. We use fuzzy logic to develop a graph that provides better performance of the Location hiding approach. \u00c2\u00a9 2011 IEEE.",
      "authors": [
        "G. Senthil Vadivu",
        "C. Gomathi",
        "A. Swathy Priya"
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/ICECTECH.2011.5941751",
      "keywords": [
        "performance",
        "fuzzy logic",
        "Denial of Service attacks",
        "location hiding",
        "chord protocol",
        "Serverless Distributed File System"
      ],
      "number_of_pages": 5,
      "pages": "266-270",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-4244-8678-6",
        "issn": null,
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "ICECT 2011 - 2011 3rd International Conference on Electronics Computer Technology"
      },
      "publication_date": "2011-04-08",
      "selected": null,
      "title": "Protecting peer-to-peer networks from the denial of service attacks",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=79961221920&origin=inward",
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=5941751"
      ]
    },
    {
      "abstract": "Access full-text academic articles: J-STAGE is an online platform for Japanese academic journals.",
      "authors": [
        "Ji Young Chun",
        "Jung Yeon Hwang",
        "Dong Hoon Lee"
      ],
      "categories": null,
      "citations": 21,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1587/elex.8.50",
      "keywords": [
        "F",
        "D",
        "R",
        "I"
      ],
      "number_of_pages": 7,
      "pages": "50-56",
      "publication": {
        "category": "Journal",
        "cite_score": 1.5,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "1349-2543",
        "publisher": "The Institute of Electronics, Information and Communication Engineers (IEICE)",
        "sjr": 0.178,
        "snip": 0.312,
        "subject_areas": [
          "Condensed Matter Physics",
          "Electrical and Electronic Engineering",
          "Electronic, Optical and Magnetic Materials"
        ],
        "title": "IEICE Electronics Express"
      },
      "publication_date": "2011-01-25",
      "selected": null,
      "title": "RFID tag search protocol preserving privacy of mobile reader holders",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=79751480101&origin=inward",
        "https://www.jstage.jst.go.jp/article/elex/8/2/8_2_50/_pdf"
      ]
    },
    {
      "abstract": "DHTs have been widely used in designing various applications, especially P2P file sharing systems. It is crucial but difficult to get an accurate snapshot of a DHT network, since such network is serverless and peers join and depart dynamically. In this letter, we analyze and empirically verify that neither breadth-first search nor depth-first search is optimal for DHT snapshot crawling, due to uneven ID distribution of contacts in the routing table of each DHT peer. We then propose a hybrid search strategy which could both start up quickly and slow down slowly. The experiment performed on Mainline shows that this approach significantly outperforms breadth-first or depth-first search strategy. \u00c2\u00a9 2011 IEEE.",
      "authors": [
        "Jie Yu",
        "Peng Xiao",
        "Zhoujun Li",
        "Yuan Zhou"
      ],
      "categories": null,
      "citations": 11,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/LCOMM.2010.110310.101027",
      "keywords": [
        "DHT",
        "snapshot",
        "breadth-first",
        "hybrid",
        "depth-first"
      ],
      "number_of_pages": 3,
      "pages": "97-99",
      "publication": {
        "category": "Journal",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "2373-7891",
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "IEEE Communications Letters"
      },
      "publication_date": "2011-01-01",
      "selected": null,
      "title": "Toward an Accurate Snapshot of DHT Networks",
      "urls": [
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=5634157",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=79551688137&origin=inward"
      ]
    },
    {
      "abstract": "The proceedings contain 12 papers. The topics discussed include: hardware trust implications of 3-D integration; hardware-assisted security enhanced Linux in embedded systems: a proposal; a new correlation frequency analysis of the side channel; a comprehensive analysis of performance and side-channel-leakage of AES SBOX implementations in embedded software; countering early evaluation: an approach towards robust dual-rail precharge logic; countermeasures against fault attacks on software implemented AES: effectiveness and cost; a new CRT-RSA algorithm resistant to powerful fault attacks; improving the quality of ring oscillator PUFs on FPGAs; low cost multicast authentication via validity voting in time-triggered embedded control networks; secure protocols for serverless remote product authentication; and enhancing network-on-chip components to support security of processing elements.",
      "authors": [],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450300780",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings of the 5th Workshop on Embedded Systems Security, WESS '10"
      },
      "publication_date": "2010-12-20",
      "selected": null,
      "title": "Proceedings of the 5th Workshop on Embedded Systems Security, WESS '10",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=78650167402&origin=inward"
      ]
    },
    {
      "abstract": "Industrial companies lose large sums of money because of counterfeits and they need to efficiently protect their trademarks. Most of them implement their own anti-counterfeiting policy to deal with the menace. A number of technologies, such as holograms, smart cards, biometric markers and inks, can be employed to protect and authenticate genuine products. Instead of using markers and additional identification means, one of the recent methods use a PUF-like authentication method based on image processing. However, in order to authenticate the object (e.g. a trademark product), the method needs direct access to the database system containing the object's \"fingerprint\". The paper presents a new secure method to remotely authenticate the object without communication with the database server. In this method, an autonomous and secure embedded system called authentication device authenticates the product by extracting its morphometric fingerprint and comparing it with a signed original morphometric fingerprint printed on the object. However, we show that in order to secure the protocol, the authentication hardware needs to be authenticated, too. For this reason, we propose security protocols that allow to authenticate the authentication device and remotely check its integrity. The proposed security protocols are shown to be sure using formal methods of security protocol evaluation. \u00c2\u00a9 2010 ACM.",
      "authors": [
        "Idrissa, A.",
        "Aubert, A.",
        "Fournel, T.",
        "Fischer, V."
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1145/1873548.1873559",
      "keywords": [
        "Counterfeiting",
        "Protocols",
        "Object authentication",
        "Serverless",
        "Remote"
      ],
      "number_of_pages": null,
      "pages": null,
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450300780",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings of the 5th Workshop on Embedded Systems Security, WESS '10"
      },
      "publication_date": "2010-12-20",
      "selected": null,
      "title": "Secure protocols for serverless remote product authentication",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=78650119343&origin=inward"
      ]
    },
    {
      "abstract": "Recent portable devices, from sophisticated mobile phones, to netbooks, thanks to wireless networking and powerful batteries, give hardware support for collaborative work on the go, even when the...",
      "authors": [
        "Anwitaman Datta",
        "Krzysztof Rzadca",
        "Sally Ang",
        "Goh Chee Hong"
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1007/978-3-642-12257-6_6",
      "keywords": [],
      "number_of_pages": 20,
      "pages": "85-104",
      "publication": {
        "category": "Book",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9783642122569",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "E-Research Collaboration: Theory, Techniques and Challenges"
      },
      "publication_date": "2010-12-01",
      "selected": null,
      "title": "Serverless Social Software for Nomadic Collaboration",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=84895301952&origin=inward",
        "https://link.springer.com/content/pdf/10.1007%2F978-3-642-12257-6_6.pdf"
      ]
    },
    {
      "abstract": "It is necessary for researchers to design lightweight authentication protocols to protect information security between tag and reader in RFID system. It is a great challenge to design an efficient and secure protocol because the tag has limited computation resource. In the paper, we firstly analyze some protocols. Secondly, we introduce a serverless authentication protocol for RFID system and analyze its security. We find it does not provide two-way authentication. Thirdly, we propose a modified two-way authentication protocol without server for RFID. The result indicates it provides privacy protection, resists tracking, and resists cloning attack. Moreover, it provides two-way authentication. For the efficiency, we think the computational complexity of our protocol is at the same level with the original protocol.",
      "authors": [
        "Lu, Xin Mei",
        "He, Lei"
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.4028/www.scientific.net/AMM.29-32.2709",
      "keywords": [
        "Radio Frequency Identification (RFID)",
        "Two-Way",
        "Authentication Protocol",
        "Hash"
      ],
      "number_of_pages": 5,
      "pages": "2709-2713",
      "publication": {
        "category": "Book",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9780878492459",
        "issn": "16609336",
        "publisher": "Trans Tech Publications",
        "sjr": 0.112,
        "snip": 0.0,
        "subject_areas": [
          "Engineering (all)"
        ],
        "title": "Applied Mechanics and Materials"
      },
      "publication_date": "2010-12-01",
      "selected": null,
      "title": "A Modified Two-Way Authentication Protocol without Server for RFID",
      "urls": [
        "https://www.scientific.net/AMM.29-32.2709.pdf",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=78650795784&origin=inward"
      ]
    },
    {
      "abstract": "One of the major challenges for video collaboration lies in video conferencing in low bandwidth and low cost. In this paper we discuss about a serverless desktop based video conferencing application that has been built around a highly bandwidth efficient H.264 video compression technology. The proposed solution offers a low cost multiparty video conferencing solution suitable for corporate environment over multicast backbone and a mechanism of providing user a manual control over the transmission rate depending on the available bandwidth. \u00c2\u00a9 2010 IEEE.",
      "authors": [
        "Chattopadhyay, D.",
        "Sinha, A.",
        "Chattopadhyay, T."
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1109/CICN.2010.24",
      "keywords": [
        "H.264",
        "Video conference",
        "AMR - NB",
        "Multicast"
      ],
      "number_of_pages": 5,
      "pages": "68-72",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9780769542546",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings - 2010 International Conference on Computational Intelligence and Communication Networks, CICN 2010"
      },
      "publication_date": "2010-12-01",
      "selected": null,
      "title": "A low cost multiparty H.264 based video conference solution for corporate environment",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=79952088457&origin=inward"
      ]
    },
    {
      "abstract": "Information security problem has become one of the hottest issues in RFID system. More and more researchers begin to study how to provide security protection in the RFID system. In the paper, we mainly research lightweight authentication protocols in RFID system. Firstly, we analyze some protocols. Secondly, we introduce a serverless authentication protocol for RFID system and analyze its security. We find it does not provide forward security. Thirdly, we propose a revised serverless authentication protocol with forward security. It provides two-way authentication and privacy protection, resists tracking and cloning attack as well as the original protocol. Moreover, it provides forward security protection and resists desynchronization attack. For the efficiency, its computational complexity is at the same level with the protocol proposed by Tan et al.",
      "authors": [
        "He, Lei",
        "Gan, Yong",
        "Li, Na Na",
        "Zhang, Tao"
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.4028/www.scientific.net/AMM.29-32.2267",
      "keywords": [
        "Radio Frequency Identification (RFID)",
        "Forward Security",
        "Authentication Protocol",
        "Serverless"
      ],
      "number_of_pages": 6,
      "pages": "2267-2272",
      "publication": {
        "category": "Book",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9780878492459",
        "issn": "16609336",
        "publisher": "Trans Tech Publications",
        "sjr": 0.112,
        "snip": 0.0,
        "subject_areas": [
          "Engineering (all)"
        ],
        "title": "Applied Mechanics and Materials"
      },
      "publication_date": "2010-12-01",
      "selected": null,
      "title": "A Revised Serverless Authentication Protocol with Forward Security for RFID ",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=78650774193&origin=inward",
        "https://www.scientific.net/AMM.29-32.2267.pdf"
      ]
    },
    {
      "abstract": "The Internet has been a huge success, but it is showing signs of age. Among multiple proposed directions for the Internet's future design is a promising architecture called Named Data Networking (NDN). NDN casts data as a first class element of the network's architecture in an effort to greatly facilitate new application development. However, as with any new architecture, one important deployment issues is being able to evolve existing applications. In this paper, we use a library for Instant Messaging (IM) applications called libpurple as a case study to demonstrate both the advantages of implementing IM as a serverless application in NDN and to explore promising approaches to porting applications to NDN. Our new serverless design enables IM clients to chat with each other without infrastructure support. Since libpurple is widely used as the transport layer of several IM applications (including Pidgin, Adium, and Apolio IM) our new library NDN Purple is able to seamlessly support these applications without modification to higher-layer code. In this work, we propose that our serverless design serves as a template for porting applications, and using it requires only trivial changes existing applications' state machines in order to facilitate interactions with NDN through. We do this by embedding a local pseudo-proxy in the application itself, and we are therefore able to leave the legacy code's state machine alone. \u00c2\u00a9 2010 ACM.",
      "authors": [
        "Wang, J.",
        "Peng, C.",
        "Li, C.",
        "Osterweil, E.",
        "Wakikawa, R.",
        "Cheng, P.-C.",
        "Zhang, L."
      ],
      "categories": null,
      "citations": 11,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1145/1930286.1930292",
      "keywords": [
        "instant messaging",
        "named data network"
      ],
      "number_of_pages": 8,
      "pages": "40-47",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450304016",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Asian Internet Engineering Conference, AINTEC 2010"
      },
      "publication_date": "2010-12-01",
      "selected": null,
      "title": "Implementing instant messaging using named data",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=84863372739&origin=inward"
      ]
    },
    {
      "abstract": "One of the recent realms that gathered attention of researchers is the security issues of Radio Frequency Identification (RFID) systems that have tradeoff ",
      "authors": [
        "Md. Endadul Hoque",
        "Farzana Rahman",
        "Sheikh I. Ahamed",
        "Jong Hyuk Park"
      ],
      "categories": null,
      "citations": 40,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1007/s11277-009-9786-0",
      "keywords": [
        "RFID",
        "Authentication",
        "Scalability",
        "Privacy",
        "Security",
        "Ownership transfer",
        "Forward secrecy"
      ],
      "number_of_pages": 15,
      "pages": "65-79",
      "publication": {
        "category": "Journal",
        "cite_score": 3.1,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "09296212",
        "publisher": "Springer Netherlands",
        "sjr": 0.302,
        "snip": 0.789,
        "subject_areas": [
          "Electrical and Electronic Engineering",
          "Computer Science Applications"
        ],
        "title": "Wireless Personal Communications"
      },
      "publication_date": "2010-09-01",
      "selected": null,
      "title": "Enhancing Privacy and Security of RFID System with Serverless Authentication and Search Protocols in Pervasive Environments",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=78149282448&origin=inward",
        "https://link.springer.com/content/pdf/10.1007/s11277-009-9786-0.pdf"
      ]
    },
    {
      "abstract": "Because of the web, JavaScript (JS) is one of the most popular programming languages today. Tools like GMail or Facebook are built heavily on JS. Despite the importance, JS is rarely in the core of programming courses. However, it still has a role in many courses [1, 2, 3]. In this paper, we introduce an open source tool to create small, automatically assessed JavaScript programming exercises (see Figure 1). Automatic assessment is based on unit tests, JSLint and various software metrics. Embedding an exercise into an existing web page only requires inserting the following or a similar HTML block: (Program Presented). In addition, teacher needs to provide unit tests for each new exercise. The fact that the assessment happens inside the student's own browser is the novelty of our work. Installation and sandboxing of a server are not required. This makes it easy to add exercises into any web page. The downside is that exercises are for self study purposes since grades submitted from a browser could be tampered with. Google Code Playground and W3Schools interactive demonstrations are similar to our system. However, these do not provide automatic assessment and are hard to integrate into other websites. Sources of the tool and a set of exercises are available online. (Figure Presented). Copyright 2010 ACM.",
      "authors": [
        "Karavirta, V.",
        "Ihantola, P."
      ],
      "categories": null,
      "citations": 1,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1145/1822090.1822179",
      "keywords": [
        "Javascript",
        "Automatic assessment",
        "Programming exercises"
      ],
      "number_of_pages": 1,
      "pages": "303",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781605588209",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "ITiCSE'10 - Proceedings of the 2010 ACM SIGCSE Annual Conference on Innovation and Technology in Computer Science Education"
      },
      "publication_date": "2010-08-06",
      "selected": null,
      "title": "Serverless automatic assessment of JavaScript exercises",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=77955140752&origin=inward"
      ]
    },
    {
      "abstract": "In this paper we present a generic environment for creating message-oriented server-side proxies to support adaptation from TCP transport-oriented client-server sessions to many-to-many peer-to-peer networking environments more suitable for deployment in dynamic wireless networks, capable of multicast forwarding. At its input, GUMP provides an interface for exposing network server implementations in order to allow existing GUI applications to connect to GUMP. At the back-end, GUMP's generic service discovery and multicast interfaces allow access to multiple implementations ,enabling the discovery of necessary services on the network, maintenance of the network state, and transport of messages amongst peers, for tuning to a specific network environment. At the heart of GUMP, there is a mechanism for selecting a server-side proxy implementation for a given messaging protocol, allowing multiple proxies to co-exist and run time adaption of the system. As a primary example and use case, we show how GUMP has been used to implement an XMPP proxy allowing existing off-the-shelf XMPP client software to dynamically create and operate multi-user chat sessions in a serverless network environment. This resulting proxy integration demonstrates the power of GUMP in its abil ity to adapt between different methods of input using either HTTP or TCP oriented server systems, the use of its different discovery subsystem bindings (SLPv2 and JmDNS), and its support for multicast architectures. GUMP therefore allows a single messaging protocol server-side implementation to be dynamically adapted to suit a particular distributed wireless deployment environment at run time. Copyright 2010 ACM.",
      "authors": [
        "Lass, R.N.",
        "Macker, J.",
        "Millar, D.",
        "Taylor, I."
      ],
      "categories": null,
      "citations": 3,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1145/1809018.1809026",
      "keywords": [
        "NORM",
        "Multicast",
        "SLP",
        "XMPP",
        "WS-notification",
        "JmDNS",
        "Peer-to-peer",
        "Serverless chat"
      ],
      "number_of_pages": 8,
      "pages": "39-46",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450300865",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceeding of the 2nd Workshop on Bio-Inspired Algorithms for Distributed Systems, BADS '10"
      },
      "publication_date": "2010-07-30",
      "selected": null,
      "title": "GUMP: Adapting client/server messaging protocols into peer-to-peer serverless environments",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=77954904150&origin=inward"
      ]
    },
    {
      "abstract": "The proceedings contain 6 papers. The topics discussed include: GPU-accelerated differential evolutionary Markov chain Monte Carlo method for multi-objective optimization over continuous space; a study of parallel and distributed particle swarm optimization methods; ant system for service deployment in private and public clouds; an evolutionary game theoretic approach to adaptive and stable application deployment in clouds; GUMP: adapting client/server messaging protocols into peer-to-peer serverless environments; and simulation experiences with an ecological approach for pervasive service systems.",
      "authors": [],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781450300865",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceeding of the 2nd Workshop on Bio-Inspired Algorithms for Distributed Systems, BADS '10"
      },
      "publication_date": "2010-07-30",
      "selected": null,
      "title": "Proceeding of the 2nd Workshop on Bio-Inspired Algorithms for Distributed Systems, BADS '10",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=77954943880&origin=inward"
      ]
    },
    {
      "abstract": "The proceedings contain 11 papers. The topics discussed include: Splish: a visual programming environment for Arduino to accelerate; the collaboration platform: a cooperative work course case-study; effects of all-for-one-type support in multilingual conference support system; using Zuzie2 to exchange viewpoints for a broader outlook; activity-aware chat system based on a study of distributed collaborative learning; an agent-based approach to evaluation of workflow support systems; a comparison of four post-cognitive theories in collaboration context; the unconventional interaction library: tackling the use of physiological interaction modalities; and a serverless instant messaging protocol for mobile ad hoc networks.",
      "authors": [],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9780769540290",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "8th International Conference on Creating, Connecting and Collaborating through Computing, C5 2010"
      },
      "publication_date": "2010-07-19",
      "selected": null,
      "title": "8th International Conference on Creating, Connecting and Collaborating through Computing, C5 2010",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=77954561142&origin=inward"
      ]
    },
    {
      "abstract": "In this paper, the problems facing designers of peer-to-peer instant messaging protocols, specifically those intended to run over mobile ad-hoc networks, are discussed. In particular, the challenges of identity management and presence dissemination are addressed, with an efficient and user-friendly protocol described that solves them. As a side effect, a form of social network mining is offered that allows users of the protocol to be introduced to unfamiliar members of their social network. Finally, a method of grafting a sort of multicast chat room functionality onto the protocol is discussed. \u00c2\u00a9 2010 IEEE.",
      "authors": [
        "Urso, A.D."
      ],
      "categories": null,
      "citations": 1,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1109/C5.2010.9",
      "keywords": [
        "Peer-to-peer",
        "Instant messaging",
        "Distributed systems",
        "Mobile ad-hoc networks"
      ],
      "number_of_pages": 5,
      "pages": "71-75",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9780769540290",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "8th International Conference on Creating, Connecting and Collaborating through Computing, C5 2010"
      },
      "publication_date": "2010-07-16",
      "selected": null,
      "title": "A serverless instant messaging protocol for mobile ad-hoc networks",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=77954526451&origin=inward"
      ]
    },
    {
      "abstract": "How to preserve causal and totally ordered event delivery is an important issue in real-time serverless DVE(Distributed Virtual Environment). However, most of the related works are designed to maintain causal order merely or time stamped order with intensive computation and bandwidth overhead. In this paper, we proposed a novel distributed algorithm to maintain the before-and-after relationship between events, both causal and concurrent, of DVE at each individual node. Several simulation experiments are carried out to evaluate the performance of our algorithm and the results demonstrate that the algorithm is effective in preserving causal and totally ordered event delivery and more efficient than the previous algorithms. \u00c2\u00a9 2010 IEEE.",
      "authors": [
        "Hangjun Zhou",
        "Wei Zhang",
        "Yuxing Peng",
        "Sikun Li"
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/ICCSIT.2010.5565115",
      "keywords": [
        "consistency algorithm",
        "distributed virtual environment",
        "concurrent events",
        "causal and totally ordered"
      ],
      "number_of_pages": 4,
      "pages": "664-667",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-4244-5539-3",
        "issn": null,
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings - 2010 3rd IEEE International Conference on Computer Science and Information Technology, ICCSIT 2010"
      },
      "publication_date": "2010-07-09",
      "selected": null,
      "title": "A consistency algorithm for causal and totally ordered event delivery in DVE",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=77958587227&origin=inward",
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=5565115"
      ]
    },
    {
      "abstract": "In the interest of patients in general, most physicians in medical organizations use novel technology from commercial firms to support innovative medicine that preserves health and saves lives. Prior studies on technology development have described the role of lead users who represent a potentially important source of novel innovations due to their unique knowledge base accumulated through their daily practice. By expanding this concept to service innovation in healthcare, our proposed model identifies a systemic view of innovation defined as a collective, non-deterministic, and path-dependent function of innovation in medical technology as well as the adoption and diffusion of these clinical innovations within a community of practice. We describe this function as a service co-creation function. Our empirical case studies on medical imaging devices support our model and, in turn, bring some insight on innovation management for medical physicians and commercial firms. \u00c2\u00a92010 IEEE.",
      "authors": [
        "Jerome Galbrun",
        "Kyoichi Kijima"
      ],
      "categories": null,
      "citations": 1,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/ICSSSM.2010.5530257",
      "keywords": [
        "medical technology",
        "clinical solutions",
        "healthcare",
        "Service innovation"
      ],
      "number_of_pages": 7,
      "pages": "107-113",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-4244-6486-9",
        "issn": "2161-1904",
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "2010 7th International Conference on Service Systems and Service Management, Proceedings of ICSSSM' 10"
      },
      "publication_date": "2010-06-28",
      "selected": null,
      "title": "Innovation in medical imaging technology: Toward a systemic service perspective",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=77955954563&origin=inward",
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=5530257"
      ]
    },
    {
      "abstract": "In large-scale asynchronous distributed virtual environments(DVEs), one of the difficult problems is to deliver the concurrent events in a consistent order at each node. Generally, the previous consistency control approaches can be classified into two categories: causal order and time stamped order. However, causal order approaches can merely preserve the cause-effect relation of events and time stamped order approaches seem intrinsically complex to be used in serverless large-scale asynchronous DVEs. In this paper, we proposed a novel distributed algorithm to identify the concurrent events and preserve the consistent order delivery of them at different nodes. Simulation studies are also carried out to compare the performance of this algorithm with that of the previous ones. The results show that the new algorithm can effectively deliver the concurrent events in consistent order at each node and is more efficient than the previous algorithms in large-scale asynchronous DVEs. \u00c2\u00a9 2010 IEEE.",
      "authors": [
        "Hangjun Zhou",
        "Wei Zhang",
        "Yuxing Peng",
        "Sikun Li"
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/ICETC.2010.5529725",
      "keywords": [
        "concurrent events",
        "distributed consistency algorithm",
        "distributed virtual environments"
      ],
      "number_of_pages": null,
      "pages": "V4-95-V4-98",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-4244-6369-5",
        "issn": "2155-1812",
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "ICETC 2010 - 2010 2nd International Conference on Education Technology and Computer"
      },
      "publication_date": "2010-06-22",
      "selected": null,
      "title": "A distributed approach to consistent order delivery of concurrent events in asynchronous DVEs",
      "urls": [
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=5529725",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=77956065694&origin=inward"
      ]
    },
    {
      "abstract": "This work discusses the adaptation of group-oriented messaging and chat technology for operation in serverless, multicast-capable mobile wireless architectures. The main goals are to allow group messaging and chat sessions to fragment/coalesce, operate through disrupted TCP conditions, and improve bandwidth utilization when multicast is available. In addition, the solution demonstrates proxying and gateway methods to interoperate with existing client and server standards and software. The approach presents several innovations that extend and adapt eXtensible Messaging and Presence Protocol (XMPP) standards for incorporating group serverless chat and messaging within more challenging operational environments. While there is large body of work on messaging middleware solutions, this paper concentrates on the adaptation of speci.c XMPP standards for serverless, multicast operation. We discuss our working implementation prototype and present initial experimentation comparing client/server multi-user chat (MUC) operation to serverless multicast MUC within several mobile network scenarios. In addition, we demonstrate a gatewaying solution for serverless MUC systems to interoperate with conventional MUC server-based systems. The speci.c test scenarios are instrumented to operate within a wireless mobile emulation environment using mobile ad hoc network (MANET) unicast and multicast routing technology. This approach remains independent of any particular routing algorithm and the proxied XMPP protocol module allows for the deployment of existing real-world client software across all nodes of the network. The initial .ndings show the signi.cant performance potential for serverless MUC extensions. In addition to these results, we discuss some ongoing design challenges and future planned work. \u00c2\u00a92010 IEEE.",
      "authors": [
        "N. Lass Robert",
        "Joe Macker",
        "David Millar",
        "C. Regli William",
        "Ian Taylor"
      ],
      "categories": null,
      "citations": 4,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/MILCOM.2010.5680094",
      "keywords": [],
      "number_of_pages": 6,
      "pages": "1116-1121",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-4244-8179-8",
        "issn": "2155-7578",
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings - IEEE Military Communications Conference MILCOM"
      },
      "publication_date": "2010-01-01",
      "selected": null,
      "title": "XO: XMPP overlay service for distributed chat",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=79951623545&origin=inward",
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=5680094"
      ]
    },
    {
      "abstract": "A network attack is a set of network elements that are disabled by an adversary. The goal for the attack is to produce the most possible damage to the network in terms of network connectivity by disabling the least possible number of network elements. We show that the problem of finding the optimal attack in a serverless network is NP-Complete even when only edges or nodes are considered for disabling. We study a node attack policy with polynomial complexity based on shorter paths and show that this attack policy outperforms in most cases classical attacks policies such as random attack or maximum degree attack. We also study the behavior of different network topologies under these attack policies. \u00c2\u00a9 J.UCS.",
      "authors": [
        "Aguirre, C.",
        "Huerta, R.",
        "Tsimring, L."
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": null,
      "keywords": [
        "Optimal attack problem",
        "Network connectivisty",
        "Attack strategies",
        "Np-complete"
      ],
      "number_of_pages": 18,
      "pages": "2747-2764",
      "publication": {
        "category": "Journal",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "0958695X",
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Journal of Universal Computer Science"
      },
      "publication_date": "2009-12-30",
      "selected": null,
      "title": "Optimal serverless networks attacks, complexity and some approximate algorithms",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=72649088507&origin=inward"
      ]
    },
    {
      "abstract": "We propose a new serverless RFID protocol for authentication. Our scheme not only retains the original security agreement but also reduce the operations and incrcase the efficiency of the implementation. We also propose a RFID tag search protocol which is a new concept that we believe this tag search will be the future trend. This protocol has a better execution efficiency in comparison with other protocols. \u00c2\u00a9 2009 IEEE.",
      "authors": [
        "Luon-Chang Lin",
        "Shih-Chang Tsaur",
        "Kai-Ping Chang"
      ],
      "categories": null,
      "citations": 13,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/ICCEE.2009.159",
      "keywords": [
        "Security",
        "Authentication",
        "RFID"
      ],
      "number_of_pages": 5,
      "pages": "95-99",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-0-7695-3925-6",
        "issn": null,
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "2009 International Conference on Computer and Electrical Engineering, ICCEE 2009"
      },
      "publication_date": "2009-12-28",
      "selected": null,
      "title": "Lightweight and Serverless RFID Authentication and Search Protocol",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=77950812416&origin=inward",
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=5380132"
      ]
    },
    {
      "abstract": "Due to the increasing popularity of Peer-to-Peer (P2P) computing, the information technology industry and standardization organizations have started to direct their efforts on standardizing P2P algorithms and protocols. The Internet Engineering Task Force (IETF) has recently formed the Peer-to-Peer SIP (P2PSIP) working group for enabling serverless operation of Session Initiation Protocol (SIP). This chapter introduces the P2PSIP by presenting its background and purpose, operational principles, current status, and application areas. The focus is on the challenges and problem areas from the viewpoint of standardization and related research. The mobile- and heterogeneous environments are considered with special care. The authors provide a glance to the existing and emerging solutions that may be used in tackling the mentioned challenges and thus paving the way for successful deployment of P2PSIP in mobile environments. \u00c2\u00a9 2009, IGI Global.",
      "authors": [
        "Harjula, E.",
        "Hautakorpi, J.",
        "Beijar, N.",
        "Ylianttila, M."
      ],
      "categories": null,
      "citations": 3,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.4018/978-1-60566-715-7.ch015",
      "keywords": [],
      "number_of_pages": 22,
      "pages": "326-347",
      "publication": {
        "category": "Book",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781605667157",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Mobile Peer-to-Peer Computing for Next Generation Distributed Environments: Advancing Conceptual and Algorithmic Applications"
      },
      "publication_date": "2009-12-01",
      "selected": null,
      "title": "Peer-to-peer SIP for mobile computing: Challenges and solutions",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=77956088778&origin=inward"
      ]
    },
    {
      "abstract": "The significant growing amount of shared files in distributed and serverless P2P networks has impacted heavily on content management and retrieval field. In this paper, we propose an associative memory network with intention to provide efficient pattern recognition within P2P networks. An efficient pattern recognition algorithm which works within distributed and dynamic nature of P2P network would be beneficial for better content handling and distribution. Our approach, which is called multi-wheel Graph Neuron (mWGN), is a variant of Graph Neuron (GN)-based algorithm built on top of Chord overlay network. GN algorithm is an associative memory designed for wireless sensor environment. mWGN is a restructured design from Hierarchical Graph Neuron (HGN), preserving its single cycle learning, lightweight and accuracy feature while requiring fewer number of nodes. Result from the experiment shows the proposed approach is highly accurate and the fault tolerance of Chord protocol provides stability for the proposed approach. \u00c2\u00a9 2010 ACM.",
      "authors": [
        "Amir, A.",
        "Khan, A.",
        "Mahmood, R.A.R."
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1145/1806338.1806371",
      "keywords": [
        "graph neuron",
        "multi-wheel graph neuron",
        "P2P networks",
        "distributed associative memory"
      ],
      "number_of_pages": 8,
      "pages": "147-154",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781605586601",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "iiWAS2009 - The 11th International Conference on Information Integration and Web-based Applications and Services"
      },
      "publication_date": "2009-12-01",
      "selected": null,
      "title": "Multi-wheel graph neuron: A distributed associative memory for structured P2P networks",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=77954618049&origin=inward"
      ]
    },
    {
      "abstract": "The unified management of user rights and access control policies in a corporation with many units is not easy to implement. Moreover, most of the distributed access control systems are complex and heterogeneous, making it hard to maintain a unified control over all fine grained policies employed by each unit. This paper proposes a unified administration of policies for corporation environments by applying a management scheme based on authorization certificates. These certificates allow the derivation of new fine grained policies in the domain of each unit, assuring that no corporation policies will be violated. These new policies update automatically the corporation repository, preserving the unified management of user rights, and then update the corresponding policy repository of each unit. Our proposal provides a real loosely coupled policy management scheme using a serverless public key infrastructure and the Web Services technology. The prototype shows the proposal viability. Copyright 2009 ACM.",
      "authors": [
        "Marcon Jr., A.L.",
        "Santin, A.O.",
        "De Paula Lima Jr., L.A.",
        "Stihler, M."
      ],
      "categories": null,
      "citations": 1,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1145/1529282.1529640",
      "keywords": [
        "Policy provisioning",
        "Policy management",
        "Authorization certificates and web services security"
      ],
      "number_of_pages": 5,
      "pages": "1594-1598",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781605581668",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings of the ACM Symposium on Applied Computing"
      },
      "publication_date": "2009-12-01",
      "selected": null,
      "title": "Policy management architecture based on provisioning model and authorization certificates",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=72949108433&origin=inward"
      ]
    },
    {
      "abstract": "RFID (Radio Frequency IDentification) system has been widely used in our life, such as transport systems, passports, automotive, animal tracking, human implants, library, and so on. However, the RFID authentication protocols between RF (Radio Frequency) tags and the RF readers have been bring about various privacy problems that anonymity of the tags, tracking, eavesdropping, and so on. Many researchers have proposed the solution of the problems. However, they still have the problem, such as location privacy, mutual authentication. In this paper, we show the problems of the previous protocols, and then we propose a more secure and efficient RFID authentication protocol.",
      "authors": [
        "Kim, S.",
        "Lee, K.",
        "Kim, S.",
        "Won, D."
      ],
      "categories": null,
      "citations": 4,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": null,
      "keywords": [
        "Mutual authentication",
        "Serverless",
        "Anonymity",
        "RFID"
      ],
      "number_of_pages": 5,
      "pages": "460-464",
      "publication": {
        "category": "Journal",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "2010376X",
        "publisher": "World Academy of Science Engineering and Technology",
        "sjr": 0.137,
        "snip": 0.361,
        "subject_areas": [
          "Engineering (all)"
        ],
        "title": "World Academy of Science, Engineering and Technology"
      },
      "publication_date": "2009-11-01",
      "selected": null,
      "title": "Security analysis on anonymous mutual authentication protocol for RFID tag without back-end database and its improvement",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=78651536536&origin=inward"
      ]
    },
    {
      "abstract": "The eMule client interface is used as Reverse Patterns (RP) of peer-to-peer (p2p) file sharing applications with an aim to reduce the traffic generated by unwanted Internet service providers. The eMule introduces a persistent credit system to reward virtuous users, that relies on servers both for locating users and contents thereby implementing a hybrid p2p architecture. This client interface keeps track of the IP address of the source as well as some hashes, and can implement a serverless infrastructure, organizing eMule in overlay network. The cross-domain nature of RP are known to have non-negligible impact by overpositioning the users and addresses. The RP can also trigger personal firewalls by targeting different destination TCP ports, where these RP's are also used for monitoring and identification purposes. The RP generated by eMule-like applications are regarded as most important implications and exploitations.",
      "authors": [
        "Caviglione, L."
      ],
      "categories": null,
      "citations": 1,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1016/S1353-4858(09)70087-X",
      "keywords": [],
      "number_of_pages": 5,
      "pages": "8-12",
      "publication": {
        "category": "Journal",
        "cite_score": 1.3,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "13534858",
        "publisher": "Elsevier BV",
        "sjr": 0.177,
        "snip": 0.568,
        "subject_areas": [
          "Information Systems and Management",
          "Computer Networks and Communications",
          "Safety, Risk, Reliability and Quality"
        ],
        "title": "Network Security"
      },
      "publication_date": "2009-07-01",
      "selected": null,
      "title": "Understanding and exploiting the reverse patterns of peer-to-peer file sharing applications",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=69349102348&origin=inward"
      ]
    },
    {
      "abstract": "To realize effective management on product development and manufacturing data, a manufacturing data management method based on service was proposed. This method included three aspects: model as a service, function as a service and platform as a service. Two concepts, Service Interface (SI) and Service Cluster (SC) were introduced into the manufacturing data model to increase service-oriented features of the model. The operation environment of the service function was analyzed, which was comprised of four parts: service encapsulation rules, service adapters, service management and execution environment, and a standard manager. Structure of the service platform was also put forward, which was composed of four layers: enterprise IT resources, service technology platform, business service platform and business execution environment. Finally, effectiveness of this method was validated by an application example in an aviation manufacturing corporation.",
      "authors": [
        "Liu, W.",
        "Qiao, L.-H.",
        "Yang, J.-J."
      ],
      "categories": null,
      "citations": 1,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": null,
      "keywords": [
        "Service platform",
        "Service",
        "Manufacturing data",
        "Data management",
        "Model"
      ],
      "number_of_pages": 7,
      "pages": "1342-1348",
      "publication": {
        "category": "Journal",
        "cite_score": 1.5,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "10065911",
        "publisher": "Computer Integrated Manufacturing Systems",
        "sjr": 0.275,
        "snip": 0.639,
        "subject_areas": [
          "Industrial and Manufacturing Engineering",
          "Electrical and Electronic Engineering",
          "Software",
          "Control and Systems Engineering",
          "Computer Science Applications"
        ],
        "title": "Jisuanji Jicheng Zhizao Xitong/Computer Integrated Manufacturing Systems, CIMS"
      },
      "publication_date": "2009-07-01",
      "selected": null,
      "title": "Manufacturing data management based on service",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=69249224440&origin=inward"
      ]
    },
    {
      "abstract": "A mobile ad hoc network (MANet) is a flexible way to interconnect mobile devices. Peer-to-peer (P2P) networks are serverless self-organized infrastructures that enable end-to-end communications. The P2P churn and the instabilities of MANETs interconnections bring important challenges to P2P over MANETs(PoM). A consumer peer in PoM wastes several of its scarce resources managing the communication with the peer that provides content. Our proposal aims at reducing the consumer peer control over the communication so that to avoid unnecessary consumption of its resources. A virtual content provider is used for this purpose and a prototype was implemented in order to show the feasibility of the proposal.",
      "authors": [
        "Marcelo H. Vithoft",
        "Altair O. Santin",
        "Luiz A. de Paula Lima"
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "IEEE"
      ],
      "doi": null,
      "keywords": [
        "Communication Instabilities Mitigation in PoM",
        "Content Integrity in PoM",
        "Content Management"
      ],
      "number_of_pages": 6,
      "pages": "661-666",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-89-5519-139-4",
        "issn": "1738-9445",
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "2009 11th International Conference on Advanced Communication Technology"
      },
      "publication_date": "2009-02-15",
      "selected": null,
      "title": "A management service for P2P content over MANets",
      "urls": [
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=4810038"
      ]
    },
    {
      "abstract": "Serverless distributed computing has received significant attention from both the industry and the research community. Among the most popular applications are the wide area network file systems, exemplified by CFS, Farsite and OceanStore. These file systems store files on a large collection of untrusted nodes that form an overlay network. They use cryptographic techniques to maintain file confidentiality and integrity from malicious nodes. Unfortunately, cryptographic techniques cannot protect a file holder from a Denial-of-Service (DoS) or a host compromise attack. Hence, most of these distributed file systems are vulnerable to targeted file attacks, wherein an adversary attempts to attack a small (chosen) set of files by attacking the nodes that host them. This paper presents LocationGuard - a location hiding technique for securing overlay file storage systems from targeted file attacks. LocationGuard has three essential components: (i) location key, (ii) routing guard, a secure algorithm that protects accesses to a file in the overlay network given its location key, and (iii) a set of location inference guards. Our experimental results quantify the overhead of employing LocationGuard and demonstrate its effectiveness against DoS attacks, host compromise attacks and various location inference attacks. \u00c2\u00a9 2009 IEEE.",
      "authors": [
        "Mudhakar Srivatsa",
        "Ling Liu"
      ],
      "categories": null,
      "citations": 6,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/TPDS.2008.125",
      "keywords": [
        "Performance and scalability",
        "Location hiding",
        "File systems",
        "Overlay networks",
        "Denial-of-service attacks"
      ],
      "number_of_pages": 16,
      "pages": "512-527",
      "publication": {
        "category": "Journal",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "2161-9883",
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "IEEE Transactions on Parallel and Distributed Systems"
      },
      "publication_date": "2009-01-01",
      "selected": null,
      "title": "Mitigating Denial-of-Service Attacks on the Chord Overlay Network: A Location Hiding Approach",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=67649888610&origin=inward",
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=4564446"
      ]
    },
    {
      "abstract": "RFID technology has become increasingly popular in todays society and plays an important role in daily life. However, the exploitation of this technology requires practical and secure solutions to overcome certain issues.. In the case of RFID systems, privacy protection and scalability are two conflicting goals. Nevertheless, in this paper we propose a hexagonal cell based distributed architecture which ensures improved scalability while maintaining privacy. The hexagonal architecture allows readers to co-operate with one another to identify tags without compromising scalability. Furthermore, this architecture uses serverless protocols for security assurance, cutting down set up and maintenance cost as well as traffic to server. To the best of our knowledge, we propose a combination of servered and serverless techniques within the same distributed architecture for the first time. Our proposed distributed scalable architecture together with the secure serverless protocols can be used in numerous real life situations. Copyright 2008 ACM.",
      "authors": [
        "Ahamed, S.I.",
        "Rahman, F.",
        "Hoque, Md.E."
      ],
      "categories": null,
      "citations": 1,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1145/1363686.1364147",
      "keywords": [
        "Serverless, Identification",
        "Scalability",
        "EDSA",
        "Distributed"
      ],
      "number_of_pages": 6,
      "pages": "1902-1907",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781595937537",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings of the ACM Symposium on Applied Computing"
      },
      "publication_date": "2008-12-03",
      "selected": null,
      "title": "Secured tag identification using EDSA (Enhanced Distributed Scalable Architecture)",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=56849110968&origin=inward"
      ]
    },
    {
      "abstract": "In the coming pervasive society, Radio Frequency Identification(RFID) Tags will be affixed within every product and object including human. This technology is anticipated to be a major technology which will be utilized by several pervasive services where these tags will be used to identify various objects. However, the use of RFID tags may create new threats to the security and privacy of individuals holding RFID tags. Therefore, widespread deployment of RFID systems preserving users' privacy and data integrity is a major security challenge of the coming year. That is why research related to privacy preserving authentication is growing. And the envision is that: RFID systems can intermingle into human lives if they can offer practical, low cost and secured mechanisms for tag authentication which has been in the midst of researcher's interest for almost a decade. One extension of RFID authentication is RFID tag searching. Any RFID authentication protocol which provides adequate security and privacy can be used for RFID tag searching. However, when the number of tags within a system will increase, the overall data collection cost will also increase. Therefore, more efficient tag searching method is needed. RFID search protocol can play a major role for tag searching which has not been given much attention so far. But we firmly believe that in near future tag searching will be a significant issue. In this paper we propose a lightweight and serverless RFID tag searching protocol. This protocol can search a particular tag efficiently without server's intervention. Furthermore they are secured against major security threats.",
      "authors": [
        "Ahamed, S.I.",
        "Rahman, F.",
        "Hoque, E.",
        "Kawsar, F.",
        "Nakajima, T."
      ],
      "categories": null,
      "citations": 11,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": null,
      "keywords": [
        "Security",
        "Serverless search protocol",
        "RFID"
      ],
      "number_of_pages": 10,
      "pages": "57-66",
      "publication": {
        "category": "Journal",
        "cite_score": 0.8,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "17389976",
        "publisher": "Science and Engineering Research Support Society",
        "sjr": 0.146,
        "snip": 0.496,
        "subject_areas": [
          "Computer Science (all)"
        ],
        "title": "International Journal of Security and its Applications"
      },
      "publication_date": "2008-12-01",
      "selected": null,
      "title": "Secure and efficient tag searching in RFID systems using serverless search protocol",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=79751506127&origin=inward"
      ]
    },
    {
      "abstract": "Recently, mobile social software has become an active area of research and development. A multitude of systems have been proposed over the past years that try to follow the success of their Internet bound equivalents. Many mobile solutions try to augment the functionality of existing platforms with location awareness. The price for mobility, however, is typically either the lack of the popular friendship exploration features or the costs involved to access a central server required for this functionality. In this paper, we try to address this issue by introducing a decentralized method that is able to explore the social neighborhood of a user by detecting friends of friends. Rather than only exploiting information about the users of the system, the method relies on real friends, and adequately addresses the arising privacy issues. Moreover, we present VENETA, a mobile social networking platform which, among other features, implements our novel friend of friend detection algorithm. \u00c2\u00a9 2008 IEEE.",
      "authors": [
        "Von Arb, M.",
        "Bader, M.",
        "Kuhn, M.",
        "Wattenhofer, R."
      ],
      "categories": null,
      "citations": 87,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1109/WiMob.2008.52",
      "keywords": [
        "P3",
        "Decentralized",
        "Friend-of-friend",
        "Friend detection",
        "Privacy",
        "Security",
        "Social networking",
        "Mobile"
      ],
      "number_of_pages": 6,
      "pages": "184-189",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9780769533933",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings - 4th IEEE International Conference on Wireless and Mobile Computing, Networking and Communication, WiMob 2008"
      },
      "publication_date": "2008-12-01",
      "selected": null,
      "title": "VENETA: Serverless Friend-of-Friend detection in mobile social networking",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=56749173469&origin=inward"
      ]
    },
    {
      "abstract": "This paper proposes iPTT, a peer-to-peer (P2P) Push-to-Talk (PTT) service for Voice over IP (VoIP). In iPTT, a distributed and mobile-operator independent network architecture is presented to accelerate the deployment of the PTT service. Based on. the serverless architecture, we develop two mechanisms, that is, flooding-based floor control mechanism (FFC) and tree-based floor control mechanism (TFC), for real-time talk-burst determination. The determination algorithms and the corresponding message flows for these two mechanisms are designed to show the feasibility of FFC and TFC. The performance of FFC and TFC is investigated through our analytical and simulation models in terms of the determination latency and the number of floor-control message exchanges. Copyright \u00c2\u00a9 2008 John Wiley & Sons, Ltd.",
      "authors": [
        "Lin, J.-R.",
        "Pang, A.-C.",
        "Wang, Y.-C."
      ],
      "categories": null,
      "citations": 20,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1002/wcm.588",
      "keywords": [
        "Peer-to-peer",
        "Floor control",
        "Voice over IP",
        "Push-to-talk"
      ],
      "number_of_pages": 13,
      "pages": "1331-1343",
      "publication": {
        "category": "Journal",
        "cite_score": 4.3,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "15308669",
        "publisher": "Hindawi Limited",
        "sjr": 0.42,
        "snip": 1.024,
        "subject_areas": [
          "Information Systems",
          "Computer Networks and Communications",
          "Electrical and Electronic Engineering"
        ],
        "title": "Wireless Communications and Mobile Computing"
      },
      "publication_date": "2008-12-01",
      "selected": null,
      "title": "IPTT: Peer-to-peer push-to-talk for VoIP",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=56849104734&origin=inward"
      ]
    },
    {
      "abstract": "RFID tag search is to find a particular tag in a group of tags by using a portable reader. Since a portable reader has own identifier and secret values associated with each tag, the portable reader can wirelessly communicate with the tag without help of central database. The RFID tag search can be useful to find a lost book among all RFID-tagged books in a library. However, the basic operation for RFID tag search has security and privacy problems. Secure search protocols to solve these problems were firstly discussed by Tan et al. Nonetheless, their protocols don't perfectly solve an illegal tag tracking problem by a reuse attack of a search query and also have an illegal reader tracking problem by revealing the portable reader ID over an insecure channel. In this paper, we propose strong authentication protocol for secure RFID tag search without help of central database which utilizes a block cipher (AES-128) and a timestamp. Our protocol can search a particular tag efficiently, and preserve user privacy against all major attacks. \u00c2\u00a9 2008 IEEE.",
      "authors": [
        "Won, T.Y.",
        "Chun, J.Y.",
        "Lee, D.H."
      ],
      "categories": null,
      "citations": 21,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1109/EUC.2008.54",
      "keywords": [
        "Tag Search",
        "RFID",
        "Serverless",
        "Authentication",
        "Privacy",
        "Security"
      ],
      "number_of_pages": 6,
      "pages": "153-158",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9780769534923",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings of The 5th International Conference on Embedded and Ubiquitous Computing, EUC 2008"
      },
      "publication_date": "2008-12-01",
      "selected": null,
      "title": "Strong authentication protocol for secure RFID tag search without help of central database",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=63149152263&origin=inward"
      ]
    },
    {
      "abstract": "The \"tracker\" of a P2P system is used to lookup which peers hold (or partially hold) a given object. There are various designs for the tracker function, from a single-server tracker, to multiple-server tracker system, to DHT-based serverless systems. In this paper, we classify the different designs, discuss the different considerations for these designs, and simple models to evaluate the reliability of these designs. \u00c2\u00a9 2008 IEEE.",
      "authors": [
        "Adele Lu Jia",
        "Dah Ming Chiu"
      ],
      "categories": null,
      "citations": 2,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/P2P.2008.11",
      "keywords": [],
      "number_of_pages": 4,
      "pages": "227-230",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-0-7695-3318-6",
        "issn": "2161-3567",
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings - P2P'08, 8th International Conference on Peer-to-Peer Computing"
      },
      "publication_date": "2008-09-08",
      "selected": null,
      "title": "Designs and Evaluation of a Tracker in P2P Networks",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=55149103166&origin=inward",
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=4627284"
      ]
    },
    {
      "abstract": "We can distinguish two types of web search engines: general use ones that index and search all the web, and site-specific ones that are provided by individual websites for local searching. A comparison of the effectiveness of the two types allows search engine users to choose the right engine and organizations to decide whether they should develop their own search software or purchase the search function as a service. We evaluate the performance of two general purpose search engines and 10 sitespecific ones. The criteria we used are precision and relative recall. We entered 20 queries in each website's search engine and evaluated the first 10 links. According to the results, Google is in most cases the most efficient search engine. However, in some cases general purpose search engines do not index the website's content as well as a site-specific engine. \u00c2\u00a9 2008 IEEE.",
      "authors": [
        "Georgios Atsaros",
        "Diomidis Spinellis",
        "Panagiotis Louridas"
      ],
      "categories": null,
      "citations": 2,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/PCI.2008.47",
      "keywords": [
        "General purpose search engines",
        "search engines evaluation",
        "site-specific search engines"
      ],
      "number_of_pages": 5,
      "pages": "44-48",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-0-7695-3323-0",
        "issn": null,
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings - 12th Pan-Hellenic Conference on Informatics, PCI 2008"
      },
      "publication_date": "2008-08-28",
      "selected": null,
      "title": "Site-Specific versus General Purpose Web Search Engines: A Comparative Evaluation",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=57849125988&origin=inward",
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=4621535"
      ]
    },
    {
      "abstract": "Several security threats in RFID systems are obstacles to intermingle this technology into human lives. On the other hand ensuring flexible privacy mechanism has been a challenge due to extremely inadequate computational storage of typical RFID tags. So in order to relieve tags from responsibility, privacy protection and security assurance was guaranteed by central server. In this paper, we describe serverless, lightweight, forward secured and untraceable authentication protocol for RFID tags. This authentication protocol ensures security against almost all major attacks without the intervention of server. Furthermore it is very critical to guarantee untraceability and scalability simultaneously. Here we are proposing a scheme to make our protocols more scalable via ownership transfer. To the best of our knowledge this is incorporated in the serverless system for the first time.",
      "authors": [
        "S. I. Ahamed",
        "MD. E. Hoque",
        "F. Rahman",
        "Fahim Kawsar",
        "Tatsuo Nakajima"
      ],
      "categories": null,
      "citations": 9,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1049/cp:20081141",
      "keywords": [
        "RFID",
        "Serverless",
        "Authentication",
        "Privacy",
        "Security"
      ],
      "number_of_pages": 8,
      "pages": "1-8",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-0-86341-894-5",
        "issn": "0537-9989",
        "publisher": "Institution of Engineering and Technology",
        "sjr": 0.101,
        "snip": 0.132,
        "subject_areas": [
          "Electrical and Electronic Engineering"
        ],
        "title": "2008 IET 4th International Conference on Intelligent Environments"
      },
      "publication_date": "2008-07-21",
      "selected": null,
      "title": "YA-SRAP: Yet another serverless RFID authentication protocol",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=70350157100&origin=inward",
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=4629792"
      ]
    },
    {
      "abstract": "For RFID tags to proliferate in our day to day life, they will have to offer practical, low cost and secured mechanisms for tag authentication which has been in the midst of researcher's interest for almost a decade. One extension of RFID authentication is RFID tag searching, which has not been given much attention so far. But we firmly believe that in near future tag searching will be a significant issue. In this paper we propose a lightweight and serverless RFID tag searching protocol. This protocol can search a particular tag efficiently without server's intervention. Furthermore they are secured against major security threats. \u00c2\u00a9 2008 IEEE.",
      "authors": [
        "Sheikh I. Ahamed",
        "Farzana Rahman",
        "Endadul Hoque",
        "Fahim Kawsar",
        "Tatsuo Nakajima"
      ],
      "categories": null,
      "citations": 20,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/ISA.2008.70",
      "keywords": [
        "RFID security",
        "serverless search protocol"
      ],
      "number_of_pages": 6,
      "pages": "187-192",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-0-7695-3126-7",
        "issn": null,
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings of the 2nd International Conference on Information Security and Assurance, ISA 2008"
      },
      "publication_date": "2008-04-24",
      "selected": null,
      "title": "S3PR: Secure Serverless Search Protocols for RFID",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=51349134046&origin=inward",
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=4511560"
      ]
    },
    {
      "abstract": "With the increased popularity of RFID applications, different authentication schemes have been proposed to provide security and privacy protection for users. Most recent RFID protocols use a central database to store the RFID tag data. The RFID reader first queries the RFID tag and returns the reply to the database. After authentication, the database returns the tag data to the reader. In this paper, we propose a more flexible authentication protocol that provides comparable protection without the need for a central database. We also suggest a protocol for secure search for RFID tags. We believe that as RFID applications become widespread, the ability to securely search for RFID tags will be increasingly useful. \u00c2\u00a9 2008 IEEE",
      "authors": [
        "Tan, C.C.",
        "Sheng, B.",
        "Li, Q."
      ],
      "categories": null,
      "citations": 124,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1109/TWC.2008.061012",
      "keywords": [
        "search",
        "RFID",
        "security",
        "privacy",
        "Authentication"
      ],
      "number_of_pages": 8,
      "pages": "1400-1407",
      "publication": {
        "category": "Journal",
        "cite_score": 15.2,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "15361276",
        "publisher": "Institute of Electrical and Electronics Engineers Inc.",
        "sjr": 2.01,
        "snip": 2.43,
        "subject_areas": [
          "Applied Mathematics",
          "Electrical and Electronic Engineering",
          "Computer Science Applications"
        ],
        "title": "IEEE Transactions on Wireless Communications"
      },
      "publication_date": "2008-04-08",
      "selected": null,
      "title": "Secure and Serverless RFID Authentication and Search Protocols",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85008055668&origin=inward"
      ]
    },
    {
      "abstract": "Relying solely on TCP connections for reliability without any additional message-recovery mechanism at the application level can be troublesome for software developers. Developers at the Technion-Israel Institute of Technology have implemented a serverless collaborative application suite, known as WiPeer that uses JazzEnsemble group communication for membership maintenance and reliable delivery purposes, to deal with the loss of TCP connections in the case of carrying out communication and file sharing issues. In file transfer scenario, the developers have encountered a bug in which a transfer of a large file would occasionally hang after a few hundred Mbytes had already been transferred successfully. The analysis reveals that even when the network is working well, the loss of a TCP connection in modern operating system could be the result of some other application or service on the same machine. Moreover, TCP breakage can not serve as proof of node failure or network partition.",
      "authors": [
        "Drabkin, V.",
        "Friedman, R.",
        "Kliot, G."
      ],
      "categories": null,
      "citations": 1,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1109/MDSO.2008.22",
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": {
        "category": "Journal",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "15414922",
        "publisher": "Institute of Electrical and Electronics Engineers Inc.",
        "sjr": 0.286,
        "snip": 2.223,
        "subject_areas": [
          "Engineering (all)",
          "Hardware and Architecture",
          "Computer Networks and Communications",
          "Software"
        ],
        "title": "IEEE Distributed Systems Online"
      },
      "publication_date": "2008-01-01",
      "selected": null,
      "title": "On the (Un)reliability of TCP connections: The return of the end-to-end argument",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=54949102386&origin=inward"
      ]
    },
    {
      "abstract": "Access full-text academic articles: J-STAGE is an online platform for Japanese academic journals.",
      "authors": [
        "Jabeom GU",
        "Jaehoon NAH",
        "Hyeokchan KWON",
        "Jonsoo JANG",
        "Sehyun PARK"
      ],
      "categories": null,
      "citations": 1,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1093/ietisy/e91-d.4.1058",
      "keywords": [
        "e",
        "o",
        "p",
        "t",
        "r",
        "-"
      ],
      "number_of_pages": 16,
      "pages": "1058-1073",
      "publication": {
        "category": "Journal",
        "cite_score": 1.4,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "09168532",
        "publisher": "Maruzen Co., Ltd/Maruzen Kabushikikaisha",
        "sjr": 0.2,
        "snip": 0.5,
        "subject_areas": [
          "Computer Vision and Pattern Recognition",
          "Hardware and Architecture",
          "Artificial Intelligence",
          "Electrical and Electronic Engineering",
          "Software"
        ],
        "title": "IEICE Transactions on Information and Systems"
      },
      "publication_date": "2008-01-01",
      "selected": null,
      "title": "Random Visitor: Defense against Identity Attacks in P2P Networks",
      "urls": [
        "https://www.jstage.jst.go.jp/article/transinf/E91.D/4/E91.D_4_1058/_pdf",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=68149138531&origin=inward"
      ]
    },
    {
      "abstract": "The proceedings contain 24 papers. The topics discussed include: computer analysis of chess champions; automated chess tutor; a new heuristic search algorithm for capturing problems in go; an open boundary safety-of-territory solver for the game of go; Monte-Carlo proof-number search for computer go; efficient selectivity and backup operators in Monte-Carlo tree search; combinatorics of go; abstracting knowledge from annotated Chinese-chess game records; automatic strategy verification for Hex; feature construction for reinforcement learning in hearts; a skat player based on Monte-Carlo simulation; search versus knowledge revisited again; counting the number of three-player partizian cold games; computing proper equilibria of zero-sum games; comparative study of approximate strategies for playing sum games based on subgame types; cheat-proof serverless network games; and Monte-Carlo methods in pool strategy game trees.",
      "authors": [],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": {
        "category": "Book",
        "cite_score": 1.8,
        "is_potentially_predatory": false,
        "isbn": "9783030715922",
        "issn": "03029743",
        "publisher": "Springer Verlag",
        "sjr": 0.249,
        "snip": 0.628,
        "subject_areas": [
          "Databases",
          "Cryptography and Security",
          "Distributed, Parallel, and Cluster Computing",
          "Theoretical Computer Science",
          "Computer Science (all)"
        ],
        "title": "IFIP International Conference on Distributed Applications and\n  Interoperable Systems, DAIS 2017: Distributed Applications and Interoperable\n  Systems pp 83-98"
      },
      "publication_date": "2007-12-01",
      "selected": null,
      "title": "Computers and Games: 5th International Conference, CG 2006 Revised Papers",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=38049032429&origin=inward"
      ]
    },
    {
      "abstract": "Data sharing and synchronisation involving mobile devices has been a significant challenge to research. The methods for tracking changes and conflicts often require the involvement of a server or desktop PC with the available storage or processing power to do so, reducing the flexibility and potential of mobile device applications. This paper presents CVS-Sync, a system for synchronising data between any number of hosts and without requiring servers. Inspiration for the protocol is drawn from concurrent versioning techniques, where each modification of data creates a unique version of that data. The result is a synchronisation algorithm capable of synchronising data from multiple sources with fast reconnects and minimal overhead. Experimental validation is used to substantiate its improvements over existing protocols. \u00c2\u00a9 2007 IEEE.",
      "authors": [
        "Larkin, H."
      ],
      "categories": null,
      "citations": 1,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1109/ICIS.2007.62",
      "keywords": [],
      "number_of_pages": 6,
      "pages": "157-162",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "0769528414",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings - 6th IEEE/ACIS International Conference on Computer and Information Science, ICIS 2007; 1st IEEE/ACIS International Workshop on e-Activity, IWEA 2007"
      },
      "publication_date": "2007-12-01",
      "selected": null,
      "title": "Applying concurrent versioning to serverless mobile device synchronisation",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=46749153392&origin=inward"
      ]
    },
    {
      "abstract": "Recommender systems are found in many modern web sites for applications such as recommending products to customers. In this paper we propose a new method for recommender system that employs the...",
      "authors": [
        "David Ben-Shimon",
        "Alexander Tsikinovsky",
        "Lior Rokach",
        "Amnon Meisles",
        "Guy Shani",
        "Lihi Naamani"
      ],
      "categories": null,
      "citations": 39,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1007/978-3-540-72575-6_8",
      "keywords": [],
      "number_of_pages": 9,
      "pages": "47-55",
      "publication": {
        "category": "Book",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "16153871",
        "publisher": "Springer Science + Business Media",
        "sjr": 0.123,
        "snip": 0.5,
        "subject_areas": [
          "Computer Science (miscellaneous)",
          "Computational Mechanics",
          "Computer Science Applications"
        ],
        "title": "Advances in Soft Computing"
      },
      "publication_date": "2007-12-01",
      "selected": null,
      "title": "Recommender System from Personal Social Networks",
      "urls": [
        "https://link.springer.com/content/pdf/10.1007%2F978-3-540-72575-6_8.pdf",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=58149232280&origin=inward"
      ]
    },
    {
      "abstract": "Most current real-time IP communication systems are either based on non-standard protocols or follow a client-server model. However, both of the two kinds of systems have their own problems. The use of non-standard protocols limits growth due to the proprietary properties, while the client-server model suffers from a \"single point of failure\" problem due to the existence of central servers. Requirements for the central servers also result in a number of issues which limit deployment in certain scenarios. In this paper, we design and implement a fully decentralized serverless SIP based communication system, SSCS. Our design is for use with wireless mesh networks and supports VoIP and other real-time applications for any unmodified standard SIP user agent device. The main idea is to utilize the distributed nature of P2P networks to allow for distributed resource storage and lookup in a SIP system. This eliminates the need for the central servers. Performance analysis shows that SSCS has higher system capacity and is more robust when compared to the traditional SIP systems but at a cost of larger latency for resource lookup. We also discuss some advanced services which can be supported in SSCS for the future research work. \u00c2\u00a9 2007 IEEE.",
      "authors": [
        "Yichuan Wu"
      ],
      "categories": null,
      "citations": 1,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/GLOCOM.2007.410",
      "keywords": [
        "P2P",
        "Single point failure",
        "SIP",
        "Real time IP communications"
      ],
      "number_of_pages": 5,
      "pages": "2146-2150",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-7281-0963-3",
        "issn": "1930-529X",
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "2019 IEEE Global Communications Conference, GLOBECOM 2019 - Proceedings"
      },
      "publication_date": "2007-11-26",
      "selected": null,
      "title": "SSCS: A Serverless SIP-Based Communication System",
      "urls": [
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=4411320",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=39349116951&origin=inward"
      ]
    },
    {
      "abstract": "As storage systems evolve, the block-based design of today's disks is becoming inadequate. As an alternative, objectbased storage devices (OSDs) offer a view where the disk manages data layout and keeps track of various attributes about data objects. By moving functionality that is traditionally the responsibility of the host OS to the disk, it is possible to improve overall performance and simplify management of a storage system. The capabilities of OSDs will also permit performance improvements in parallel file systems, such as further decoupling metadata operations and thus reducing metadata server bottlenecks. In this work we present an implementation of the Parallel Virtual File System (PVFS) integrated with a software emulator of an OSD and describe an infrastructure for client access. Even with the overhead of emulation, performance is comparable to a traditional server-fronted implementation, demonstrating that serverless parallel file systems using OSDs are an achievable goal. (c) 2007 ACM.",
      "authors": [
        "Ananth Devulapalli",
        "Dennis Dalessandro",
        "Pete Wyckoff",
        "Nawab Ali",
        "P. Sadayappan"
      ],
      "categories": null,
      "citations": 19,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1145/1362622.1362659",
      "keywords": [],
      "number_of_pages": 10,
      "pages": "1-10",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-59593-764-3",
        "issn": null,
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "SC '07: Proceedings of the 2007 ACM/IEEE Conference on Supercomputing"
      },
      "publication_date": "2007-11-10",
      "selected": null,
      "title": "Integrating parallel file systems with object-based storage devices",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=56749165165&origin=inward",
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=5348818"
      ]
    },
    {
      "abstract": "Web services are todays preferred vehicle for creating service-oriented architectures (SOA). Due to the boom of personal networked devices, the Web also found its way to the mobile space. This gives rise to device hosted mobile services that deliver functionality over a wireless network. There is potential to unite these services in a collaborative service space and exploit them as building blocks for distributed applications. This paper concentrates on a light-weight middleware layer to facilitate the integration, accessibility and orchestration of Web-based services in heterogeneous environments. Leveraging Web technology, this layer allows to interconnect serverless, peer-to-peer services deployed across federations of devices. We present its value in a ubiquitous application. \u00c2\u00a9 2007 IEEE.",
      "authors": [
        "Geert Vanderhulst",
        "Kris Luyten",
        "Karin Coninx"
      ],
      "categories": null,
      "citations": 14,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/AINAW.2007.248",
      "keywords": [],
      "number_of_pages": 6,
      "pages": "1001-1006",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-0-7695-2847-2",
        "issn": null,
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings - 21st International Conference on Advanced Information Networking and Applications Workshops/Symposia, AINAW'07"
      },
      "publication_date": "2007-05-21",
      "selected": null,
      "title": "Middleware for Ubiquitous Service-Oriented Spaces on the Web",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=35248821189&origin=inward",
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=4224237"
      ]
    },
    {
      "abstract": "The Farsite file system is a storage service that runs on the desktop computers of a large organization and provides the semantics of a central NTFS file server. The motivation behind the Farsite project was to harness the unused storage and network resources of desktop computers to provide a service that is reliable, available, and secure despite the fact that it runs on machines that are unreliable, often unavailable, and of limited security. A main premise of the project has been that building a scalable system requires more than scalable algorithms: To be scalable in a practical sense, a distributed system targeting 105 nodes must tolerate a significant (and never-zero) rate of machine failure, a small number of malicious participants, and a substantial number of opportunistic participants. It also must automatically adapt to the arrival and departure of machines and changes in machine availability, and it must be able to autonomically repartition its data and metadata as necessary to balance load and alleviate hotspots. We describe the history of the project, including its multiple versions of major system components, the unique programming style and software-engineering environment we created to facilitate development, our distributed debugging framework, and our experiences with formal system specification. We also report on the lessons we learned during this development.",
      "authors": [
        "Bolosky, W.J.",
        "Douceur, J.R.",
        "Howell, J."
      ],
      "categories": null,
      "citations": 26,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1145/1243418.1243422",
      "keywords": [
        "Software engineering",
        "Formal system specification",
        "Serverless distributed file system",
        "Tech transfer",
        "Project management",
        "System design iteration",
        "Distributed debugging"
      ],
      "number_of_pages": 10,
      "pages": "17-26",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": 2.2,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "01635980",
        "publisher": "Association for Computing Machinery (ACM)",
        "sjr": 0.18,
        "snip": 0.884,
        "subject_areas": [
          "Information Systems",
          "Hardware and Architecture",
          "Computer Networks and Communications"
        ],
        "title": "Operating Systems Review (ACM)"
      },
      "publication_date": "2007-04-01",
      "selected": null,
      "title": "The Farsite project: A retrospective",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=77954708714&origin=inward"
      ]
    },
    {
      "abstract": "We consider playing online games on peer-to-peer networks, without assuming servers that control the execution of a game. In such an environment, players may cheat the opponent by, for example,...",
      "authors": [
        "Shunsaku Kato",
        "Shuichi Miyazaki",
        "Yusuke Nishimura",
        "Yasuo Okabe"
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1007/978-3-540-75538-8_21",
      "keywords": [],
      "number_of_pages": 10,
      "pages": "234-243",
      "publication": {
        "category": "Book",
        "cite_score": 1.8,
        "is_potentially_predatory": false,
        "isbn": "9783030715922",
        "issn": "03029743",
        "publisher": "Springer Verlag",
        "sjr": 0.249,
        "snip": 0.628,
        "subject_areas": [
          "Databases",
          "Cryptography and Security",
          "Distributed, Parallel, and Cluster Computing",
          "Theoretical Computer Science",
          "Computer Science (all)"
        ],
        "title": "IFIP International Conference on Distributed Applications and\n  Interoperable Systems, DAIS 2017: Distributed Applications and Interoperable\n  Systems pp 83-98"
      },
      "publication_date": "2007-01-01",
      "selected": null,
      "title": "Cheat-Proof Serverless Network Games",
      "urls": [
        "https://link.springer.com/content/pdf/10.1007%2F978-3-540-75538-8_21.pdf",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=38049004451&origin=inward"
      ]
    },
    {
      "abstract": "We explore exploits possible for cheating in real-time, multiplayer games for both client-server and serverless architectures. We offer the first formalization of cheating in online games and propose an initial set of strong solutions. We propose a protocol that has provable anti-cheating guarantees, is provably safe and live, but suffers a performance penalty. We then develop an extended version of this protocol, called asynchronous synchronization, which avoids the penalty, is serverless, offers provable anti-cheating guarantees, is robust in the presence of packet loss, and provides for significantly increased communication performance. This technique is applicable to common game features as well as clustering and cell-based techniques for massively multiplayer games. Specifically, we provide a zero-knowledge proof protocol so that players are within a specific range of each other, and otherwise have no notion of their distance. Our performance claims are backed by analysis using a simulation based on real game traces. \u00c2\u00a9 2007 IEEE.",
      "authors": [
        "Nathaniel E. Baughman",
        "Marc Liberatore",
        "Brian Neil Levine"
      ],
      "categories": null,
      "citations": 41,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/TNET.2006.886289",
      "keywords": [
        "multimedia communication",
        "Gaming",
        "security",
        "peer-to-peer networking"
      ],
      "number_of_pages": 13,
      "pages": "1-13",
      "publication": {
        "category": "Journal",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "1558-2566",
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "IEEE/ACM Transactions on Networking"
      },
      "publication_date": "2007-01-01",
      "selected": null,
      "title": "Cheat-Proof Playout for Centralized and Peer-to-Peer Gaming",
      "urls": [
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=4100707",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=33947511755&origin=inward"
      ]
    },
    {
      "abstract": "Serverless computing is becoming increasingly popular, enabling users to quickly launch thousands of short-lived tasks in the cloud with high elasticity and fine-grain billing. These properties make serverless computing appealing for interactive data analytics. However exchanging intermediate data between execution stages in an analytics job is a key challenge as direct communication between serverless tasks is difficult. The natural approach is to store such ephemeral data in a remote data store. However, existing storage systems are not designed to meet the demands of serverless applications in terms of elasticity, performance, and cost. We present Pocket, an elastic, distributed data store that automatically scales to provide applications with desired performance at low cost. Pocket dynamically rightsizes resources across multiple dimensions (CPU cores, network bandwidth, storage capacity) and leverages multiple storage technologies to minimize cost while ensuring applications are not bottlenecked on I/O. We show that Pocket achieves similar performance to ElastiCache Redis for serverless analytics applications while reducing cost by almost 60%. \u00c2\u00a9 Proceedings of NSDI 2010: 7th USENIX Symposium on Networked Systems Design and Implementation. All rights reserved.",
      "authors": [
        "Klimovic, A.",
        "Wang, Y.",
        "Stuedi, P.",
        "Trivedi, A.",
        "Pfefferle, J.",
        "Kozyrakis, C."
      ],
      "categories": null,
      "citations": 55,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": 18,
      "pages": "427-444",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9781939133083",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings of the 13th USENIX Symposium on Operating Systems Design and Implementation, OSDI 2018"
      },
      "publication_date": "2007-01-01",
      "selected": null,
      "title": "Pocket: Elastic ephemeral storage for serverless analytics",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85066898920&origin=inward"
      ]
    },
    {
      "abstract": "With the increasing popularity of RFID applications, different authentication schemes have been proposed to provide security and privacy protection to users. Most recent RFID protocols use a central database to store the RFID tag data. An RFID reader first queries the RFID tag and returns the reply to the database. After authentication, the database returns the tag data to the reader. In this paper, we proposed a more flexible authentication protocol that provides comparable protection without the need for a central database. We also suggest a protocol for secure search for RFID tags. We believe that as RFID applications become widespread, the ability to search for RFID tags will be increasingly useful. \u00c2\u00a9 2007 IEEE.",
      "authors": [
        "Tan, C.C.",
        "Sheng, B.",
        "Li, Q."
      ],
      "categories": null,
      "citations": 73,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1109/PERCOM.2007.30",
      "keywords": [],
      "number_of_pages": 10,
      "pages": "3-12",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "0769527876",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings - Fifth Annual IEEE International Conference on Pervasive Computing and Communications, PerCom 2007"
      },
      "publication_date": "2007-01-01",
      "selected": null,
      "title": "Serverless search and authentication protocols for RFID",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=34547635774&origin=inward"
      ]
    },
    {
      "abstract": "This paper proposes an algorithm for autonomous generation of spherical Delaunay network in P2P settings for global Internet applications. In our algorithm, nodes work as autonomous computers, sites, sensors, etc, and all nodes generate a local network according the proximity and geometry of neighboring nodes, while all nodes cooperatively and incrementally generate global spherical network. We also show an algorithm for nodes to divide a sphere into their governing areas autonomously. Our approach is applicable to various Internet-based geographical applications including world-wide virtual collaborative space and scalable P2P repository for location-aware data, geo-databases, and so on. \u00c2\u00a9 2006 IEEE.",
      "authors": [
        "Kato, H.",
        "Eguchi, T.",
        "Ohnishi, M.",
        "Ueshima, S."
      ],
      "categories": null,
      "citations": 8,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1109/C5.2006.10",
      "keywords": [
        "Incremental method",
        "Serverless",
        "Distributive cooperation",
        "Sphere",
        "P2P",
        "Computational geometry",
        "Locationaware data handling",
        "Virtual collaborative space"
      ],
      "number_of_pages": 8,
      "pages": "184-191",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "0769525636",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings - Fourth International Conference on Creating, Connecting and Collaborating through Computing, C5 2006"
      },
      "publication_date": "2006-12-01",
      "selected": null,
      "title": "Autonomous generation of spherical P2P delaunay network for global Internet applications",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=34547458997&origin=inward"
      ]
    },
    {
      "abstract": "The proceedings contain 28 papers. The topics discussed include: serverless search and authentication protocols for RFID; mining frequent trajectory patterns for activity monitoring using radio frequency; designing ubiquitous computing systems for sports equipment; methods and guidelines for the design and development of domestic ubiquitous computing applications; an aspect-oriented approach to the modularisation of context; a scalable geographic service provision framework for mobile ad hoc networks; a capacitive sensing toolkit for pervasive activity detection and recognition; securing distributed data storage and retrieval in sensor networks; structural learning of activities from sparse datasets; and supporting mobile service usage through physical mobile interaction.",
      "authors": [],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "0769527876",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings - Fifth Annual IEEE International Conference on Pervasive Computing and Communications, PerCom 2007"
      },
      "publication_date": "2006-12-01",
      "selected": null,
      "title": "Proceedings: Fifth Annual IEEE International Conference on Pervasive Computing and Communications, PerCom 2007",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=34547589515&origin=inward"
      ]
    },
    {
      "abstract": "This paper focuses on the design and prototype of a Version-enabled peer-to-peer Content distribution system bused on distributed hash table. The system is different from the CVS system; it manages the version at item level, not project level. The system provides the user version management functionality, which is absence in most of the current peer-to-peer content distribution network. In addition, the version management functionality can be used as a concurrent version system in team collaboration system. In such application, it provides more features such as serverless, robustness and reliability. The peer-to-peer nature of our system is more suitable to the human collaboration model than the client-server model The system is now being prototyped using OpenDHT on Java2 platform. \u00c2\u00a9 2006 IEEE.",
      "authors": [
        "Yi Jiang",
        "Guangtao Xue",
        "Jinyuan You"
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/CSCWD.2006.253055",
      "keywords": [
        "DHT",
        "Peer-to-peer",
        "Version",
        "CSCW"
      ],
      "number_of_pages": 6,
      "pages": "861-866",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "1-4244-0165-8",
        "issn": null,
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings - 2006 10th International Conference on Computer Supported Cooperative Work in Design, CSCWD 2006"
      },
      "publication_date": "2006-05-03",
      "selected": null,
      "title": "A Version-enabled Peer-to-peer Content Distribution System based on DHT",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=34547700617&origin=inward",
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=4019091"
      ]
    },
    {
      "abstract": "Peer-to-peer (P2P) file sharing systems such as Gnutella have been widely acknowledged as the fastest-growing Internet applications ever. The P2P model has many potential advantages, including high flexibility and serverless management. However, these systems suffer from the well-known performance mismatch between the randomly constructed overlay network topology and the underlying IP-layer topology. This paper proposes to structure the P2P overlay topology using a heterogeneity-aware multitier topology to better balance the load at peers with heterogeneous capacities and to prevent low-capability nodes from throttling the performance of the system. An analytical model is developed to enable the construction and maintenance of heterogeneity-aware overlay topologies with good node connectivity and better load balance. We also develop an efficient routing scheme, called probabilistic selective routing, that further utilizes heterogeneity-awareness to enhance the routing performance. We evaluate our design through simulations. The results show that our multitier topologies alone can provide eight to 10 times improvement in the messaging cost, two to three orders of magnitude improvement in terms of load balancing, and seven to eight times lower topology construction and maintenance costs when compared to Gnutella's random power-law topology. Moreover, our heterogeneity-aware routing scheme provides further improvements on all evaluation metrics, when used with our heterogeneity-aware overlay topologies. \u00c2\u00a9 2006 IEEE.",
      "authors": [
        "M. Srivatsa",
        "B. Gedik",
        "Ling Liu"
      ],
      "categories": null,
      "citations": 31,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/TPDS.2006.158",
      "keywords": [
        "Peer-to-peer systems",
        "load balancing.",
        "overlay routing",
        "node heterogeneity",
        "overlay topology"
      ],
      "number_of_pages": 17,
      "pages": "1277-1293",
      "publication": {
        "category": "Journal",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "2161-9883",
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "IEEE Transactions on Parallel and Distributed Systems"
      },
      "publication_date": "2006-01-01",
      "selected": null,
      "title": "Large Scaling Unstructured Peer-to-Peer Networks with Heterogeneity-Aware Topology and Routing",
      "urls": [
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=1705465",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=33750124978&origin=inward"
      ]
    },
    {
      "abstract": "The structured model or Distributed Hash Table (DHT) based Peer-to-Peer (P2P) networks are favoured in research but not in real applications. It's argued that the unstructured model is more suitable for the real world. This paper compares the advantages and disadvantages of the structured and the unstructured model, and proposed a Clustered DHT (CDHT) communication scheme which addresses some of the fundamental problems of DHT by combining the structured model with the unstructured one. This combination leads to a new content location scheme which balances network traffic and improves the lookup efficiency for popular content. The experimental results show CDHT's superiority over DHT in handling dynamic network conditions and avoiding hot spots. \u00c2\u00a9 2005 IEEE.",
      "authors": [
        "Ye, W.",
        "Khan, A.I.",
        "Kendall, E.A.",
        "Yeo, C.T."
      ],
      "categories": null,
      "citations": 1,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1109/ICON.2005.1635590",
      "keywords": [],
      "number_of_pages": 8,
      "pages": "684-691",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "1424400007",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "2005 13th IEEE International Conference on Networks jointly held with the 2005 7th IEEE Malaysia International Conference on Communications, Proceedings"
      },
      "publication_date": "2005-12-01",
      "selected": null,
      "title": "CDHT: A Clustered DHT communication scheme for serverless (P2P) networks",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=33847308575&origin=inward"
      ]
    },
    {
      "abstract": "Voice over IP (VoIP) and Instant Messaging (IM) systems to date have either followed a client-server model or have required the use of clients that do not follow any VoIP or IM standard. We present SOSIMPLE - a fully decentralized, P2P, standards-based approach to communications. By building on the existing SIP/SIMPLE infrastructure for VoIP and IM, we support reuse of clients, network infrastructure, and open-source protocol stacks designed using current standards. By avoiding traditional centralized architectures, SOSIMPLE addresses corporate privacy concerns, eliminates dependency on constant Internet connectivity, and supports ad hoc groups. SOSIMPLE implements a DHT overlay based on Chord[24] using SIP messages, replicating location information for reliability. The DHT is used only for lookups, with actual communication passing directly between clients. We discuss important issues for security and authentication, as well as adaptations of conventional P2P routing for the social networks typical of personal communications. We are testing a prototype implementation of SOSIMPLE and anticipate a public release in the near future. \u00c2\u00a9 2005 IEEE.",
      "authors": [
        "Bryan, D.A.",
        "Lowekamp, B.B.",
        "Jennings, C."
      ],
      "categories": null,
      "citations": 101,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1109/AAA-IDEA.2005.15",
      "keywords": [],
      "number_of_pages": 8,
      "pages": "42-49",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "0769525253",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings - First International Workshop on Advanced Architectures and Algorithms for Internet Delivery and Applications, AAA-IDEA 2005"
      },
      "publication_date": "2005-12-01",
      "selected": null,
      "title": "SOSIMPLE: A serverless, standards-based, P2P SIP communication system",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=33947652176&origin=inward"
      ]
    },
    {
      "abstract": "This paper proposes an incremental algorithm for constructing the Delaunay overlaid network for virtual, collaborative space. In our algorithm, every node uses Delaunay triangulation, by using its knowledge of other nodes and cooperatively exchanging information among nodes, which generates and refines overlaid networks. On the resultant Delaunay network, nodes communicate, with each other over virtual collaborative space, and employ multihopping communication among distant nodes. This algorithm structure has the following advantages: (1) utilization of only the localized nodes, omitting the use of unnecessary distant nodes for communication, (2) scalability through surveillance of nodes by refining and updating the network continuously, (3) two dimensional space organization which allows construction of super nodes that govern regional areas to process geographical range query, and (4) directional, communication through a small routing table. The authors believe that this approach is applicable to large-scale virtual, collaborative space and location aware system.",
      "authors": [
        "Ohnishi, M.",
        "Nishide, R.",
        "Ueshima, S."
      ],
      "categories": null,
      "citations": 22,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1109/C5.2005.15",
      "keywords": [
        "Incremental method",
        "Serverless",
        "P2P",
        "Computational geometry",
        "Virtual Collaborative Space",
        "Distributive Cooperation"
      ],
      "number_of_pages": 8,
      "pages": "75-82",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "0769523250",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings - Third International Conference on Creating, Connecting and Collaborating through Computing, C5 2005"
      },
      "publication_date": "2005-12-01",
      "selected": null,
      "title": "Incremental construction of Delaunay overlaid network for virtual collaborative space",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=33744464497&origin=inward"
      ]
    },
    {
      "abstract": "High-end computing is suffering a data deluge from experiments, simulations, and apparatus that creates overwhelming application dataset sizes. End-user workstations - despite more processing power than ever before - are ill-equipped to cope with such data demands due to insufficient secondary storage space and I/O rates. Meanwhile, a large portion of desktop storage is unused. We present the FreeLoader framework, which aggregates unused desktop storage space and I/O bandwidth into a shared cache/scratch space, for hosting large, immutable datasets and exploiting data access locality. Our experiments show that FreeLoader is an appealing low-cost solution to storing massive datasets, by delivering higher data access rates than traditional storage facilities. In particular, we present novel data striping techniques that allow FreeLoader to efficiently aggregate a workstation's network communication bandwidth and local I/O bandwidth. In addition, the performance impact on the native workload of donor machines is small and can be effectively controlled. \u00c2\u00a9 2005 IEEE.",
      "authors": [
        "Vazhkudai, S.S.",
        "Ma, X.",
        "Frech, V.W.",
        "Strickland, J.W.",
        "Tammineedi, N.",
        "Scott, S.L."
      ],
      "categories": null,
      "citations": 43,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1109/SC.2005.27",
      "keywords": [
        "Storage cache",
        "Distributed storage",
        "Storage scavenging",
        "Scientific data management",
        "Parallel I/O",
        "Serverless storage system",
        "Striped storage"
      ],
      "number_of_pages": null,
      "pages": null,
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "1595930612",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings of the ACM/IEEE 2005 Supercomputing Conference, SC'05"
      },
      "publication_date": "2005-12-01",
      "selected": null,
      "title": "FreeLoader: Scavenging desktop storage resources for scientific data",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=33845399711&origin=inward"
      ]
    },
    {
      "abstract": "This paper studies the way to improve consistency of states in a ball-game typed Distributed Virtual Environment (DVE) with lag, in peer-to-peer (P2P) architecture. That is, we are studying how to reduce in real-time the difference of states between the participating terminals in a virtual ball game caused by transmission lag or update interval. We are also studying how to control shared objects in real-time in a server-less network architecture. Specifically, a priority field called Allocated Topographical Zone (AtoZ) is used in P2P for DVE. In a critical case, defined as inconsistent phenomena between the peers, caused by the network latency, a stricter ownership determination algorithm, called dead zone is introduced. Concession parameter is used to reduce the possibility of such a case. By using these protocols in combination, a robust and effective scheme is achieved for a virtual ball game and these protocols ware extended for multi-player game. As an example of the application, a real-time networked doubles air-hockey is implemented for evaluation of the influence of these protocols on interactivity and on consistency. \u00c2\u00a9 2005 IEEE.",
      "authors": [
        "Kawano, Y.",
        "Yonekura, T."
      ],
      "categories": null,
      "citations": 2,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1109/CW.2005.68",
      "keywords": [],
      "number_of_pages": 8,
      "pages": "271-278",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "0769523781",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings - 2005 International Conference on Cyberworlds, CW 2005"
      },
      "publication_date": "2005-12-01",
      "selected": null,
      "title": "On a serverless networked virtual ball game for multi-player",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=33745153381&origin=inward"
      ]
    },
    {
      "abstract": "We envision a pure P2P network that can manage itself without any means of a centralized entity, where peers can be discovered without backend servers and different types of P2P services can be implemented within the same network. We have integrated mobile agent technology into the Serverless Network as it has attributes that complement dynamic distributed computing. As P2P technology evolves, more types of P2P applications will be identified and developed on the Internet scale. However, a development infrastructure is needed before this goal can be achieved. This paper discusses how a Serverless Network can be formed with capabilities that will enable further development on P2P applications. \u00c2\u00a9 2005 IEEE.",
      "authors": [
        "C.T. Yeoh",
        "E.A. Kendall",
        "A.I. Khan"
      ],
      "categories": null,
      "citations": 1,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/ICON.2005.1635591",
      "keywords": [],
      "number_of_pages": 6,
      "pages": "692-697",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "1-4244-0000-7",
        "issn": "2332-5798",
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "2005 13th IEEE International Conference on Networks jointly held with the 2005 7th IEEE Malaysia International Conference on Communications, Proceedings"
      },
      "publication_date": "2005-11-16",
      "selected": null,
      "title": "An agent based approach to discovery and formation of the serverless core network",
      "urls": [
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=1635591",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=33847249869&origin=inward"
      ]
    },
    {
      "abstract": "Future demands on storage systems are expected to stress current storage architectures on all dimensions: amount of aggregate storage is expected to grow by 2 to 3 orders of magnitude, while data-granularity is expected to fall by at least an order of magnitude. Further, the network access band-widths are also increasing at least by two orders of per link, and several times that in aggregate. We present a Transactional Filer, a extensible scalable file-system capable of \"petabyte\" and \"petabit-per-sec\" performance. This filer is built using, as its components, an all-silicon Grid Storage Server, whose scalability derives from a no-software \"server-less server\" design. The Grid Storage Server implements multiple layers of a protocol stack which are compiled into a hardware engine that processes all layers concurrently on-chip, without any software involvement. The protocol engine chip has a vanishingly low price point, at which it is possible to directly network-enable each individual hard-disk drive. This \"serverless\" design allows it to scale up to match \"terabit\" network speeds and \"terabyte\" disk capacities per node, aggregating to petabyte-petabit capacities across the large scale grid application. The Transactional Filer is a file-system is built upon this distributed silicon protocol engine architecture; and benefits from the advantages of reconfigrable computing. The file-system primitives which are implemented in the hardware protocol engine are simple and hence silicon-friendly, yet they can be combined together in ways to provide a very rich transactional versioned file-system interface to the endapplication. While this newer grid-friendly file-system interface is exposed for new applications, the same hardware primitives can be used in a backward compatible POSIX manner to support legacy applications. \u00c2\u00a9 2005 IEEE.",
      "authors": [
        "H. Shrikumar"
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/ICBN.2005.1589764",
      "keywords": [],
      "number_of_pages": 10,
      "pages": "1345-1354 Vol. 2",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "0-7803-9276-0",
        "issn": null,
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "2nd International Conference on Broadband Networks, BROADNETS 2005"
      },
      "publication_date": "2005-10-07",
      "selected": null,
      "title": "Transactional filer for grid storage server",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=33847042744&origin=inward",
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=1589764"
      ]
    },
    {
      "abstract": "Recently, a server-less architecture has been proposed for building video streaming systems which does not need any costly dedicated video servers and yet is highly scalable and reliable. However, due to the potentially large number of user hosts streaming video data to a receiver for playback, the aggregate network traffic can become very bursty, leading to significant packet loss at the access routers. This study tackles this problem by investigating a novel network-aware transmission scheduling algorithm called Gradient-Descent Scheduler (GDS) to reduce the traffic burstiness. Simulation results will demonstrate that GDS can reduce the congestion-induced packet loss from over 95% to 0.07% in a 500-host system. Moreover, GDS can automatically adapt to the underlying network and does not require hosts in the system to be synchronized. These are essential for practical design of server-less architectures and peer-to-peer systems. \u00c2\u00a9 2005 IEEE.",
      "authors": [
        "Chan, C.Y.",
        "Lee, J.Y.B.",
        "Hamdi, M."
      ],
      "categories": null,
      "citations": 4,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": null,
      "keywords": [
        "Video streaming",
        "Serverless architecture",
        "Transmission scheduling"
      ],
      "number_of_pages": 7,
      "pages": "389-395",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": 3.9,
        "is_potentially_predatory": false,
        "isbn": "9781612842332",
        "issn": "05361486",
        "publisher": "Institute of Electrical and Electronics Engineers Inc.",
        "sjr": 0.451,
        "snip": 0.631,
        "subject_areas": [
          "Computer Networks and Communications",
          "Electrical and Electronic Engineering"
        ],
        "title": "IEEE International Conference on Communications"
      },
      "publication_date": "2005-09-15",
      "selected": null,
      "title": "Gradient-Descent Scheduler - A network-aware transmission scheduler for server-less video streaming systems",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=24344488504&origin=inward"
      ]
    },
    {
      "abstract": "We describe MutualCast, a serverless peer-to-peer (P2P) multiparty real-time audio conferencing system. In MutualCast, the peers form a fully connected clique. During the conferencing session, each peer takes turn to mix and redeliver the compressed audio. The audios are split into frames, and the number of frames mixed and redelivered by a certain peer is proportional to the available resource of the peer, e.g., the upload bandwidth or the computation power. MutualCast balances the serving load (network bandwidth and computation power) needed for the mixing among all participant peers. It enables a multiparty conferencing session without any powerful server. \u00c2\u00a9 2005 IEEE.",
      "authors": [
        "Jin Li"
      ],
      "categories": null,
      "citations": 6,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/ICME.2005.1521495",
      "keywords": [
        "Real-time audio conferencing",
        "peer-to-peer (P2P)",
        "MutualCast content distribution",
        "fully connected network"
      ],
      "number_of_pages": 4,
      "pages": "602-605",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "0-7803-9331-7",
        "issn": "1945-788X",
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "IEEE International Conference on Multimedia and Expo, ICME 2005"
      },
      "publication_date": "2005-07-06",
      "selected": null,
      "title": "MutualCast: A Serverless Peer-to-Peer Multiparty Real-Time Audio Conferencing System",
      "urls": [
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=1521495",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=33750559110&origin=inward"
      ]
    },
    {
      "abstract": "A new Internet draft has brought the power of Skype and peer-to-peer networking to session initiation protocol (SIP). It is stated that by by dropping SIP's back-end requirements, the protocol will be easier to configure and install and also cheaper to operate. The P2P SIP draft specifies a true serverless network. When a user wants to join the P2P SIP network, the user's device will form a registration message that includes the hash of its IP address. To become a member on the P2P SIP network, users proceed by registering their unique SIP Uniform Resource Identifier (URI).",
      "authors": [
        "Greenfield, D."
      ],
      "categories": null,
      "citations": 1,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": 3,
      "pages": "60-62",
      "publication": {
        "category": "Journal",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "15398137",
        "publisher": "CMP Media LLC",
        "sjr": 0.1,
        "snip": 0.0,
        "subject_areas": [
          "Information Systems"
        ],
        "title": "Network Magazine"
      },
      "publication_date": "2005-05-20",
      "selected": null,
      "title": "SIP goes peer-to-peer",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=18344391874&origin=inward"
      ]
    },
    {
      "abstract": "Serverless file systems, exemplified by CFS, Farsite and OceanStore, have received significant attention from both the industry and the research community. These file systems store files on a large collection of untrusted nodes that form an overlay network. They use cryptographic techniques to maintain file confidentiality and integrity from malicious nodes. Unfortunately, cryptographic techniques cannot protect a file holder from a Denial-of-Service (DoS) or a host compromise attack. Hence, most of these distributed file systems are vulnerable to targeted file attacks, wherein an adversary attempts to attack a small (chosen) set of files by attacking the nodes that host them. This paper presents LocationGuard \u00e2\u0088\u0092 a location hiding technique for securing overlay file storage systems from targeted file attacks. LocationGuard has three essential components: (i) location key, consisting of a random bit string (e.g., 128 bits) that serves as the key to the location of a file, (ii) routing guard, a secure algorithm that protects accesses to a file in the overlay network given its location key such that neither its key nor its location is revealed to an adversary, and (iii) a set of four location inference guards. Our experimental results quantify the overhead of employing LocationGuard and demonstrate its effectiveness against DoS attacks, host compromise attacks and various location inference attacks. \u00c2\u00a9 2005 USENIX Association. All rights reserved.",
      "authors": [
        "Srivatsa, M.",
        "Liu, L."
      ],
      "categories": null,
      "citations": 11,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": 16,
      "pages": "81-96",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "14th USENIX Security Symposium"
      },
      "publication_date": "2005-01-01",
      "selected": null,
      "title": "Countering targeted file attacks using locationguard",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=79961238796&origin=inward"
      ]
    },
    {
      "abstract": "This paper reports our study of how to gain consistency of states in a ball-game typed Distributed Virtual Environment (DVE) with lag, in peer-to-peer (P2P) architecture. That is, we are studying how to reduce in real-time the difference of states between the participating terminals in a virtual ball game caused by transmission lag or update interval. We are also studying how to control shared objects in real-time in a serverless network architecture. Specifically, a priority field called Allocated Topographical Zone (AtoZ) is used in P2P for DVE. By implementing this function, each terminal can compute which avatar holds the ownership of a shared object by calculating mutually the state of the local avatar predicted by the remote terminals. The region for ownership determined by AtoZ allows an avatar to access and control an object dominantly, so that a geometrical property is dynamically changed depending upon the relative arrangement between the object and avatars. Moreover considering the critical case, defined as inconsistent phenomena between the peers, caused by the network latency, a stricter ownership determination algorithm, called dead zone is introduced. By using these protocols in combination, a robust and effective scheme is achieved for a virtual ball game. As an example of the application, a real-time networked doubles air-hockey is implemented for evaluation of the influence of these protocols on interactivity and on consistency. Copyright \u00c2\u00a9 2005 The Institute of Electronics, Information and Communication Engineers.",
      "authors": [
        "Tatsuhiro YONEKURA",
        "Yoshihiro KAWANO"
      ],
      "categories": null,
      "citations": 4,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1093/ietisy/e88-d.5.926",
      "keywords": [
        "AtoZ",
        "Priority field",
        "Mutual prediction protocol",
        "P2P",
        "Critical cases",
        "DVE",
        "Dead zone"
      ],
      "number_of_pages": 12,
      "pages": "926-937",
      "publication": {
        "category": "Journal",
        "cite_score": 1.4,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "09168532",
        "publisher": "Maruzen Co., Ltd/Maruzen Kabushikikaisha",
        "sjr": 0.2,
        "snip": 0.5,
        "subject_areas": [
          "Computer Vision and Pattern Recognition",
          "Hardware and Architecture",
          "Artificial Intelligence",
          "Electrical and Electronic Engineering",
          "Software"
        ],
        "title": "IEICE Transactions on Information and Systems"
      },
      "publication_date": "2005-01-01",
      "selected": null,
      "title": "A Protocol for Peer-to-Peer Multi-Player Networked Virtual Ball Game",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=24144480990&origin=inward",
        "https://search.ieice.org/bin/pdf_link.php?fname=e88-d_5_926&category=D&lang=E&year=2005&abst="
      ]
    },
    {
      "abstract": "Decentralized storage systems aggregate the available disk space of participating computers to provide a large storage facility. These systems rely on data redundancy to ensure durable storage despite of node failures. However, existing systems either assume independent node failures, or they rely on introspection to carefully place redundant data on nodes with low expected failure correlation. Unfortunately, node failures are not independent in practice and constructing an accurate failure model is difficult in large-scale systems. At the same time, malicious worms that propagate through the Internet pose a real threat of large-scale correlated failures. Such rare but potentially catastrophic failures must be considered when attempting to provide highly durable storage. In this paper, we describe Glacier, a distributed storage system that relies on massive redundancy to mask the effect of large-scale correlated failures. Glacier is designed to aggressively minimize the cost of this redundancy in space and time: Erasure coding and garbage collection reduces the storage cost; aggregation of small objects and a loosely coupled maintenance protocol for redundant fragments minimizes the messaging cost. In one configuration, for instance, our system can provide six-nines durable storage despite correlated failures of up to 60% of the storage nodes, at the cost of an eleven-fold storage overhead and an average messaging overhead of only 4 messages per node and minute during normal operation. Glacier is used as the storage layer for an experimental serverless email system. \u00c2\u00a9 NSDI 2005.",
      "authors": [
        "Haeberlen, A.",
        "Mislove, A.",
        "Druschel, P."
      ],
      "categories": null,
      "citations": 155,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": 16,
      "pages": "143-158",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "2nd Symposium on Networked Systems Design and Implementation, NSDI 2005"
      },
      "publication_date": "2005-01-01",
      "selected": null,
      "title": "Glacier: Highly durable, decentralized storage despite massive correlated failures",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85001706405&origin=inward"
      ]
    },
    {
      "abstract": "Existing in-kernel distributed file systems cannot cope with the higher requirements in wellequipped cluster environments, especially when the system becomes larger and inevitably heterogeneous. TH-CluFS is a cluster file system designed for large heterogeneous systems. TH-CluFS is implemented completely in the user space by emulating the network file system (N FS) V2 server, and is easily portable to other portable operating system interface (POSIX)-compliant platforms with application programming/binary interface API/ABI compliance. In addition, TH-CluFS uses a serverless architecture which flexibly distributes data at file granularity and achieves a consistent file system view from distributed metadata. The global cache makes full use of the aggregated memories and disks in the cluster to optimize system performance. Experimental results suggest that although TH-CluFS is implemented as user-level components, it functions as a portable, single system image, and scalable cluster file system with acceptable performance sacrifices.",
      "authors": [
        "Qifeng Huang",
        "Guangwen Yang",
        "Weimin Zheng",
        "Meiming Shen",
        "Yiyan Deng"
      ],
      "categories": null,
      "citations": 1,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1016/S1007-0214(05)70016-X",
      "keywords": [
        "heterogeneity",
        "global cache",
        "cluster file system",
        "portability",
        "file allocation",
        "single system image"
      ],
      "number_of_pages": 7,
      "pages": "108-114",
      "publication": {
        "category": "Journal",
        "cite_score": 4.1,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "1007-0214",
        "publisher": "Tsing Hua University",
        "sjr": 0.428,
        "snip": 1.221,
        "subject_areas": [
          "Multidisciplinary"
        ],
        "title": "Tsinghua Science and Technology"
      },
      "publication_date": "2005-01-01",
      "selected": null,
      "title": "Building a portable file system for heterogeneous clusters",
      "urls": [
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=6076001",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=14744301269&origin=inward"
      ]
    },
    {
      "abstract": "We present PeerCQ, a decentralized architecture for Internet scale information monitoring using a network of heterogeneous peer nodes. PeerCQ uses Continual Queries (CQs) as its primitives to express information-monitoring requests. The PeerCQ development has three unique characteristics. First, we develop a systematic and serverless approach to large scale information monitoring, aiming at providing a fully distributed, highly scalable, and self-configurable architecture for scalable and reliable processing of a large number of CQs over a network of loosely coupled, heterogeneous, and possibly unreliable nodes (peers). Second, we introduce an effective service partitioning scheme at the P2P protocol layer to distribute the processing of CQs over a peer-to-peer information monitoring overlay network while maintaining a good balance between system utilization and load balance in the presence of peer joins, departures, and failures. A unique feature of our service partitioning scheme is its ability to incorporate strategies for handling hot spot monitoring requests and peer heterogeneity into the load balancing scheme in PeerCQ. Third, but not least, we develop a dynamic passive replication scheme to enable reliable processing of long-running information monitoring requests in an environment of inherently unreliable peers, including an analytical model to discuss its fault tolerance properties. We report a set of experiments demonstrating the feasibility and the effectiveness of the PeerCQ approach to large-scale peer-to-peer information monitoring. \u00c2\u00a9 2005 IEEE.",
      "authors": [
        "B. Gedik",
        "L. Liu"
      ],
      "categories": null,
      "citations": 20,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/TC.2005.87",
      "keywords": [
        "peer-to-peer networks",
        "continual query systems.",
        "Distributed information monitoring"
      ],
      "number_of_pages": 16,
      "pages": "767-782",
      "publication": {
        "category": "Journal",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "2326-3814",
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "IEEE Transactions on Computers"
      },
      "publication_date": "2005-01-01",
      "selected": null,
      "title": "A scalable peer-to-peer architecture for distributed information monitoring applications",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=21044436471&origin=inward",
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=1461363"
      ]
    },
    {
      "abstract": "Erasure coding is a technique for achieving high availability and reliability in storage and communication systems. In this paper, we revisit the analysis of erasure code replication and point out some situations when whole-file replication is preferred. The switchover point (from preferring whole-file replication to erasure code replication) is studied, and characterized using asymptotic analysis. We also discuss the additional considerations in building erasure code replication systems.",
      "authors": [
        "Lin, W.K.",
        "Chiu, D.M.",
        "Lee, Y.B."
      ],
      "categories": null,
      "citations": 103,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1109/PTP.2004.1334935",
      "keywords": [],
      "number_of_pages": 8,
      "pages": "90-97",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "0769521568",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings - 4th International Conference on Peer-to-Peer Computing, P2P2004"
      },
      "publication_date": "2004-12-01",
      "selected": null,
      "title": "Erasure code replication revisited",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=13244283124&origin=inward"
      ]
    },
    {
      "abstract": "Increasingly scientific discoveries are driven by analyses of massively distributed bulk data. This has led to the proliferation of high-end mass storage systems, storage area clusters and data centers as storage fabric elements for the Grid, offering excellent price/performance ratio and good storage speeds, but increasing maintenance and administrative costs. A promising alternative then, is to harness the collective storage potential of individual workstations much as we harness the idle CPU cycles due to the affordable economics in aggregating commodity storage and low usage to available space ratio. However, such aggregated commodity storage is prone to volatility, machine failures, performance concerns and trust issues. In this paper, we address several of the aforementioned issues and present our design on the construction of scalable aggregated commodity storage through scavenging; providing availability through aggressive replication; revering user autonomy and his authority to reclaim space; and enabling Grid access to such storage.",
      "authors": [
        "Vazhkudai, S."
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": null,
      "keywords": [
        "Scavenging",
        "Grid Storage",
        "Serverless Filesystems"
      ],
      "number_of_pages": 7,
      "pages": "554-560",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "1932415262",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings of the International Conference on Parallel and Distributed Processing Techniques and Applications, PDPTA'04"
      },
      "publication_date": "2004-12-01",
      "selected": null,
      "title": "On-demand grid storage using scavenging",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=12344300768&origin=inward"
      ]
    },
    {
      "abstract": "Avoiding hot spots and handling dynamic network environments are the inherent weaknesses of the DHT-based (Dynamic Hash Table) p2p networks. The solution lies in isolating the DHT overlay from the network uncertainty and seeking an efficient and complementary lookup pattern outside the DHT. We present the design of a hybrid-overlay architecture for p2p networks in this paper that forms the DHT overlay based on the Serverless Layer clusters. The architecture delegates the handling of the network uncertainty to the network-aware Serverless Layer; thus a more reliable network and content structure is constructed as the foundation of the DHT overlay. In addition, a new heuristic approach to content location is made possible to exploit network proximity and content popularity to balance network traffic and to improve the lookup efficiency for popular content. \u00c2\u00a9 2004 IEEE.",
      "authors": [
        "W. Ye",
        "A.I. Khan",
        "E.A. Kendall"
      ],
      "categories": null,
      "citations": 2,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/ICON.2004.1409168",
      "keywords": [],
      "number_of_pages": 6,
      "pages": "351-356 vol.1",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "0-7803-7788-5",
        "issn": "1531-2216",
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings. 2004 12th IEEE International Conference on Networks (ICON 2004) (IEEE Cat. No.04EX955)"
      },
      "publication_date": "2004-11-19",
      "selected": null,
      "title": "CDHT: the design of a clustered DHT routing scheme for serverless (P2P) networks",
      "urls": [
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=1409168",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=21644490271&origin=inward"
      ]
    },
    {
      "abstract": "In this investigation, we propose a new mechanism for looking up files in Peer-to-Peer over internet environment so that we can look up files in a location-transparent manner. To do that, we...",
      "authors": [
        "Kohei Mitsuhashi",
        "Takao Miura",
        "Isamu Shioya"
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1007/978-3-540-30497-5_151",
      "keywords": [
        "JXTA",
        "P2p distributed system",
        "Bloom filter",
        "File look-up"
      ],
      "number_of_pages": 7,
      "pages": "982-988",
      "publication": {
        "category": "Book",
        "cite_score": 1.8,
        "is_potentially_predatory": false,
        "isbn": "9783030715922",
        "issn": "03029743",
        "publisher": "Springer Verlag",
        "sjr": 0.249,
        "snip": 0.628,
        "subject_areas": [
          "Databases",
          "Cryptography and Security",
          "Distributed, Parallel, and Cluster Computing",
          "Theoretical Computer Science",
          "Computer Science (all)"
        ],
        "title": "IFIP International Conference on Distributed Applications and\n  Interoperable Systems, DAIS 2017: Distributed Applications and Interoperable\n  Systems pp 83-98"
      },
      "publication_date": "2004-01-01",
      "selected": null,
      "title": "Looking Up Files in Peer-to-Peer Using Hierarchical Bloom Filters",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=35048837628&origin=inward",
        "https://link.springer.com/content/pdf/10.1007%2F978-3-540-30497-5_151.pdf"
      ]
    },
    {
      "abstract": "Online multi-participant virtual-world systems have attracted significant interest from the Internet community but are hindered by their inability to efficiently support interactivity for a large number of participants. Current solutions divide a large virtual-world into a few mutually exclusive zones, with each zone controlled by a different server, and/or limit the number of participants per server or per virtual-world. Peer-to-Peer (P2P) systems are known to provide excellent scalability in a networked environment (one peer is introduced to the system by each participant), however current P2P applications can only provide file sharing and other forms of relatively simple data communications. In this paper, we present a generic 3D virtual-world application that runs on a P2P network with no central administration or server. Two issues are addressed by this paper to enable such a spatial application on a P2P network. First, we demonstrate how to index and query a 3D space on a dynamic distributed network. Second, we show how to build such a complex application from the ground level of a P2P routing algorithm. Our work leads to new directions for the development of online virtual-worlds that we believe can be used for many government, industry, and public domain applications. Copyright 2004 ACM.",
      "authors": [
        "Tanin, E.",
        "Harwood, A.",
        "Samet, H.",
        "Nutanong, S.",
        "Truong, M.T."
      ],
      "categories": null,
      "citations": 17,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1145/1032222.1032246",
      "keywords": [
        "Virtual-worlds",
        "Distributed hash tables",
        "Spatial data",
        "Peer-to-Peer systems"
      ],
      "number_of_pages": 9,
      "pages": "157-165",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "GIS: Proceedings of the ACM International Symposium on Advances in Geographic Information Systems"
      },
      "publication_date": "2004-01-01",
      "selected": null,
      "title": "A serverless 3D world",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=19544367993&origin=inward"
      ]
    },
    {
      "abstract": "The design of a persistent peer-to-peer (P2P) network storage application is presented in the paper. SNS separates the application from the underlying P2P network, i.e. the serverless layer. The serverless layer is responsible for routine networking tasks such as self-organisation and maintaining the network state information. The application specific functions are implemented through the file information protocol e.g. maintaining and synchronizing file and disk space information by using lightweight XML-formatted messages. The distributed storage is made to appear as a single large network drive, with all the main features of a conventional file system being made available to the client nodes.",
      "authors": [
        "W. Ye",
        "A.I. Khan",
        "E.A. Kendall"
      ],
      "categories": null,
      "citations": 9,
      "comments": null,
      "databases": [
        "IEEE"
      ],
      "doi": "10.1109/ICON.2003.1266214",
      "keywords": [],
      "number_of_pages": 5,
      "pages": "343-347",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "0-7803-7788-5",
        "issn": "1531-2216",
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings. 2004 12th IEEE International Conference on Networks (ICON 2004) (IEEE Cat. No.04EX955)"
      },
      "publication_date": "2003-10-01",
      "selected": null,
      "title": "Distributed network file storage for a serverless (P2P) network",
      "urls": [
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=1266214"
      ]
    },
    {
      "abstract": "To obtain good performance in messaging over mobile networks, we have developed a Gateway. Gateway is a message hub that transmits information using store-and-forward messaging and provides powerful optimization and data transformation. The SmartCaching component provides generic caching in an N-tier architecture, an essential function of Gateway. Gateway can be integrated into Pronto, a middleware system for mobile applications with messaging as a basis [15]. Pronto then offers: 1) a lightweight client of Message Oriented Middleware (MOM) based on Java Message Service(JMS), 2) Gateway for reliable and efficient transmission between mobile devices and a server and 3) Serverless JMS based on IP multicast. Integration of Gateway within Pronto provides a solution for mobile application-specific problems such as resource constraints, network characteristics, and data optimization. \u00c2\u00a9 2002 IEEE.",
      "authors": [
        "E. Yoneki",
        "J. Bacon"
      ],
      "categories": null,
      "citations": 3,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/ICDCSW.2003.1203578",
      "keywords": [
        "Intelligent networks",
        "Bandwidth",
        "Computer networks",
        "Libraries",
        "Network servers",
        "Wireless networks",
        "Java",
        "Message-oriented middleware",
        "Mobile communication",
        "Mobile computing"
      ],
      "number_of_pages": 6,
      "pages": "348-353",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "0-7695-1921-0",
        "issn": null,
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings - 23rd International Conference on Distributed Computing Systems Workshops, ICDCSW 2003"
      },
      "publication_date": "2003-05-19",
      "selected": null,
      "title": "Gateway:A message hub with store-and-forward messaging in mobile networks",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=84943526647&origin=inward",
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=1203578"
      ]
    },
    {
      "abstract": "This paper presents Cluster-Aware Remote Disks (CARDs), a Single System I/O architecture for cluster computing. CARDs virtualize accesses to remote cluster disks over a System Area Network. Their operation is driven by cooperative caching policies that implement a joint management of the cluster caches. All the CARDS of a given disk employ a common policy, independently of other CARD sets. CARD drivers have been implemented as Linux kernel modules which can flexibly accommodate various cooperative caching algorithms. We designed and implemented a decentralized policy called Home-based Serverless Cooperative Caching (HSCC). HSCC showed cache hit ratios over 50% for workloads that go beyond the limit of the global cache. The best speedup of a CARD over a remote disk interface was 1.54. \u00c2\u00a9 2003 IEEE.",
      "authors": [
        "V. Olaru",
        "W.F. Tichy"
      ],
      "categories": null,
      "citations": 3,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/CCGRID.2003.1199359",
      "keywords": [],
      "number_of_pages": 8,
      "pages": "112-119",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "0-7695-1919-9",
        "issn": null,
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "CCGrid 2003. 3rd IEEE/ACM International Symposium on Cluster Computing and the Grid, 2003. Proceedings."
      },
      "publication_date": "2003-05-12",
      "selected": null,
      "title": "CARDS: cluster-aware remote disks",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=84887553084&origin=inward",
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=1199359"
      ]
    },
    {
      "abstract": "In recent years the capabilities of the common Internet infrastructure have increased to an extent where data intensive communication services may mature to become popular, reliable applications. Videoconferencing over IP can be seen as such a highly prominent candidate. However, heavy infrastructure and complicated call handling hinder acceptance of standard solutions. This paper presents a more lightweight framework - both communication scheme and conferencing software - to overcome these deficiencies. A simple, ready-to-use global location scheme for conference users is proposed. First practical experiences are reported. \u00c2\u00a9 2002 Elsevier Science B.V. All rights reserved.",
      "authors": [
        "Schmidt, T.C.",
        "W\u00c3\u00a4hlisch, M.",
        "Cycon, H.L.",
        "Palkow, M."
      ],
      "categories": null,
      "citations": 15,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1016/S0167-739X(02)00148-6",
      "keywords": [
        "User locating",
        "Peer-to-peer videoconferencing",
        "Multicast videoconferencing",
        "Wavelet transform",
        "User address resolution"
      ],
      "number_of_pages": 9,
      "pages": "219-227",
      "publication": {
        "category": "Journal",
        "cite_score": 13.3,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "0167739X",
        "publisher": "Elsevier",
        "sjr": 1.262,
        "snip": 2.72,
        "subject_areas": [
          "Hardware and Architecture",
          "Computer Networks and Communications",
          "Software"
        ],
        "title": "Future Generation Computer Systems"
      },
      "publication_date": "2003-02-01",
      "selected": null,
      "title": "Global serverless videoconferencing over IP",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=0037302515&origin=inward"
      ]
    },
    {
      "abstract": "The proceedings contain 15 papers from the Conference on Future Generation Computer Systems. Topics discussed include: using computer algebra systems in the development of scientific computer codes; migration control for mobile agents based on passport and visa; future applications and middleware, and their impact on the infrastructure; grid high performance networking in the DataGRID project; global serverless videoconferencing over IP; new security services based on PKI and QOS and SLA aspects across multiple management domains.",
      "authors": [],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": {
        "category": "Journal",
        "cite_score": 13.3,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "0167739X",
        "publisher": "Elsevier",
        "sjr": 1.262,
        "snip": 2.72,
        "subject_areas": [
          "Hardware and Architecture",
          "Computer Networks and Communications",
          "Software"
        ],
        "title": "Future Generation Computer Systems"
      },
      "publication_date": "2003-02-01",
      "selected": null,
      "title": "Future generation computer systems",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=0037301599&origin=inward"
      ]
    },
    {
      "abstract": "The design of a persistent peer-to-peer (P2P) network storage application is presented in the paper. SNS separates the application from the underlying P2P network i.e. the Serverless Layer. The Serverless Layer is responsible for routine networking tasks such as self-organisation and maintaining the network state information. The application specific functions are implemented through the File Information Protocol e.g. maintaining and synchronizing file and disk space information by using lightweight XML-formatted messages. The distributed storage is made to appear as a single large network drive, with all the main features of a conventional file system being made available to the client nodes. \u00c2\u00a92003 IEEE.",
      "authors": [
        "Ye, W.",
        "Khan, A.I.",
        "Kendall, E.A."
      ],
      "categories": null,
      "citations": 11,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": 5,
      "pages": "343-347",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "0780377885",
        "issn": "15566463",
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "IEEE International Conference on Networks, ICON"
      },
      "publication_date": "2003-01-01",
      "selected": null,
      "title": "Distributed network file storage for a serverleiss (P2P) network",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=84879901481&origin=inward"
      ]
    },
    {
      "abstract": "The purpose of this paper is twofold: On the one hand, we propose a fast wavelet-based video codec which is implemented into a real-time video conferencing tool. The proposed codec uses temporal frame difference coding, a computationally low-complex 5/3 tap wavelet transform, and a fast entropy coding scheme based on Golomb-Rice codes. On the other hand, we present an application of the video conferencing tool in a serverless peer-to-peer IP-based communication framework. For mobile communication we propose a simple, ready-to-use location scheme for video conference users in a global network.",
      "authors": [
        "Cycon, H.L.",
        "Palkow, M.",
        "Schmidt, T.C.",
        "W\u00c3\u00a4hlisch, M.",
        "Marpe, D."
      ],
      "categories": null,
      "citations": 1,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1142/9789812796769_0089",
      "keywords": [],
      "number_of_pages": 7,
      "pages": "577-583",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9812389776",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings of the International Conference on Wavelet Analysis and Its Applications (WAA)"
      },
      "publication_date": "2003-01-01",
      "selected": null,
      "title": "A fast wavelet-based video codec and its application in an IP version 6-ready serverless video conferencing system",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=0141998775&origin=inward"
      ]
    },
    {
      "abstract": "In this paper, we present the use of a Web-multicast chat system for collaborative work environment. Web-multicast is a concept that uses a Web-browser to communicate between multiple users. No Web...",
      "authors": [
        "M. A. Ngadi",
        "Bernard S. Doherty"
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1007/3-540-45068-8_96",
      "keywords": [],
      "number_of_pages": 4,
      "pages": "519-522",
      "publication": {
        "category": "Book",
        "cite_score": 1.8,
        "is_potentially_predatory": false,
        "isbn": "9783030715922",
        "issn": "03029743",
        "publisher": "Springer Verlag",
        "sjr": 0.249,
        "snip": 0.628,
        "subject_areas": [
          "Databases",
          "Cryptography and Security",
          "Distributed, Parallel, and Cluster Computing",
          "Theoretical Computer Science",
          "Computer Science (all)"
        ],
        "title": "IFIP International Conference on Distributed Applications and\n  Interoperable Systems, DAIS 2017: Distributed Applications and Interoperable\n  Systems pp 83-98"
      },
      "publication_date": "2003-01-01",
      "selected": null,
      "title": "Serverless Web-Multicast Chat System for Multi-users",
      "urls": [
        "https://link.springer.com/content/pdf/10.1007%2F3-540-45068-8_96.pdf",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=35248887520&origin=inward"
      ]
    },
    {
      "abstract": "A study is performed on local area network (LAN)-free and serverless backup. In a LAN-free backup, the backup data is shifted from the LAN to a storage area network (SAN). It is reported that an extension of LAN-free backup, serverless backup enables data to be transferred directly between two storage devices in a SAN configuration, typically a disk array and a tape library.",
      "authors": [
        "Clark, E."
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": 3,
      "pages": "22-24",
      "publication": {
        "category": "Journal",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "10938001",
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Network Magazine"
      },
      "publication_date": "2003-01-01",
      "selected": null,
      "title": "Lesson 176: LAN-free and serverless backup",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=0037341560&origin=inward"
      ]
    },
    {
      "abstract": "The distributed RAID for serverless cluster computer is used to save the checkpoint files periodically according to the checkpointing algorithm for rollback recovery. Striped checkpointing algorithm...",
      "authors": [
        "Yun Seok Chang",
        "Sun Young Cho",
        "Bo Yeon Kim"
      ],
      "categories": null,
      "citations": 3,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1007/3-540-44862-4_103",
      "keywords": [],
      "number_of_pages": 8,
      "pages": "955-962",
      "publication": {
        "category": "Book",
        "cite_score": 1.8,
        "is_potentially_predatory": false,
        "isbn": "9783030715922",
        "issn": "03029743",
        "publisher": "Springer Verlag",
        "sjr": 0.249,
        "snip": 0.628,
        "subject_areas": [
          "Databases",
          "Cryptography and Security",
          "Distributed, Parallel, and Cluster Computing",
          "Theoretical Computer Science",
          "Computer Science (all)"
        ],
        "title": "IFIP International Conference on Distributed Applications and\n  Interoperable Systems, DAIS 2017: Distributed Applications and Interoperable\n  Systems pp 83-98"
      },
      "publication_date": "2003-01-01",
      "selected": null,
      "title": "Performance Evaluation of the Striped Checkpointing Algorithm on the Distributed RAID for Cluster Computer",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=35248833179&origin=inward",
        "https://link.springer.com/content/pdf/10.1007%2F3-540-44862-4_103.pdf"
      ]
    },
    {
      "abstract": "Scientific applications are becoming more complex and more I/O demanding than ever. For such applications, the system with dedicated I/O nodes does not provide enough scalability. Rather, a...",
      "authors": [
        "Yanyong Zhang",
        "Antony Yang",
        "Anand Sivasubramaniam",
        "Jose Moreira"
      ],
      "categories": null,
      "citations": 12,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1007/10968987_10",
      "keywords": [],
      "number_of_pages": 25,
      "pages": "183-207",
      "publication": {
        "category": "Book",
        "cite_score": 1.8,
        "is_potentially_predatory": false,
        "isbn": "9783030715922",
        "issn": "03029743",
        "publisher": "Springer Verlag",
        "sjr": 0.249,
        "snip": 0.628,
        "subject_areas": [
          "Databases",
          "Cryptography and Security",
          "Distributed, Parallel, and Cluster Computing",
          "Theoretical Computer Science",
          "Computer Science (all)"
        ],
        "title": "IFIP International Conference on Distributed Applications and\n  Interoperable Systems, DAIS 2017: Distributed Applications and Interoperable\n  Systems pp 83-98"
      },
      "publication_date": "2003-01-01",
      "selected": null,
      "title": "Gang Scheduling Extensions for I/O Intensive Workloads",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=0242656056&origin=inward",
        "https://link.springer.com/content/pdf/10.1007%2F10968987_10.pdf"
      ]
    },
    {
      "abstract": "We propose a storage cluster architecture CoStore, which evenly distributes system responsibilities across all collaborating cluster members without a separate central file manager. The serverless CoStore architecture has the potential to provide scalable high-performance high-capacity storage services with strong reliability and availability, traditionally only achievable by high-end storage systems. A prototype CoStore system has been implemented using cost-effective COTS-based network attached storage devices on commodity operating systems. The performance of the CoStore prototype has been measured and compared with those of other commonly available distributed file systems. Preliminary test results show that a single node CoStore has a comparable performance to that of NFS and that CoStore outperforms CIFS on Windows 2000. \u00c2\u00a9 2002 IEEE.",
      "authors": [
        "Yong Chen",
        "L.M. Ni",
        "Mingyao Yang"
      ],
      "categories": null,
      "citations": 9,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/ICPADS.2002.1183415",
      "keywords": [
        "Reliability engineering",
        "Collaborative software",
        "Disk drives",
        "File systems",
        "Computer science",
        "Prototypes",
        "Home appliances",
        "Storage area networks",
        "Computer architecture",
        "Availability"
      ],
      "number_of_pages": 6,
      "pages": "301-306",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "978-1-7281-2584-8",
        "issn": "1521-9097",
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings of the International Conference on Parallel and Distributed Systems - ICPADS"
      },
      "publication_date": "2002-12-17",
      "selected": null,
      "title": "CoStore: a storage cluster architecture using network attached storage devices",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=33744486233&origin=inward",
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=1183415"
      ]
    },
    {
      "abstract": "Virtual Home Environments (VHE) is the concept that networks supporting mobile users should provide them with the same computing environment on the road as they are used to having in their home or corporate computing environment. Middleware for Virtual Home Environment (the VHE Middleware project) is one of the ITEA (Information Technology for European Advancement) projects. The goal of the project is to make European industry the leader in Middleware software technology for end-user terminals, with wireless connections and the corresponding infrastructure to enable VHE. The project partners are Nokia (FIN), Siemens (D), Fujitsu-Siemens (D), Orga Kartensysteme (D), Paderborn University (D), Philips (NL, B, D), Robert Bosch (D), and VTT Electronics (FIN). This publication documents the research and development of VHE Middleware carried out by VTT Electronics. In a scientific sense, a full case study evaluating an advanced method of identifying the conceptual architecture of a software system from its functional requirements is presented. The proposed method is based on the common knowledge of object-oriented analysis (OOA) methodology, which claims that every software system contains hierarchical structures that reflect its functional requirements. In OOA methodology, these structures and their hierarchies can be found by analysing and structuring the problem descriptions - the Use Case analysis. The advanced method here is how to seamlessly move from a use case model to a conceptual architecture model of the software system. User's scenarios and software prototypes of the VHE system are used as a case study. Using the proposed method, the VHE system's subsystems and layers, and their corresponding application programming interfaces (APIs), are found and the conceptual architecture of VHE Middleware drawn up. After this, the technical development of the case is extended to fully concrete the VHE Middleware architecture and its elements. Copyright \u00c2\u00a9 VTT Technical Research Centre of Finland 2002.",
      "authors": [
        "Moilanen, M."
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": null,
      "keywords": [
        "APIs",
        "Application programming interfaces",
        "Software layers and subsystems",
        "Remote service development",
        "Serverless service provisioning",
        "Object-oriented analysis OOA",
        "Unified modelling language UML",
        "Conceptual architecture",
        "Software systems",
        "User interface mark-up language UIML",
        "Generic user interface"
      ],
      "number_of_pages": 113,
      "pages": "3-115",
      "publication": {
        "category": "Book",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "12350621",
        "publisher": "Technical Research Center of Finland",
        "sjr": 0.103,
        "snip": 0.017,
        "subject_areas": [
          "Engineering (all)"
        ],
        "title": "VTT Publications"
      },
      "publication_date": "2002-12-01",
      "selected": null,
      "title": "Middleware for virtual home environments: Approaching the architecture",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=0037005296&origin=inward"
      ]
    },
    {
      "abstract": "This paper describes the main ideas of DRMTP (Distributed Real-time Multicast Transport Protocol), an adaptive application-level protocol which allows cooperative multicast of real-time streams. Our protocol is designed for peer-to-peer operation, where multiple sources residing on end-user machines may be present in the network, and is based on a dynamic stream aggregation and congestion control scheme. The protocol solves the problem of network asymmetry that plagues residential broadband networks and allows for fast fail-over and adaptation to departure of source nodes, mitigating the reliability and upstream capacity problems of end-user nodes. Coupled with traffic localization, stream patching, and TCP-friendly congestion control, we design a protocol that enables scalable soft real-time media distribution in a completely decentralised, serverless fashion. \u00c2\u00a9 2002 IEEE.",
      "authors": [
        "D. Vyzovitis",
        "A. Lippman"
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/ICNP.2002.1181404",
      "keywords": [],
      "number_of_pages": 2,
      "pages": "196-197",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "0-7695-1856-7",
        "issn": "1092-1648",
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "10th IEEE International Conference on Network Protocols, 2002. Proceedings."
      },
      "publication_date": "2002-11-12",
      "selected": null,
      "title": "A multicast transport protocol for cooperative media distribution",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=84904894277&origin=inward",
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=1181404"
      ]
    },
    {
      "abstract": "In this paper, we present the design and implementation of a new cluster file system, TH-CluFS, which is based on the standard NFS protocol and is implemented in the user level space completely. This open platform file system is important as the clusters become larger and heterogeneous. To take advantages of the accumulated resources and high-speed network in clusters, TH-CluFS follows a serverless architecture, hybrid distributed metadata management, and file granular data distribution, and it uses distributed metadata cache and unique cache to optimize performance. For the flexibility of TH-CluFS, we plan to employ file migration to balance I/O load across nodes dynamically. According to the experiment results, we conclude that TH-CluFS can meet the requirements of consistent file system view, performance and scalability gracefully. \u00c2\u00a9 2002 IEEE.",
      "authors": [
        "Qifeng Huang",
        "Weimin Zheng",
        "Meiming Shen"
      ],
      "categories": null,
      "citations": 3,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/ICAPP.2002.1173551",
      "keywords": [],
      "number_of_pages": 4,
      "pages": "48-51",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "0-7695-1512-6",
        "issn": null,
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings - 5th International Conference on Algorithms and Architectures for Parallel Processing, ICA3PP 2002"
      },
      "publication_date": "2002-10-23",
      "selected": null,
      "title": "TH-CluFS: an open platform cluster file system",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=84964758718&origin=inward",
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=1173551"
      ]
    },
    {
      "abstract": "The degree of user empowerment enabled by present day peer-to-peer applications in the areas of content-brokerage, super-distribution and group collaboration is now bringing IT professionals to an awareness of the many new and useful applications for \"P2P\" technology today. As a result, P2P technology and applications are beginning to take root throughout the industry as a whole. But these applications have only started to scratch the surface. The pervasive deployment of P2P technology in a truly serverless environment brings new opportunities and exciting challenges capable of completely transforming the way society experiences IT and media communications. This paper reviews how P2P technology can be applied pervasively to provide a serverless infrastructure that lowers the cost of wide-scale private networking right through from narrow-band networking at 2,400 bps to full broadband communications. The paper presents a three-part serverless infrastructure model, covering \"application\", \"connectivity\" and \"management\" and describes techniques for user discovery, auto-population and Quality of Service control applied at the end-user level. It describes a fault-tolerant approach to administrating large groups of users and network resources and discusses security at the transport, data storage and LAN levels. The paper also sets out a telecommunications carrier solution that enables service providers to further exploit their existing network infrastructure and presents a low cost solution for operators faced with high network configuration costs. \u00c2\u00a9 2002 IEEE.",
      "authors": [
        "M. King",
        "M. Muehlemann"
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/PTP.2002.1046291",
      "keywords": [],
      "number_of_pages": 8,
      "pages": "5-12",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "0-7695-1810-9",
        "issn": null,
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings - 2nd International Conference on Peer-to-Peer Computing, P2P 2002"
      },
      "publication_date": "2002-09-07",
      "selected": null,
      "title": "Transforming the reliability, security and scalability of IT communications through the pervasive deployment of serverless software infrastructure",
      "urls": [
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=1046291",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=84964301645&origin=inward"
      ]
    },
    {
      "abstract": "CoStore is a serverless distributed file system designed to provide cost-effective storage service utilizing idle disk space on workstation clusters. With all the system responsibilities evenly distributed across a group of collaborating workstations, the proposed architecture provides improved performance, reliability, and scalability. We have collected workstation uptime data from production systems. The assessment based on RAID reliability theory confirmed the feasibility of deploying CoStore on an existing desktop computing infrastructure. We have implemented a CoStore prototype and measured its performance. Preliminary results indicate that CoStore performance is comparable to that of commonly used distributed file systems, such as NFS, Samba, and Windows 2000 Server.",
      "authors": [
        "Yong Chen",
        "L.M. Ni",
        "Mingyao Yang",
        "P. Mohapatra"
      ],
      "categories": null,
      "citations": 2,
      "comments": null,
      "databases": [
        "IEEE"
      ],
      "doi": "10.1109/IPCCC.2002.995175",
      "keywords": [],
      "number_of_pages": 6,
      "pages": "393-398",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "0-7803-7371-5",
        "issn": null,
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Conference Proceedings of the IEEE International Performance, Computing, and Communications Conference (Cat. No.02CH37326)"
      },
      "publication_date": "2002-04-03",
      "selected": null,
      "title": "CoStore: a serverless distributed file system utilizing disk space on workstation clusters",
      "urls": [
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=995175"
      ]
    },
    {
      "abstract": "The proceedings contain 25 papers. The topics discussed include: grid computing in the enterprise with the UD MetaProcessor; transforming the reliability, security and scalability of IT communications through the pervasive deployment of serverless software infrastructure; grid economy comes of age: emerging gridbus tools for service-oriented cluster and grid computing; the ubiquitous service-oriented Network (USON) -an approach for a ubiquitous world based on P2P technology; the multi-ring topology - high-performance group communication in peer-to-peer networks; GISP: global information sharing protocol-a distributed index for peer-to-peer systems; a distributed search service for peer-to-peer file sharing in mobile applications; coordinated learning to support resource management in computational grids; and adaptability in component-based peer-to-peer applications.",
      "authors": [],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "0769518109",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings - 2nd International Conference on Peer-to-Peer Computing, P2P 2002"
      },
      "publication_date": "2002-01-01",
      "selected": null,
      "title": "Proceedings - 2nd International Conference on Peer-to-Peer Computing, P2P 2002",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=84964253392&origin=inward"
      ]
    },
    {
      "abstract": "The Farsite distributed file system provides availability by replicating each file onto multiple desktop computers. Since this replication consumes significant storage space, it is important to reclaim used space where possible. Measurement of over 500 desktop file systems shows that nearly half of all consumed space is occupied by duplicate files. We present a mechanism to reclaim space from this incidental duplication to make it available for controlled file replication. Our mechanism includes 1) convergent encryption, which enables duplicate files to coalesced into the space of a single file, even if the files are encrypted with different users' keys, and 2) SALAD, a Self-Arranging, Lossy, Associative Database for aggregating file content and location information in a decentralized, scalable, fault-tolerant manner. Large-scale simulation experiments show that the duplicate-file coalescing system is scalable, highly effective, and fault-tolerant.",
      "authors": [
        "Douceur, J.R.",
        "Adya, A.",
        "Bolosky, W.J.",
        "Simon, D.",
        "Theimer, M."
      ],
      "categories": null,
      "citations": 357,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": 8,
      "pages": "617-624",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings - International Conference on Distributed Computing Systems"
      },
      "publication_date": "2002-01-01",
      "selected": null,
      "title": "Reclaiming space from duplicate files in a serverless distributed file system",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=0036373715&origin=inward"
      ]
    },
    {
      "abstract": "CoStore is a serverless distributed file system designed to provide cost-effective storage service utilizing idle disk space on workstation clusters. With all the system responsibilities evenly distributed across a group of collaborating workstations, the proposed architecture provides improved performance, reliability, and scalability. We have collected workstation uptime data from production systems. The assessment based on RAID reliability theory confirmed the feasibility of deploying CoStore on an existing desktop computing infrastructure. We have implemented a CoStore prototype and measured its performance. Preliminary results indicate that CoStore performance is comparable to that of commonly used distributed file systems, such as NFS, Samba, and Windows 2000 Server.",
      "authors": [
        "Chen, Y.",
        "Ni, L.M.",
        "Yang, M.",
        "Mohapatra, P."
      ],
      "categories": null,
      "citations": 2,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": 6,
      "pages": "393-398",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "IEEE International Performance, Computing and Communications Conference, Proceedings"
      },
      "publication_date": "2002-01-01",
      "selected": null,
      "title": "CoStore: A serverless distributed file system utilizing disk space on workstation clusters",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=0036082327&origin=inward"
      ]
    },
    {
      "abstract": "This paper presents a new striped and staggered checkpointing (SSC) scheme for multicomputer clusters. We consider serverless clusters, where local disks attached to cluster nodes collectively form a...",
      "authors": [
        "Hai Jin",
        "Kai Hwang"
      ],
      "categories": null,
      "citations": 2,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1007/3-540-36184-7_4",
      "keywords": [],
      "number_of_pages": 15,
      "pages": "19-33",
      "publication": {
        "category": "Book",
        "cite_score": 1.8,
        "is_potentially_predatory": false,
        "isbn": "9783030715922",
        "issn": "03029743",
        "publisher": "Springer Verlag",
        "sjr": 0.249,
        "snip": 0.628,
        "subject_areas": [
          "Databases",
          "Cryptography and Security",
          "Distributed, Parallel, and Cluster Computing",
          "Theoretical Computer Science",
          "Computer Science (all)"
        ],
        "title": "IFIP International Conference on Distributed Applications and\n  Interoperable Systems, DAIS 2017: Distributed Applications and Interoperable\n  Systems pp 83-98"
      },
      "publication_date": "2002-01-01",
      "selected": null,
      "title": "Distributed Checkpointing on Clusters with Dynamic Striping and Staggering",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=84904412272&origin=inward",
        "https://link.springer.com/content/pdf/10.1007%2F3-540-36184-7_4.pdf"
      ]
    },
    {
      "abstract": "This paper presents a new distributed disk-array architecture for achieving high I/O performance in scalable cluster computing. In a serverless cluster of computers, all distributed local disks can be integrated as a distributed-software redundant array of independent disks (ds-RAID) with a single I/O space. We report the new RAID-x design and its benchmark performance results. The advantage of RAID-x comes mainly from its orthogonal striping and mirroring (OSM) architecture. The bandwidth is enhanced with distributed striping across local and remote disks, while the reliability comes from orthogonal mirroring on local disks at the background. Our RAID-x design is experimentally compared with the RAID-5, RAID-10, and chained-declustering RAID through benchmarking on a research Linux cluster at USC. Andrew and Bonnie benchmark results are reported on all four disk-array architectures. Cooperative disk drivers and Linux extensions are developed to enable not only the single I/O space, but also the shared virtual memory and global file hierarchy. We reveal the effects of traffic rate and stripe unit size on I/O performance. Through scalability and overhead analysis, we find the strength of RAID-x in three areas: 1) improved aggregate I/O bandwidth especially for parallel writes, 2) orthogonal mirroring with low software overhead, and 3) enhanced scalability in cluster I/O processing. Architectural strengths and weakness of all four ds-RAID architectures are evaluated comparatively. The optimal choice among them depends on parallel read/write performance desired, the level of fault tolerance required, and the cost-effectiveness in specific I/O processing applications.",
      "authors": [
        "Kai Hwang",
        "Hai Jin",
        "R.S.C. Ho"
      ],
      "categories": null,
      "citations": 41,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/71.980025",
      "keywords": [
        "Single I/O space",
        "Distributed computing",
        "Linux clusters",
        "Andrew and Bonnie benchmarks",
        "Parallel I/O",
        "Fault tolerance",
        "Network file servers",
        "Scalability and overhead analysis",
        "Software RAID"
      ],
      "number_of_pages": 19,
      "pages": "26-44",
      "publication": {
        "category": "Journal",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "2161-9883",
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "IEEE Transactions on Parallel and Distributed Systems"
      },
      "publication_date": "2002-01-01",
      "selected": null,
      "title": "Orthogonal striping and mirroring in distributed RAID for I/O-centric cluster computing",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=0036377408&origin=inward",
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=980025"
      ]
    },
    {
      "abstract": "Realizing that current file systems can not cope with the diverse requirements of wide-area collaborations, researchers have developed data access facilities to meet their needs. Recent work has focused on comprehensive data access architectures. In order to fulfill the evolving requirements in this environment, we suggest a more fully-integrated architecture built upon the fundamental tenets of naming, security, scalability, extensibility, and adaptability. These form the underpinning of the Legion File System (LegionFS). This paper motivates the need for these requirements and presents benchmarks that highlight the scalability of LegionFS. LegionFS aggregate throughput follows the linear growth of the network, yielding an aggregate read bandwidth of 193.8 MB/s on a 100 Mbps Ethernet backplane with 50 simultaneous readers. The serverless architecture of LegionFS is shown to benefit important scientific applications, such as those accessing the Protein Data Bank, within both local- and wide-area environments.",
      "authors": [
        "B.S. White",
        "M. Walker",
        "M. Humphrey",
        "A.S. Grimshaw"
      ],
      "categories": null,
      "citations": 16,
      "comments": null,
      "databases": [
        "IEEE"
      ],
      "doi": "10.1145/582034.582093",
      "keywords": [],
      "number_of_pages": 1,
      "pages": "19-19",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "1-58113-293-X",
        "issn": null,
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "SC '01: Proceedings of the 2001 ACM/IEEE Conference on Supercomputing"
      },
      "publication_date": "2001-11-10",
      "selected": null,
      "title": "LegionFS: A Secure and Scalable File System Supporting Cross-Domain High-Performance Applications",
      "urls": [
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=1592795"
      ]
    },
    {
      "abstract": "Imagine receiving a new software application that can be installed on any device enabling the secure, simultaneous exchange and distribution of media files, unrestricted by type, volume and number of users. All you need is a Java-enabled device and a network connection. There is no server, so there is no need to install any additional infrastructure. In this serverless world, conducting a telephone or videoconference with multiple parties is as easy as sending an E-mail or calling a friend. You can manage your connection to your colleagues, wherever you are, from a PC or a handheld wireless device. You can connect to other group members or redirect large documents to your desktop PC or any other connected device. You can now move documents and media rich content to any user or group of users securely without the need of a server, and receive confirmation of receipt from each user. In effect what you have here is a \"Personal Communications Center\" that gives you the equivalent of a personal, limitless express courier and conferencing service. This concept of Personal Business Communications is no longer a futuristic dream. Quick Com is making it reality. Peer-to-Peer technologies are poised to remove the service, delivery and quality limitations of the present day information exchange system, and to bring high quality, professional communications standards to the world of Internet-based networks at a fraction of the cost. In this paper we will review the concepts of Networks, Data Delivery, and Architectures. We will examine why Quality of Service is essential in Peer-to-Peer exchange, distribution and communications for business communities. In closing, this paper will highlight the competitive, survival advantage of serverless and Peer-to-Peer communities. \u00c2\u00a9 2001 IEEE.",
      "authors": [
        "M. King"
      ],
      "categories": null,
      "citations": 3,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/P2P.2001.990423",
      "keywords": [],
      "number_of_pages": 9,
      "pages": "36-44",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "0-7695-1503-7",
        "issn": null,
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings - 1st International Conference on Peer-to-Peer Computing, P2P 2001"
      },
      "publication_date": "2001-08-27",
      "selected": null,
      "title": "Breaking the server and data communications barrier with serverless guaranteed quality of service (GQoS) compliant communications",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=84962130141&origin=inward",
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=990423"
      ]
    },
    {
      "abstract": " A peer-to-peer application architecture is proposed that has the potential to\neliminate the back-end servers for hosting services on the Internet. The\nproposed application architecture has been modeled as a distributed system for\ndelivering an Internet service. The service thus created, though chaotic and\nfraught with uncertainties, would be highly scalable and capable of achieving\nunprecedented levels of robustness and viability with the increase in the\nnumber of the users. The core issues relating to the architecture, such as\nservice discovery, distributed application architecture components, and\ninter-application communications, have been analysed. It is shown that the\ncommunications for the coordination of various functions, among the cooperating\ninstances of the application, may be optimised using a divide-and-conquer\nstrategy. Finally, the areas where future work needs to be directed have been\nidentified.\n",
      "authors": [
        "Khan, A. I.",
        "Spindler, R."
      ],
      "categories": null,
      "citations": null,
      "comments": "23 pages, 9 Figures",
      "databases": [
        "arXiv"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": null,
      "publication_date": "2001-07-05",
      "selected": null,
      "title": "A Blueprint for Building Serverless Applications on the Net",
      "urls": [
        "http://arxiv.org/pdf/cs/0107009v1",
        "http://arxiv.org/abs/cs/0107009v1",
        "https://arxiv.org/pdf/cs/0107009"
      ]
    },
    {
      "abstract": "We explore exploits possible for cheating in real-time, multiplayer games for both client-server and distributed, serverless architectures. We offer the first formalization of cheating in online games and propose an initial set of strong solutions. We propose a protocol that has provable anti-cheating guarantees, but suffers a performance penalty. We then develop an extended version of this protocol, called asynchronous synchronization, which avoids the penalty, is serverless, offers provable anti-cheating guarantees, is robust in the face of packet loss, and provides for significantly increased communication performance. This technique is applicable to common game features as well as clustering and cell-based techniques for massively multiplayer games. Our performance claims are backed by analysis using a simulation based on real game traces.",
      "authors": [
        "N.E. Baughman",
        "B.N. Levine"
      ],
      "categories": null,
      "citations": 56,
      "comments": null,
      "databases": [
        "IEEE"
      ],
      "doi": "10.1109/INFCOM.2001.916692",
      "keywords": [],
      "number_of_pages": null,
      "pages": "104-113 vol.1",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": 8.3,
        "is_potentially_predatory": false,
        "isbn": "978-1-7281-6413-7",
        "issn": "0743-166X",
        "publisher": "Institute of Electrical and Electronics Engineers Inc.",
        "sjr": 1.183,
        "snip": 1.799,
        "subject_areas": [
          "Computer Science (all)",
          "Electrical and Electronic Engineering"
        ],
        "title": "IEEE INFOCOM '99. Conference on Computer Communications. Proceedings. Eighteenth Annual Joint Conference of the IEEE Computer and Communications Societies. The Future is Now (Cat. No.99CH36320)"
      },
      "publication_date": "2001-04-22",
      "selected": null,
      "title": "Cheat-proof playout for centralized and distributed online games",
      "urls": [
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=916692"
      ]
    },
    {
      "abstract": "Farsite is a scalable, distributed file system that logically functions as a centralized file server but that is physically implemented on a set of client desktop computers. Farsite provides high degrees of reliability and availability by storing replicas of files on multiple machines. Replicas are placed to maximize the effective system availability, using a distributed, iterative, randomized placement algorithm. We perform a large-scale simulation of three candidate algorithms using machine availability data collected from over 50,000 desktop computers. We find that algorithmic efficiency and placement efficacy run counter to each other. We fit analytic functions to the improvement rates and provide explanations for the fitted curves. We explore the algorithms' properties through study of their dynamic behavior. We visualize algorithmic placements and compare them to theoretical worst cases. We quantify the degree of machine failure correlation and develop a formula to approximate its effect.",
      "authors": [
        "Douceur, J.R.",
        "Wattenhofer, R.P."
      ],
      "categories": null,
      "citations": 16,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": 9,
      "pages": "311-319",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "IEEE International Workshop on Modeling, Analysis, and Simulation of Computer and Telecommunication Systems - Proceedings"
      },
      "publication_date": "2001-01-01",
      "selected": null,
      "title": "Large-scale simulation of replica placement algorithms for a serverless distributed file system",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=0034823063&origin=inward"
      ]
    },
    {
      "abstract": "In this paper, we propose a new paradigm for network file system design, serverless network file systems. While traditional network file systems rely on a central server machine, a serverless system utilizes workstations cooperating as peers to provide all file system services. Any machine in the system can store, cache, or control any block of data. Our approach uses this location independence, in combination with fast local area networks, to provide better performance and scalability than traditional file systems. Further, because any machine in the system can assume the responsibilities of a failed component, our serverless design also provides high availability via redundant data storage. To demonstrate our approach, we have implemented a prototype serverless network file system called xFS. Preliminary performance measurements suggest that our architecture achieves its goal of scalability. For instance, in a 32-node xFS system with 32 active clients, each client receives nearly as much read or write throughput as it would see if it were the only active client. \u00c2\u00a9 2002 by the Institute of Electrical and Electronics Engineers, Inc. All rights reserved.",
      "authors": [
        "Anderson, T.E.",
        "Dahlin, M.D.",
        "Neefe Matthews, J.M.",
        "Patterson, D.A.",
        "Roselli, D.S.",
        "Wang, R.Y."
      ],
      "categories": null,
      "citations": 1,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1109/9780470544839.ch24",
      "keywords": [
        "Workstations",
        "Servers",
        "Scalability",
        "File systems",
        "Prototypes",
        "Security",
        "Availability"
      ],
      "number_of_pages": 22,
      "pages": "364-385",
      "publication": {
        "category": "Book",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9780470544839",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "High Performance Mass Storage and Parallel I/O: Technologies and Applications"
      },
      "publication_date": "2001-01-01",
      "selected": null,
      "title": "Serverless network file systems",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=84875247280&origin=inward"
      ]
    },
    {
      "abstract": "The proceedings contain 14 papers. The topics discussed include: introduction to Gnougat; technologies for sharing and collaborating on the net; firewalls in a P2P world; search in JXTA and other distributed networks; breaking the server and data communications barrier with serverless guaranteed quality of service (GQoS) compliant communications; scalable and secure peer-to-peer systems with support for QoS; peer-to-peer streaming media delivery; peer-to-peer mobile network architecture; towards a content-based aggregation network; an XML-based middleware for peer-to-peer computing; when peer-to-peer comes face-to-face: collaborative peer-to-peer computing in mobile ad hoc networks; getting the most from accountability in P2P; and an initial approach of a scalable multicast-based pure peer-to-peer system.",
      "authors": [],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "0769515037",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings - 1st International Conference on Peer-to-Peer Computing, P2P 2001"
      },
      "publication_date": "2001-01-01",
      "selected": null,
      "title": "Proceedings - 1st International Conference on Peer-to-Peer Computing, P2P 2001",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=84962044911&origin=inward"
      ]
    },
    {
      "abstract": "A new RAID-x (redundant array of inexpensive disks at level x) architecture is presented for distributed I/O processing on a serverless cluster of computers. The RAID-x architecture is based on a new concept of orthogonal striping and mirroring (OSM) across all distributed disks in the cluster. The primary advantages of this OSM approach lie in: (1) a significant improvement in parallel I/O bandwidth, (2) hiding disk mirroring overhead in the background, and (3) greatly enhanced scalability and reliability in cluster computing applications. All claimed advantages are substantiated with benchmark performance results on the Trojans cluster built at USC in 1999. Throughout the paper, we discuss the issues of scalable I/O performance, enhanced system reliability, and striped checkpointing on distributed RAID-x in a serverless cluster environment. \u00c2\u00a9 2002 by the Institute of Electrical and Electronics Engineers, Inc. All rights reserved.",
      "authors": [
        "Wang, K.",
        "Jin, H.",
        "He, R."
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1109/9780470544839.ch29",
      "keywords": [
        "Driver circuits",
        "Bandwidth",
        "Linux",
        "Kernel",
        "Arrays",
        "Trojan horses"
      ],
      "number_of_pages": 8,
      "pages": "445-452",
      "publication": {
        "category": "Book",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "9780470544839",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "High Performance Mass Storage and Parallel I/O: Technologies and Applications"
      },
      "publication_date": "2001-01-01",
      "selected": null,
      "title": "RAID-x: A new distributed disk array for I/O-centric cluster computing",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85036518627&origin=inward"
      ]
    },
    {
      "abstract": "Farsite is a secure, scalable, distributed file system that logically functions as a centralized file server but that is physically realized on a set of client desktop computers. Farsite provides security, reliability, and availability by storing replicas of each file on multiple machines. It continuously monitors machine availability and relocates replicas as necessary to maximize the effective availability of the system. We evaluate several replica-placement methods using large-scale simulation with machine availability data from over 50, 000 desktop computers. We find that initially placing replicas in an availability-sensitive fashion yields pathological results, whereas very good results are obtained by random initial placement followed by incremental improvement using a scalable, distributed, fault-tolerant, and attack-resistant hill-climbing algorithm. The algorithm is resilient to severe restrictions on communication and replica placement, and it does not excessively co-locate replicas of different files on the same set of machines.",
      "authors": [
        "Douceur, J.R.",
        "Wattenhofer, R.P."
      ],
      "categories": null,
      "citations": 50,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1109/RELDIS.2001.969727",
      "keywords": [],
      "number_of_pages": 10,
      "pages": "4-13",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": 2.7,
        "is_potentially_predatory": false,
        "isbn": "0769567118",
        "issn": "10609857",
        "publisher": "IEEE Computer Society",
        "sjr": 0.291,
        "snip": 1.133,
        "subject_areas": [
          "Theoretical Computer Science",
          "Hardware and Architecture",
          "Computer Networks and Communications",
          "Software"
        ],
        "title": "Proceedings of the IEEE Symposium on Reliable Distributed Systems"
      },
      "publication_date": "2001-01-01",
      "selected": null,
      "title": "Optimizing file availability in a secure serverless distributed file system",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=0035204340&origin=inward"
      ]
    },
    {
      "abstract": "We explore exploits possible for cheating in real-time, multiplayer games for both client-server and distributed, serverless architectures. We offer the first formalization of cheating in online games and propose an initial set of strong solutions. We propose a protocol that has provable anti-cheating guarantees, but suffers a performance penalty. We then develop an extended version of this protocol, called asynchronous synchronization, which avoids the penalty, is serverless, offers provable anti-cheating guarantees, is robust in the face of packet loss, and provides for significantly increased communication performance. This technique is applicable to common game features as well as clustering and cell-based techniques for massively multiplayer games. Our performance claims are backed by analysis using a simulation based on real game traces.",
      "authors": [
        "Baughman, N.E.",
        "Levine, B.N."
      ],
      "categories": null,
      "citations": 134,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": 10,
      "pages": "104-113",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": 8.3,
        "is_potentially_predatory": false,
        "isbn": "9781728164120",
        "issn": "0743166X",
        "publisher": "Institute of Electrical and Electronics Engineers Inc.",
        "sjr": 1.183,
        "snip": 1.799,
        "subject_areas": [
          "Computer Science (all)",
          "Electrical and Electronic Engineering"
        ],
        "title": "Proceedings - IEEE INFOCOM"
      },
      "publication_date": "2001-01-01",
      "selected": null,
      "title": "Cheat-proof playout for centralized and distributed online games",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=0035014942&origin=inward"
      ]
    },
    {
      "abstract": "In this paper, we propose a new filesystem named Ad-hoc Filesystem which targets ad-hoc wireless networks. Ad-hoc Filesystem is a serverless filesystem which automatically generates temporary shared space among multiple mobile machines when they gather in a communicable range. The generated space is freely available for participating machines and can be used for any temporary work there. The design of Ad-hoc Filesystem is strongly motivated by the recent wireless network technologies and advances of ad-hoc network techniques. However, targeting such an unstable network forces us a completely different design from existing filesystems. We have designed an initial prototype of Ad-hoc Filesystem and have evaluated the simulation results. Our design is strongly based on an assumption such that people who wish to work together would form a stable group in a range, and replicating data on two different machines would be enough to provide a proper level of availability. Hence, Ad-hoc Filesystem distributes files among multiple machines and duplicates them, in order to keep the files available even if some of participating machines arbitrarily leave the communication range. The directory entries are kept as a soft-state mechanism maintained by exchanging broadcast packets. The simulation results show that using broadcast to maintain system state hardly affects the overall system performance, and optimizations such that delaying replies with broadcast and sensing other packets promiscuously during the delay reduce the overhead significantly. Also the result indicates that our strategy that keeps two replicas for each data is promising to provide availability. Although further investigation based on real implementation remains important work, we believe that the prototype has a contribution to realize the possibility of ad-hoc filesystem by synthesizing number of previous works in areas such as network filesystems, server replication and ad-hoc wireless networks.",
      "authors": [
        "Yasuda, K.",
        "Hagino, T."
      ],
      "categories": null,
      "citations": 4,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": 10,
      "pages": "920-929",
      "publication": {
        "category": "Journal",
        "cite_score": 1.6,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "09168516",
        "publisher": "Maruzen Co., Ltd/Maruzen Kabushikikaisha",
        "sjr": 0.211,
        "snip": 0.474,
        "subject_areas": [
          "Computer Networks and Communications",
          "Electrical and Electronic Engineering",
          "Software"
        ],
        "title": "IEICE Transactions on Communications"
      },
      "publication_date": "2001-01-01",
      "selected": null,
      "title": "Design and concept of Ad-hoc filesystem",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=0035307479&origin=inward"
      ]
    },
    {
      "abstract": "In this paper, we propose a new filesystem named Ad-hoc Filesystem which targets ad-hoc wireless networks. Ad-hoc Filesystem is a serverless filesystem which automatically generates temporary shared...",
      "authors": [
        "Kinuko Yasuda",
        "Tatsuya Hagino"
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1007/3-540-47734-9_18",
      "keywords": [],
      "number_of_pages": 9,
      "pages": "177-185",
      "publication": {
        "category": "Book",
        "cite_score": 1.8,
        "is_potentially_predatory": false,
        "isbn": "9783030715922",
        "issn": "03029743",
        "publisher": "Springer Verlag",
        "sjr": 0.249,
        "snip": 0.628,
        "subject_areas": [
          "Databases",
          "Cryptography and Security",
          "Distributed, Parallel, and Cluster Computing",
          "Theoretical Computer Science",
          "Computer Science (all)"
        ],
        "title": "IFIP International Conference on Distributed Applications and\n  Interoperable Systems, DAIS 2017: Distributed Applications and Interoperable\n  Systems pp 83-98"
      },
      "publication_date": "2001-01-01",
      "selected": null,
      "title": "Ad\u2013hoc Filesystem: A Novel Network Filesystem for Ad-hoc Wireless Networks",
      "urls": [
        "https://link.springer.com/content/pdf/10.1007%2F3-540-47734-9_18.pdf",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=84937437388&origin=inward"
      ]
    },
    {
      "abstract": "With the creation of Java technology came the dawn of distributed computing. Wherever the Java virtual machine is embedded in a computer system and other devices connected to a network, both code and data can move across these devices regardless of their native platforms. Jini technology is built on top of the Java platform and should bring to reality the vision of distributed computing on the ubiquitous networks. Any device or application that is enabled with Jini technology can function as a service on a network. Potential device types are virtually unlimited and can range from mainframe computers to tiny consumer appliances. The paper addresses the advantages of object orientation that Jini architecture of systems will bring to the network programming. The article presents the notion of services in the Jini system. It shows how Jini enabled device can join the Jini system and how it can offer its services into the system. The article describes how it is done with a pair of protocols named Discovery and Join protocols. With the use of the Discovery protocol a device detects a Jini Lookup service that serves as a repository of services and with use of the Join protocol the device registers one or more services it provides with the Jini system. Further it presents how a Jini device can use services available in the system. It presents the process of service identification through the Lookup service and then describes basics of the time-based distributed service lease between the service provider and the service user. A minimal set of functionality that the device has to support in order to join the Jini community is described, too. At the end some of the most significant possibilities of the Jini-compliant device construction are shown and the approach is presented where existing non-Jini devices can be connected to a Jini system with the use special hardware or software.",
      "authors": [
        "Domajnko, T.",
        "Rozman, I.",
        "Heri\u00c4\u008dko, M."
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": 9,
      "pages": "169-177",
      "publication": {
        "category": "Journal",
        "cite_score": 0.8,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "00135852",
        "publisher": "Electrotechnical Society of Slovenia",
        "sjr": 0.128,
        "snip": 0.225,
        "subject_areas": [
          "Electrical and Electronic Engineering"
        ],
        "title": "Elektrotehniski Vestnik/Electrotechnical Review"
      },
      "publication_date": "2000-12-01",
      "selected": null,
      "title": "Universal networks with the Jini technology",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=0034497159&origin=inward"
      ]
    },
    {
      "abstract": "A new RAID-x (redundant array of inexpensive disks at level x) architecture is presented for distributed I/O processing on a serverless cluster of computers. The RAID-x architecture is based on a new concept of orthogonal striping and mirroring (OSM) across all distributed disks in the cluster. The primary advantages of this OSM approach lie in: (1) a significant improvement in parallel I/O bandwidth; (2) hiding disk mirroring overhead in the background; and (3) greatly enhanced scalability and reliability in cluster computing applications. All claimed advantages are substantiated with benchmark performance results on the Trojans cluster built at USC in 1999. The authors discuss the issues of scalable I/O performance, enhanced system reliability, and striped checkpointing on distributed RAID-x in a serverless cluster environment. \u00c2\u00a9 2000 IEEE.",
      "authors": [
        "Kai Hwang",
        "Hai Jin",
        "Roy Ho"
      ],
      "categories": null,
      "citations": 37,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/HPDC.2000.868660",
      "keywords": [
        "Bandwidth",
        "Computer applications",
        "Concurrent computing",
        "Linux",
        "Checkpointing",
        "Packaging",
        "Distributed computing",
        "Scalability",
        "Reliability",
        "Computer architecture"
      ],
      "number_of_pages": 8,
      "pages": "279-286",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "0-7695-0783-2",
        "issn": "1082-8907",
        "publisher": "Institute of Electrical and Electronics Engineers Inc.",
        "sjr": 0.516,
        "snip": 2.762,
        "subject_areas": [
          "Computer Networks and Communications",
          "Software"
        ],
        "title": "Proceedings of the IEEE International Symposium on High Performance Distributed Computing"
      },
      "publication_date": "2000-08-04",
      "selected": null,
      "title": "RAID-x: a new distributed disk array for I/O-centric cluster computing",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=0033720549&origin=inward",
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=868660"
      ]
    },
    {
      "abstract": "In a serverless cluster of PCs or workstations, the cluster must allow remote file accesses or parallel I/O directly performed over disks distributed to all client nodes. We introduce a new distributed disk array, called the RAID-x, for use in serverless clusters. The RAID-x architecture is based on an orthogonal striping and mirroring (OSM) scheme, which exploits full-bandwidth and protects the system from all single disk failures. The performance of the RAID-x is experimentally proven superior to RAID-1 and NFS in the Linux cluster environment. We propose a new striped checkpointing scheme, leveraging on striped parallelism and pipelined writing of successive disk stripes. This RAID-x architecture greatly enhances the throughput, reliability, and availability of scalable clusters. It appeals especially to I/O-centric cluster applications.",
      "authors": [
        "K. Hwang",
        "Hai Jin",
        "R. Ho",
        "W. Ro"
      ],
      "categories": null,
      "citations": 9,
      "comments": null,
      "databases": [
        "IEEE"
      ],
      "doi": "10.1109/HCW.2000.843742",
      "keywords": [],
      "number_of_pages": 14,
      "pages": "171-184",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "0-7695-0556-2",
        "issn": "1097-5209",
        "publisher": "IEEE",
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings 9th Heterogeneous Computing Workshop (HCW 2000) (Cat. No.PR00556)"
      },
      "publication_date": "2000-05-01",
      "selected": null,
      "title": "Reliable cluster computing with a new checkpointing RAID-x architecture",
      "urls": [
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=843742"
      ]
    },
    {
      "abstract": "We consider an architecture for a serverless distributed file system that does not assume mutual trust among the client computers. The system provides security, availability, and reliability by distributing multiple encrypted replicas of each file among the client machines. To assess the feasibility of deploying this system on an existing desktop infractructure, we measure and analyze a large set of client machines in a commercial environment. In particular, we measure and report results on disk usage and content; file activity; and machine uptimes, lifetimes, and loads. We conclude that the measured desktop infrastructure would passably support our proposed system, providing availability on the order of one unfilled file request per user per thousand days.",
      "authors": [
        "Bolosky, W.J.",
        "Douceur, J.R.",
        "Ely, D.",
        "Theimer, M."
      ],
      "categories": null,
      "citations": 160,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1145/345063.339345",
      "keywords": [
        "Serverless distribute file system architecture",
        "Reliability",
        "Workload characterization",
        "Trust",
        "Personal computer usage data",
        "Availability",
        "Security",
        "Feasibility analysis",
        "Analytical modeling"
      ],
      "number_of_pages": 10,
      "pages": "34-43",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": 1.1,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "01635999",
        "publisher": "Association for Computing Machinery (ACM)",
        "sjr": 0.223,
        "snip": 0.384,
        "subject_areas": [
          "Hardware and Architecture",
          "Computer Networks and Communications",
          "Software"
        ],
        "title": "Performance Evaluation Review"
      },
      "publication_date": "2000-01-01",
      "selected": null,
      "title": "Feasibility of a serverless distributed file system deployed on an existing set of desktop PCs",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=0034444963&origin=inward"
      ]
    },
    {
      "abstract": "In a serverless cluster of PCs or workstations, the cluster must allow remote file accesses or parallel I/O directly performed over disks distributed to all client nodes. We introduce a new distributed disk array, called the RAID-x, for use in serverless clusters. The RAID-x architecture is based on an orthogonal striping and mirroring (OSM) scheme, which exploits full-bandwidth and protects the system from all single disk failures. The performance of the RAID-x is experimentally proven superior to RAID-1 and NFS in the Linux cluster environment. We propose a new striped checkpointing scheme, leveraging on striped parallelism and pipelined writing of successive disk stripes. This RAID-x architecture greatly enhances the throughput, reliability, and availability of scalable clusters. It appeals especially to I/O-centric cluster applications.",
      "authors": [
        "Hwang, Kai",
        "Jin, Hai",
        "Ho, Roy",
        "Ro, Wonwoo"
      ],
      "categories": null,
      "citations": 9,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": 14,
      "pages": "171-184",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings of the Heterogeneous Computing Workshop, HCW"
      },
      "publication_date": "2000-01-01",
      "selected": null,
      "title": "Reliable cluster computing with a new checkpointing RAID-x architecture",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=0033902746&origin=inward"
      ]
    },
    {
      "abstract": "This paper reports on the design and the evaluation of transmission control mechanisms specifically designed for multiplayer, distributed (serverless), interactive Internet applications. Distributed synchronization and dead reckoning are the main elements of this transmission control infrastructure. These mechanisms have been implemented in a fully distributed, multiplayer game application, i.e., one in which each entity in a game session computes its own local view of the session. The role of each entity is consequently to periodically send its own state to all other session participants (using RTP/UDP/IP multicast) and to periodically compute its own local view of the global game state using information received from the other participants. A detailed experimental analysis is provided using MBone and LAN experiments. We investigate how the \"quality\" of the game is influenced by the frequency at which players exchange state information, as well as by network impairments such as packet loss and transmission delay. \u00c2\u00a9 1999 IEEE.",
      "authors": [
        "L. Gautier",
        "C. Diot",
        "J. Kurose"
      ],
      "categories": null,
      "citations": 58,
      "comments": null,
      "databases": [
        "IEEE",
        "Scopus"
      ],
      "doi": "10.1109/INFCOM.1999.752168",
      "keywords": [
        "Multipoint Communication",
        "Transmission Control",
        "Interactive Applications",
        "Distributed Architecture",
        "Internet"
      ],
      "number_of_pages": 10,
      "pages": "1470-1479 vol.3",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": 8.3,
        "is_potentially_predatory": false,
        "isbn": "978-1-7281-6413-7",
        "issn": "0743-166X",
        "publisher": "Institute of Electrical and Electronics Engineers Inc.",
        "sjr": 1.183,
        "snip": 1.799,
        "subject_areas": [
          "Computer Science (all)",
          "Electrical and Electronic Engineering"
        ],
        "title": "IEEE INFOCOM '99. Conference on Computer Communications. Proceedings. Eighteenth Annual Joint Conference of the IEEE Computer and Communications Societies. The Future is Now (Cat. No.99CH36320)"
      },
      "publication_date": "1999-03-21",
      "selected": null,
      "title": "End-to-end transmission control mechanisms for multiparty interactive applications on the Internet",
      "urls": [
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=752168",
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=0032631521&origin=inward"
      ]
    },
    {
      "abstract": "Market conditions are undermining the commonly held view of the procurement function as a service-providing cost centre. A benchmarking consortium of leading companies guided by Juran Institute has been exploring best practice in a strategic context. \u00c2\u00a9 1999, MCB UP Limited",
      "authors": [
        "Janssen, A.",
        "wu Yuan, W."
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1108/eb025565",
      "keywords": [],
      "number_of_pages": 5,
      "pages": "40-44",
      "publication": {
        "category": "Journal",
        "cite_score": 2.5,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "13683047",
        "publisher": "Emerald Group Publishing Ltd.",
        "sjr": 0.341,
        "snip": 0.807,
        "subject_areas": [
          "Organizational Behavior and Human Resource Management",
          "Business, Management and Accounting (all)"
        ],
        "title": "Measuring Business Excellence"
      },
      "publication_date": "1999-01-01",
      "selected": null,
      "title": "Procurement moves centre stage",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=84993047492&origin=inward"
      ]
    },
    {
      "abstract": "We propose a novel protocol for aggregating micropayments in a networked environment. The protocol is based on the idea of debt consolidation and is fully decentralized. We propose client server and serverless versions of the protocol. We also analyze the mathematical properties of the protocol. Finally, we show how basic cryptographic techniques can be used to support the operation of the protocol in an untrusted environment.",
      "authors": [
        "J. Chomicki",
        "S. Naqvi",
        "M.F. Pucci"
      ],
      "categories": null,
      "citations": 1,
      "comments": null,
      "databases": [
        "IEEE"
      ],
      "doi": "10.1109/ICDCS.1998.679733",
      "keywords": [],
      "number_of_pages": 10,
      "pages": "332-341",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": 5.3,
        "is_potentially_predatory": false,
        "isbn": "978-1-5386-1793-9",
        "issn": "1063-6927",
        "publisher": "Institute of Electrical and Electronics Engineers Inc.",
        "sjr": 0.602,
        "snip": 1.084,
        "subject_areas": [
          "Hardware and Architecture",
          "Computer Networks and Communications",
          "Software"
        ],
        "title": "Proceedings. 18th International Conference on Distributed Computing Systems (Cat. No.98CB36183)"
      },
      "publication_date": "1998-05-29",
      "selected": null,
      "title": "Decentralized micropayment consolidation",
      "urls": [
        "https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=679733"
      ]
    },
    {
      "abstract": "We propose a novel protocol for aggregating micropayments in a networked environment. The protocol is based on the idea of debt consolidation and is fully decentralized. We propose client-server and serverless versions of the protocol. We also analyze the mathematical properties of the protocol. Finally, we show how basic cryptographic techniques can be used to support the operation of the protocol in an untrusted environment.",
      "authors": [
        "Chomicki, J.",
        "Naqvi, S.",
        "Pucci, M.F."
      ],
      "categories": null,
      "citations": 2,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": 10,
      "pages": "332-341",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings - International Conference on Distributed Computing Systems"
      },
      "publication_date": "1998-01-01",
      "selected": null,
      "title": "Decentralized micropayment consolidation",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=0031645754&origin=inward"
      ]
    },
    {
      "abstract": "The services offered by several firms providing streaming video for the World Wide Web are compared. VDOnet Corp.'s key offering is VDO-Live 2.0, a client-servers for a full range of solutions for capturing, digitizing, compressing, distributing, and viewing video over both the Internet and intranets. VXtreme's offering is called Web Theater, a suite of three software products that include: Web Theater Server, Web Theater Client, and Web Theater Producer. Vivo Software is offering VivoActive, which has the flexibility of serverless software. Vosaic is offering VOSAIC AV Server, utilizing VDP, which is capable of streaming real-time, full motion, full screen video and audio across Internets/Intranets using standards-based technology.",
      "authors": [
        "Okon, Chris"
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": "2pp",
      "publication": {
        "category": "Journal",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "10420711",
        "publisher": "Cygnus Business Media Inc",
        "sjr": 0.101,
        "snip": 0.0,
        "subject_areas": [
          "Computer Graphics and Computer-Aided Design",
          "Media Technology",
          "Computer Vision and Pattern Recognition"
        ],
        "title": "Advanced Imaging"
      },
      "publication_date": "1997-02-01",
      "selected": null,
      "title": "Those streaming web video vendors: cutting through the confusing options",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=0031075501&origin=inward"
      ]
    },
    {
      "abstract": "In this paper we describe our experience with Teapot [7], a domain-specific language for writing cache coherence protocols. Cache coherence is of concern when parallel and distributed computing systems make local replicas of shared data to improve scalability and performance. In both distributed shared memory systems and distributed file systems, a coherence protocol maintains agreement among the replicated copies as the underlying data are modified by programs running on the system. Cache coherence protocols are notoriously difficult to implement, debug, and maintain. Unfortunately, protocols are not off-the-shelf items, as their details depend on the requirements of the system under consideration. This paper presents case studies detailing the successes and shortcomings of using Teapot for writing coherence protocols in two systems. The first system, loosely coherent memory (LCM) [16], implements a particular type of distributed shared memory suitable for data-parallel programming. The second system, the xFS distributed Gle system [9], implements a high-performance, serverless file system. Our overall experience with Teapot has been very positive. In particular, Teapot's language features resulted in considerable simplifications in the protocol source code for both systems. Furthermore, Teapot's close coupling between implementation and formal verification helped to achieve much higher confidence in our protocol implementations than previously possible and reduced the time to build the protocols. By using Teapot to solve real problems in complex systems, we also discovered several shortcomings of the Teapot design. Most noticeably, we found Teapot lacking in support for multithreaded environments, for expressing actions that transcend several cache blocks, and for handling blocking system calls. We believe that domain-specific languages are valuable tools for writing cache coherence protocols. \u00c2\u00a9 Domain-Specific Languages, DSL 1997.All right reserved.",
      "authors": [
        "Chandra, S.",
        "Dahlin, M.",
        "Richards, B.",
        "Wang, R.Y.",
        "Anderson, T.E.",
        "Larus, J.R."
      ],
      "categories": null,
      "citations": 9,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": null,
      "pages": null,
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings of the Conference on Domain-Specific Languages, DSL 1997"
      },
      "publication_date": "1997-01-01",
      "selected": null,
      "title": "Experience with a language for writing coherence protocols",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85094127273&origin=inward"
      ]
    },
    {
      "abstract": "Applications of the future will need to support large numbers of clients and will require scalable storage systems that allow state to be shared reliably. Recent research in distributed file systems provides technology that increases the scalability of storage systems. But file systems only support sharing with weak consistency guarantees and can not support applications that require transactional consistency. The challenge is how to provide scalable storage systems that support transactional applications.We are developing technology for scalable transactional storage systems. Our approach combines scalable caching and coherence techniques developed in serverless file systems and DSM systems, with recovery techniques developed in traditional databases. This position paper describes the design rationale for split caching, a new scalable memory management technique for network-based transactional object storage systems, and fragment reconstruction, a new coherence protocol that supports fine-grained sharing.",
      "authors": [
        "Shrira, L.",
        "Liskov, B.",
        "Castro, M.",
        "Adya, A."
      ],
      "categories": null,
      "citations": 2,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1145/504450.504474",
      "keywords": [],
      "number_of_pages": 7,
      "pages": "121-127",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings of the 7th Workshop on ACM SIGOPS European Workshop: Systems Support for Worldwide Applications, EW 1996"
      },
      "publication_date": "1996-09-09",
      "selected": null,
      "title": "How to scale transactional storage systems",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=82155189433&origin=inward"
      ]
    },
    {
      "abstract": "We propose a new paradigm for network file system design: serverless network file systems. While traditional network file systems rely on a central server machine, a serverless system utilizes workstations cooperating as peers to provide all file system services. Any machine in the system can store, cache, or control any block of data. Our approach uses this location independence, in combination with fast local area networks, to provide better performance and scalability than traditional file systems. Furthermore, because any machine in the system can assume the responsibilities of a failed component, our serverless design also provides high availability via redundant data storage. To demonstrate our approach, we have implemented a prototype serverless network file system called xFS. Preliminary performance measurements suggest that our architecture achieves its goal of scalability. For instance, in a 32-node xFS system with 32 active clients, each client receives nearly as much read or write throughput as it would see if it were the only active client.",
      "authors": [
        "Anderson, T.E.",
        "Dahlin, M.D.",
        "Neefe, J.M.",
        "Patterson, D.A.",
        "Roselli, D.S.",
        "Wang, R.Y."
      ],
      "categories": null,
      "citations": 148,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1145/225535.225537",
      "keywords": [
        "D.4.3 [Operating Systems]: File Systems Management - Access methods; directory structures; distributed file systems; file organization",
        "D.4.2 [Operating Systems]: Storage Management - Allocation/deallocation strategies; secondary storage"
      ],
      "number_of_pages": 39,
      "pages": "41-79",
      "publication": {
        "category": "Journal",
        "cite_score": 4.5,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "07342071",
        "publisher": "Association for Computing Machinery (ACM)",
        "sjr": 0.343,
        "snip": 1.681,
        "subject_areas": [
          "Computer Science (all)"
        ],
        "title": "ACM Transactions on Computer Systems"
      },
      "publication_date": "1996-01-01",
      "selected": null,
      "title": "Serverless Network File Systems",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=0030083168&origin=inward"
      ]
    },
    {
      "abstract": "In this paper, we propose a new paradigm for network file system design, serverless network file systems. While traditional network file systems rely on a central server machine, a serverless system utilizes workstations cooperating as peers to provide all file system services. Any machine in the system can store, cache, or control any block of data. Our approach uses this location independence, in combination with fast local area networks, to provide better performance and scalability than traditional file systems. Further, because any machine in the system can assume the responsibilities of a failed component, our serverless design also provides high availability via redundant data storage. To demonstrate our approach, we have implemented a prototype serverless network file system called xFS. Preliminary performance measurements suggest that our architecture achieves its goal of scalability. For instance, in a 32-node xFS system with 32 active clients, each client receives nearly as much read or write throughput as it would see if it were the only active client. \u00c2\u00a9 1995 ACM.",
      "authors": [
        "Anderson, T.E.",
        "Dahlin, M.D.",
        "Neefe, J.M.",
        "Patterson, D.A.",
        "Roselli, D.S.",
        "Wang, R.Y."
      ],
      "categories": null,
      "citations": 241,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1145/224056.224067",
      "keywords": [],
      "number_of_pages": 18,
      "pages": "109-126",
      "publication": {
        "category": "Conference Proceedings",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": "0897917154",
        "issn": null,
        "publisher": null,
        "sjr": null,
        "snip": null,
        "subject_areas": [],
        "title": "Proceedings of the 15th ACM Symposium on Operating Systems Principles, SOSP 1995"
      },
      "publication_date": "1995-12-01",
      "selected": null,
      "title": "Serverless network file systems",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=84883505875&origin=inward"
      ]
    },
    {
      "abstract": "Design principles of the operating system LINT for different configurations of local area networks are described in this article. Functional framework and facilities of two types of the system - client-server configuration and serverless configuration - are outlined. Design principles of computer internetworks are considered.",
      "authors": [
        "Karavanov, K.Yu.",
        "Meerzon, D.Ya.",
        "Povolotskij, F.B.",
        "Sosnovskij, V.G."
      ],
      "categories": null,
      "citations": 0,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": null,
      "keywords": [],
      "number_of_pages": 8,
      "pages": "85-92",
      "publication": {
        "category": "Journal",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "01323474",
        "publisher": "Fakul'tet Vychislitel'noi Matematiki i Kibernetiki/M.V. Lomonosov Moscow State University",
        "sjr": 0.198,
        "snip": 1.681,
        "subject_areas": [
          "Software"
        ],
        "title": "Programmirovanie"
      },
      "publication_date": "1994-03-01",
      "selected": null,
      "title": "Network operating system LINT",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=0028391984&origin=inward"
      ]
    },
    {
      "abstract": "The Victorian Government's Intellectually Disabled Persons' Services Act (1986) makes a number of provisions for service delivery to people with intellectual disabilities. Among these are the option for each client to have a General Service Han (GSP). This paper describes an evaluation of the content of two samples of GSPs; one sample (N = 195) was associated with the work of the Community Living Support Service program, and the other (N = 39) with the work of the Intellectual Disability Review Panel. The results show that there is room for improvement in the quality of GSPs. Recommendations are made regarding an appropriate content of GSPs in order for them to serve their intended function as a service plan for an individual client. \u00c2\u00a9 1991, Taylor & Francis Group, LLC. All rights reserved.",
      "authors": [
        "Hudson, A.",
        "Cummins, R.A."
      ],
      "categories": null,
      "citations": 5,
      "comments": null,
      "databases": [
        "Scopus"
      ],
      "doi": "10.1080/07263869100034731",
      "keywords": [],
      "number_of_pages": 11,
      "pages": "401-411",
      "publication": {
        "category": "Journal",
        "cite_score": null,
        "is_potentially_predatory": false,
        "isbn": null,
        "issn": "07263864",
        "publisher": "Carfax Publishing Ltd.",
        "sjr": 0.198,
        "snip": 1.681,
        "subject_areas": [
          "Psychiatry and Mental Health",
          "Rehabilitation"
        ],
        "title": "Australia and New Zealand Journal of Developmental Disabilities"
      },
      "publication_date": "1991-01-01",
      "selected": null,
      "title": "General service plans: An evaluation of their content within two service delivery systems1",
      "urls": [
        "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=1642611751&origin=inward"
      ]
    }
  ],
  "processed_at": "2021-06-10 14:38:22",
  "publication_types": null,
  "query": "[serverless] OR [function-as-a-service] OR [function as a service] OR [backend-as-a-service] OR [backend as a service] OR [aws lambda] OR [google gloud platform] OR [azure functions]",
  "since": null,
  "until": null
}